2025/03/27 10:55:44 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.19 (default, Mar 20 2024, 19:58:24) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 0
    GPU 0: NVIDIA RTX A6000
    CUDA_HOME: /usr/local/cuda-12.1
    NVCC: Cuda compilation tools, release 12.1, V12.1.66
    GCC: gcc (Ubuntu 7.5.0-6ubuntu2) 7.5.0
    PyTorch: 2.1.1+cu121
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.9.2
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=8.9.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.1+cu121
    OpenCV: 4.10.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 0
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2025/03/27 10:55:45 - mmengine - INFO - Config:
crop_size = (
    512,
    512,
)
data_root = '/data/xiaoxinghhh/dataset/remote_sensing/'
dataset_type = 'ISPRSDataset'
default_hooks = dict(
    checkpoint=dict(
        by_epoch=False,
        interval=2000,
        max_keep_ckpts=1,
        save_best='mIoU',
        type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
embed_multi = dict(decay_mult=0.0, lr_mult=1.0)
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
exp_name = 'DA_spatial_64_fft_cut_off_0.3_pre3'
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        adapter_config=dict(cutoff_ratio=0.3, dim=64, fft_layer=[
            0,
            1,
            2,
        ]),
        block_chunks=0,
        depth=24,
        embed_dim=1024,
        ffn_bias=True,
        ffn_layer='mlp',
        img_size=512,
        init_cfg=dict(
            checkpoint='checkpoints/dinov2_converted.pth', type='Pretrained'),
        init_values=1e-05,
        mlp_ratio=4,
        moe_adapter_type='earth_adapter',
        num_heads=16,
        patch_size=16,
        proj_bias=True,
        qkv_bias=True,
        type='MOE_Adpter_DinoVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        enforce_decoder_input_project=False,
        feat_channels=256,
        in_channels=[
            1024,
            1024,
            1024,
            1024,
        ],
        loss_cls=dict(
            class_weight=[
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                0.1,
            ],
            loss_weight=2.0,
            reduction='mean',
            type='mmdet.CrossEntropyLoss',
            use_sigmoid=False),
        loss_dice=dict(
            activate=True,
            eps=1.0,
            loss_weight=5.0,
            naive_dice=True,
            reduction='mean',
            type='mmdet.DiceLoss',
            use_sigmoid=True),
        loss_mask=dict(
            loss_weight=5.0,
            reduction='mean',
            type='mmdet.CrossEntropyLoss',
            use_sigmoid=True),
        num_classes=6,
        num_queries=100,
        num_transformer_feat_level=3,
        out_channels=256,
        pixel_decoder=dict(
            act_cfg=dict(type='ReLU'),
            encoder=dict(
                init_cfg=None,
                layer_cfg=dict(
                    ffn_cfg=dict(
                        act_cfg=dict(inplace=True, type='ReLU'),
                        embed_dims=256,
                        feedforward_channels=1024,
                        ffn_drop=0.0,
                        num_fcs=2),
                    self_attn_cfg=dict(
                        batch_first=True,
                        dropout=0.0,
                        embed_dims=256,
                        im2col_step=64,
                        init_cfg=None,
                        norm_cfg=None,
                        num_heads=8,
                        num_levels=3,
                        num_points=4)),
                num_layers=6),
            init_cfg=None,
            norm_cfg=dict(num_groups=32, type='GN'),
            num_outs=3,
            positional_encoding=dict(normalize=True, num_feats=128),
            type='mmdet.MSDeformAttnPixelDecoder'),
        positional_encoding=dict(normalize=True, num_feats=128),
        strides=[
            4,
            8,
            16,
            32,
        ],
        train_cfg=dict(
            assigner=dict(
                match_costs=[
                    dict(type='mmdet.ClassificationCost', weight=2.0),
                    dict(
                        type='mmdet.CrossEntropyLossCost',
                        use_sigmoid=True,
                        weight=5.0),
                    dict(
                        eps=1.0,
                        pred_act=True,
                        type='mmdet.DiceCost',
                        weight=5.0),
                ],
                type='mmdet.HungarianAssigner'),
            importance_sample_ratio=0.75,
            num_points=12544,
            oversample_ratio=3.0,
            sampler=dict(type='mmdet.MaskPseudoSampler')),
        transformer_decoder=dict(
            init_cfg=None,
            layer_cfg=dict(
                cross_attn_cfg=dict(
                    attn_drop=0.0,
                    batch_first=True,
                    dropout_layer=None,
                    embed_dims=256,
                    num_heads=8,
                    proj_drop=0.0),
                ffn_cfg=dict(
                    act_cfg=dict(inplace=True, type='ReLU'),
                    add_identity=True,
                    dropout_layer=None,
                    embed_dims=256,
                    feedforward_channels=2048,
                    ffn_drop=0.0,
                    num_fcs=2),
                self_attn_cfg=dict(
                    attn_drop=0.0,
                    batch_first=True,
                    dropout_layer=None,
                    embed_dims=256,
                    num_heads=8,
                    proj_drop=0.0)),
            num_layers=9,
            return_intermediate=True),
        type='Mask2FormerHead'),
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='DACS_encoder_decoder')
num_classes = 19
optim_wrapper = dict(
    constructor='PEFTOptimWrapperConstructor',
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ),
        eps=1e-08,
        lr=0.0001,
        type='AdamW',
        weight_decay=0.05),
    paramwise_cfg=dict(
        custom_keys=dict({
            'learnable_tokens': dict(decay_mult=0.0, lr_mult=1.0),
            'level_embed': dict(decay_mult=0.0, lr_mult=1.0),
            'norm': dict(decay_mult=0.0),
            'query_embed': dict(decay_mult=0.0, lr_mult=1.0),
            'reins.scale': dict(decay_mult=0.0, lr_mult=1.0)
        }),
        norm_decay_mult=0.0))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=20000,
        eta_min=0,
        power=0.9,
        type='PolyLR'),
]
randomness = dict(seed=0)
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='vaihingen/img_dir/val',
            seg_map_path='vaihingen/ann_dir/val'),
        data_root='/data/xiaoxinghhh/dataset/remote_sensing/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                512,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ISPRSDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        512,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(max_iters=20000, type='IterBasedTrainLoop', val_interval=2000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        source_dataset=dict(
            data_prefix=dict(
                img_path='potsdamRGB/img_dir/train',
                seg_map_path='potsdamRGB/ann_dir/train'),
            data_root='/data/xiaoxinghhh/dataset/remote_sensing/',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(reduce_zero_label=True, type='LoadAnnotations'),
                dict(
                    keep_ratio=True,
                    ratio_range=(
                        0.5,
                        2.0,
                    ),
                    scale=(
                        512,
                        512,
                    ),
                    type='RandomResize'),
                dict(
                    cat_max_ratio=0.75,
                    crop_size=(
                        512,
                        512,
                    ),
                    type='RandomCrop'),
                dict(prob=0.5, type='RandomFlip'),
                dict(type='PhotoMetricDistortion'),
                dict(type='PackSegInputs'),
            ],
            type='ISPRSDataset'),
        target_dataset=dict(
            data_prefix=dict(
                img_path='vaihingen/img_dir/train',
                seg_map_path='vaihingen/ann_dir/train'),
            data_root='/data/xiaoxinghhh/dataset/remote_sensing/',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(reduce_zero_label=True, type='LoadAnnotations'),
                dict(
                    keep_ratio=True,
                    ratio_range=(
                        0.5,
                        2.0,
                    ),
                    scale=(
                        512,
                        512,
                    ),
                    type='RandomResize'),
                dict(
                    cat_max_ratio=0.75,
                    crop_size=(
                        512,
                        512,
                    ),
                    type='RandomCrop'),
                dict(prob=0.5, type='RandomFlip'),
                dict(type='PhotoMetricDistortion'),
                dict(type='PackSegInputs'),
            ],
            type='ISPRSDataset'),
        type='UDA_dataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            512,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='vaihingen/img_dir/val',
            seg_map_path='vaihingen/ann_dir/val'),
        data_root='/data/xiaoxinghhh/dataset/remote_sensing/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                512,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ISPRSDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = './work_dirs/pr2vi/DA_spatial_64_fft_cut_off_0.3_pre3/4ddf0_seed0'

2025/03/27 10:55:49 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2025/03/27 10:55:49 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2025/03/27 10:55:50 - mmengine - WARNING - Dataset UDA_dataset has no metainfo. ``dataset_meta`` in visualizer will be None.
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.scale
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.1.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.1.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.3.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.3.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.4.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.4.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.5.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.5.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.6.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.6.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.7.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.7.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.8.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.8.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.9.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.9.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.10.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.10.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.11.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.11.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.12.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.12.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.13.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.13.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.14.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.14.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.15.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.15.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.16.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.16.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.17.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.17.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.18.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.18.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.19.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.19.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.20.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.20.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.21.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.21.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.22.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.22.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.23.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.23.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.0.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.0.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.0.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.0.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.1.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.1.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.1.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.1.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.2.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.2.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.2.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.2.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.3.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.3.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.3.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.3.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.4.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.4.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.4.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.4.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.5.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.5.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.5.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.5.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.6.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.6.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.6.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.6.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.7.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.7.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.7.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.7.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.8.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.8.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.8.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.8.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.9.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.9.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.9.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.9.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.10.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.10.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.10.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.10.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.11.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.11.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.11.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.11.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.12.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.12.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.12.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.12.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.13.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.13.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.13.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.13.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.14.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.14.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.14.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.14.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.15.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.15.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.15.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.15.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.16.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.16.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.16.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.16.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.17.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.17.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.17.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.17.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.18.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.18.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.18.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.18.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.19.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.19.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.19.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.19.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.20.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.20.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.20.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.20.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.21.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.21.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.21.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.21.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.22.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.22.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.22.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.22.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.23.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.23.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.23.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.23.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.0.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.0.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.0.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.0.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.1.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.1.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.1.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.1.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.2.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.2.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.2.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.2.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.3.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.3.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.3.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.3.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.4.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.4.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.4.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.4.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.5.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.5.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.5.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.5.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.6.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.6.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.6.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.6.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.7.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.7.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.7.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.7.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.8.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.8.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.8.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.8.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.9.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.9.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.9.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.9.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.10.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.10.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.10.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.10.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.11.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.11.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.11.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.11.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.12.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.12.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.12.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.12.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.13.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.13.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.13.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.13.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.14.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.14.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.14.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.14.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.15.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.15.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.15.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.15.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.16.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.16.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.16.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.16.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.17.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.17.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.17.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.17.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.18.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.18.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.18.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.18.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.19.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.19.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.19.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.19.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.20.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.20.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.20.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.20.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.21.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.21.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.21.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.21.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.22.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.22.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.22.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.22.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.23.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.23.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.23.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.23.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.0.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.0.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.0.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.0.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.1.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.1.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.1.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.1.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.2.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.2.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.2.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.2.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.3.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.3.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.3.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.3.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.4.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.4.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.4.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.4.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.5.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.5.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.5.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.5.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.6.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.6.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.6.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.6.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.7.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.7.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.7.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.7.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.8.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.8.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.8.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.8.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.9.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.9.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.9.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.9.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.10.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.10.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.10.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.10.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.11.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.11.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.11.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.11.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.12.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.12.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.12.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.12.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.13.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.13.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.13.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.13.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.14.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.14.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.14.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.14.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.15.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.15.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.15.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.15.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.16.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.16.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.16.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.16.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.17.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.17.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.17.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.17.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.18.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.18.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.18.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.18.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.19.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.19.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.19.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.19.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.20.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.20.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.20.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.20.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.21.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.21.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.21.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.21.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.22.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.22.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.22.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.22.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.23.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.23.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.23.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.23.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.0.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.0.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.1.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.1.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.2.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.2.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.3.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.3.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.4.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.4.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.5.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.5.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.6.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.6.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.7.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.7.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.8.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.8.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.9.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.9.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.10.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.10.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.11.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.11.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.12.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.12.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.13.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.13.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.14.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.14.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.15.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.15.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.16.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.16.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.17.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.17.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.18.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.18.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.19.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.19.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.20.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.20.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.21.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.21.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.22.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.22.bias
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.23.weight
2025/03/27 10:55:50 - mmengine - INFO - set_requires_grad----refine_feat.router.23.bias
2025/03/27 10:55:50 - mmengine - INFO - Total trainable params--9638496, All params--313838176, Ratio--3.1%
2025/03/27 10:55:50 - mmengine - INFO - set_train----.refine_feat
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.scale:num of params=24
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.0.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.0.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.0.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.0.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.1.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.1.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.1.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.1.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.2.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.2.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.2.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.2.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.3.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.3.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.3.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.3.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.4.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.4.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.4.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.4.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.5.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.5.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.5.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.5.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.6.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.6.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.6.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.6.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.7.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.7.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.7.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.7.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.8.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.8.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.8.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.8.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.9.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.9.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.9.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.9.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.10.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.10.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.10.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.10.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.11.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.11.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.11.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.11.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.12.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.12.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.12.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.12.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.13.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.13.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.13.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.13.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.14.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.14.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.14.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.14.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.15.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.15.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.15.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.15.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.16.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.16.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.16.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.16.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.17.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.17.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.17.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.17.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.18.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.18.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.18.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.18.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.19.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.19.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.19.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.19.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.20.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.20.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.20.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.20.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.21.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.21.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.21.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.21.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.22.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.22.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.22.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.22.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.23.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.23.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.23.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.23.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.0.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.0.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.0.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.0.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.1.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.1.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.1.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.1.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.2.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.2.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.2.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.2.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.3.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.3.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.3.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.3.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.4.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.4.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.4.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.4.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.5.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.5.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.5.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.5.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.6.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.6.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.6.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.6.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.7.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.7.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.7.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.7.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.8.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.8.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.8.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.8.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.9.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.9.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.9.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.9.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.10.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.10.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.10.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.10.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.11.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.11.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.11.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.11.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.12.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.12.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.12.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.12.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.13.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.13.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.13.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.13.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.14.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.14.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.14.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.14.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.15.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.15.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.15.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.15.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.16.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.16.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.16.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.16.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.17.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.17.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.17.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.17.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.18.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.18.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.18.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.18.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.19.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.19.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.19.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.19.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.20.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.20.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.20.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.20.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.21.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.21.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.21.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.21.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.22.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.22.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.22.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.22.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.23.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.23.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.23.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.23.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.0.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.0.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.0.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.0.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.1.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.1.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.1.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.1.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.2.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.2.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.2.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.2.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.3.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.3.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.3.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.3.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.4.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.4.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.4.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.4.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.5.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.5.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.5.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.5.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.6.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.6.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.6.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.6.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.7.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.7.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.7.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.7.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.8.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.8.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.8.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.8.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.9.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.9.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.9.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.9.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.10.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.10.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.10.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.10.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.11.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.11.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.11.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.11.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.12.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.12.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.12.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.12.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.13.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.13.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.13.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.13.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.14.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.14.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.14.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.14.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.15.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.15.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.15.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.15.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.16.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.16.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.16.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.16.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.17.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.17.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.17.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.17.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.18.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.18.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.18.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.18.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.19.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.19.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.19.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.19.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.20.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.20.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.20.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.20.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.21.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.21.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.21.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.21.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.22.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.22.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.22.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.22.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.23.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.23.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.23.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.23.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.0.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.0.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.1.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.1.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.2.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.2.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.3.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.3.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.4.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.4.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.5.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.5.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.6.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.6.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.7.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.7.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.8.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.8.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.9.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.9.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.10.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.10.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.11.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.11.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.12.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.12.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.13.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.13.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.14.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.14.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.15.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.15.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.16.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.16.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.17.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.17.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.18.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.18.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.19.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.19.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.20.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.20.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.21.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.21.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.22.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.22.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.23.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.23.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.0.conv.weight:num of params=262144
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.0.conv.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.0.gn.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.0.gn.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.0.gn.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.0.gn.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.1.conv.weight:num of params=262144
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.1.conv.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.1.gn.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.1.gn.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.1.gn.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.1.gn.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.2.conv.weight:num of params=262144
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.2.conv.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.2.gn.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.2.gn.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.2.gn.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.2.gn.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.sampling_offsets.weight:num of params=49152
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.sampling_offsets.bias:num of params=192
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.attention_weights.weight:num of params=24576
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.attention_weights.bias:num of params=96
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.value_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.value_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.output_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.output_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.ffn.layers.0.0.weight:num of params=262144
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.ffn.layers.0.0.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.ffn.layers.1.weight:num of params=262144
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.ffn.layers.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.sampling_offsets.weight:num of params=49152
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.sampling_offsets.bias:num of params=192
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.attention_weights.weight:num of params=24576
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.attention_weights.bias:num of params=96
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.value_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.value_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.output_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.output_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.ffn.layers.0.0.weight:num of params=262144
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.ffn.layers.0.0.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.ffn.layers.1.weight:num of params=262144
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.ffn.layers.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.sampling_offsets.weight:num of params=49152
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.sampling_offsets.bias:num of params=192
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.attention_weights.weight:num of params=24576
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.attention_weights.bias:num of params=96
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.value_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.value_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.output_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.output_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.ffn.layers.0.0.weight:num of params=262144
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.ffn.layers.0.0.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.ffn.layers.1.weight:num of params=262144
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.ffn.layers.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.sampling_offsets.weight:num of params=49152
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.sampling_offsets.bias:num of params=192
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.attention_weights.weight:num of params=24576
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.attention_weights.bias:num of params=96
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.value_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.value_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.output_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.output_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.ffn.layers.0.0.weight:num of params=262144
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.ffn.layers.0.0.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.ffn.layers.1.weight:num of params=262144
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.ffn.layers.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.sampling_offsets.weight:num of params=49152
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.sampling_offsets.bias:num of params=192
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.attention_weights.weight:num of params=24576
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.attention_weights.bias:num of params=96
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.value_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.value_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.output_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.output_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.ffn.layers.0.0.weight:num of params=262144
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.ffn.layers.0.0.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.ffn.layers.1.weight:num of params=262144
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.ffn.layers.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.sampling_offsets.weight:num of params=49152
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.sampling_offsets.bias:num of params=192
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.attention_weights.weight:num of params=24576
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.attention_weights.bias:num of params=96
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.value_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.value_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.output_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.output_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.ffn.layers.0.0.weight:num of params=262144
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.ffn.layers.0.0.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.ffn.layers.1.weight:num of params=262144
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.ffn.layers.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.level_encoding.weight:num of params=768
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.lateral_convs.0.conv.weight:num of params=262144
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.lateral_convs.0.gn.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.lateral_convs.0.gn.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.lateral_convs.0.gn.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.lateral_convs.0.gn.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.output_convs.0.conv.weight:num of params=589824
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.output_convs.0.gn.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.output_convs.0.gn.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.output_convs.0.gn.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.output_convs.0.gn.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.mask_feature.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.mask_feature.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.self_attn.attn.in_proj_weight:num of params=196608
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.self_attn.attn.in_proj_bias:num of params=768
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.self_attn.attn.out_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.self_attn.attn.out_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.cross_attn.attn.in_proj_bias:num of params=768
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.cross_attn.attn.out_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.ffn.layers.0.0.weight:num of params=524288
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.ffn.layers.0.0.bias:num of params=2048
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.ffn.layers.1.weight:num of params=524288
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.ffn.layers.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.self_attn.attn.in_proj_weight:num of params=196608
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.self_attn.attn.in_proj_bias:num of params=768
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.self_attn.attn.out_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.self_attn.attn.out_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.cross_attn.attn.in_proj_bias:num of params=768
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.cross_attn.attn.out_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.ffn.layers.0.0.weight:num of params=524288
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.ffn.layers.0.0.bias:num of params=2048
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.ffn.layers.1.weight:num of params=524288
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.ffn.layers.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.self_attn.attn.in_proj_weight:num of params=196608
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.self_attn.attn.in_proj_bias:num of params=768
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.self_attn.attn.out_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.self_attn.attn.out_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.cross_attn.attn.in_proj_bias:num of params=768
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.cross_attn.attn.out_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.ffn.layers.0.0.weight:num of params=524288
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.ffn.layers.0.0.bias:num of params=2048
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.ffn.layers.1.weight:num of params=524288
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.ffn.layers.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.self_attn.attn.in_proj_weight:num of params=196608
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.self_attn.attn.in_proj_bias:num of params=768
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.self_attn.attn.out_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.self_attn.attn.out_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.cross_attn.attn.in_proj_bias:num of params=768
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.cross_attn.attn.out_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.ffn.layers.0.0.weight:num of params=524288
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.ffn.layers.0.0.bias:num of params=2048
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.ffn.layers.1.weight:num of params=524288
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.ffn.layers.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.self_attn.attn.in_proj_weight:num of params=196608
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.self_attn.attn.in_proj_bias:num of params=768
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.self_attn.attn.out_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.self_attn.attn.out_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.cross_attn.attn.in_proj_bias:num of params=768
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.cross_attn.attn.out_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.ffn.layers.0.0.weight:num of params=524288
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.ffn.layers.0.0.bias:num of params=2048
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.ffn.layers.1.weight:num of params=524288
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.ffn.layers.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.self_attn.attn.in_proj_weight:num of params=196608
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.self_attn.attn.in_proj_bias:num of params=768
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.self_attn.attn.out_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.self_attn.attn.out_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.cross_attn.attn.in_proj_bias:num of params=768
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.cross_attn.attn.out_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.ffn.layers.0.0.weight:num of params=524288
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.ffn.layers.0.0.bias:num of params=2048
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.ffn.layers.1.weight:num of params=524288
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.ffn.layers.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.self_attn.attn.in_proj_weight:num of params=196608
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.self_attn.attn.in_proj_bias:num of params=768
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.self_attn.attn.out_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.self_attn.attn.out_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.cross_attn.attn.in_proj_bias:num of params=768
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.cross_attn.attn.out_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.ffn.layers.0.0.weight:num of params=524288
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.ffn.layers.0.0.bias:num of params=2048
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.ffn.layers.1.weight:num of params=524288
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.ffn.layers.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.self_attn.attn.in_proj_weight:num of params=196608
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.self_attn.attn.in_proj_bias:num of params=768
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.self_attn.attn.out_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.self_attn.attn.out_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.cross_attn.attn.in_proj_bias:num of params=768
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.cross_attn.attn.out_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.ffn.layers.0.0.weight:num of params=524288
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.ffn.layers.0.0.bias:num of params=2048
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.ffn.layers.1.weight:num of params=524288
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.ffn.layers.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.self_attn.attn.in_proj_weight:num of params=196608
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.self_attn.attn.in_proj_bias:num of params=768
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.self_attn.attn.out_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.self_attn.attn.out_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.cross_attn.attn.in_proj_bias:num of params=768
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.cross_attn.attn.out_proj.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.ffn.layers.0.0.weight:num of params=524288
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.ffn.layers.0.0.bias:num of params=2048
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.ffn.layers.1.weight:num of params=524288
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.ffn.layers.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.weight:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.query_embed.weight:num of params=25600
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.query_embed.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.query_embed.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.query_embed.weight:lr_mult=1.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.query_embed.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.query_feat.weight:num of params=25600
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.level_embed.weight:num of params=768
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.level_embed.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.level_embed.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.level_embed.weight:lr_mult=1.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.level_embed.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.cls_embed.weight:num of params=1792
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.cls_embed.bias:num of params=7
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.mask_embed.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.mask_embed.0.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.mask_embed.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.mask_embed.2.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.mask_embed.4.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- decode_head.mask_embed.4.bias:num of params=256
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.scale:num of params=24
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.0.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.0.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.0.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.0.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.0.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.0.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.0.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.0.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.1.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.1.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.1.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.1.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.1.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.1.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.1.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.1.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.2.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.2.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.2.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.2.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.2.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.2.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.2.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.3.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.3.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.3.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.3.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.3.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.3.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.3.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.3.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.4.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.4.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.4.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.4.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.4.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.4.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.4.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.4.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.5.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.5.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.5.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.5.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.5.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.5.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.5.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.5.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.6.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.6.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.6.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.6.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.6.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.6.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.6.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.6.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.7.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.7.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.7.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.7.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.7.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.7.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.7.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.7.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.8.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.8.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.8.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.8.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.8.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.8.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.8.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.8.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.9.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.9.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.9.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.9.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.9.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.9.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.9.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.9.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.10.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.10.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.10.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.10.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.10.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.10.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.10.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.10.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.11.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.11.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.11.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.11.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.11.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.11.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.11.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.11.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.12.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.12.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.12.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.12.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.12.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.12.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.12.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.12.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.13.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.13.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.13.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.13.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.13.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.13.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.13.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.13.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.14.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.14.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.14.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.14.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.14.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.14.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.14.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.14.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.15.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.15.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.15.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.15.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.15.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.15.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.15.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.15.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.16.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.16.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.16.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.16.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.16.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.16.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.16.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.16.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.17.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.17.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.17.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.17.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.17.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.17.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.17.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.17.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.18.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.18.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.18.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.18.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.18.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.18.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.18.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.18.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.19.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.19.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.19.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.19.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.19.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.19.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.19.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.19.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.20.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.20.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.20.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.20.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.20.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.20.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.20.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.20.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.21.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.21.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.21.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.21.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.21.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.21.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.21.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.21.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.22.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.22.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.22.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.22.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.22.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.22.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.22.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.22.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.23.weight:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.23.weight:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.23.weight:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.23.weight:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.23.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.23.bias:lr=0.0001
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.23.bias:weight_decay=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.layer_norm.23.bias:decay_mult=0.0
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.0.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.0.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.0.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.0.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.1.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.1.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.1.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.1.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.2.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.2.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.2.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.2.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.3.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.3.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.3.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.3.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.4.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.4.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.4.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.4.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.5.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.5.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.5.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.5.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.6.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.6.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.6.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.6.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.7.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.7.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.7.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.7.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.8.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.8.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.8.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.8.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.9.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.9.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.9.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.9.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.10.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.10.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.10.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.10.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.11.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.11.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.11.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.11.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.12.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.12.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.12.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.12.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.13.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.13.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.13.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.13.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.14.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.14.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.14.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.14.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.15.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.15.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.15.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.15.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.16.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.16.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.16.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.16.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.17.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.17.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.17.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.17.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.18.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.18.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.18.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.18.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.19.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.19.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.19.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.19.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.20.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.20.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.20.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.20.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.21.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.21.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.21.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.21.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.22.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.22.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.22.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.22.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.23.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.23.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.23.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list1.23.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.0.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.0.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.0.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.0.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.1.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.1.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.1.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.1.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.2.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.2.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.2.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.2.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.3.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.3.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.3.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.3.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.4.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.4.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.4.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.4.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.5.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.5.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.5.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.5.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.6.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.6.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.6.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.6.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.7.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.7.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.7.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.7.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.8.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.8.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.8.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.8.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.9.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.9.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.9.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.9.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.10.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.10.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.10.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.10.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.11.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.11.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.11.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.11.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.12.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.12.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.12.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.12.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.13.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.13.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.13.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.13.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.14.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.14.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.14.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.14.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.15.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.15.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.15.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.15.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.16.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.16.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.16.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.16.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.17.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.17.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.17.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.17.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.18.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.18.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.18.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.18.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.19.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.19.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.19.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.19.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.20.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.20.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.20.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.20.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.21.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.21.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.21.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.21.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.22.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.22.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.22.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.22.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.23.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.23.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.23.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list2.23.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.0.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.0.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.0.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.0.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.1.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.1.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.1.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.1.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.2.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.2.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.2.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.2.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.3.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.3.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.3.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.3.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.4.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.4.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.4.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.4.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.5.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.5.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.5.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.5.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.6.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.6.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.6.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.6.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.7.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.7.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.7.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.7.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.8.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.8.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.8.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.8.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.9.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.9.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.9.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.9.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.10.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.10.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.10.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.10.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.11.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.11.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.11.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.11.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.12.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.12.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.12.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.12.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.13.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.13.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.13.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.13.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.14.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.14.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.14.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.14.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.15.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.15.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.15.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.15.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.16.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.16.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.16.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.16.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.17.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.17.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.17.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.17.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.18.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.18.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.18.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.18.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.19.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.19.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.19.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.19.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.20.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.20.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.20.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.20.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.21.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.21.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.21.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.21.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.22.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.22.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.22.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.22.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.23.0.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.23.0.bias:num of params=64
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.23.2.weight:num of params=65536
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.mlp_list3.23.2.bias:num of params=1024
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.0.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.0.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.1.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.1.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.2.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.2.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.3.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.3.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.4.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.4.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.5.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.5.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.6.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.6.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.7.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.7.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.8.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.8.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.9.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.9.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.10.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.10.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.11.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.11.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.12.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.12.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.13.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.13.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.14.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.14.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.15.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.15.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.16.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.16.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.17.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.17.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.18.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.18.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.19.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.19.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.20.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.20.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.21.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.21.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.22.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.22.bias:num of params=3
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.23.weight:num of params=3072
2025/03/27 10:55:50 - mmengine - INFO - paramwise_options -- ema_model.backbone.refine_feat.router.23.bias:num of params=3
2025/03/27 10:55:51 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
2025/03/27 10:55:51 - mmengine - INFO - load model from: checkpoints/dinov2_converted.pth
2025/03/27 10:55:51 - mmengine - INFO - Loads checkpoint by local backend from path: checkpoints/dinov2_converted.pth
2025/03/27 10:55:52 - mmengine - WARNING - The model and loaded state dict do not match exactly

missing keys in source state_dict: refine_feat.scale, refine_feat.layer_norm.0.weight, refine_feat.layer_norm.0.bias, refine_feat.layer_norm.1.weight, refine_feat.layer_norm.1.bias, refine_feat.layer_norm.2.weight, refine_feat.layer_norm.2.bias, refine_feat.layer_norm.3.weight, refine_feat.layer_norm.3.bias, refine_feat.layer_norm.4.weight, refine_feat.layer_norm.4.bias, refine_feat.layer_norm.5.weight, refine_feat.layer_norm.5.bias, refine_feat.layer_norm.6.weight, refine_feat.layer_norm.6.bias, refine_feat.layer_norm.7.weight, refine_feat.layer_norm.7.bias, refine_feat.layer_norm.8.weight, refine_feat.layer_norm.8.bias, refine_feat.layer_norm.9.weight, refine_feat.layer_norm.9.bias, refine_feat.layer_norm.10.weight, refine_feat.layer_norm.10.bias, refine_feat.layer_norm.11.weight, refine_feat.layer_norm.11.bias, refine_feat.layer_norm.12.weight, refine_feat.layer_norm.12.bias, refine_feat.layer_norm.13.weight, refine_feat.layer_norm.13.bias, refine_feat.layer_norm.14.weight, refine_feat.layer_norm.14.bias, refine_feat.layer_norm.15.weight, refine_feat.layer_norm.15.bias, refine_feat.layer_norm.16.weight, refine_feat.layer_norm.16.bias, refine_feat.layer_norm.17.weight, refine_feat.layer_norm.17.bias, refine_feat.layer_norm.18.weight, refine_feat.layer_norm.18.bias, refine_feat.layer_norm.19.weight, refine_feat.layer_norm.19.bias, refine_feat.layer_norm.20.weight, refine_feat.layer_norm.20.bias, refine_feat.layer_norm.21.weight, refine_feat.layer_norm.21.bias, refine_feat.layer_norm.22.weight, refine_feat.layer_norm.22.bias, refine_feat.layer_norm.23.weight, refine_feat.layer_norm.23.bias, refine_feat.mlp_list1.0.0.weight, refine_feat.mlp_list1.0.0.bias, refine_feat.mlp_list1.0.2.weight, refine_feat.mlp_list1.0.2.bias, refine_feat.mlp_list1.1.0.weight, refine_feat.mlp_list1.1.0.bias, refine_feat.mlp_list1.1.2.weight, refine_feat.mlp_list1.1.2.bias, refine_feat.mlp_list1.2.0.weight, refine_feat.mlp_list1.2.0.bias, refine_feat.mlp_list1.2.2.weight, refine_feat.mlp_list1.2.2.bias, refine_feat.mlp_list1.3.0.weight, refine_feat.mlp_list1.3.0.bias, refine_feat.mlp_list1.3.2.weight, refine_feat.mlp_list1.3.2.bias, refine_feat.mlp_list1.4.0.weight, refine_feat.mlp_list1.4.0.bias, refine_feat.mlp_list1.4.2.weight, refine_feat.mlp_list1.4.2.bias, refine_feat.mlp_list1.5.0.weight, refine_feat.mlp_list1.5.0.bias, refine_feat.mlp_list1.5.2.weight, refine_feat.mlp_list1.5.2.bias, refine_feat.mlp_list1.6.0.weight, refine_feat.mlp_list1.6.0.bias, refine_feat.mlp_list1.6.2.weight, refine_feat.mlp_list1.6.2.bias, refine_feat.mlp_list1.7.0.weight, refine_feat.mlp_list1.7.0.bias, refine_feat.mlp_list1.7.2.weight, refine_feat.mlp_list1.7.2.bias, refine_feat.mlp_list1.8.0.weight, refine_feat.mlp_list1.8.0.bias, refine_feat.mlp_list1.8.2.weight, refine_feat.mlp_list1.8.2.bias, refine_feat.mlp_list1.9.0.weight, refine_feat.mlp_list1.9.0.bias, refine_feat.mlp_list1.9.2.weight, refine_feat.mlp_list1.9.2.bias, refine_feat.mlp_list1.10.0.weight, refine_feat.mlp_list1.10.0.bias, refine_feat.mlp_list1.10.2.weight, refine_feat.mlp_list1.10.2.bias, refine_feat.mlp_list1.11.0.weight, refine_feat.mlp_list1.11.0.bias, refine_feat.mlp_list1.11.2.weight, refine_feat.mlp_list1.11.2.bias, refine_feat.mlp_list1.12.0.weight, refine_feat.mlp_list1.12.0.bias, refine_feat.mlp_list1.12.2.weight, refine_feat.mlp_list1.12.2.bias, refine_feat.mlp_list1.13.0.weight, refine_feat.mlp_list1.13.0.bias, refine_feat.mlp_list1.13.2.weight, refine_feat.mlp_list1.13.2.bias, refine_feat.mlp_list1.14.0.weight, refine_feat.mlp_list1.14.0.bias, refine_feat.mlp_list1.14.2.weight, refine_feat.mlp_list1.14.2.bias, refine_feat.mlp_list1.15.0.weight, refine_feat.mlp_list1.15.0.bias, refine_feat.mlp_list1.15.2.weight, refine_feat.mlp_list1.15.2.bias, refine_feat.mlp_list1.16.0.weight, refine_feat.mlp_list1.16.0.bias, refine_feat.mlp_list1.16.2.weight, refine_feat.mlp_list1.16.2.bias, refine_feat.mlp_list1.17.0.weight, refine_feat.mlp_list1.17.0.bias, refine_feat.mlp_list1.17.2.weight, refine_feat.mlp_list1.17.2.bias, refine_feat.mlp_list1.18.0.weight, refine_feat.mlp_list1.18.0.bias, refine_feat.mlp_list1.18.2.weight, refine_feat.mlp_list1.18.2.bias, refine_feat.mlp_list1.19.0.weight, refine_feat.mlp_list1.19.0.bias, refine_feat.mlp_list1.19.2.weight, refine_feat.mlp_list1.19.2.bias, refine_feat.mlp_list1.20.0.weight, refine_feat.mlp_list1.20.0.bias, refine_feat.mlp_list1.20.2.weight, refine_feat.mlp_list1.20.2.bias, refine_feat.mlp_list1.21.0.weight, refine_feat.mlp_list1.21.0.bias, refine_feat.mlp_list1.21.2.weight, refine_feat.mlp_list1.21.2.bias, refine_feat.mlp_list1.22.0.weight, refine_feat.mlp_list1.22.0.bias, refine_feat.mlp_list1.22.2.weight, refine_feat.mlp_list1.22.2.bias, refine_feat.mlp_list1.23.0.weight, refine_feat.mlp_list1.23.0.bias, refine_feat.mlp_list1.23.2.weight, refine_feat.mlp_list1.23.2.bias, refine_feat.mlp_list2.0.0.weight, refine_feat.mlp_list2.0.0.bias, refine_feat.mlp_list2.0.2.weight, refine_feat.mlp_list2.0.2.bias, refine_feat.mlp_list2.1.0.weight, refine_feat.mlp_list2.1.0.bias, refine_feat.mlp_list2.1.2.weight, refine_feat.mlp_list2.1.2.bias, refine_feat.mlp_list2.2.0.weight, refine_feat.mlp_list2.2.0.bias, refine_feat.mlp_list2.2.2.weight, refine_feat.mlp_list2.2.2.bias, refine_feat.mlp_list2.3.0.weight, refine_feat.mlp_list2.3.0.bias, refine_feat.mlp_list2.3.2.weight, refine_feat.mlp_list2.3.2.bias, refine_feat.mlp_list2.4.0.weight, refine_feat.mlp_list2.4.0.bias, refine_feat.mlp_list2.4.2.weight, refine_feat.mlp_list2.4.2.bias, refine_feat.mlp_list2.5.0.weight, refine_feat.mlp_list2.5.0.bias, refine_feat.mlp_list2.5.2.weight, refine_feat.mlp_list2.5.2.bias, refine_feat.mlp_list2.6.0.weight, refine_feat.mlp_list2.6.0.bias, refine_feat.mlp_list2.6.2.weight, refine_feat.mlp_list2.6.2.bias, refine_feat.mlp_list2.7.0.weight, refine_feat.mlp_list2.7.0.bias, refine_feat.mlp_list2.7.2.weight, refine_feat.mlp_list2.7.2.bias, refine_feat.mlp_list2.8.0.weight, refine_feat.mlp_list2.8.0.bias, refine_feat.mlp_list2.8.2.weight, refine_feat.mlp_list2.8.2.bias, refine_feat.mlp_list2.9.0.weight, refine_feat.mlp_list2.9.0.bias, refine_feat.mlp_list2.9.2.weight, refine_feat.mlp_list2.9.2.bias, refine_feat.mlp_list2.10.0.weight, refine_feat.mlp_list2.10.0.bias, refine_feat.mlp_list2.10.2.weight, refine_feat.mlp_list2.10.2.bias, refine_feat.mlp_list2.11.0.weight, refine_feat.mlp_list2.11.0.bias, refine_feat.mlp_list2.11.2.weight, refine_feat.mlp_list2.11.2.bias, refine_feat.mlp_list2.12.0.weight, refine_feat.mlp_list2.12.0.bias, refine_feat.mlp_list2.12.2.weight, refine_feat.mlp_list2.12.2.bias, refine_feat.mlp_list2.13.0.weight, refine_feat.mlp_list2.13.0.bias, refine_feat.mlp_list2.13.2.weight, refine_feat.mlp_list2.13.2.bias, refine_feat.mlp_list2.14.0.weight, refine_feat.mlp_list2.14.0.bias, refine_feat.mlp_list2.14.2.weight, refine_feat.mlp_list2.14.2.bias, refine_feat.mlp_list2.15.0.weight, refine_feat.mlp_list2.15.0.bias, refine_feat.mlp_list2.15.2.weight, refine_feat.mlp_list2.15.2.bias, refine_feat.mlp_list2.16.0.weight, refine_feat.mlp_list2.16.0.bias, refine_feat.mlp_list2.16.2.weight, refine_feat.mlp_list2.16.2.bias, refine_feat.mlp_list2.17.0.weight, refine_feat.mlp_list2.17.0.bias, refine_feat.mlp_list2.17.2.weight, refine_feat.mlp_list2.17.2.bias, refine_feat.mlp_list2.18.0.weight, refine_feat.mlp_list2.18.0.bias, refine_feat.mlp_list2.18.2.weight, refine_feat.mlp_list2.18.2.bias, refine_feat.mlp_list2.19.0.weight, refine_feat.mlp_list2.19.0.bias, refine_feat.mlp_list2.19.2.weight, refine_feat.mlp_list2.19.2.bias, refine_feat.mlp_list2.20.0.weight, refine_feat.mlp_list2.20.0.bias, refine_feat.mlp_list2.20.2.weight, refine_feat.mlp_list2.20.2.bias, refine_feat.mlp_list2.21.0.weight, refine_feat.mlp_list2.21.0.bias, refine_feat.mlp_list2.21.2.weight, refine_feat.mlp_list2.21.2.bias, refine_feat.mlp_list2.22.0.weight, refine_feat.mlp_list2.22.0.bias, refine_feat.mlp_list2.22.2.weight, refine_feat.mlp_list2.22.2.bias, refine_feat.mlp_list2.23.0.weight, refine_feat.mlp_list2.23.0.bias, refine_feat.mlp_list2.23.2.weight, refine_feat.mlp_list2.23.2.bias, refine_feat.mlp_list3.0.0.weight, refine_feat.mlp_list3.0.0.bias, refine_feat.mlp_list3.0.2.weight, refine_feat.mlp_list3.0.2.bias, refine_feat.mlp_list3.1.0.weight, refine_feat.mlp_list3.1.0.bias, refine_feat.mlp_list3.1.2.weight, refine_feat.mlp_list3.1.2.bias, refine_feat.mlp_list3.2.0.weight, refine_feat.mlp_list3.2.0.bias, refine_feat.mlp_list3.2.2.weight, refine_feat.mlp_list3.2.2.bias, refine_feat.mlp_list3.3.0.weight, refine_feat.mlp_list3.3.0.bias, refine_feat.mlp_list3.3.2.weight, refine_feat.mlp_list3.3.2.bias, refine_feat.mlp_list3.4.0.weight, refine_feat.mlp_list3.4.0.bias, refine_feat.mlp_list3.4.2.weight, refine_feat.mlp_list3.4.2.bias, refine_feat.mlp_list3.5.0.weight, refine_feat.mlp_list3.5.0.bias, refine_feat.mlp_list3.5.2.weight, refine_feat.mlp_list3.5.2.bias, refine_feat.mlp_list3.6.0.weight, refine_feat.mlp_list3.6.0.bias, refine_feat.mlp_list3.6.2.weight, refine_feat.mlp_list3.6.2.bias, refine_feat.mlp_list3.7.0.weight, refine_feat.mlp_list3.7.0.bias, refine_feat.mlp_list3.7.2.weight, refine_feat.mlp_list3.7.2.bias, refine_feat.mlp_list3.8.0.weight, refine_feat.mlp_list3.8.0.bias, refine_feat.mlp_list3.8.2.weight, refine_feat.mlp_list3.8.2.bias, refine_feat.mlp_list3.9.0.weight, refine_feat.mlp_list3.9.0.bias, refine_feat.mlp_list3.9.2.weight, refine_feat.mlp_list3.9.2.bias, refine_feat.mlp_list3.10.0.weight, refine_feat.mlp_list3.10.0.bias, refine_feat.mlp_list3.10.2.weight, refine_feat.mlp_list3.10.2.bias, refine_feat.mlp_list3.11.0.weight, refine_feat.mlp_list3.11.0.bias, refine_feat.mlp_list3.11.2.weight, refine_feat.mlp_list3.11.2.bias, refine_feat.mlp_list3.12.0.weight, refine_feat.mlp_list3.12.0.bias, refine_feat.mlp_list3.12.2.weight, refine_feat.mlp_list3.12.2.bias, refine_feat.mlp_list3.13.0.weight, refine_feat.mlp_list3.13.0.bias, refine_feat.mlp_list3.13.2.weight, refine_feat.mlp_list3.13.2.bias, refine_feat.mlp_list3.14.0.weight, refine_feat.mlp_list3.14.0.bias, refine_feat.mlp_list3.14.2.weight, refine_feat.mlp_list3.14.2.bias, refine_feat.mlp_list3.15.0.weight, refine_feat.mlp_list3.15.0.bias, refine_feat.mlp_list3.15.2.weight, refine_feat.mlp_list3.15.2.bias, refine_feat.mlp_list3.16.0.weight, refine_feat.mlp_list3.16.0.bias, refine_feat.mlp_list3.16.2.weight, refine_feat.mlp_list3.16.2.bias, refine_feat.mlp_list3.17.0.weight, refine_feat.mlp_list3.17.0.bias, refine_feat.mlp_list3.17.2.weight, refine_feat.mlp_list3.17.2.bias, refine_feat.mlp_list3.18.0.weight, refine_feat.mlp_list3.18.0.bias, refine_feat.mlp_list3.18.2.weight, refine_feat.mlp_list3.18.2.bias, refine_feat.mlp_list3.19.0.weight, refine_feat.mlp_list3.19.0.bias, refine_feat.mlp_list3.19.2.weight, refine_feat.mlp_list3.19.2.bias, refine_feat.mlp_list3.20.0.weight, refine_feat.mlp_list3.20.0.bias, refine_feat.mlp_list3.20.2.weight, refine_feat.mlp_list3.20.2.bias, refine_feat.mlp_list3.21.0.weight, refine_feat.mlp_list3.21.0.bias, refine_feat.mlp_list3.21.2.weight, refine_feat.mlp_list3.21.2.bias, refine_feat.mlp_list3.22.0.weight, refine_feat.mlp_list3.22.0.bias, refine_feat.mlp_list3.22.2.weight, refine_feat.mlp_list3.22.2.bias, refine_feat.mlp_list3.23.0.weight, refine_feat.mlp_list3.23.0.bias, refine_feat.mlp_list3.23.2.weight, refine_feat.mlp_list3.23.2.bias, refine_feat.router.0.weight, refine_feat.router.0.bias, refine_feat.router.1.weight, refine_feat.router.1.bias, refine_feat.router.2.weight, refine_feat.router.2.bias, refine_feat.router.3.weight, refine_feat.router.3.bias, refine_feat.router.4.weight, refine_feat.router.4.bias, refine_feat.router.5.weight, refine_feat.router.5.bias, refine_feat.router.6.weight, refine_feat.router.6.bias, refine_feat.router.7.weight, refine_feat.router.7.bias, refine_feat.router.8.weight, refine_feat.router.8.bias, refine_feat.router.9.weight, refine_feat.router.9.bias, refine_feat.router.10.weight, refine_feat.router.10.bias, refine_feat.router.11.weight, refine_feat.router.11.bias, refine_feat.router.12.weight, refine_feat.router.12.bias, refine_feat.router.13.weight, refine_feat.router.13.bias, refine_feat.router.14.weight, refine_feat.router.14.bias, refine_feat.router.15.weight, refine_feat.router.15.bias, refine_feat.router.16.weight, refine_feat.router.16.bias, refine_feat.router.17.weight, refine_feat.router.17.bias, refine_feat.router.18.weight, refine_feat.router.18.bias, refine_feat.router.19.weight, refine_feat.router.19.bias, refine_feat.router.20.weight, refine_feat.router.20.bias, refine_feat.router.21.weight, refine_feat.router.21.bias, refine_feat.router.22.weight, refine_feat.router.22.bias, refine_feat.router.23.weight, refine_feat.router.23.bias

2025/03/27 10:55:52 - mmengine - INFO - load model from: checkpoints/dinov2_converted.pth
2025/03/27 10:55:52 - mmengine - INFO - Loads checkpoint by local backend from path: checkpoints/dinov2_converted.pth
Name of parameter - Initialization information

backbone.cls_token - torch.Size([1, 1, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.pos_embed - torch.Size([1, 1025, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.mask_token - torch.Size([1, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.patch_embed.proj.weight - torch.Size([1024, 3, 16, 16]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.patch_embed.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.norm.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.norm.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.refine_feat.scale - torch.Size([24]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.0.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.3.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.4.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.4.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.5.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.5.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.6.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.6.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.7.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.7.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.8.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.8.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.9.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.9.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.10.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.10.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.11.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.11.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.12.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.12.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.13.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.13.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.14.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.14.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.15.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.15.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.16.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.16.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.17.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.17.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.18.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.18.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.19.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.19.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.20.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.20.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.21.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.21.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.22.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.22.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.23.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.layer_norm.23.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.0.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.0.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.0.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.0.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.1.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.1.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.1.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.1.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.2.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.2.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.2.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.2.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.3.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.3.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.3.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.3.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.4.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.4.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.4.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.4.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.5.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.5.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.5.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.5.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.6.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.6.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.6.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.6.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.7.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.7.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.7.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.7.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.8.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.8.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.8.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.8.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.9.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.9.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.9.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.9.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.10.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.10.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.10.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.10.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.11.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.11.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.11.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.11.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.12.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.12.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.12.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.12.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.13.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.13.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.13.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.13.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.14.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.14.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.14.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.14.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.15.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.15.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.15.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.15.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.16.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.16.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.16.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.16.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.17.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.17.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.17.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.17.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.18.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.18.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.18.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.18.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.19.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.19.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.19.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.19.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.20.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.20.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.20.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.20.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.21.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.21.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.21.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.21.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.22.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.22.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.22.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.22.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.23.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.23.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.23.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list1.23.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.0.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.0.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.0.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.0.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.1.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.1.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.1.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.1.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.2.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.2.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.2.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.2.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.3.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.3.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.3.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.3.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.4.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.4.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.4.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.4.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.5.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.5.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.5.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.5.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.6.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.6.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.6.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.6.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.7.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.7.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.7.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.7.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.8.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.8.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.8.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.8.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.9.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.9.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.9.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.9.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.10.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.10.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.10.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.10.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.11.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.11.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.11.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.11.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.12.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.12.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.12.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.12.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.13.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.13.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.13.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.13.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.14.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.14.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.14.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.14.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.15.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.15.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.15.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.15.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.16.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.16.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.16.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.16.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.17.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.17.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.17.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.17.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.18.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.18.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.18.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.18.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.19.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.19.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.19.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.19.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.20.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.20.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.20.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.20.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.21.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.21.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.21.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.21.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.22.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.22.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.22.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.22.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.23.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.23.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.23.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list2.23.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.0.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.0.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.0.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.0.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.1.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.1.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.1.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.1.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.2.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.2.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.2.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.2.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.3.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.3.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.3.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.3.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.4.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.4.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.4.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.4.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.5.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.5.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.5.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.5.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.6.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.6.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.6.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.6.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.7.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.7.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.7.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.7.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.8.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.8.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.8.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.8.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.9.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.9.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.9.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.9.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.10.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.10.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.10.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.10.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.11.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.11.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.11.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.11.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.12.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.12.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.12.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.12.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.13.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.13.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.13.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.13.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.14.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.14.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.14.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.14.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.15.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.15.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.15.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.15.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.16.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.16.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.16.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.16.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.17.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.17.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.17.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.17.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.18.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.18.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.18.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.18.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.19.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.19.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.19.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.19.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.20.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.20.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.20.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.20.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.21.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.21.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.21.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.21.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.22.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.22.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.22.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.22.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.23.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.23.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.23.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.mlp_list3.23.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.0.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.0.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.1.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.1.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.2.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.2.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.3.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.3.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.4.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.4.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.5.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.5.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.6.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.6.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.7.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.7.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.8.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.8.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.9.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.9.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.10.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.10.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.11.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.11.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.12.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.12.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.13.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.13.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.14.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.14.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.15.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.15.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.16.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.16.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.17.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.17.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.18.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.18.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.19.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.19.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.20.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.20.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.21.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.21.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.22.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.22.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.23.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

backbone.refine_feat.router.23.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.input_convs.0.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.input_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.input_convs.0.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.input_convs.0.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.input_convs.1.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.input_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.input_convs.1.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.input_convs.1.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.input_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.input_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.input_convs.2.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.input_convs.2.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.0.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.0.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.0.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.0.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.0.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.0.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.0.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.0.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.0.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.0.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.0.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.0.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.0.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.0.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.0.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.0.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.1.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.1.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.1.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.1.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.1.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.1.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.1.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.1.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.1.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.1.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.1.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.1.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.1.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.1.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.1.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.1.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.2.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.2.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.2.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.2.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.2.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.2.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.2.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.2.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.2.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.2.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.2.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.2.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.2.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.2.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.2.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.2.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.3.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.3.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.3.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.3.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.3.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.3.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.3.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.3.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.3.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.3.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.3.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.3.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.3.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.3.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.3.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.3.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.4.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.4.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.4.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.4.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.4.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.4.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.4.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.4.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.4.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.4.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.4.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.4.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.4.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.4.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.4.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.4.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.5.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.5.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.5.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.5.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.5.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.5.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.5.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.5.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.5.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.5.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.5.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.5.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.5.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.5.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.5.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.encoder.layers.5.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.level_encoding.weight - torch.Size([3, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.lateral_convs.0.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.lateral_convs.0.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.lateral_convs.0.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.output_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.output_convs.0.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.output_convs.0.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.pixel_decoder.mask_feature.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.mask_feature.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.0.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.0.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.0.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.0.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.0.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.0.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.0.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.0.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.0.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.0.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.0.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.0.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.0.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.0.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.0.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.0.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.0.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.0.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.1.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.1.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.1.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.1.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.1.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.1.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.1.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.1.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.1.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.1.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.1.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.1.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.1.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.1.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.1.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.1.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.1.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.1.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.2.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.2.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.2.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.2.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.2.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.2.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.2.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.2.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.2.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.2.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.2.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.2.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.2.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.2.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.2.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.2.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.2.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.2.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.3.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.3.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.3.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.3.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.3.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.3.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.3.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.3.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.3.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.3.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.3.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.3.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.3.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.3.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.3.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.3.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.3.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.3.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.4.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.4.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.4.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.4.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.4.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.4.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.4.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.4.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.4.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.4.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.4.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.4.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.4.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.4.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.4.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.4.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.4.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.4.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.5.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.5.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.5.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.5.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.5.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.5.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.5.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.5.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.5.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.5.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.5.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.5.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.5.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.5.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.5.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.5.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.5.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.5.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.6.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.6.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.6.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.6.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.6.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.6.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.6.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.6.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.6.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.6.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.6.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.6.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.6.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.6.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.6.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.6.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.6.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.6.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.7.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.7.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.7.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.7.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.7.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.7.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.7.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.7.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.7.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.7.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.7.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.7.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.7.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.7.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.7.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.7.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.7.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.7.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.8.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.8.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.8.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.8.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.8.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.8.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.8.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.8.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.8.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.8.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.8.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.8.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.8.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.8.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.8.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.8.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.8.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.layers.8.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.post_norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.transformer_decoder.post_norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.query_embed.weight - torch.Size([100, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.query_feat.weight - torch.Size([100, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.level_embed.weight - torch.Size([3, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.cls_embed.weight - torch.Size([7, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.cls_embed.bias - torch.Size([7]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.mask_embed.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.mask_embed.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.mask_embed.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.mask_embed.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.mask_embed.4.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

decode_head.mask_embed.4.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.cls_token - torch.Size([1, 1, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.pos_embed - torch.Size([1, 1025, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.mask_token - torch.Size([1, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.patch_embed.proj.weight - torch.Size([1024, 3, 16, 16]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.patch_embed.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.0.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.0.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.0.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.0.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.0.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.0.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.0.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.0.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.0.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.0.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.0.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.0.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.0.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.0.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.1.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.1.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.1.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.1.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.1.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.1.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.1.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.1.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.1.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.1.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.1.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.1.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.1.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.1.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.2.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.2.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.2.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.2.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.2.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.2.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.2.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.2.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.2.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.2.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.2.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.2.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.2.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.2.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.3.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.3.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.3.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.3.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.3.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.3.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.3.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.3.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.3.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.3.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.3.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.3.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.3.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.3.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.4.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.4.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.4.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.4.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.4.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.4.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.4.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.4.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.4.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.4.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.4.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.4.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.4.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.4.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.5.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.5.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.5.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.5.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.5.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.5.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.5.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.5.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.5.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.5.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.5.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.5.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.5.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.5.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.6.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.6.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.6.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.6.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.6.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.6.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.6.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.6.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.6.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.6.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.6.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.6.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.6.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.6.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.7.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.7.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.7.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.7.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.7.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.7.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.7.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.7.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.7.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.7.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.7.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.7.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.7.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.7.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.8.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.8.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.8.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.8.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.8.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.8.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.8.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.8.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.8.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.8.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.8.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.8.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.8.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.8.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.9.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.9.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.9.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.9.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.9.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.9.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.9.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.9.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.9.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.9.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.9.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.9.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.9.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.9.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.10.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.10.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.10.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.10.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.10.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.10.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.10.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.10.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.10.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.10.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.10.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.10.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.10.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.10.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.11.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.11.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.11.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.11.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.11.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.11.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.11.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.11.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.11.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.11.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.11.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.11.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.11.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.11.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.12.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.12.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.12.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.12.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.12.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.12.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.12.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.12.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.12.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.12.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.12.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.12.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.12.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.12.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.13.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.13.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.13.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.13.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.13.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.13.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.13.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.13.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.13.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.13.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.13.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.13.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.13.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.13.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.14.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.14.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.14.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.14.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.14.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.14.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.14.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.14.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.14.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.14.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.14.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.14.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.14.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.14.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.15.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.15.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.15.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.15.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.15.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.15.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.15.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.15.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.15.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.15.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.15.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.15.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.15.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.15.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.16.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.16.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.16.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.16.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.16.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.16.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.16.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.16.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.16.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.16.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.16.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.16.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.16.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.16.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.17.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.17.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.17.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.17.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.17.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.17.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.17.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.17.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.17.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.17.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.17.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.17.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.17.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.17.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.18.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.18.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.18.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.18.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.18.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.18.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.18.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.18.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.18.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.18.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.18.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.18.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.18.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.18.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.19.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.19.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.19.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.19.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.19.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.19.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.19.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.19.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.19.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.19.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.19.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.19.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.19.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.19.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.20.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.20.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.20.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.20.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.20.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.20.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.20.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.20.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.20.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.20.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.20.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.20.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.20.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.20.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.21.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.21.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.21.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.21.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.21.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.21.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.21.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.21.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.21.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.21.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.21.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.21.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.21.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.21.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.22.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.22.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.22.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.22.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.22.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.22.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.22.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.22.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.22.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.22.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.22.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.22.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.22.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.22.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.23.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.23.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.23.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.23.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.23.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.23.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.23.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.23.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.23.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.23.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.23.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.23.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.23.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.blocks.23.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.norm.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.norm.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

ema_model.backbone.refine_feat.scale - torch.Size([24]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.0.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.3.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.4.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.4.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.5.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.5.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.6.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.6.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.7.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.7.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.8.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.8.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.9.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.9.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.10.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.10.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.11.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.11.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.12.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.12.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.13.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.13.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.14.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.14.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.15.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.15.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.16.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.16.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.17.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.17.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.18.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.18.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.19.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.19.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.20.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.20.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.21.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.21.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.22.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.22.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.23.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.layer_norm.23.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.0.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.0.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.0.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.0.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.1.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.1.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.1.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.1.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.2.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.2.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.2.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.2.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.3.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.3.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.3.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.3.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.4.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.4.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.4.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.4.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.5.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.5.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.5.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.5.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.6.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.6.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.6.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.6.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.7.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.7.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.7.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.7.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.8.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.8.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.8.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.8.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.9.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.9.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.9.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.9.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.10.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.10.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.10.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.10.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.11.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.11.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.11.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.11.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.12.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.12.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.12.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.12.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.13.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.13.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.13.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.13.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.14.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.14.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.14.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.14.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.15.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.15.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.15.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.15.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.16.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.16.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.16.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.16.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.17.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.17.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.17.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.17.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.18.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.18.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.18.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.18.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.19.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.19.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.19.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.19.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.20.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.20.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.20.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.20.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.21.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.21.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.21.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.21.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.22.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.22.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.22.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.22.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.23.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.23.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.23.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list1.23.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.0.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.0.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.0.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.0.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.1.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.1.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.1.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.1.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.2.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.2.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.2.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.2.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.3.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.3.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.3.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.3.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.4.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.4.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.4.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.4.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.5.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.5.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.5.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.5.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.6.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.6.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.6.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.6.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.7.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.7.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.7.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.7.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.8.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.8.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.8.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.8.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.9.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.9.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.9.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.9.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.10.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.10.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.10.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.10.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.11.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.11.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.11.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.11.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.12.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.12.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.12.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.12.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.13.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.13.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.13.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.13.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.14.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.14.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.14.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.14.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.15.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.15.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.15.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.15.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.16.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.16.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.16.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.16.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.17.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.17.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.17.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.17.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.18.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.18.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.18.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.18.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.19.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.19.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.19.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.19.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.20.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.20.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.20.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.20.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.21.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.21.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.21.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.21.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.22.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.22.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.22.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.22.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.23.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.23.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.23.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list2.23.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.0.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.0.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.0.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.0.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.1.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.1.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.1.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.1.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.2.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.2.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.2.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.2.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.3.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.3.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.3.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.3.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.4.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.4.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.4.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.4.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.5.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.5.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.5.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.5.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.6.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.6.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.6.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.6.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.7.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.7.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.7.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.7.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.8.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.8.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.8.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.8.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.9.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.9.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.9.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.9.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.10.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.10.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.10.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.10.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.11.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.11.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.11.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.11.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.12.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.12.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.12.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.12.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.13.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.13.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.13.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.13.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.14.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.14.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.14.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.14.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.15.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.15.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.15.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.15.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.16.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.16.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.16.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.16.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.17.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.17.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.17.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.17.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.18.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.18.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.18.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.18.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.19.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.19.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.19.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.19.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.20.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.20.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.20.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.20.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.21.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.21.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.21.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.21.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.22.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.22.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.22.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.22.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.23.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.23.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.23.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.mlp_list3.23.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.0.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.0.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.1.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.1.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.2.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.2.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.3.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.3.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.4.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.4.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.5.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.5.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.6.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.6.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.7.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.7.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.8.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.8.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.9.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.9.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.10.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.10.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.11.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.11.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.12.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.12.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.13.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.13.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.14.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.14.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.15.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.15.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.16.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.16.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.17.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.17.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.18.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.18.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.19.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.19.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.20.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.20.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.21.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.21.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.22.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.22.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.23.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.backbone.refine_feat.router.23.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.input_convs.0.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.input_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.input_convs.0.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.input_convs.0.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.input_convs.1.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.input_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.input_convs.1.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.input_convs.1.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.input_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.input_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.input_convs.2.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.input_convs.2.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.0.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.0.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.0.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.0.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.0.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.0.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.0.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.0.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.0.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.0.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.0.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.0.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.0.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.0.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.0.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.0.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.1.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.1.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.1.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.1.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.1.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.1.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.1.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.1.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.1.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.1.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.1.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.1.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.1.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.1.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.1.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.1.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.2.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.2.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.2.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.2.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.2.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.2.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.2.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.2.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.2.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.2.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.2.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.2.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.2.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.2.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.2.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.2.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.3.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.3.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.3.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.3.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.3.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.3.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.3.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.3.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.3.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.3.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.3.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.3.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.3.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.3.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.3.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.3.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.4.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.4.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.4.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.4.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.4.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.4.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.4.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.4.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.4.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.4.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.4.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.4.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.4.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.4.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.4.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.4.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.5.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.5.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.5.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.5.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.5.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.5.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.5.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.5.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.5.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.5.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.5.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.encoder.layers.5.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.5.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.5.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.5.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.encoder.layers.5.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.level_encoding.weight - torch.Size([3, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.lateral_convs.0.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.lateral_convs.0.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.lateral_convs.0.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.output_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.output_convs.0.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.output_convs.0.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.pixel_decoder.mask_feature.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.pixel_decoder.mask_feature.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.0.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.0.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.0.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.0.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.0.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.0.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.0.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.0.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.0.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.0.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.0.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.0.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.0.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.0.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.0.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.0.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.0.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.0.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.1.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.1.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.1.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.1.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.1.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.1.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.1.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.1.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.1.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.1.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.1.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.1.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.1.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.1.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.1.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.1.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.1.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.1.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.2.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.2.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.2.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.2.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.2.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.2.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.2.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.2.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.2.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.2.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.2.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.2.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.2.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.2.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.2.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.2.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.2.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.2.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.3.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.3.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.3.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.3.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.3.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.3.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.3.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.3.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.3.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.3.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.3.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.3.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.3.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.3.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.3.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.3.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.3.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.3.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.4.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.4.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.4.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.4.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.4.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.4.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.4.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.4.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.4.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.4.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.4.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.4.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.4.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.4.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.4.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.4.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.4.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.4.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.5.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.5.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.5.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.5.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.5.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.5.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.5.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.5.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.5.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.5.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.5.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.5.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.5.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.5.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.5.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.5.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.5.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.5.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.6.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.6.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.6.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.6.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.6.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.6.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.6.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.6.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.6.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.6.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.6.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.6.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.6.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.6.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.6.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.6.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.6.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.6.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.7.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.7.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.7.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.7.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.7.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.7.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.7.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.7.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.7.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.7.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.7.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.7.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.7.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.7.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.7.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.7.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.7.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.7.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.8.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.8.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.8.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.8.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.8.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.8.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.8.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.8.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.8.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.8.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.8.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

ema_model.decode_head.transformer_decoder.layers.8.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.8.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.8.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.8.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.8.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.8.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.layers.8.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.post_norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.transformer_decoder.post_norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.query_embed.weight - torch.Size([100, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.query_feat.weight - torch.Size([100, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.level_embed.weight - torch.Size([3, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.cls_embed.weight - torch.Size([7, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.cls_embed.bias - torch.Size([7]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.mask_embed.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.mask_embed.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.mask_embed.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.mask_embed.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.mask_embed.4.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  

ema_model.decode_head.mask_embed.4.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of DACS_encoder_decoder  
2025/03/27 10:55:53 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2025/03/27 10:55:53 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2025/03/27 10:55:53 - mmengine - INFO - Checkpoints will be saved to /data/xiaoxinghhh/code/my_mmcv/work_dirs/pr2vi/DA_spatial_64_fft_cut_off_0.3_pre3/4ddf0_seed0.
2025/03/27 10:56:18 - mmengine - INFO - Iter(train) [   50/20000]  base_lr: 9.9779e-05 lr: 9.9779e-05  eta: 2:51:38  time: 0.4947  data_time: 0.0197  memory: 7330  loss: 82.0049  decode.loss_cls: 2.3068  decode.loss_mask: 2.5489  decode.loss_dice: 3.8730  decode.d0.loss_cls: 3.7655  decode.d0.loss_mask: 2.1033  decode.d0.loss_dice: 3.3313  decode.d1.loss_cls: 1.8927  decode.d1.loss_mask: 2.1306  decode.d1.loss_dice: 3.2873  decode.d2.loss_cls: 1.8965  decode.d2.loss_mask: 2.0772  decode.d2.loss_dice: 3.2721  decode.d3.loss_cls: 1.8797  decode.d3.loss_mask: 2.0709  decode.d3.loss_dice: 3.4557  decode.d4.loss_cls: 2.0482  decode.d4.loss_mask: 2.1928  decode.d4.loss_dice: 3.5549  decode.d5.loss_cls: 2.2402  decode.d5.loss_mask: 2.3623  decode.d5.loss_dice: 3.6996  decode.d6.loss_cls: 2.2857  decode.d6.loss_mask: 2.4083  decode.d6.loss_dice: 3.7953  decode.d7.loss_cls: 2.3093  decode.d7.loss_mask: 2.6167  decode.d7.loss_dice: 3.8301  decode.d8.loss_cls: 2.2949  decode.d8.loss_mask: 2.5749  decode.d8.loss_dice: 3.8997
2025/03/27 10:56:45 - mmengine - INFO - Iter(train) [  100/20000]  base_lr: 9.9554e-05 lr: 9.9554e-05  eta: 2:53:18  time: 0.5325  data_time: 0.0253  memory: 6895  loss: 69.9676  decode.loss_cls: 2.0119  decode.loss_mask: 2.2480  decode.loss_dice: 3.0976  decode.d0.loss_cls: 3.7681  decode.d0.loss_mask: 2.1310  decode.d0.loss_dice: 2.9402  decode.d1.loss_cls: 1.5618  decode.d1.loss_mask: 2.1369  decode.d1.loss_dice: 2.8146  decode.d2.loss_cls: 1.4769  decode.d2.loss_mask: 2.2089  decode.d2.loss_dice: 2.7496  decode.d3.loss_cls: 1.6301  decode.d3.loss_mask: 2.1566  decode.d3.loss_dice: 2.7289  decode.d4.loss_cls: 1.8236  decode.d4.loss_mask: 2.1605  decode.d4.loss_dice: 2.7817  decode.d5.loss_cls: 1.8044  decode.d5.loss_mask: 2.1755  decode.d5.loss_dice: 2.7854  decode.d6.loss_cls: 1.8245  decode.d6.loss_mask: 2.2049  decode.d6.loss_dice: 2.8145  decode.d7.loss_cls: 1.9051  decode.d7.loss_mask: 2.1651  decode.d7.loss_dice: 2.8044  decode.d8.loss_cls: 1.9315  decode.d8.loss_mask: 2.2184  decode.d8.loss_dice: 2.9068
2025/03/27 10:57:10 - mmengine - INFO - Iter(train) [  150/20000]  base_lr: 9.9329e-05 lr: 9.9329e-05  eta: 2:51:08  time: 0.4997  data_time: 0.0200  memory: 6894  loss: 64.6260  decode.loss_cls: 1.8235  decode.loss_mask: 1.8322  decode.loss_dice: 3.0401  decode.d0.loss_cls: 3.5424  decode.d0.loss_mask: 1.7546  decode.d0.loss_dice: 3.0613  decode.d1.loss_cls: 1.2407  decode.d1.loss_mask: 1.7569  decode.d1.loss_dice: 2.9661  decode.d2.loss_cls: 1.2482  decode.d2.loss_mask: 1.7967  decode.d2.loss_dice: 3.0059  decode.d3.loss_cls: 1.1446  decode.d3.loss_mask: 1.8321  decode.d3.loss_dice: 3.0064  decode.d4.loss_cls: 1.2315  decode.d4.loss_mask: 1.8704  decode.d4.loss_dice: 2.9902  decode.d5.loss_cls: 1.2803  decode.d5.loss_mask: 1.7947  decode.d5.loss_dice: 2.9896  decode.d6.loss_cls: 1.5683  decode.d6.loss_mask: 1.7874  decode.d6.loss_dice: 2.9764  decode.d7.loss_cls: 1.5982  decode.d7.loss_mask: 1.8967  decode.d7.loss_dice: 3.0108  decode.d8.loss_cls: 1.6512  decode.d8.loss_mask: 1.8991  decode.d8.loss_dice: 3.0294
2025/03/27 10:57:36 - mmengine - INFO - Iter(train) [  200/20000]  base_lr: 9.9104e-05 lr: 9.9104e-05  eta: 2:50:23  time: 0.5008  data_time: 0.0199  memory: 6896  loss: 57.2795  decode.loss_cls: 1.5393  decode.loss_mask: 1.9143  decode.loss_dice: 2.3289  decode.d0.loss_cls: 3.5341  decode.d0.loss_mask: 1.8268  decode.d0.loss_dice: 2.5331  decode.d1.loss_cls: 1.1308  decode.d1.loss_mask: 1.8611  decode.d1.loss_dice: 2.3635  decode.d2.loss_cls: 1.1034  decode.d2.loss_mask: 1.8606  decode.d2.loss_dice: 2.3019  decode.d3.loss_cls: 1.0897  decode.d3.loss_mask: 1.8622  decode.d3.loss_dice: 2.3062  decode.d4.loss_cls: 1.1337  decode.d4.loss_mask: 1.9061  decode.d4.loss_dice: 2.3050  decode.d5.loss_cls: 1.1964  decode.d5.loss_mask: 1.9732  decode.d5.loss_dice: 2.3933  decode.d6.loss_cls: 1.2822  decode.d6.loss_mask: 1.9921  decode.d6.loss_dice: 2.3248  decode.d7.loss_cls: 1.2486  decode.d7.loss_mask: 2.0460  decode.d7.loss_dice: 2.3194  decode.d8.loss_cls: 1.3638  decode.d8.loss_mask: 1.9626  decode.d8.loss_dice: 2.2762
2025/03/27 10:58:02 - mmengine - INFO - Iter(train) [  250/20000]  base_lr: 9.8879e-05 lr: 9.8879e-05  eta: 2:49:55  time: 0.5156  data_time: 0.0223  memory: 6886  loss: 56.3424  decode.loss_cls: 1.1472  decode.loss_mask: 2.2052  decode.loss_dice: 2.4198  decode.d0.loss_cls: 3.4062  decode.d0.loss_mask: 1.9421  decode.d0.loss_dice: 2.4393  decode.d1.loss_cls: 0.8362  decode.d1.loss_mask: 1.9536  decode.d1.loss_dice: 2.2738  decode.d2.loss_cls: 0.6885  decode.d2.loss_mask: 2.0834  decode.d2.loss_dice: 2.3573  decode.d3.loss_cls: 0.8021  decode.d3.loss_mask: 2.1791  decode.d3.loss_dice: 2.3735  decode.d4.loss_cls: 0.8441  decode.d4.loss_mask: 2.1500  decode.d4.loss_dice: 2.3443  decode.d5.loss_cls: 0.8384  decode.d5.loss_mask: 2.1996  decode.d5.loss_dice: 2.3942  decode.d6.loss_cls: 0.8903  decode.d6.loss_mask: 2.1125  decode.d6.loss_dice: 2.3849  decode.d7.loss_cls: 0.9268  decode.d7.loss_mask: 2.1914  decode.d7.loss_dice: 2.3908  decode.d8.loss_cls: 1.0344  decode.d8.loss_mask: 2.1900  decode.d8.loss_dice: 2.3433
2025/03/27 10:58:27 - mmengine - INFO - Iter(train) [  300/20000]  base_lr: 9.8653e-05 lr: 9.8653e-05  eta: 2:48:51  time: 0.5070  data_time: 0.0205  memory: 6895  loss: 54.2871  decode.loss_cls: 0.9360  decode.loss_mask: 2.0602  decode.loss_dice: 2.2612  decode.d0.loss_cls: 3.2165  decode.d0.loss_mask: 1.9576  decode.d0.loss_dice: 2.4383  decode.d1.loss_cls: 0.9775  decode.d1.loss_mask: 2.0133  decode.d1.loss_dice: 2.2302  decode.d2.loss_cls: 0.8741  decode.d2.loss_mask: 2.0661  decode.d2.loss_dice: 2.2018  decode.d3.loss_cls: 0.7765  decode.d3.loss_mask: 2.0657  decode.d3.loss_dice: 2.1935  decode.d4.loss_cls: 0.9731  decode.d4.loss_mask: 2.0376  decode.d4.loss_dice: 2.1363  decode.d5.loss_cls: 0.9262  decode.d5.loss_mask: 2.0750  decode.d5.loss_dice: 2.2143  decode.d6.loss_cls: 0.9595  decode.d6.loss_mask: 2.0391  decode.d6.loss_dice: 2.2399  decode.d7.loss_cls: 0.9048  decode.d7.loss_mask: 2.0619  decode.d7.loss_dice: 2.2275  decode.d8.loss_cls: 0.8628  decode.d8.loss_mask: 2.1163  decode.d8.loss_dice: 2.2444
2025/03/27 10:58:52 - mmengine - INFO - Iter(train) [  350/20000]  base_lr: 9.8428e-05 lr: 9.8428e-05  eta: 2:47:58  time: 0.5032  data_time: 0.0200  memory: 6890  loss: 47.9830  decode.loss_cls: 0.7181  decode.loss_mask: 1.9072  decode.loss_dice: 2.0852  decode.d0.loss_cls: 3.0868  decode.d0.loss_mask: 1.7543  decode.d0.loss_dice: 2.1835  decode.d1.loss_cls: 0.6668  decode.d1.loss_mask: 1.8473  decode.d1.loss_dice: 2.0322  decode.d2.loss_cls: 0.6070  decode.d2.loss_mask: 1.9027  decode.d2.loss_dice: 2.0401  decode.d3.loss_cls: 0.5519  decode.d3.loss_mask: 1.8796  decode.d3.loss_dice: 2.0268  decode.d4.loss_cls: 0.5634  decode.d4.loss_mask: 1.8545  decode.d4.loss_dice: 2.1016  decode.d5.loss_cls: 0.5973  decode.d5.loss_mask: 1.8176  decode.d5.loss_dice: 2.0027  decode.d6.loss_cls: 0.6493  decode.d6.loss_mask: 1.8225  decode.d6.loss_dice: 2.0163  decode.d7.loss_cls: 0.7116  decode.d7.loss_mask: 1.8228  decode.d7.loss_dice: 2.0257  decode.d8.loss_cls: 0.7210  decode.d8.loss_mask: 1.8861  decode.d8.loss_dice: 2.1013
2025/03/27 10:59:18 - mmengine - INFO - Iter(train) [  400/20000]  base_lr: 9.8203e-05 lr: 9.8203e-05  eta: 2:47:49  time: 0.5372  data_time: 0.0255  memory: 6892  loss: 43.9140  decode.loss_cls: 0.4440  decode.loss_mask: 1.7458  decode.loss_dice: 1.9633  decode.d0.loss_cls: 2.8981  decode.d0.loss_mask: 1.5649  decode.d0.loss_dice: 1.9750  decode.d1.loss_cls: 0.4905  decode.d1.loss_mask: 1.6669  decode.d1.loss_dice: 1.8991  decode.d2.loss_cls: 0.4927  decode.d2.loss_mask: 1.6596  decode.d2.loss_dice: 1.9484  decode.d3.loss_cls: 0.4870  decode.d3.loss_mask: 1.6983  decode.d3.loss_dice: 1.9072  decode.d4.loss_cls: 0.5084  decode.d4.loss_mask: 1.6879  decode.d4.loss_dice: 1.9307  decode.d5.loss_cls: 0.5451  decode.d5.loss_mask: 1.7682  decode.d5.loss_dice: 1.9367  decode.d6.loss_cls: 0.6074  decode.d6.loss_mask: 1.7192  decode.d6.loss_dice: 1.9057  decode.d7.loss_cls: 0.5923  decode.d7.loss_mask: 1.7550  decode.d7.loss_dice: 1.9613  decode.d8.loss_cls: 0.4576  decode.d8.loss_mask: 1.7549  decode.d8.loss_dice: 1.9427
2025/03/27 10:59:45 - mmengine - INFO - Iter(train) [  450/20000]  base_lr: 9.7977e-05 lr: 9.7977e-05  eta: 2:48:12  time: 0.5367  data_time: 0.0253  memory: 6888  loss: 41.7147  decode.loss_cls: 0.4746  decode.loss_mask: 1.6777  decode.loss_dice: 1.7989  decode.d0.loss_cls: 2.9256  decode.d0.loss_mask: 1.5401  decode.d0.loss_dice: 1.9316  decode.d1.loss_cls: 0.4982  decode.d1.loss_mask: 1.5580  decode.d1.loss_dice: 1.7668  decode.d2.loss_cls: 0.4182  decode.d2.loss_mask: 1.6698  decode.d2.loss_dice: 1.8366  decode.d3.loss_cls: 0.3687  decode.d3.loss_mask: 1.7008  decode.d3.loss_dice: 1.8331  decode.d4.loss_cls: 0.3804  decode.d4.loss_mask: 1.7212  decode.d4.loss_dice: 1.8543  decode.d5.loss_cls: 0.4739  decode.d5.loss_mask: 1.7093  decode.d5.loss_dice: 1.8378  decode.d6.loss_cls: 0.4932  decode.d6.loss_mask: 1.6389  decode.d6.loss_dice: 1.8082  decode.d7.loss_cls: 0.5117  decode.d7.loss_mask: 1.6321  decode.d7.loss_dice: 1.8013  decode.d8.loss_cls: 0.4794  decode.d8.loss_mask: 1.5986  decode.d8.loss_dice: 1.7760
2025/03/27 11:00:12 - mmengine - INFO - Iter(train) [  500/20000]  base_lr: 9.7752e-05 lr: 9.7752e-05  eta: 2:48:33  time: 0.5364  data_time: 0.0253  memory: 6896  loss: 37.2396  decode.loss_cls: 0.3328  decode.loss_mask: 1.3185  decode.loss_dice: 1.9212  decode.d0.loss_cls: 2.5790  decode.d0.loss_mask: 1.2958  decode.d0.loss_dice: 1.9930  decode.d1.loss_cls: 0.2670  decode.d1.loss_mask: 1.2945  decode.d1.loss_dice: 1.8323  decode.d2.loss_cls: 0.2095  decode.d2.loss_mask: 1.3480  decode.d2.loss_dice: 1.8593  decode.d3.loss_cls: 0.2605  decode.d3.loss_mask: 1.3164  decode.d3.loss_dice: 1.8439  decode.d4.loss_cls: 0.2722  decode.d4.loss_mask: 1.3235  decode.d4.loss_dice: 1.8552  decode.d5.loss_cls: 0.2229  decode.d5.loss_mask: 1.3652  decode.d5.loss_dice: 1.9103  decode.d6.loss_cls: 0.2641  decode.d6.loss_mask: 1.4046  decode.d6.loss_dice: 1.9370  decode.d7.loss_cls: 0.3054  decode.d7.loss_mask: 1.3389  decode.d7.loss_dice: 1.8856  decode.d8.loss_cls: 0.2791  decode.d8.loss_mask: 1.3078  decode.d8.loss_dice: 1.8961
2025/03/27 11:00:38 - mmengine - INFO - Iter(train) [  550/20000]  base_lr: 9.7526e-05 lr: 9.7526e-05  eta: 2:48:18  time: 0.5039  data_time: 0.0200  memory: 6896  loss: 42.2046  decode.loss_cls: 0.5751  decode.loss_mask: 1.5638  decode.loss_dice: 2.0486  decode.d0.loss_cls: 2.5952  decode.d0.loss_mask: 1.5085  decode.d0.loss_dice: 2.0394  decode.d1.loss_cls: 0.3950  decode.d1.loss_mask: 1.5395  decode.d1.loss_dice: 1.9859  decode.d2.loss_cls: 0.3203  decode.d2.loss_mask: 1.5813  decode.d2.loss_dice: 1.9908  decode.d3.loss_cls: 0.3522  decode.d3.loss_mask: 1.6238  decode.d3.loss_dice: 1.9742  decode.d4.loss_cls: 0.3560  decode.d4.loss_mask: 1.5971  decode.d4.loss_dice: 2.0195  decode.d5.loss_cls: 0.4585  decode.d5.loss_mask: 1.5244  decode.d5.loss_dice: 1.9718  decode.d6.loss_cls: 0.4044  decode.d6.loss_mask: 1.5936  decode.d6.loss_dice: 2.0143  decode.d7.loss_cls: 0.5452  decode.d7.loss_mask: 1.5614  decode.d7.loss_dice: 1.9834  decode.d8.loss_cls: 0.5464  decode.d8.loss_mask: 1.5571  decode.d8.loss_dice: 1.9777
2025/03/27 11:01:05 - mmengine - INFO - Iter(train) [  600/20000]  base_lr: 9.7300e-05 lr: 9.7300e-05  eta: 2:48:08  time: 0.5360  data_time: 0.0253  memory: 6890  loss: 43.1756  decode.loss_cls: 0.4182  decode.loss_mask: 1.6448  decode.loss_dice: 2.1839  decode.d0.loss_cls: 2.4542  decode.d0.loss_mask: 1.5584  decode.d0.loss_dice: 2.1941  decode.d1.loss_cls: 0.4434  decode.d1.loss_mask: 1.5198  decode.d1.loss_dice: 2.0720  decode.d2.loss_cls: 0.3726  decode.d2.loss_mask: 1.5564  decode.d2.loss_dice: 2.1344  decode.d3.loss_cls: 0.3890  decode.d3.loss_mask: 1.4995  decode.d3.loss_dice: 2.0677  decode.d4.loss_cls: 0.4049  decode.d4.loss_mask: 1.4870  decode.d4.loss_dice: 2.0343  decode.d5.loss_cls: 0.4214  decode.d5.loss_mask: 1.5660  decode.d5.loss_dice: 2.0752  decode.d6.loss_cls: 0.4076  decode.d6.loss_mask: 1.6441  decode.d6.loss_dice: 2.1116  decode.d7.loss_cls: 0.5647  decode.d7.loss_mask: 1.6121  decode.d7.loss_dice: 2.0744  decode.d8.loss_cls: 0.5514  decode.d8.loss_mask: 1.5900  decode.d8.loss_dice: 2.1226
2025/03/27 11:01:31 - mmengine - INFO - Iter(train) [  650/20000]  base_lr: 9.7075e-05 lr: 9.7075e-05  eta: 2:47:44  time: 0.5064  data_time: 0.0200  memory: 6893  loss: 33.5670  decode.loss_cls: 0.2801  decode.loss_mask: 1.1857  decode.loss_dice: 1.7092  decode.d0.loss_cls: 2.2939  decode.d0.loss_mask: 1.1334  decode.d0.loss_dice: 1.7734  decode.d1.loss_cls: 0.2034  decode.d1.loss_mask: 1.1609  decode.d1.loss_dice: 1.6496  decode.d2.loss_cls: 0.2045  decode.d2.loss_mask: 1.1992  decode.d2.loss_dice: 1.7263  decode.d3.loss_cls: 0.2185  decode.d3.loss_mask: 1.2080  decode.d3.loss_dice: 1.7135  decode.d4.loss_cls: 0.2600  decode.d4.loss_mask: 1.1844  decode.d4.loss_dice: 1.7238  decode.d5.loss_cls: 0.2788  decode.d5.loss_mask: 1.1954  decode.d5.loss_dice: 1.7037  decode.d6.loss_cls: 0.2649  decode.d6.loss_mask: 1.1984  decode.d6.loss_dice: 1.6884  decode.d7.loss_cls: 0.2708  decode.d7.loss_mask: 1.1762  decode.d7.loss_dice: 1.7120  decode.d8.loss_cls: 0.2862  decode.d8.loss_mask: 1.2183  decode.d8.loss_dice: 1.7462
2025/03/27 11:01:56 - mmengine - INFO - Iter(train) [  700/20000]  base_lr: 9.6849e-05 lr: 9.6849e-05  eta: 2:46:59  time: 0.5046  data_time: 0.0200  memory: 6891  loss: 39.0929  decode.loss_cls: 0.3897  decode.loss_mask: 1.5810  decode.loss_dice: 1.7691  decode.d0.loss_cls: 2.2441  decode.d0.loss_mask: 1.5145  decode.d0.loss_dice: 1.8145  decode.d1.loss_cls: 0.4792  decode.d1.loss_mask: 1.5034  decode.d1.loss_dice: 1.7892  decode.d2.loss_cls: 0.3425  decode.d2.loss_mask: 1.5679  decode.d2.loss_dice: 1.7740  decode.d3.loss_cls: 0.4091  decode.d3.loss_mask: 1.5208  decode.d3.loss_dice: 1.7667  decode.d4.loss_cls: 0.3783  decode.d4.loss_mask: 1.5471  decode.d4.loss_dice: 1.7241  decode.d5.loss_cls: 0.3974  decode.d5.loss_mask: 1.5383  decode.d5.loss_dice: 1.7179  decode.d6.loss_cls: 0.4480  decode.d6.loss_mask: 1.5778  decode.d6.loss_dice: 1.7692  decode.d7.loss_cls: 0.4123  decode.d7.loss_mask: 1.5744  decode.d7.loss_dice: 1.7987  decode.d8.loss_cls: 0.3598  decode.d8.loss_mask: 1.5824  decode.d8.loss_dice: 1.8014
2025/03/27 11:02:21 - mmengine - INFO - Iter(train) [  750/20000]  base_lr: 9.6623e-05 lr: 9.6623e-05  eta: 2:46:14  time: 0.5073  data_time: 0.0201  memory: 6892  loss: 39.1564  decode.loss_cls: 0.3829  decode.loss_mask: 1.5127  decode.loss_dice: 1.8531  decode.d0.loss_cls: 2.1449  decode.d0.loss_mask: 1.4992  decode.d0.loss_dice: 1.9265  decode.d1.loss_cls: 0.3869  decode.d1.loss_mask: 1.4264  decode.d1.loss_dice: 1.8246  decode.d2.loss_cls: 0.3397  decode.d2.loss_mask: 1.5065  decode.d2.loss_dice: 1.8731  decode.d3.loss_cls: 0.3471  decode.d3.loss_mask: 1.5144  decode.d3.loss_dice: 1.8362  decode.d4.loss_cls: 0.3880  decode.d4.loss_mask: 1.5333  decode.d4.loss_dice: 1.8403  decode.d5.loss_cls: 0.4077  decode.d5.loss_mask: 1.5147  decode.d5.loss_dice: 1.8266  decode.d6.loss_cls: 0.4064  decode.d6.loss_mask: 1.5055  decode.d6.loss_dice: 1.8367  decode.d7.loss_cls: 0.3825  decode.d7.loss_mask: 1.5638  decode.d7.loss_dice: 1.8247  decode.d8.loss_cls: 0.3920  decode.d8.loss_mask: 1.5244  decode.d8.loss_dice: 1.8358
2025/03/27 11:02:46 - mmengine - INFO - Iter(train) [  800/20000]  base_lr: 9.6397e-05 lr: 9.6397e-05  eta: 2:45:32  time: 0.5052  data_time: 0.0200  memory: 6887  loss: 35.6035  decode.loss_cls: 0.2049  decode.loss_mask: 1.4269  decode.loss_dice: 1.7384  decode.d0.loss_cls: 2.0322  decode.d0.loss_mask: 1.4196  decode.d0.loss_dice: 1.7925  decode.d1.loss_cls: 0.2682  decode.d1.loss_mask: 1.4328  decode.d1.loss_dice: 1.7286  decode.d2.loss_cls: 0.1834  decode.d2.loss_mask: 1.4550  decode.d2.loss_dice: 1.7184  decode.d3.loss_cls: 0.1849  decode.d3.loss_mask: 1.4570  decode.d3.loss_dice: 1.6994  decode.d4.loss_cls: 0.2161  decode.d4.loss_mask: 1.4438  decode.d4.loss_dice: 1.7071  decode.d5.loss_cls: 0.1977  decode.d5.loss_mask: 1.4465  decode.d5.loss_dice: 1.7101  decode.d6.loss_cls: 0.1929  decode.d6.loss_mask: 1.4344  decode.d6.loss_dice: 1.7365  decode.d7.loss_cls: 0.1846  decode.d7.loss_mask: 1.4495  decode.d7.loss_dice: 1.7521  decode.d8.loss_cls: 0.1613  decode.d8.loss_mask: 1.4669  decode.d8.loss_dice: 1.7616
2025/03/27 11:03:12 - mmengine - INFO - Iter(train) [  850/20000]  base_lr: 9.6171e-05 lr: 9.6171e-05  eta: 2:44:51  time: 0.5046  data_time: 0.0202  memory: 6894  loss: 38.7735  decode.loss_cls: 0.5012  decode.loss_mask: 1.4305  decode.loss_dice: 1.8480  decode.d0.loss_cls: 2.1557  decode.d0.loss_mask: 1.3907  decode.d0.loss_dice: 1.8992  decode.d1.loss_cls: 0.5287  decode.d1.loss_mask: 1.3865  decode.d1.loss_dice: 1.8164  decode.d2.loss_cls: 0.4600  decode.d2.loss_mask: 1.3929  decode.d2.loss_dice: 1.8157  decode.d3.loss_cls: 0.4174  decode.d3.loss_mask: 1.3951  decode.d3.loss_dice: 1.8181  decode.d4.loss_cls: 0.5256  decode.d4.loss_mask: 1.4077  decode.d4.loss_dice: 1.8096  decode.d5.loss_cls: 0.4870  decode.d5.loss_mask: 1.4001  decode.d5.loss_dice: 1.8387  decode.d6.loss_cls: 0.4448  decode.d6.loss_mask: 1.3911  decode.d6.loss_dice: 1.7920  decode.d7.loss_cls: 0.4059  decode.d7.loss_mask: 1.4323  decode.d7.loss_dice: 1.8201  decode.d8.loss_cls: 0.4694  decode.d8.loss_mask: 1.4318  decode.d8.loss_dice: 1.8613
2025/03/27 11:03:37 - mmengine - INFO - Iter(train) [  900/20000]  base_lr: 9.5945e-05 lr: 9.5945e-05  eta: 2:44:13  time: 0.5063  data_time: 0.0202  memory: 6889  loss: 38.8614  decode.loss_cls: 0.3075  decode.loss_mask: 1.5308  decode.loss_dice: 1.9350  decode.d0.loss_cls: 1.8890  decode.d0.loss_mask: 1.4771  decode.d0.loss_dice: 1.8898  decode.d1.loss_cls: 0.2939  decode.d1.loss_mask: 1.5265  decode.d1.loss_dice: 1.8911  decode.d2.loss_cls: 0.2512  decode.d2.loss_mask: 1.5566  decode.d2.loss_dice: 1.9181  decode.d3.loss_cls: 0.2401  decode.d3.loss_mask: 1.5369  decode.d3.loss_dice: 1.9205  decode.d4.loss_cls: 0.3259  decode.d4.loss_mask: 1.5403  decode.d4.loss_dice: 1.9168  decode.d5.loss_cls: 0.2908  decode.d5.loss_mask: 1.5673  decode.d5.loss_dice: 1.9145  decode.d6.loss_cls: 0.3673  decode.d6.loss_mask: 1.4940  decode.d6.loss_dice: 1.8676  decode.d7.loss_cls: 0.3381  decode.d7.loss_mask: 1.5104  decode.d7.loss_dice: 1.8698  decode.d8.loss_cls: 0.3533  decode.d8.loss_mask: 1.4778  decode.d8.loss_dice: 1.8632
2025/03/27 11:04:02 - mmengine - INFO - Iter(train) [  950/20000]  base_lr: 9.5719e-05 lr: 9.5719e-05  eta: 2:43:42  time: 0.5067  data_time: 0.0202  memory: 6892  loss: 37.1569  decode.loss_cls: 0.2664  decode.loss_mask: 1.4020  decode.loss_dice: 1.8741  decode.d0.loss_cls: 1.8145  decode.d0.loss_mask: 1.4221  decode.d0.loss_dice: 1.8896  decode.d1.loss_cls: 0.2751  decode.d1.loss_mask: 1.4196  decode.d1.loss_dice: 1.9025  decode.d2.loss_cls: 0.2269  decode.d2.loss_mask: 1.4056  decode.d2.loss_dice: 1.8987  decode.d3.loss_cls: 0.2431  decode.d3.loss_mask: 1.4050  decode.d3.loss_dice: 1.8929  decode.d4.loss_cls: 0.2710  decode.d4.loss_mask: 1.3971  decode.d4.loss_dice: 1.9048  decode.d5.loss_cls: 0.3089  decode.d5.loss_mask: 1.3695  decode.d5.loss_dice: 1.8580  decode.d6.loss_cls: 0.2706  decode.d6.loss_mask: 1.3920  decode.d6.loss_dice: 1.8841  decode.d7.loss_cls: 0.2588  decode.d7.loss_mask: 1.4211  decode.d7.loss_dice: 1.8975  decode.d8.loss_cls: 0.2875  decode.d8.loss_mask: 1.4233  decode.d8.loss_dice: 1.8742
2025/03/27 11:04:28 - mmengine - INFO - Exp name: pr2vi_20250327_105544
2025/03/27 11:04:28 - mmengine - INFO - Iter(train) [ 1000/20000]  base_lr: 9.5493e-05 lr: 9.5493e-05  eta: 2:43:08  time: 0.5121  data_time: 0.0218  memory: 6887  loss: 39.2624  decode.loss_cls: 0.3083  decode.loss_mask: 1.5904  decode.loss_dice: 1.9151  decode.d0.loss_cls: 1.8182  decode.d0.loss_mask: 1.5111  decode.d0.loss_dice: 1.9242  decode.d1.loss_cls: 0.3613  decode.d1.loss_mask: 1.4997  decode.d1.loss_dice: 1.8658  decode.d2.loss_cls: 0.3609  decode.d2.loss_mask: 1.5377  decode.d2.loss_dice: 1.9120  decode.d3.loss_cls: 0.3664  decode.d3.loss_mask: 1.5023  decode.d3.loss_dice: 1.8568  decode.d4.loss_cls: 0.3861  decode.d4.loss_mask: 1.4700  decode.d4.loss_dice: 1.8200  decode.d5.loss_cls: 0.3834  decode.d5.loss_mask: 1.5799  decode.d5.loss_dice: 1.8700  decode.d6.loss_cls: 0.3933  decode.d6.loss_mask: 1.5592  decode.d6.loss_dice: 1.8748  decode.d7.loss_cls: 0.4287  decode.d7.loss_mask: 1.5246  decode.d7.loss_dice: 1.8305  decode.d8.loss_cls: 0.3261  decode.d8.loss_mask: 1.5692  decode.d8.loss_dice: 1.9163
2025/03/27 11:04:54 - mmengine - INFO - Iter(train) [ 1050/20000]  base_lr: 9.5267e-05 lr: 9.5267e-05  eta: 2:42:50  time: 0.5307  data_time: 0.0235  memory: 6892  loss: 41.4371  decode.loss_cls: 0.2438  decode.loss_mask: 1.7018  decode.loss_dice: 2.0016  decode.d0.loss_cls: 1.6555  decode.d0.loss_mask: 1.7130  decode.d0.loss_dice: 2.0537  decode.d1.loss_cls: 0.2739  decode.d1.loss_mask: 1.7497  decode.d1.loss_dice: 2.0201  decode.d2.loss_cls: 0.2358  decode.d2.loss_mask: 1.7873  decode.d2.loss_dice: 1.9979  decode.d3.loss_cls: 0.2609  decode.d3.loss_mask: 1.7684  decode.d3.loss_dice: 2.0162  decode.d4.loss_cls: 0.3258  decode.d4.loss_mask: 1.7844  decode.d4.loss_dice: 1.9609  decode.d5.loss_cls: 0.3082  decode.d5.loss_mask: 1.7705  decode.d5.loss_dice: 1.9760  decode.d6.loss_cls: 0.3067  decode.d6.loss_mask: 1.7195  decode.d6.loss_dice: 1.9803  decode.d7.loss_cls: 0.2224  decode.d7.loss_mask: 1.7474  decode.d7.loss_dice: 1.9630  decode.d8.loss_cls: 0.2069  decode.d8.loss_mask: 1.6996  decode.d8.loss_dice: 1.9858
2025/03/27 11:05:20 - mmengine - INFO - Iter(train) [ 1100/20000]  base_lr: 9.5040e-05 lr: 9.5040e-05  eta: 2:42:34  time: 0.5055  data_time: 0.0205  memory: 6892  loss: 35.7121  decode.loss_cls: 0.3244  decode.loss_mask: 1.4272  decode.loss_dice: 1.6775  decode.d0.loss_cls: 1.6406  decode.d0.loss_mask: 1.4041  decode.d0.loss_dice: 1.7317  decode.d1.loss_cls: 0.3464  decode.d1.loss_mask: 1.3949  decode.d1.loss_dice: 1.6824  decode.d2.loss_cls: 0.3401  decode.d2.loss_mask: 1.4153  decode.d2.loss_dice: 1.6889  decode.d3.loss_cls: 0.2471  decode.d3.loss_mask: 1.4496  decode.d3.loss_dice: 1.6533  decode.d4.loss_cls: 0.3438  decode.d4.loss_mask: 1.4349  decode.d4.loss_dice: 1.7070  decode.d5.loss_cls: 0.3585  decode.d5.loss_mask: 1.4355  decode.d5.loss_dice: 1.6719  decode.d6.loss_cls: 0.3073  decode.d6.loss_mask: 1.4543  decode.d6.loss_dice: 1.6831  decode.d7.loss_cls: 0.2906  decode.d7.loss_mask: 1.4536  decode.d7.loss_dice: 1.7034  decode.d8.loss_cls: 0.3290  decode.d8.loss_mask: 1.4424  decode.d8.loss_dice: 1.6732
2025/03/27 11:05:47 - mmengine - INFO - Iter(train) [ 1150/20000]  base_lr: 9.4814e-05 lr: 9.4814e-05  eta: 2:42:17  time: 0.5028  data_time: 0.0201  memory: 6892  loss: 34.1186  decode.loss_cls: 0.2362  decode.loss_mask: 1.4310  decode.loss_dice: 1.6413  decode.d0.loss_cls: 1.5592  decode.d0.loss_mask: 1.4215  decode.d0.loss_dice: 1.6342  decode.d1.loss_cls: 0.2488  decode.d1.loss_mask: 1.3793  decode.d1.loss_dice: 1.5753  decode.d2.loss_cls: 0.2741  decode.d2.loss_mask: 1.3607  decode.d2.loss_dice: 1.5546  decode.d3.loss_cls: 0.2598  decode.d3.loss_mask: 1.4022  decode.d3.loss_dice: 1.5967  decode.d4.loss_cls: 0.3117  decode.d4.loss_mask: 1.4366  decode.d4.loss_dice: 1.6271  decode.d5.loss_cls: 0.3047  decode.d5.loss_mask: 1.3990  decode.d5.loss_dice: 1.6156  decode.d6.loss_cls: 0.2556  decode.d6.loss_mask: 1.4643  decode.d6.loss_dice: 1.5960  decode.d7.loss_cls: 0.2375  decode.d7.loss_mask: 1.4462  decode.d7.loss_dice: 1.6031  decode.d8.loss_cls: 0.2285  decode.d8.loss_mask: 1.4079  decode.d8.loss_dice: 1.6098
2025/03/27 11:06:12 - mmengine - INFO - Iter(train) [ 1200/20000]  base_lr: 9.4588e-05 lr: 9.4588e-05  eta: 2:41:44  time: 0.5049  data_time: 0.0203  memory: 6891  loss: 38.4840  decode.loss_cls: 0.3460  decode.loss_mask: 1.5445  decode.loss_dice: 1.8057  decode.d0.loss_cls: 1.5572  decode.d0.loss_mask: 1.5274  decode.d0.loss_dice: 1.8331  decode.d1.loss_cls: 0.3980  decode.d1.loss_mask: 1.5639  decode.d1.loss_dice: 1.8192  decode.d2.loss_cls: 0.4465  decode.d2.loss_mask: 1.5063  decode.d2.loss_dice: 1.7640  decode.d3.loss_cls: 0.3316  decode.d3.loss_mask: 1.5411  decode.d3.loss_dice: 1.8194  decode.d4.loss_cls: 0.3437  decode.d4.loss_mask: 1.5440  decode.d4.loss_dice: 1.8308  decode.d5.loss_cls: 0.3503  decode.d5.loss_mask: 1.5637  decode.d5.loss_dice: 1.8270  decode.d6.loss_cls: 0.4109  decode.d6.loss_mask: 1.5409  decode.d6.loss_dice: 1.8081  decode.d7.loss_cls: 0.4044  decode.d7.loss_mask: 1.5222  decode.d7.loss_dice: 1.8029  decode.d8.loss_cls: 0.3495  decode.d8.loss_mask: 1.5640  decode.d8.loss_dice: 1.8178
2025/03/27 11:06:37 - mmengine - INFO - Iter(train) [ 1250/20000]  base_lr: 9.4361e-05 lr: 9.4361e-05  eta: 2:41:09  time: 0.5039  data_time: 0.0203  memory: 6893  loss: 34.5195  decode.loss_cls: 0.1565  decode.loss_mask: 1.4484  decode.loss_dice: 1.7508  decode.d0.loss_cls: 1.3229  decode.d0.loss_mask: 1.4041  decode.d0.loss_dice: 1.7719  decode.d1.loss_cls: 0.1632  decode.d1.loss_mask: 1.4422  decode.d1.loss_dice: 1.7898  decode.d2.loss_cls: 0.1382  decode.d2.loss_mask: 1.4505  decode.d2.loss_dice: 1.7517  decode.d3.loss_cls: 0.1339  decode.d3.loss_mask: 1.4487  decode.d3.loss_dice: 1.7371  decode.d4.loss_cls: 0.1404  decode.d4.loss_mask: 1.4340  decode.d4.loss_dice: 1.7466  decode.d5.loss_cls: 0.1502  decode.d5.loss_mask: 1.4317  decode.d5.loss_dice: 1.7585  decode.d6.loss_cls: 0.1636  decode.d6.loss_mask: 1.4161  decode.d6.loss_dice: 1.7143  decode.d7.loss_cls: 0.1635  decode.d7.loss_mask: 1.4471  decode.d7.loss_dice: 1.7246  decode.d8.loss_cls: 0.1766  decode.d8.loss_mask: 1.4388  decode.d8.loss_dice: 1.7036
2025/03/27 11:07:02 - mmengine - INFO - Iter(train) [ 1300/20000]  base_lr: 9.4135e-05 lr: 9.4135e-05  eta: 2:40:35  time: 0.5047  data_time: 0.0209  memory: 6886  loss: 35.2100  decode.loss_cls: 0.2307  decode.loss_mask: 1.6373  decode.loss_dice: 1.6059  decode.d0.loss_cls: 1.4291  decode.d0.loss_mask: 1.5393  decode.d0.loss_dice: 1.5488  decode.d1.loss_cls: 0.2602  decode.d1.loss_mask: 1.5357  decode.d1.loss_dice: 1.4967  decode.d2.loss_cls: 0.2105  decode.d2.loss_mask: 1.6444  decode.d2.loss_dice: 1.5115  decode.d3.loss_cls: 0.2317  decode.d3.loss_mask: 1.6242  decode.d3.loss_dice: 1.5475  decode.d4.loss_cls: 0.2614  decode.d4.loss_mask: 1.5899  decode.d4.loss_dice: 1.5294  decode.d5.loss_cls: 0.2354  decode.d5.loss_mask: 1.6051  decode.d5.loss_dice: 1.5631  decode.d6.loss_cls: 0.2396  decode.d6.loss_mask: 1.6076  decode.d6.loss_dice: 1.5786  decode.d7.loss_cls: 0.2378  decode.d7.loss_mask: 1.6624  decode.d7.loss_dice: 1.5732  decode.d8.loss_cls: 0.2594  decode.d8.loss_mask: 1.6334  decode.d8.loss_dice: 1.5802
2025/03/27 11:07:28 - mmengine - INFO - Iter(train) [ 1350/20000]  base_lr: 9.3908e-05 lr: 9.3908e-05  eta: 2:40:01  time: 0.5036  data_time: 0.0203  memory: 6887  loss: 38.1847  decode.loss_cls: 0.2458  decode.loss_mask: 1.6522  decode.loss_dice: 1.8391  decode.d0.loss_cls: 1.2546  decode.d0.loss_mask: 1.6342  decode.d0.loss_dice: 1.8789  decode.d1.loss_cls: 0.1890  decode.d1.loss_mask: 1.6760  decode.d1.loss_dice: 1.8673  decode.d2.loss_cls: 0.1825  decode.d2.loss_mask: 1.6681  decode.d2.loss_dice: 1.8249  decode.d3.loss_cls: 0.2071  decode.d3.loss_mask: 1.6555  decode.d3.loss_dice: 1.8156  decode.d4.loss_cls: 0.2041  decode.d4.loss_mask: 1.6490  decode.d4.loss_dice: 1.8468  decode.d5.loss_cls: 0.2184  decode.d5.loss_mask: 1.6412  decode.d5.loss_dice: 1.8314  decode.d6.loss_cls: 0.2403  decode.d6.loss_mask: 1.6903  decode.d6.loss_dice: 1.8378  decode.d7.loss_cls: 0.2205  decode.d7.loss_mask: 1.6677  decode.d7.loss_dice: 1.8376  decode.d8.loss_cls: 0.2327  decode.d8.loss_mask: 1.6369  decode.d8.loss_dice: 1.8392
2025/03/27 11:07:53 - mmengine - INFO - Iter(train) [ 1400/20000]  base_lr: 9.3682e-05 lr: 9.3682e-05  eta: 2:39:28  time: 0.5032  data_time: 0.0203  memory: 6890  loss: 32.2926  decode.loss_cls: 0.1721  decode.loss_mask: 1.3776  decode.loss_dice: 1.5748  decode.d0.loss_cls: 1.1845  decode.d0.loss_mask: 1.4019  decode.d0.loss_dice: 1.6257  decode.d1.loss_cls: 0.1548  decode.d1.loss_mask: 1.4095  decode.d1.loss_dice: 1.5870  decode.d2.loss_cls: 0.1714  decode.d2.loss_mask: 1.3911  decode.d2.loss_dice: 1.5568  decode.d3.loss_cls: 0.1811  decode.d3.loss_mask: 1.3795  decode.d3.loss_dice: 1.5438  decode.d4.loss_cls: 0.1573  decode.d4.loss_mask: 1.3686  decode.d4.loss_dice: 1.5601  decode.d5.loss_cls: 0.1669  decode.d5.loss_mask: 1.3998  decode.d5.loss_dice: 1.5597  decode.d6.loss_cls: 0.1402  decode.d6.loss_mask: 1.3972  decode.d6.loss_dice: 1.5872  decode.d7.loss_cls: 0.1448  decode.d7.loss_mask: 1.4052  decode.d7.loss_dice: 1.5557  decode.d8.loss_cls: 0.1590  decode.d8.loss_mask: 1.4175  decode.d8.loss_dice: 1.5616
2025/03/27 11:08:18 - mmengine - INFO - Iter(train) [ 1450/20000]  base_lr: 9.3455e-05 lr: 9.3455e-05  eta: 2:38:55  time: 0.5035  data_time: 0.0203  memory: 6892  loss: 34.4059  decode.loss_cls: 0.3408  decode.loss_mask: 1.3929  decode.loss_dice: 1.6175  decode.d0.loss_cls: 1.2019  decode.d0.loss_mask: 1.4029  decode.d0.loss_dice: 1.6571  decode.d1.loss_cls: 0.2640  decode.d1.loss_mask: 1.4262  decode.d1.loss_dice: 1.6492  decode.d2.loss_cls: 0.2999  decode.d2.loss_mask: 1.3961  decode.d2.loss_dice: 1.6245  decode.d3.loss_cls: 0.3399  decode.d3.loss_mask: 1.3836  decode.d3.loss_dice: 1.5768  decode.d4.loss_cls: 0.3424  decode.d4.loss_mask: 1.4027  decode.d4.loss_dice: 1.6176  decode.d5.loss_cls: 0.3719  decode.d5.loss_mask: 1.3994  decode.d5.loss_dice: 1.6215  decode.d6.loss_cls: 0.3705  decode.d6.loss_mask: 1.3897  decode.d6.loss_dice: 1.5825  decode.d7.loss_cls: 0.3483  decode.d7.loss_mask: 1.4131  decode.d7.loss_dice: 1.6005  decode.d8.loss_cls: 0.3410  decode.d8.loss_mask: 1.4128  decode.d8.loss_dice: 1.6186
2025/03/27 11:08:43 - mmengine - INFO - Iter(train) [ 1500/20000]  base_lr: 9.3228e-05 lr: 9.3228e-05  eta: 2:38:23  time: 0.5034  data_time: 0.0202  memory: 6889  loss: 33.5517  decode.loss_cls: 0.2291  decode.loss_mask: 1.3850  decode.loss_dice: 1.7165  decode.d0.loss_cls: 1.0634  decode.d0.loss_mask: 1.3846  decode.d0.loss_dice: 1.7706  decode.d1.loss_cls: 0.2533  decode.d1.loss_mask: 1.3579  decode.d1.loss_dice: 1.7014  decode.d2.loss_cls: 0.1737  decode.d2.loss_mask: 1.3801  decode.d2.loss_dice: 1.6652  decode.d3.loss_cls: 0.2060  decode.d3.loss_mask: 1.3433  decode.d3.loss_dice: 1.6602  decode.d4.loss_cls: 0.2407  decode.d4.loss_mask: 1.3424  decode.d4.loss_dice: 1.6792  decode.d5.loss_cls: 0.1868  decode.d5.loss_mask: 1.3584  decode.d5.loss_dice: 1.6891  decode.d6.loss_cls: 0.1929  decode.d6.loss_mask: 1.3613  decode.d6.loss_dice: 1.6587  decode.d7.loss_cls: 0.2348  decode.d7.loss_mask: 1.3543  decode.d7.loss_dice: 1.6799  decode.d8.loss_cls: 0.2392  decode.d8.loss_mask: 1.3654  decode.d8.loss_dice: 1.6780
2025/03/27 11:09:08 - mmengine - INFO - Iter(train) [ 1550/20000]  base_lr: 9.3001e-05 lr: 9.3001e-05  eta: 2:37:51  time: 0.5031  data_time: 0.0203  memory: 6886  loss: 34.0616  decode.loss_cls: 0.3404  decode.loss_mask: 1.4266  decode.loss_dice: 1.4995  decode.d0.loss_cls: 1.1631  decode.d0.loss_mask: 1.4360  decode.d0.loss_dice: 1.5749  decode.d1.loss_cls: 0.4780  decode.d1.loss_mask: 1.3532  decode.d1.loss_dice: 1.5344  decode.d2.loss_cls: 0.4298  decode.d2.loss_mask: 1.3854  decode.d2.loss_dice: 1.5580  decode.d3.loss_cls: 0.3871  decode.d3.loss_mask: 1.3899  decode.d3.loss_dice: 1.5140  decode.d4.loss_cls: 0.4119  decode.d4.loss_mask: 1.4138  decode.d4.loss_dice: 1.5472  decode.d5.loss_cls: 0.3791  decode.d5.loss_mask: 1.4323  decode.d5.loss_dice: 1.5180  decode.d6.loss_cls: 0.3529  decode.d6.loss_mask: 1.4613  decode.d6.loss_dice: 1.5098  decode.d7.loss_cls: 0.3933  decode.d7.loss_mask: 1.4074  decode.d7.loss_dice: 1.4591  decode.d8.loss_cls: 0.3592  decode.d8.loss_mask: 1.4636  decode.d8.loss_dice: 1.4823
2025/03/27 11:09:33 - mmengine - INFO - Iter(train) [ 1600/20000]  base_lr: 9.2774e-05 lr: 9.2774e-05  eta: 2:37:20  time: 0.5031  data_time: 0.0202  memory: 6895  loss: 32.0590  decode.loss_cls: 0.2300  decode.loss_mask: 1.2803  decode.loss_dice: 1.6114  decode.d0.loss_cls: 0.9656  decode.d0.loss_mask: 1.2708  decode.d0.loss_dice: 1.6790  decode.d1.loss_cls: 0.2613  decode.d1.loss_mask: 1.2740  decode.d1.loss_dice: 1.6217  decode.d2.loss_cls: 0.2341  decode.d2.loss_mask: 1.2979  decode.d2.loss_dice: 1.6108  decode.d3.loss_cls: 0.2471  decode.d3.loss_mask: 1.2599  decode.d3.loss_dice: 1.5857  decode.d4.loss_cls: 0.3012  decode.d4.loss_mask: 1.2626  decode.d4.loss_dice: 1.5799  decode.d5.loss_cls: 0.2897  decode.d5.loss_mask: 1.2845  decode.d5.loss_dice: 1.5660  decode.d6.loss_cls: 0.2912  decode.d6.loss_mask: 1.2554  decode.d6.loss_dice: 1.6028  decode.d7.loss_cls: 0.2240  decode.d7.loss_mask: 1.2517  decode.d7.loss_dice: 1.6097  decode.d8.loss_cls: 0.2333  decode.d8.loss_mask: 1.2659  decode.d8.loss_dice: 1.6116
2025/03/27 11:09:59 - mmengine - INFO - Iter(train) [ 1650/20000]  base_lr: 9.2548e-05 lr: 9.2548e-05  eta: 2:36:55  time: 0.5219  data_time: 0.0230  memory: 6897  loss: 31.5216  decode.loss_cls: 0.2166  decode.loss_mask: 1.2842  decode.loss_dice: 1.6243  decode.d0.loss_cls: 0.9289  decode.d0.loss_mask: 1.2875  decode.d0.loss_dice: 1.6426  decode.d1.loss_cls: 0.2359  decode.d1.loss_mask: 1.2723  decode.d1.loss_dice: 1.6013  decode.d2.loss_cls: 0.2311  decode.d2.loss_mask: 1.2668  decode.d2.loss_dice: 1.6095  decode.d3.loss_cls: 0.1857  decode.d3.loss_mask: 1.2554  decode.d3.loss_dice: 1.5519  decode.d4.loss_cls: 0.2535  decode.d4.loss_mask: 1.2523  decode.d4.loss_dice: 1.5868  decode.d5.loss_cls: 0.1883  decode.d5.loss_mask: 1.2658  decode.d5.loss_dice: 1.6257  decode.d6.loss_cls: 0.2012  decode.d6.loss_mask: 1.2871  decode.d6.loss_dice: 1.5827  decode.d7.loss_cls: 0.2057  decode.d7.loss_mask: 1.2602  decode.d7.loss_dice: 1.5467  decode.d8.loss_cls: 0.2212  decode.d8.loss_mask: 1.2577  decode.d8.loss_dice: 1.5927
2025/03/27 11:10:24 - mmengine - INFO - Iter(train) [ 1700/20000]  base_lr: 9.2321e-05 lr: 9.2321e-05  eta: 2:36:26  time: 0.5037  data_time: 0.0201  memory: 6886  loss: 36.1205  decode.loss_cls: 0.2456  decode.loss_mask: 1.4732  decode.loss_dice: 1.8370  decode.d0.loss_cls: 1.0221  decode.d0.loss_mask: 1.4724  decode.d0.loss_dice: 1.8123  decode.d1.loss_cls: 0.2580  decode.d1.loss_mask: 1.4578  decode.d1.loss_dice: 1.8346  decode.d2.loss_cls: 0.2197  decode.d2.loss_mask: 1.4773  decode.d2.loss_dice: 1.8472  decode.d3.loss_cls: 0.2236  decode.d3.loss_mask: 1.4713  decode.d3.loss_dice: 1.8269  decode.d4.loss_cls: 0.2798  decode.d4.loss_mask: 1.4726  decode.d4.loss_dice: 1.7902  decode.d5.loss_cls: 0.2152  decode.d5.loss_mask: 1.4586  decode.d5.loss_dice: 1.8477  decode.d6.loss_cls: 0.1959  decode.d6.loss_mask: 1.4755  decode.d6.loss_dice: 1.8234  decode.d7.loss_cls: 0.1922  decode.d7.loss_mask: 1.4767  decode.d7.loss_dice: 1.8488  decode.d8.loss_cls: 0.2939  decode.d8.loss_mask: 1.4534  decode.d8.loss_dice: 1.8179
2025/03/27 11:10:39 - mmengine - INFO - Exp name: pr2vi_20250327_105544
2025/03/27 11:10:51 - mmengine - INFO - Iter(train) [ 1750/20000]  base_lr: 9.2094e-05 lr: 9.2094e-05  eta: 2:36:08  time: 0.5332  data_time: 0.0253  memory: 6893  loss: 34.6465  decode.loss_cls: 0.4823  decode.loss_mask: 1.1460  decode.loss_dice: 1.8539  decode.d0.loss_cls: 0.9677  decode.d0.loss_mask: 1.0930  decode.d0.loss_dice: 1.8501  decode.d1.loss_cls: 0.3794  decode.d1.loss_mask: 1.1128  decode.d1.loss_dice: 1.8023  decode.d2.loss_cls: 0.3902  decode.d2.loss_mask: 1.1238  decode.d2.loss_dice: 1.7779  decode.d3.loss_cls: 0.4081  decode.d3.loss_mask: 1.1695  decode.d3.loss_dice: 1.8199  decode.d4.loss_cls: 0.4158  decode.d4.loss_mask: 1.1633  decode.d4.loss_dice: 1.8907  decode.d5.loss_cls: 0.4667  decode.d5.loss_mask: 1.1496  decode.d5.loss_dice: 1.8606  decode.d6.loss_cls: 0.4161  decode.d6.loss_mask: 1.1548  decode.d6.loss_dice: 1.8739  decode.d7.loss_cls: 0.4092  decode.d7.loss_mask: 1.1590  decode.d7.loss_dice: 1.8589  decode.d8.loss_cls: 0.4746  decode.d8.loss_mask: 1.1621  decode.d8.loss_dice: 1.8143
2025/03/27 11:11:18 - mmengine - INFO - Iter(train) [ 1800/20000]  base_lr: 9.1866e-05 lr: 9.1866e-05  eta: 2:35:54  time: 0.5361  data_time: 0.0257  memory: 6888  loss: 30.9372  decode.loss_cls: 0.2549  decode.loss_mask: 1.2391  decode.loss_dice: 1.5471  decode.d0.loss_cls: 0.7790  decode.d0.loss_mask: 1.2677  decode.d0.loss_dice: 1.6018  decode.d1.loss_cls: 0.2029  decode.d1.loss_mask: 1.2489  decode.d1.loss_dice: 1.5987  decode.d2.loss_cls: 0.1961  decode.d2.loss_mask: 1.2427  decode.d2.loss_dice: 1.5670  decode.d3.loss_cls: 0.2180  decode.d3.loss_mask: 1.2308  decode.d3.loss_dice: 1.5867  decode.d4.loss_cls: 0.2136  decode.d4.loss_mask: 1.2617  decode.d4.loss_dice: 1.5874  decode.d5.loss_cls: 0.1900  decode.d5.loss_mask: 1.2899  decode.d5.loss_dice: 1.6284  decode.d6.loss_cls: 0.1904  decode.d6.loss_mask: 1.2352  decode.d6.loss_dice: 1.5381  decode.d7.loss_cls: 0.2454  decode.d7.loss_mask: 1.2401  decode.d7.loss_dice: 1.5249  decode.d8.loss_cls: 0.1983  decode.d8.loss_mask: 1.2549  decode.d8.loss_dice: 1.5573
2025/03/27 11:11:44 - mmengine - INFO - Iter(train) [ 1850/20000]  base_lr: 9.1639e-05 lr: 9.1639e-05  eta: 2:35:38  time: 0.5335  data_time: 0.0257  memory: 6892  loss: 35.7832  decode.loss_cls: 0.3623  decode.loss_mask: 1.4455  decode.loss_dice: 1.7756  decode.d0.loss_cls: 0.8797  decode.d0.loss_mask: 1.3909  decode.d0.loss_dice: 1.7439  decode.d1.loss_cls: 0.2931  decode.d1.loss_mask: 1.4498  decode.d1.loss_dice: 1.7350  decode.d2.loss_cls: 0.3568  decode.d2.loss_mask: 1.4239  decode.d2.loss_dice: 1.7181  decode.d3.loss_cls: 0.3978  decode.d3.loss_mask: 1.3930  decode.d3.loss_dice: 1.7034  decode.d4.loss_cls: 0.3998  decode.d4.loss_mask: 1.4020  decode.d4.loss_dice: 1.7045  decode.d5.loss_cls: 0.3666  decode.d5.loss_mask: 1.5118  decode.d5.loss_dice: 1.7138  decode.d6.loss_cls: 0.3249  decode.d6.loss_mask: 1.5213  decode.d6.loss_dice: 1.7517  decode.d7.loss_cls: 0.4090  decode.d7.loss_mask: 1.3577  decode.d7.loss_dice: 1.7214  decode.d8.loss_cls: 0.3912  decode.d8.loss_mask: 1.4041  decode.d8.loss_dice: 1.7346
2025/03/27 11:12:11 - mmengine - INFO - Iter(train) [ 1900/20000]  base_lr: 9.1412e-05 lr: 9.1412e-05  eta: 2:35:22  time: 0.5390  data_time: 0.0270  memory: 6888  loss: 34.2018  decode.loss_cls: 0.2244  decode.loss_mask: 1.4412  decode.loss_dice: 1.7286  decode.d0.loss_cls: 0.7588  decode.d0.loss_mask: 1.4207  decode.d0.loss_dice: 1.7517  decode.d1.loss_cls: 0.2518  decode.d1.loss_mask: 1.3850  decode.d1.loss_dice: 1.7129  decode.d2.loss_cls: 0.3118  decode.d2.loss_mask: 1.3886  decode.d2.loss_dice: 1.6778  decode.d3.loss_cls: 0.2326  decode.d3.loss_mask: 1.3956  decode.d3.loss_dice: 1.6983  decode.d4.loss_cls: 0.2847  decode.d4.loss_mask: 1.3860  decode.d4.loss_dice: 1.6825  decode.d5.loss_cls: 0.2124  decode.d5.loss_mask: 1.4112  decode.d5.loss_dice: 1.7274  decode.d6.loss_cls: 0.1997  decode.d6.loss_mask: 1.4235  decode.d6.loss_dice: 1.7335  decode.d7.loss_cls: 0.2378  decode.d7.loss_mask: 1.4140  decode.d7.loss_dice: 1.7353  decode.d8.loss_cls: 0.2292  decode.d8.loss_mask: 1.4314  decode.d8.loss_dice: 1.7134
2025/03/27 11:12:38 - mmengine - INFO - Iter(train) [ 1950/20000]  base_lr: 9.1185e-05 lr: 9.1185e-05  eta: 2:35:07  time: 0.5368  data_time: 0.0256  memory: 6894  loss: 35.1492  decode.loss_cls: 0.3574  decode.loss_mask: 1.3646  decode.loss_dice: 1.7092  decode.d0.loss_cls: 0.7959  decode.d0.loss_mask: 1.3901  decode.d0.loss_dice: 1.8183  decode.d1.loss_cls: 0.3674  decode.d1.loss_mask: 1.3862  decode.d1.loss_dice: 1.7189  decode.d2.loss_cls: 0.3668  decode.d2.loss_mask: 1.3652  decode.d2.loss_dice: 1.7028  decode.d3.loss_cls: 0.3353  decode.d3.loss_mask: 1.4087  decode.d3.loss_dice: 1.7142  decode.d4.loss_cls: 0.3822  decode.d4.loss_mask: 1.3817  decode.d4.loss_dice: 1.7327  decode.d5.loss_cls: 0.3329  decode.d5.loss_mask: 1.4051  decode.d5.loss_dice: 1.7354  decode.d6.loss_cls: 0.2649  decode.d6.loss_mask: 1.4498  decode.d6.loss_dice: 1.7713  decode.d7.loss_cls: 0.2941  decode.d7.loss_mask: 1.4210  decode.d7.loss_dice: 1.7342  decode.d8.loss_cls: 0.2832  decode.d8.loss_mask: 1.4335  decode.d8.loss_dice: 1.7262
2025/03/27 11:13:05 - mmengine - INFO - Exp name: pr2vi_20250327_105544
2025/03/27 11:13:05 - mmengine - INFO - Iter(train) [ 2000/20000]  base_lr: 9.0957e-05 lr: 9.0957e-05  eta: 2:34:51  time: 0.5381  data_time: 0.0257  memory: 6889  loss: 31.1794  decode.loss_cls: 0.2354  decode.loss_mask: 1.4271  decode.loss_dice: 1.4235  decode.d0.loss_cls: 0.6764  decode.d0.loss_mask: 1.4262  decode.d0.loss_dice: 1.5090  decode.d1.loss_cls: 0.2020  decode.d1.loss_mask: 1.4334  decode.d1.loss_dice: 1.4167  decode.d2.loss_cls: 0.1641  decode.d2.loss_mask: 1.4679  decode.d2.loss_dice: 1.4274  decode.d3.loss_cls: 0.1729  decode.d3.loss_mask: 1.4705  decode.d3.loss_dice: 1.4099  decode.d4.loss_cls: 0.1626  decode.d4.loss_mask: 1.4748  decode.d4.loss_dice: 1.4061  decode.d5.loss_cls: 0.1584  decode.d5.loss_mask: 1.4731  decode.d5.loss_dice: 1.3972  decode.d6.loss_cls: 0.2399  decode.d6.loss_mask: 1.4587  decode.d6.loss_dice: 1.3807  decode.d7.loss_cls: 0.2137  decode.d7.loss_mask: 1.4493  decode.d7.loss_dice: 1.4132  decode.d8.loss_cls: 0.2402  decode.d8.loss_mask: 1.4139  decode.d8.loss_dice: 1.4353
2025/03/27 11:13:05 - mmengine - INFO - Saving checkpoint at 2000 iterations
2025/03/27 11:13:11 - mmengine - INFO - Iter(val) [ 50/398]    eta: 0:00:33  time: 0.0852  data_time: 0.0018  memory: 3119  
2025/03/27 11:13:15 - mmengine - INFO - Iter(val) [100/398]    eta: 0:00:27  time: 0.0844  data_time: 0.0018  memory: 3119  
2025/03/27 11:13:19 - mmengine - INFO - Iter(val) [150/398]    eta: 0:00:21  time: 0.0841  data_time: 0.0017  memory: 3119  
2025/03/27 11:13:24 - mmengine - INFO - Iter(val) [200/398]    eta: 0:00:17  time: 0.0841  data_time: 0.0017  memory: 3119  
2025/03/27 11:13:28 - mmengine - INFO - Iter(val) [250/398]    eta: 0:00:12  time: 0.0841  data_time: 0.0016  memory: 3119  
2025/03/27 11:13:32 - mmengine - INFO - Iter(val) [300/398]    eta: 0:00:08  time: 0.0846  data_time: 0.0016  memory: 3119  
2025/03/27 11:13:36 - mmengine - INFO - Iter(val) [350/398]    eta: 0:00:04  time: 0.0846  data_time: 0.0016  memory: 3119  
2025/03/27 11:13:40 - mmengine - INFO - per class results:
2025/03/27 11:13:40 - mmengine - INFO - 
+--------------------+-------+-------+
|       Class        |  IoU  |  Acc  |
+--------------------+-------+-------+
| impervious_surface | 64.02 | 67.85 |
|      building      | 86.68 |  94.8 |
|   low_vegetation   |  45.8 | 66.85 |
|        tree        | 59.36 | 62.86 |
|        car         | 54.89 | 72.66 |
|      clutter       |  7.89 | 94.86 |
+--------------------+-------+-------+
2025/03/27 11:13:40 - mmengine - INFO - Iter(val) [398/398]    aAcc: 73.6800  mIoU: 53.1100  mAcc: 76.6500  data_time: 0.0022  time: 0.0862
2025/03/27 11:13:41 - mmengine - INFO - The best checkpoint with 53.1100 mIoU at 2000 iter is saved to best_mIoU_iter_2000.pth.
2025/03/27 11:14:08 - mmengine - INFO - Iter(train) [ 2050/20000]  base_lr: 9.0730e-05 lr: 9.0730e-05  eta: 2:34:39  time: 0.4989  data_time: 0.0202  memory: 6890  loss: 33.5772  decode.loss_cls: 0.2013  decode.loss_mask: 1.4574  decode.loss_dice: 1.6450  decode.d0.loss_cls: 0.7069  decode.d0.loss_mask: 1.4599  decode.d0.loss_dice: 1.6655  decode.d1.loss_cls: 0.2672  decode.d1.loss_mask: 1.4430  decode.d1.loss_dice: 1.6435  decode.d2.loss_cls: 0.2379  decode.d2.loss_mask: 1.4328  decode.d2.loss_dice: 1.6245  decode.d3.loss_cls: 0.2176  decode.d3.loss_mask: 1.4403  decode.d3.loss_dice: 1.6193  decode.d4.loss_cls: 0.2326  decode.d4.loss_mask: 1.4438  decode.d4.loss_dice: 1.6095  decode.d5.loss_cls: 0.2575  decode.d5.loss_mask: 1.4161  decode.d5.loss_dice: 1.6095  decode.d6.loss_cls: 0.2444  decode.d6.loss_mask: 1.4478  decode.d6.loss_dice: 1.6239  decode.d7.loss_cls: 0.2687  decode.d7.loss_mask: 1.4381  decode.d7.loss_dice: 1.6050  decode.d8.loss_cls: 0.2234  decode.d8.loss_mask: 1.4502  decode.d8.loss_dice: 1.6446
2025/03/27 11:14:33 - mmengine - INFO - Iter(train) [ 2100/20000]  base_lr: 9.0502e-05 lr: 9.0502e-05  eta: 2:34:06  time: 0.5039  data_time: 0.0200  memory: 6886  loss: 32.7727  decode.loss_cls: 0.2713  decode.loss_mask: 1.2932  decode.loss_dice: 1.5967  decode.d0.loss_cls: 0.6993  decode.d0.loss_mask: 1.3577  decode.d0.loss_dice: 1.6463  decode.d1.loss_cls: 0.2398  decode.d1.loss_mask: 1.3434  decode.d1.loss_dice: 1.6554  decode.d2.loss_cls: 0.3121  decode.d2.loss_mask: 1.3230  decode.d2.loss_dice: 1.5981  decode.d3.loss_cls: 0.3309  decode.d3.loss_mask: 1.3232  decode.d3.loss_dice: 1.5553  decode.d4.loss_cls: 0.3536  decode.d4.loss_mask: 1.3244  decode.d4.loss_dice: 1.5615  decode.d5.loss_cls: 0.3978  decode.d5.loss_mask: 1.3040  decode.d5.loss_dice: 1.5810  decode.d6.loss_cls: 0.4370  decode.d6.loss_mask: 1.2854  decode.d6.loss_dice: 1.5494  decode.d7.loss_cls: 0.3632  decode.d7.loss_mask: 1.3130  decode.d7.loss_dice: 1.5657  decode.d8.loss_cls: 0.2814  decode.d8.loss_mask: 1.3130  decode.d8.loss_dice: 1.5964
2025/03/27 11:14:58 - mmengine - INFO - Iter(train) [ 2150/20000]  base_lr: 9.0275e-05 lr: 9.0275e-05  eta: 2:33:35  time: 0.5030  data_time: 0.0205  memory: 6885  loss: 32.5164  decode.loss_cls: 0.3511  decode.loss_mask: 1.3497  decode.loss_dice: 1.5453  decode.d0.loss_cls: 0.6589  decode.d0.loss_mask: 1.3292  decode.d0.loss_dice: 1.5967  decode.d1.loss_cls: 0.3129  decode.d1.loss_mask: 1.3328  decode.d1.loss_dice: 1.5803  decode.d2.loss_cls: 0.3091  decode.d2.loss_mask: 1.3403  decode.d2.loss_dice: 1.5370  decode.d3.loss_cls: 0.3164  decode.d3.loss_mask: 1.3340  decode.d3.loss_dice: 1.5588  decode.d4.loss_cls: 0.3072  decode.d4.loss_mask: 1.3482  decode.d4.loss_dice: 1.5720  decode.d5.loss_cls: 0.2955  decode.d5.loss_mask: 1.3405  decode.d5.loss_dice: 1.5606  decode.d6.loss_cls: 0.3127  decode.d6.loss_mask: 1.3286  decode.d6.loss_dice: 1.5378  decode.d7.loss_cls: 0.3321  decode.d7.loss_mask: 1.3474  decode.d7.loss_dice: 1.5674  decode.d8.loss_cls: 0.3151  decode.d8.loss_mask: 1.3407  decode.d8.loss_dice: 1.5582
2025/03/27 11:15:24 - mmengine - INFO - Iter(train) [ 2200/20000]  base_lr: 9.0047e-05 lr: 9.0047e-05  eta: 2:33:08  time: 0.5344  data_time: 0.0263  memory: 6890  loss: 34.0874  decode.loss_cls: 0.3728  decode.loss_mask: 1.2343  decode.loss_dice: 1.7271  decode.d0.loss_cls: 0.5976  decode.d0.loss_mask: 1.2815  decode.d0.loss_dice: 1.8085  decode.d1.loss_cls: 0.3403  decode.d1.loss_mask: 1.2506  decode.d1.loss_dice: 1.7481  decode.d2.loss_cls: 0.3920  decode.d2.loss_mask: 1.2475  decode.d2.loss_dice: 1.7170  decode.d3.loss_cls: 0.3891  decode.d3.loss_mask: 1.2488  decode.d3.loss_dice: 1.7488  decode.d4.loss_cls: 0.4330  decode.d4.loss_mask: 1.2293  decode.d4.loss_dice: 1.7469  decode.d5.loss_cls: 0.4523  decode.d5.loss_mask: 1.2436  decode.d5.loss_dice: 1.7005  decode.d6.loss_cls: 0.4073  decode.d6.loss_mask: 1.2376  decode.d6.loss_dice: 1.7240  decode.d7.loss_cls: 0.4698  decode.d7.loss_mask: 1.2359  decode.d7.loss_dice: 1.7187  decode.d8.loss_cls: 0.3764  decode.d8.loss_mask: 1.2750  decode.d8.loss_dice: 1.7331
2025/03/27 11:15:50 - mmengine - INFO - Iter(train) [ 2250/20000]  base_lr: 8.9820e-05 lr: 8.9820e-05  eta: 2:32:44  time: 0.5388  data_time: 0.0263  memory: 6887  loss: 34.8705  decode.loss_cls: 0.2188  decode.loss_mask: 1.5124  decode.loss_dice: 1.7539  decode.d0.loss_cls: 0.6107  decode.d0.loss_mask: 1.4733  decode.d0.loss_dice: 1.7612  decode.d1.loss_cls: 0.2232  decode.d1.loss_mask: 1.4152  decode.d1.loss_dice: 1.7459  decode.d2.loss_cls: 0.2342  decode.d2.loss_mask: 1.4586  decode.d2.loss_dice: 1.7165  decode.d3.loss_cls: 0.2398  decode.d3.loss_mask: 1.4788  decode.d3.loss_dice: 1.7656  decode.d4.loss_cls: 0.2475  decode.d4.loss_mask: 1.4636  decode.d4.loss_dice: 1.7493  decode.d5.loss_cls: 0.2175  decode.d5.loss_mask: 1.4870  decode.d5.loss_dice: 1.7591  decode.d6.loss_cls: 0.2056  decode.d6.loss_mask: 1.4663  decode.d6.loss_dice: 1.7488  decode.d7.loss_cls: 0.1945  decode.d7.loss_mask: 1.4943  decode.d7.loss_dice: 1.7601  decode.d8.loss_cls: 0.2000  decode.d8.loss_mask: 1.5075  decode.d8.loss_dice: 1.7615
2025/03/27 11:16:15 - mmengine - INFO - Iter(train) [ 2300/20000]  base_lr: 8.9592e-05 lr: 8.9592e-05  eta: 2:32:14  time: 0.5043  data_time: 0.0203  memory: 6884  loss: 27.9180  decode.loss_cls: 0.2649  decode.loss_mask: 1.1877  decode.loss_dice: 1.3703  decode.d0.loss_cls: 0.5496  decode.d0.loss_mask: 1.1907  decode.d0.loss_dice: 1.3914  decode.d1.loss_cls: 0.1566  decode.d1.loss_mask: 1.2109  decode.d1.loss_dice: 1.3664  decode.d2.loss_cls: 0.1676  decode.d2.loss_mask: 1.2257  decode.d2.loss_dice: 1.3416  decode.d3.loss_cls: 0.2210  decode.d3.loss_mask: 1.2158  decode.d3.loss_dice: 1.3512  decode.d4.loss_cls: 0.1692  decode.d4.loss_mask: 1.2155  decode.d4.loss_dice: 1.3568  decode.d5.loss_cls: 0.1762  decode.d5.loss_mask: 1.2119  decode.d5.loss_dice: 1.3452  decode.d6.loss_cls: 0.1684  decode.d6.loss_mask: 1.1993  decode.d6.loss_dice: 1.3583  decode.d7.loss_cls: 0.1514  decode.d7.loss_mask: 1.2097  decode.d7.loss_dice: 1.3666  decode.d8.loss_cls: 0.1777  decode.d8.loss_mask: 1.2039  decode.d8.loss_dice: 1.3964
2025/03/27 11:16:40 - mmengine - INFO - Iter(train) [ 2350/20000]  base_lr: 8.9364e-05 lr: 8.9364e-05  eta: 2:31:44  time: 0.5031  data_time: 0.0202  memory: 6888  loss: 37.8195  decode.loss_cls: 0.5172  decode.loss_mask: 1.5230  decode.loss_dice: 1.8104  decode.d0.loss_cls: 0.6106  decode.d0.loss_mask: 1.5355  decode.d0.loss_dice: 1.8603  decode.d1.loss_cls: 0.4301  decode.d1.loss_mask: 1.4982  decode.d1.loss_dice: 1.7855  decode.d2.loss_cls: 0.4468  decode.d2.loss_mask: 1.4782  decode.d2.loss_dice: 1.7407  decode.d3.loss_cls: 0.4646  decode.d3.loss_mask: 1.5070  decode.d3.loss_dice: 1.7675  decode.d4.loss_cls: 0.4602  decode.d4.loss_mask: 1.4939  decode.d4.loss_dice: 1.8116  decode.d5.loss_cls: 0.3669  decode.d5.loss_mask: 1.5404  decode.d5.loss_dice: 1.8400  decode.d6.loss_cls: 0.3494  decode.d6.loss_mask: 1.5504  decode.d6.loss_dice: 1.8389  decode.d7.loss_cls: 0.3768  decode.d7.loss_mask: 1.5471  decode.d7.loss_dice: 1.8186  decode.d8.loss_cls: 0.4610  decode.d8.loss_mask: 1.5618  decode.d8.loss_dice: 1.8270
2025/03/27 11:17:05 - mmengine - INFO - Iter(train) [ 2400/20000]  base_lr: 8.9136e-05 lr: 8.9136e-05  eta: 2:31:13  time: 0.5031  data_time: 0.0200  memory: 6888  loss: 37.0634  decode.loss_cls: 0.4331  decode.loss_mask: 1.4339  decode.loss_dice: 1.8999  decode.d0.loss_cls: 0.5479  decode.d0.loss_mask: 1.4363  decode.d0.loss_dice: 1.9253  decode.d1.loss_cls: 0.4177  decode.d1.loss_mask: 1.4144  decode.d1.loss_dice: 1.8244  decode.d2.loss_cls: 0.4430  decode.d2.loss_mask: 1.4150  decode.d2.loss_dice: 1.7964  decode.d3.loss_cls: 0.4356  decode.d3.loss_mask: 1.4112  decode.d3.loss_dice: 1.7992  decode.d4.loss_cls: 0.4374  decode.d4.loss_mask: 1.3785  decode.d4.loss_dice: 1.8280  decode.d5.loss_cls: 0.2414  decode.d5.loss_mask: 1.4131  decode.d5.loss_dice: 1.9085  decode.d6.loss_cls: 0.4885  decode.d6.loss_mask: 1.3838  decode.d6.loss_dice: 1.8024  decode.d7.loss_cls: 0.5225  decode.d7.loss_mask: 1.4127  decode.d7.loss_dice: 1.8234  decode.d8.loss_cls: 0.4528  decode.d8.loss_mask: 1.4462  decode.d8.loss_dice: 1.8910
2025/03/27 11:17:31 - mmengine - INFO - Iter(train) [ 2450/20000]  base_lr: 8.8908e-05 lr: 8.8908e-05  eta: 2:30:47  time: 0.5325  data_time: 0.0259  memory: 6888  loss: 30.4293  decode.loss_cls: 0.2859  decode.loss_mask: 1.3857  decode.loss_dice: 1.3165  decode.d0.loss_cls: 0.5723  decode.d0.loss_mask: 1.3839  decode.d0.loss_dice: 1.3614  decode.d1.loss_cls: 0.2356  decode.d1.loss_mask: 1.4094  decode.d1.loss_dice: 1.3393  decode.d2.loss_cls: 0.2364  decode.d2.loss_mask: 1.4007  decode.d2.loss_dice: 1.3418  decode.d3.loss_cls: 0.2636  decode.d3.loss_mask: 1.3931  decode.d3.loss_dice: 1.3465  decode.d4.loss_cls: 0.2933  decode.d4.loss_mask: 1.4077  decode.d4.loss_dice: 1.3479  decode.d5.loss_cls: 0.2828  decode.d5.loss_mask: 1.3833  decode.d5.loss_dice: 1.3317  decode.d6.loss_cls: 0.2844  decode.d6.loss_mask: 1.4161  decode.d6.loss_dice: 1.3432  decode.d7.loss_cls: 0.2672  decode.d7.loss_mask: 1.4197  decode.d7.loss_dice: 1.3496  decode.d8.loss_cls: 0.2711  decode.d8.loss_mask: 1.4109  decode.d8.loss_dice: 1.3483
2025/03/27 11:17:58 - mmengine - INFO - Iter(train) [ 2500/20000]  base_lr: 8.8680e-05 lr: 8.8680e-05  eta: 2:30:27  time: 0.5351  data_time: 0.0256  memory: 6882  loss: 25.7761  decode.loss_cls: 0.1725  decode.loss_mask: 1.0687  decode.loss_dice: 1.3286  decode.d0.loss_cls: 0.5019  decode.d0.loss_mask: 1.0495  decode.d0.loss_dice: 1.3313  decode.d1.loss_cls: 0.1625  decode.d1.loss_mask: 1.0559  decode.d1.loss_dice: 1.3219  decode.d2.loss_cls: 0.1426  decode.d2.loss_mask: 1.0387  decode.d2.loss_dice: 1.3449  decode.d3.loss_cls: 0.1517  decode.d3.loss_mask: 1.0588  decode.d3.loss_dice: 1.3254  decode.d4.loss_cls: 0.2088  decode.d4.loss_mask: 1.0405  decode.d4.loss_dice: 1.3098  decode.d5.loss_cls: 0.1385  decode.d5.loss_mask: 1.0684  decode.d5.loss_dice: 1.3329  decode.d6.loss_cls: 0.1554  decode.d6.loss_mask: 1.0584  decode.d6.loss_dice: 1.3194  decode.d7.loss_cls: 0.1457  decode.d7.loss_mask: 1.0671  decode.d7.loss_dice: 1.3390  decode.d8.loss_cls: 0.1625  decode.d8.loss_mask: 1.0505  decode.d8.loss_dice: 1.3244
2025/03/27 11:18:24 - mmengine - INFO - Iter(train) [ 2550/20000]  base_lr: 8.8452e-05 lr: 8.8452e-05  eta: 2:30:06  time: 0.5021  data_time: 0.0199  memory: 6887  loss: 32.8462  decode.loss_cls: 0.2183  decode.loss_mask: 1.5559  decode.loss_dice: 1.5280  decode.d0.loss_cls: 0.5269  decode.d0.loss_mask: 1.5159  decode.d0.loss_dice: 1.5680  decode.d1.loss_cls: 0.2483  decode.d1.loss_mask: 1.4863  decode.d1.loss_dice: 1.5067  decode.d2.loss_cls: 0.2214  decode.d2.loss_mask: 1.4833  decode.d2.loss_dice: 1.4858  decode.d3.loss_cls: 0.2310  decode.d3.loss_mask: 1.5075  decode.d3.loss_dice: 1.4828  decode.d4.loss_cls: 0.2290  decode.d4.loss_mask: 1.5240  decode.d4.loss_dice: 1.4813  decode.d5.loss_cls: 0.2625  decode.d5.loss_mask: 1.5197  decode.d5.loss_dice: 1.4848  decode.d6.loss_cls: 0.2852  decode.d6.loss_mask: 1.4917  decode.d6.loss_dice: 1.4421  decode.d7.loss_cls: 0.2427  decode.d7.loss_mask: 1.5448  decode.d7.loss_dice: 1.4867  decode.d8.loss_cls: 0.2223  decode.d8.loss_mask: 1.5604  decode.d8.loss_dice: 1.5029
2025/03/27 11:18:49 - mmengine - INFO - Iter(train) [ 2600/20000]  base_lr: 8.8224e-05 lr: 8.8224e-05  eta: 2:29:35  time: 0.5031  data_time: 0.0202  memory: 6886  loss: 32.2790  decode.loss_cls: 0.2106  decode.loss_mask: 1.4454  decode.loss_dice: 1.5384  decode.d0.loss_cls: 0.5085  decode.d0.loss_mask: 1.3506  decode.d0.loss_dice: 1.5516  decode.d1.loss_cls: 0.2405  decode.d1.loss_mask: 1.3654  decode.d1.loss_dice: 1.5277  decode.d2.loss_cls: 0.3202  decode.d2.loss_mask: 1.3623  decode.d2.loss_dice: 1.4832  decode.d3.loss_cls: 0.3344  decode.d3.loss_mask: 1.4465  decode.d3.loss_dice: 1.5236  decode.d4.loss_cls: 0.3794  decode.d4.loss_mask: 1.3564  decode.d4.loss_dice: 1.5200  decode.d5.loss_cls: 0.3211  decode.d5.loss_mask: 1.4255  decode.d5.loss_dice: 1.4969  decode.d6.loss_cls: 0.3013  decode.d6.loss_mask: 1.4185  decode.d6.loss_dice: 1.4920  decode.d7.loss_cls: 0.2436  decode.d7.loss_mask: 1.4223  decode.d7.loss_dice: 1.5215  decode.d8.loss_cls: 0.2819  decode.d8.loss_mask: 1.3547  decode.d8.loss_dice: 1.5350
2025/03/27 11:19:14 - mmengine - INFO - Iter(train) [ 2650/20000]  base_lr: 8.7996e-05 lr: 8.7996e-05  eta: 2:29:06  time: 0.5215  data_time: 0.0200  memory: 6888  loss: 29.1724  decode.loss_cls: 0.2329  decode.loss_mask: 1.1612  decode.loss_dice: 1.5353  decode.d0.loss_cls: 0.4467  decode.d0.loss_mask: 1.1327  decode.d0.loss_dice: 1.5521  decode.d1.loss_cls: 0.3063  decode.d1.loss_mask: 1.1043  decode.d1.loss_dice: 1.5130  decode.d2.loss_cls: 0.2287  decode.d2.loss_mask: 1.1109  decode.d2.loss_dice: 1.5227  decode.d3.loss_cls: 0.2209  decode.d3.loss_mask: 1.0962  decode.d3.loss_dice: 1.5587  decode.d4.loss_cls: 0.2369  decode.d4.loss_mask: 1.1122  decode.d4.loss_dice: 1.5601  decode.d5.loss_cls: 0.1978  decode.d5.loss_mask: 1.1033  decode.d5.loss_dice: 1.5353  decode.d6.loss_cls: 0.3112  decode.d6.loss_mask: 1.0808  decode.d6.loss_dice: 1.4912  decode.d7.loss_cls: 0.2732  decode.d7.loss_mask: 1.0897  decode.d7.loss_dice: 1.5542  decode.d8.loss_cls: 0.1557  decode.d8.loss_mask: 1.1874  decode.d8.loss_dice: 1.5609
2025/03/27 11:19:40 - mmengine - INFO - Iter(train) [ 2700/20000]  base_lr: 8.7768e-05 lr: 8.7768e-05  eta: 2:28:39  time: 0.5375  data_time: 0.0264  memory: 6889  loss: 32.0584  decode.loss_cls: 0.2389  decode.loss_mask: 1.3987  decode.loss_dice: 1.7007  decode.d0.loss_cls: 0.5357  decode.d0.loss_mask: 1.2840  decode.d0.loss_dice: 1.5756  decode.d1.loss_cls: 0.2162  decode.d1.loss_mask: 1.3460  decode.d1.loss_dice: 1.5652  decode.d2.loss_cls: 0.2835  decode.d2.loss_mask: 1.3106  decode.d2.loss_dice: 1.5416  decode.d3.loss_cls: 0.3492  decode.d3.loss_mask: 1.3641  decode.d3.loss_dice: 1.5393  decode.d4.loss_cls: 0.3398  decode.d4.loss_mask: 1.3083  decode.d4.loss_dice: 1.4881  decode.d5.loss_cls: 0.3182  decode.d5.loss_mask: 1.3084  decode.d5.loss_dice: 1.5050  decode.d6.loss_cls: 0.2930  decode.d6.loss_mask: 1.3063  decode.d6.loss_dice: 1.5997  decode.d7.loss_cls: 0.3920  decode.d7.loss_mask: 1.2626  decode.d7.loss_dice: 1.5084  decode.d8.loss_cls: 0.4156  decode.d8.loss_mask: 1.2278  decode.d8.loss_dice: 1.5359
2025/03/27 11:20:06 - mmengine - INFO - Iter(train) [ 2750/20000]  base_lr: 8.7539e-05 lr: 8.7539e-05  eta: 2:28:15  time: 0.5005  data_time: 0.0201  memory: 6885  loss: 30.7140  decode.loss_cls: 0.2103  decode.loss_mask: 1.4037  decode.loss_dice: 1.4123  decode.d0.loss_cls: 0.4381  decode.d0.loss_mask: 1.4075  decode.d0.loss_dice: 1.4308  decode.d1.loss_cls: 0.2934  decode.d1.loss_mask: 1.3714  decode.d1.loss_dice: 1.3670  decode.d2.loss_cls: 0.2353  decode.d2.loss_mask: 1.3542  decode.d2.loss_dice: 1.3805  decode.d3.loss_cls: 0.2589  decode.d3.loss_mask: 1.3496  decode.d3.loss_dice: 1.3997  decode.d4.loss_cls: 0.2678  decode.d4.loss_mask: 1.3778  decode.d4.loss_dice: 1.4056  decode.d5.loss_cls: 0.2245  decode.d5.loss_mask: 1.4464  decode.d5.loss_dice: 1.4266  decode.d6.loss_cls: 0.2899  decode.d6.loss_mask: 1.3985  decode.d6.loss_dice: 1.3772  decode.d7.loss_cls: 0.2055  decode.d7.loss_mask: 1.4450  decode.d7.loss_dice: 1.4110  decode.d8.loss_cls: 0.3038  decode.d8.loss_mask: 1.4170  decode.d8.loss_dice: 1.4048
2025/03/27 11:20:32 - mmengine - INFO - Iter(train) [ 2800/20000]  base_lr: 8.7311e-05 lr: 8.7311e-05  eta: 2:27:49  time: 0.5149  data_time: 0.0210  memory: 6889  loss: 28.5411  decode.loss_cls: 0.2868  decode.loss_mask: 1.1078  decode.loss_dice: 1.4834  decode.d0.loss_cls: 0.4555  decode.d0.loss_mask: 1.1153  decode.d0.loss_dice: 1.5535  decode.d1.loss_cls: 0.2387  decode.d1.loss_mask: 1.1032  decode.d1.loss_dice: 1.4918  decode.d2.loss_cls: 0.1828  decode.d2.loss_mask: 1.1187  decode.d2.loss_dice: 1.4902  decode.d3.loss_cls: 0.2584  decode.d3.loss_mask: 1.0848  decode.d3.loss_dice: 1.4538  decode.d4.loss_cls: 0.2671  decode.d4.loss_mask: 1.0920  decode.d4.loss_dice: 1.4723  decode.d5.loss_cls: 0.2279  decode.d5.loss_mask: 1.0765  decode.d5.loss_dice: 1.4619  decode.d6.loss_cls: 0.2301  decode.d6.loss_mask: 1.1083  decode.d6.loss_dice: 1.4878  decode.d7.loss_cls: 0.2533  decode.d7.loss_mask: 1.0947  decode.d7.loss_dice: 1.4854  decode.d8.loss_cls: 0.2893  decode.d8.loss_mask: 1.0798  decode.d8.loss_dice: 1.4902
2025/03/27 11:20:58 - mmengine - INFO - Iter(train) [ 2850/20000]  base_lr: 8.7082e-05 lr: 8.7082e-05  eta: 2:27:23  time: 0.5350  data_time: 0.0245  memory: 6884  loss: 29.6836  decode.loss_cls: 0.3775  decode.loss_mask: 1.2068  decode.loss_dice: 1.4189  decode.d0.loss_cls: 0.5151  decode.d0.loss_mask: 1.2122  decode.d0.loss_dice: 1.4437  decode.d1.loss_cls: 0.3034  decode.d1.loss_mask: 1.1988  decode.d1.loss_dice: 1.3899  decode.d2.loss_cls: 0.2972  decode.d2.loss_mask: 1.2228  decode.d2.loss_dice: 1.4113  decode.d3.loss_cls: 0.3267  decode.d3.loss_mask: 1.2161  decode.d3.loss_dice: 1.3695  decode.d4.loss_cls: 0.3424  decode.d4.loss_mask: 1.2318  decode.d4.loss_dice: 1.3749  decode.d5.loss_cls: 0.3348  decode.d5.loss_mask: 1.2343  decode.d5.loss_dice: 1.3626  decode.d6.loss_cls: 0.2709  decode.d6.loss_mask: 1.2764  decode.d6.loss_dice: 1.3886  decode.d7.loss_cls: 0.3246  decode.d7.loss_mask: 1.2020  decode.d7.loss_dice: 1.3902  decode.d8.loss_cls: 0.4516  decode.d8.loss_mask: 1.2086  decode.d8.loss_dice: 1.3799
2025/03/27 11:21:25 - mmengine - INFO - Iter(train) [ 2900/20000]  base_lr: 8.6854e-05 lr: 8.6854e-05  eta: 2:27:08  time: 0.5615  data_time: 0.0284  memory: 6885  loss: 28.3201  decode.loss_cls: 0.3108  decode.loss_mask: 1.0756  decode.loss_dice: 1.4099  decode.d0.loss_cls: 0.4809  decode.d0.loss_mask: 1.0608  decode.d0.loss_dice: 1.4487  decode.d1.loss_cls: 0.2932  decode.d1.loss_mask: 1.0457  decode.d1.loss_dice: 1.4155  decode.d2.loss_cls: 0.2871  decode.d2.loss_mask: 1.0763  decode.d2.loss_dice: 1.4338  decode.d3.loss_cls: 0.3209  decode.d3.loss_mask: 1.0725  decode.d3.loss_dice: 1.4350  decode.d4.loss_cls: 0.3186  decode.d4.loss_mask: 1.1007  decode.d4.loss_dice: 1.4320  decode.d5.loss_cls: 0.3099  decode.d5.loss_mask: 1.0984  decode.d5.loss_dice: 1.4182  decode.d6.loss_cls: 0.2948  decode.d6.loss_mask: 1.0829  decode.d6.loss_dice: 1.4275  decode.d7.loss_cls: 0.3384  decode.d7.loss_mask: 1.0711  decode.d7.loss_dice: 1.4478  decode.d8.loss_cls: 0.3389  decode.d8.loss_mask: 1.0693  decode.d8.loss_dice: 1.4051
2025/03/27 11:21:52 - mmengine - INFO - Iter(train) [ 2950/20000]  base_lr: 8.6625e-05 lr: 8.6625e-05  eta: 2:26:49  time: 0.5342  data_time: 0.0262  memory: 6887  loss: 27.4710  decode.loss_cls: 0.3547  decode.loss_mask: 1.0017  decode.loss_dice: 1.3351  decode.d0.loss_cls: 0.5078  decode.d0.loss_mask: 1.0136  decode.d0.loss_dice: 1.3773  decode.d1.loss_cls: 0.3537  decode.d1.loss_mask: 1.0154  decode.d1.loss_dice: 1.3806  decode.d2.loss_cls: 0.2840  decode.d2.loss_mask: 1.0225  decode.d2.loss_dice: 1.4012  decode.d3.loss_cls: 0.2559  decode.d3.loss_mask: 1.0257  decode.d3.loss_dice: 1.4077  decode.d4.loss_cls: 0.4039  decode.d4.loss_mask: 1.0046  decode.d4.loss_dice: 1.3886  decode.d5.loss_cls: 0.3859  decode.d5.loss_mask: 1.0138  decode.d5.loss_dice: 1.3875  decode.d6.loss_cls: 0.3409  decode.d6.loss_mask: 1.0350  decode.d6.loss_dice: 1.3340  decode.d7.loss_cls: 0.3323  decode.d7.loss_mask: 1.0317  decode.d7.loss_dice: 1.3678  decode.d8.loss_cls: 0.3458  decode.d8.loss_mask: 1.0069  decode.d8.loss_dice: 1.3555
2025/03/27 11:22:19 - mmengine - INFO - Exp name: pr2vi_20250327_105544
2025/03/27 11:22:19 - mmengine - INFO - Iter(train) [ 3000/20000]  base_lr: 8.6397e-05 lr: 8.6397e-05  eta: 2:26:30  time: 0.5524  data_time: 0.0279  memory: 6892  loss: 31.5552  decode.loss_cls: 0.1398  decode.loss_mask: 1.3508  decode.loss_dice: 1.6010  decode.d0.loss_cls: 0.3858  decode.d0.loss_mask: 1.3387  decode.d0.loss_dice: 1.6263  decode.d1.loss_cls: 0.2166  decode.d1.loss_mask: 1.3616  decode.d1.loss_dice: 1.6250  decode.d2.loss_cls: 0.2404  decode.d2.loss_mask: 1.3634  decode.d2.loss_dice: 1.6043  decode.d3.loss_cls: 0.1507  decode.d3.loss_mask: 1.3795  decode.d3.loss_dice: 1.6060  decode.d4.loss_cls: 0.1583  decode.d4.loss_mask: 1.3688  decode.d4.loss_dice: 1.5639  decode.d5.loss_cls: 0.1874  decode.d5.loss_mask: 1.3395  decode.d5.loss_dice: 1.6030  decode.d6.loss_cls: 0.1327  decode.d6.loss_mask: 1.3420  decode.d6.loss_dice: 1.6132  decode.d7.loss_cls: 0.1337  decode.d7.loss_mask: 1.3680  decode.d7.loss_dice: 1.6252  decode.d8.loss_cls: 0.1446  decode.d8.loss_mask: 1.3610  decode.d8.loss_dice: 1.6240
2025/03/27 11:22:46 - mmengine - INFO - Iter(train) [ 3050/20000]  base_lr: 8.6168e-05 lr: 8.6168e-05  eta: 2:26:09  time: 0.5378  data_time: 0.0240  memory: 6887  loss: 26.7779  decode.loss_cls: 0.1189  decode.loss_mask: 1.1571  decode.loss_dice: 1.3851  decode.d0.loss_cls: 0.3060  decode.d0.loss_mask: 1.1658  decode.d0.loss_dice: 1.4172  decode.d1.loss_cls: 0.1044  decode.d1.loss_mask: 1.1511  decode.d1.loss_dice: 1.3895  decode.d2.loss_cls: 0.1519  decode.d2.loss_mask: 1.1300  decode.d2.loss_dice: 1.3677  decode.d3.loss_cls: 0.1079  decode.d3.loss_mask: 1.1428  decode.d3.loss_dice: 1.3766  decode.d4.loss_cls: 0.1214  decode.d4.loss_mask: 1.1577  decode.d4.loss_dice: 1.3690  decode.d5.loss_cls: 0.0761  decode.d5.loss_mask: 1.1631  decode.d5.loss_dice: 1.3839  decode.d6.loss_cls: 0.1691  decode.d6.loss_mask: 1.1460  decode.d6.loss_dice: 1.3680  decode.d7.loss_cls: 0.1603  decode.d7.loss_mask: 1.1364  decode.d7.loss_dice: 1.3706  decode.d8.loss_cls: 0.1536  decode.d8.loss_mask: 1.1447  decode.d8.loss_dice: 1.3861
2025/03/27 11:23:13 - mmengine - INFO - Iter(train) [ 3100/20000]  base_lr: 8.5939e-05 lr: 8.5939e-05  eta: 2:25:48  time: 0.5323  data_time: 0.0242  memory: 6889  loss: 28.8472  decode.loss_cls: 0.1874  decode.loss_mask: 1.2077  decode.loss_dice: 1.5453  decode.d0.loss_cls: 0.3129  decode.d0.loss_mask: 1.2116  decode.d0.loss_dice: 1.5324  decode.d1.loss_cls: 0.1494  decode.d1.loss_mask: 1.2010  decode.d1.loss_dice: 1.5055  decode.d2.loss_cls: 0.0931  decode.d2.loss_mask: 1.2020  decode.d2.loss_dice: 1.5226  decode.d3.loss_cls: 0.1598  decode.d3.loss_mask: 1.1899  decode.d3.loss_dice: 1.4800  decode.d4.loss_cls: 0.1370  decode.d4.loss_mask: 1.2061  decode.d4.loss_dice: 1.5158  decode.d5.loss_cls: 0.1030  decode.d5.loss_mask: 1.2124  decode.d5.loss_dice: 1.5426  decode.d6.loss_cls: 0.1265  decode.d6.loss_mask: 1.2037  decode.d6.loss_dice: 1.5197  decode.d7.loss_cls: 0.1531  decode.d7.loss_mask: 1.2269  decode.d7.loss_dice: 1.5286  decode.d8.loss_cls: 0.1911  decode.d8.loss_mask: 1.1864  decode.d8.loss_dice: 1.4937
2025/03/27 11:23:39 - mmengine - INFO - Iter(train) [ 3150/20000]  base_lr: 8.5710e-05 lr: 8.5710e-05  eta: 2:25:25  time: 0.5334  data_time: 0.0244  memory: 6885  loss: 33.1380  decode.loss_cls: 0.3673  decode.loss_mask: 1.3882  decode.loss_dice: 1.6297  decode.d0.loss_cls: 0.4587  decode.d0.loss_mask: 1.3927  decode.d0.loss_dice: 1.6498  decode.d1.loss_cls: 0.3494  decode.d1.loss_mask: 1.3387  decode.d1.loss_dice: 1.6203  decode.d2.loss_cls: 0.3141  decode.d2.loss_mask: 1.4132  decode.d2.loss_dice: 1.5881  decode.d3.loss_cls: 0.3562  decode.d3.loss_mask: 1.3139  decode.d3.loss_dice: 1.5822  decode.d4.loss_cls: 0.3962  decode.d4.loss_mask: 1.3103  decode.d4.loss_dice: 1.5322  decode.d5.loss_cls: 0.3380  decode.d5.loss_mask: 1.3655  decode.d5.loss_dice: 1.5805  decode.d6.loss_cls: 0.3244  decode.d6.loss_mask: 1.3651  decode.d6.loss_dice: 1.5859  decode.d7.loss_cls: 0.3565  decode.d7.loss_mask: 1.3004  decode.d7.loss_dice: 1.5702  decode.d8.loss_cls: 0.3367  decode.d8.loss_mask: 1.3993  decode.d8.loss_dice: 1.6146
2025/03/27 11:24:06 - mmengine - INFO - Iter(train) [ 3200/20000]  base_lr: 8.5481e-05 lr: 8.5481e-05  eta: 2:25:03  time: 0.5175  data_time: 0.0228  memory: 6888  loss: 34.5649  decode.loss_cls: 0.3113  decode.loss_mask: 1.5214  decode.loss_dice: 1.6422  decode.d0.loss_cls: 0.4404  decode.d0.loss_mask: 1.4565  decode.d0.loss_dice: 1.6625  decode.d1.loss_cls: 0.3069  decode.d1.loss_mask: 1.4197  decode.d1.loss_dice: 1.6478  decode.d2.loss_cls: 0.3356  decode.d2.loss_mask: 1.4638  decode.d2.loss_dice: 1.6289  decode.d3.loss_cls: 0.3232  decode.d3.loss_mask: 1.4536  decode.d3.loss_dice: 1.6500  decode.d4.loss_cls: 0.3066  decode.d4.loss_mask: 1.4257  decode.d4.loss_dice: 1.6336  decode.d5.loss_cls: 0.3259  decode.d5.loss_mask: 1.4694  decode.d5.loss_dice: 1.6499  decode.d6.loss_cls: 0.3269  decode.d6.loss_mask: 1.4715  decode.d6.loss_dice: 1.6751  decode.d7.loss_cls: 0.3746  decode.d7.loss_mask: 1.4611  decode.d7.loss_dice: 1.6509  decode.d8.loss_cls: 0.3565  decode.d8.loss_mask: 1.5155  decode.d8.loss_dice: 1.6579
2025/03/27 11:24:32 - mmengine - INFO - Iter(train) [ 3250/20000]  base_lr: 8.5252e-05 lr: 8.5252e-05  eta: 2:24:37  time: 0.5308  data_time: 0.0250  memory: 6884  loss: 30.9403  decode.loss_cls: 0.3108  decode.loss_mask: 1.4196  decode.loss_dice: 1.3575  decode.d0.loss_cls: 0.4033  decode.d0.loss_mask: 1.4547  decode.d0.loss_dice: 1.4541  decode.d1.loss_cls: 0.4151  decode.d1.loss_mask: 1.3963  decode.d1.loss_dice: 1.3354  decode.d2.loss_cls: 0.3693  decode.d2.loss_mask: 1.3899  decode.d2.loss_dice: 1.3221  decode.d3.loss_cls: 0.3870  decode.d3.loss_mask: 1.3830  decode.d3.loss_dice: 1.3332  decode.d4.loss_cls: 0.3408  decode.d4.loss_mask: 1.3914  decode.d4.loss_dice: 1.2911  decode.d5.loss_cls: 0.3459  decode.d5.loss_mask: 1.3488  decode.d5.loss_dice: 1.3416  decode.d6.loss_cls: 0.3188  decode.d6.loss_mask: 1.3686  decode.d6.loss_dice: 1.3474  decode.d7.loss_cls: 0.3322  decode.d7.loss_mask: 1.3742  decode.d7.loss_dice: 1.3557  decode.d8.loss_cls: 0.2836  decode.d8.loss_mask: 1.4172  decode.d8.loss_dice: 1.3519
2025/03/27 11:24:58 - mmengine - INFO - Iter(train) [ 3300/20000]  base_lr: 8.5023e-05 lr: 8.5023e-05  eta: 2:24:14  time: 0.5339  data_time: 0.0249  memory: 6889  loss: 26.3560  decode.loss_cls: 0.1873  decode.loss_mask: 1.1623  decode.loss_dice: 1.2688  decode.d0.loss_cls: 0.3532  decode.d0.loss_mask: 1.1507  decode.d0.loss_dice: 1.3378  decode.d1.loss_cls: 0.2403  decode.d1.loss_mask: 1.1503  decode.d1.loss_dice: 1.2541  decode.d2.loss_cls: 0.2036  decode.d2.loss_mask: 1.1623  decode.d2.loss_dice: 1.2796  decode.d3.loss_cls: 0.1817  decode.d3.loss_mask: 1.1655  decode.d3.loss_dice: 1.2457  decode.d4.loss_cls: 0.1619  decode.d4.loss_mask: 1.1571  decode.d4.loss_dice: 1.2492  decode.d5.loss_cls: 0.1710  decode.d5.loss_mask: 1.1516  decode.d5.loss_dice: 1.2582  decode.d6.loss_cls: 0.1653  decode.d6.loss_mask: 1.1595  decode.d6.loss_dice: 1.2513  decode.d7.loss_cls: 0.2202  decode.d7.loss_mask: 1.1589  decode.d7.loss_dice: 1.2544  decode.d8.loss_cls: 0.2228  decode.d8.loss_mask: 1.1555  decode.d8.loss_dice: 1.2763
2025/03/27 11:25:25 - mmengine - INFO - Iter(train) [ 3350/20000]  base_lr: 8.4794e-05 lr: 8.4794e-05  eta: 2:23:53  time: 0.5338  data_time: 0.0257  memory: 6891  loss: 29.7829  decode.loss_cls: 0.1081  decode.loss_mask: 1.3408  decode.loss_dice: 1.5272  decode.d0.loss_cls: 0.3166  decode.d0.loss_mask: 1.3854  decode.d0.loss_dice: 1.5312  decode.d1.loss_cls: 0.1468  decode.d1.loss_mask: 1.3002  decode.d1.loss_dice: 1.5106  decode.d2.loss_cls: 0.1258  decode.d2.loss_mask: 1.2935  decode.d2.loss_dice: 1.4888  decode.d3.loss_cls: 0.1326  decode.d3.loss_mask: 1.2856  decode.d3.loss_dice: 1.5092  decode.d4.loss_cls: 0.1133  decode.d4.loss_mask: 1.3029  decode.d4.loss_dice: 1.5299  decode.d5.loss_cls: 0.1210  decode.d5.loss_mask: 1.3020  decode.d5.loss_dice: 1.5265  decode.d6.loss_cls: 0.1787  decode.d6.loss_mask: 1.2797  decode.d6.loss_dice: 1.4925  decode.d7.loss_cls: 0.1656  decode.d7.loss_mask: 1.2836  decode.d7.loss_dice: 1.5100  decode.d8.loss_cls: 0.1834  decode.d8.loss_mask: 1.2912  decode.d8.loss_dice: 1.5002
2025/03/27 11:25:52 - mmengine - INFO - Iter(train) [ 3400/20000]  base_lr: 8.4565e-05 lr: 8.4565e-05  eta: 2:23:31  time: 0.5338  data_time: 0.0257  memory: 6887  loss: 28.2034  decode.loss_cls: 0.2118  decode.loss_mask: 1.3141  decode.loss_dice: 1.2724  decode.d0.loss_cls: 0.3405  decode.d0.loss_mask: 1.2750  decode.d0.loss_dice: 1.3050  decode.d1.loss_cls: 0.2379  decode.d1.loss_mask: 1.2488  decode.d1.loss_dice: 1.2858  decode.d2.loss_cls: 0.2349  decode.d2.loss_mask: 1.2636  decode.d2.loss_dice: 1.2656  decode.d3.loss_cls: 0.3060  decode.d3.loss_mask: 1.2877  decode.d3.loss_dice: 1.2613  decode.d4.loss_cls: 0.2694  decode.d4.loss_mask: 1.3210  decode.d4.loss_dice: 1.2711  decode.d5.loss_cls: 0.2312  decode.d5.loss_mask: 1.2966  decode.d5.loss_dice: 1.2819  decode.d6.loss_cls: 0.1975  decode.d6.loss_mask: 1.3322  decode.d6.loss_dice: 1.2535  decode.d7.loss_cls: 0.2533  decode.d7.loss_mask: 1.3284  decode.d7.loss_dice: 1.2406  decode.d8.loss_cls: 0.2119  decode.d8.loss_mask: 1.3082  decode.d8.loss_dice: 1.2963
2025/03/27 11:26:19 - mmengine - INFO - Iter(train) [ 3450/20000]  base_lr: 8.4336e-05 lr: 8.4336e-05  eta: 2:23:09  time: 0.5373  data_time: 0.0255  memory: 6885  loss: 31.2660  decode.loss_cls: 0.1261  decode.loss_mask: 1.4471  decode.loss_dice: 1.5292  decode.d0.loss_cls: 0.3439  decode.d0.loss_mask: 1.3693  decode.d0.loss_dice: 1.5918  decode.d1.loss_cls: 0.1460  decode.d1.loss_mask: 1.4509  decode.d1.loss_dice: 1.5430  decode.d2.loss_cls: 0.1682  decode.d2.loss_mask: 1.4379  decode.d2.loss_dice: 1.4946  decode.d3.loss_cls: 0.1186  decode.d3.loss_mask: 1.4846  decode.d3.loss_dice: 1.5063  decode.d4.loss_cls: 0.1271  decode.d4.loss_mask: 1.4764  decode.d4.loss_dice: 1.5016  decode.d5.loss_cls: 0.1216  decode.d5.loss_mask: 1.4701  decode.d5.loss_dice: 1.4964  decode.d6.loss_cls: 0.1785  decode.d6.loss_mask: 1.4463  decode.d6.loss_dice: 1.4767  decode.d7.loss_cls: 0.2000  decode.d7.loss_mask: 1.3833  decode.d7.loss_dice: 1.5246  decode.d8.loss_cls: 0.1312  decode.d8.loss_mask: 1.4611  decode.d8.loss_dice: 1.5136
2025/03/27 11:26:45 - mmengine - INFO - Iter(train) [ 3500/20000]  base_lr: 8.4106e-05 lr: 8.4106e-05  eta: 2:22:47  time: 0.5380  data_time: 0.0254  memory: 6889  loss: 31.9715  decode.loss_cls: 0.1479  decode.loss_mask: 1.3577  decode.loss_dice: 1.6236  decode.d0.loss_cls: 0.3364  decode.d0.loss_mask: 1.3406  decode.d0.loss_dice: 1.6195  decode.d1.loss_cls: 0.1871  decode.d1.loss_mask: 1.3385  decode.d1.loss_dice: 1.6509  decode.d2.loss_cls: 0.2563  decode.d2.loss_mask: 1.3332  decode.d2.loss_dice: 1.6435  decode.d3.loss_cls: 0.2496  decode.d3.loss_mask: 1.3166  decode.d3.loss_dice: 1.5864  decode.d4.loss_cls: 0.3232  decode.d4.loss_mask: 1.3629  decode.d4.loss_dice: 1.5849  decode.d5.loss_cls: 0.2690  decode.d5.loss_mask: 1.4115  decode.d5.loss_dice: 1.5670  decode.d6.loss_cls: 0.2703  decode.d6.loss_mask: 1.3469  decode.d6.loss_dice: 1.5774  decode.d7.loss_cls: 0.2339  decode.d7.loss_mask: 1.3090  decode.d7.loss_dice: 1.5847  decode.d8.loss_cls: 0.1901  decode.d8.loss_mask: 1.3201  decode.d8.loss_dice: 1.6330
2025/03/27 11:27:12 - mmengine - INFO - Iter(train) [ 3550/20000]  base_lr: 8.3877e-05 lr: 8.3877e-05  eta: 2:22:25  time: 0.5337  data_time: 0.0249  memory: 6884  loss: 31.6470  decode.loss_cls: 0.1429  decode.loss_mask: 1.4521  decode.loss_dice: 1.5159  decode.d0.loss_cls: 0.4083  decode.d0.loss_mask: 1.4259  decode.d0.loss_dice: 1.5212  decode.d1.loss_cls: 0.2176  decode.d1.loss_mask: 1.4308  decode.d1.loss_dice: 1.5106  decode.d2.loss_cls: 0.2848  decode.d2.loss_mask: 1.4089  decode.d2.loss_dice: 1.4644  decode.d3.loss_cls: 0.2848  decode.d3.loss_mask: 1.4098  decode.d3.loss_dice: 1.4767  decode.d4.loss_cls: 0.3066  decode.d4.loss_mask: 1.3834  decode.d4.loss_dice: 1.4819  decode.d5.loss_cls: 0.3046  decode.d5.loss_mask: 1.3991  decode.d5.loss_dice: 1.4690  decode.d6.loss_cls: 0.3150  decode.d6.loss_mask: 1.3785  decode.d6.loss_dice: 1.4505  decode.d7.loss_cls: 0.2508  decode.d7.loss_mask: 1.3755  decode.d7.loss_dice: 1.4672  decode.d8.loss_cls: 0.2095  decode.d8.loss_mask: 1.4069  decode.d8.loss_dice: 1.4938
2025/03/27 11:27:39 - mmengine - INFO - Iter(train) [ 3600/20000]  base_lr: 8.3647e-05 lr: 8.3647e-05  eta: 2:22:03  time: 0.5362  data_time: 0.0258  memory: 6886  loss: 29.4213  decode.loss_cls: 0.1994  decode.loss_mask: 1.2789  decode.loss_dice: 1.4580  decode.d0.loss_cls: 0.3034  decode.d0.loss_mask: 1.2643  decode.d0.loss_dice: 1.4698  decode.d1.loss_cls: 0.1979  decode.d1.loss_mask: 1.2735  decode.d1.loss_dice: 1.4549  decode.d2.loss_cls: 0.2394  decode.d2.loss_mask: 1.2566  decode.d2.loss_dice: 1.4613  decode.d3.loss_cls: 0.1725  decode.d3.loss_mask: 1.2788  decode.d3.loss_dice: 1.4752  decode.d4.loss_cls: 0.1603  decode.d4.loss_mask: 1.2786  decode.d4.loss_dice: 1.4731  decode.d5.loss_cls: 0.2006  decode.d5.loss_mask: 1.2865  decode.d5.loss_dice: 1.4843  decode.d6.loss_cls: 0.1989  decode.d6.loss_mask: 1.2600  decode.d6.loss_dice: 1.4553  decode.d7.loss_cls: 0.1846  decode.d7.loss_mask: 1.2809  decode.d7.loss_dice: 1.4740  decode.d8.loss_cls: 0.1810  decode.d8.loss_mask: 1.2661  decode.d8.loss_dice: 1.4531
2025/03/27 11:28:06 - mmengine - INFO - Iter(train) [ 3650/20000]  base_lr: 8.3418e-05 lr: 8.3418e-05  eta: 2:21:41  time: 0.5388  data_time: 0.0258  memory: 6888  loss: 31.6850  decode.loss_cls: 0.2251  decode.loss_mask: 1.3805  decode.loss_dice: 1.5369  decode.d0.loss_cls: 0.3572  decode.d0.loss_mask: 1.3301  decode.d0.loss_dice: 1.5550  decode.d1.loss_cls: 0.3024  decode.d1.loss_mask: 1.3095  decode.d1.loss_dice: 1.5152  decode.d2.loss_cls: 0.3233  decode.d2.loss_mask: 1.3264  decode.d2.loss_dice: 1.4822  decode.d3.loss_cls: 0.3743  decode.d3.loss_mask: 1.3437  decode.d3.loss_dice: 1.5037  decode.d4.loss_cls: 0.3294  decode.d4.loss_mask: 1.3607  decode.d4.loss_dice: 1.5002  decode.d5.loss_cls: 0.2633  decode.d5.loss_mask: 1.3759  decode.d5.loss_dice: 1.5118  decode.d6.loss_cls: 0.3443  decode.d6.loss_mask: 1.3174  decode.d6.loss_dice: 1.4712  decode.d7.loss_cls: 0.3258  decode.d7.loss_mask: 1.3224  decode.d7.loss_dice: 1.5222  decode.d8.loss_cls: 0.2235  decode.d8.loss_mask: 1.4029  decode.d8.loss_dice: 1.5485
2025/03/27 11:28:32 - mmengine - INFO - Iter(train) [ 3700/20000]  base_lr: 8.3188e-05 lr: 8.3188e-05  eta: 2:21:15  time: 0.5059  data_time: 0.0204  memory: 6889  loss: 31.5699  decode.loss_cls: 0.2046  decode.loss_mask: 1.4404  decode.loss_dice: 1.4780  decode.d0.loss_cls: 0.4074  decode.d0.loss_mask: 1.4340  decode.d0.loss_dice: 1.4964  decode.d1.loss_cls: 0.2458  decode.d1.loss_mask: 1.4025  decode.d1.loss_dice: 1.4337  decode.d2.loss_cls: 0.2951  decode.d2.loss_mask: 1.4180  decode.d2.loss_dice: 1.4315  decode.d3.loss_cls: 0.2665  decode.d3.loss_mask: 1.4312  decode.d3.loss_dice: 1.4303  decode.d4.loss_cls: 0.2703  decode.d4.loss_mask: 1.4503  decode.d4.loss_dice: 1.4303  decode.d5.loss_cls: 0.3117  decode.d5.loss_mask: 1.4303  decode.d5.loss_dice: 1.4350  decode.d6.loss_cls: 0.3036  decode.d6.loss_mask: 1.3985  decode.d6.loss_dice: 1.4207  decode.d7.loss_cls: 0.3044  decode.d7.loss_mask: 1.4160  decode.d7.loss_dice: 1.4511  decode.d8.loss_cls: 0.2291  decode.d8.loss_mask: 1.4245  decode.d8.loss_dice: 1.4789
2025/03/27 11:28:57 - mmengine - INFO - Iter(train) [ 3750/20000]  base_lr: 8.2958e-05 lr: 8.2958e-05  eta: 2:20:46  time: 0.5036  data_time: 0.0203  memory: 6886  loss: 30.1749  decode.loss_cls: 0.1638  decode.loss_mask: 1.2384  decode.loss_dice: 1.6314  decode.d0.loss_cls: 0.3305  decode.d0.loss_mask: 1.2298  decode.d0.loss_dice: 1.6379  decode.d1.loss_cls: 0.2018  decode.d1.loss_mask: 1.2080  decode.d1.loss_dice: 1.5989  decode.d2.loss_cls: 0.1905  decode.d2.loss_mask: 1.1885  decode.d2.loss_dice: 1.6105  decode.d3.loss_cls: 0.1687  decode.d3.loss_mask: 1.1851  decode.d3.loss_dice: 1.6166  decode.d4.loss_cls: 0.1986  decode.d4.loss_mask: 1.1637  decode.d4.loss_dice: 1.5969  decode.d5.loss_cls: 0.1418  decode.d5.loss_mask: 1.2120  decode.d5.loss_dice: 1.6415  decode.d6.loss_cls: 0.2024  decode.d6.loss_mask: 1.2211  decode.d6.loss_dice: 1.6107  decode.d7.loss_cls: 0.2175  decode.d7.loss_mask: 1.1728  decode.d7.loss_dice: 1.5927  decode.d8.loss_cls: 0.1789  decode.d8.loss_mask: 1.2110  decode.d8.loss_dice: 1.6131
2025/03/27 11:29:22 - mmengine - INFO - Iter(train) [ 3800/20000]  base_lr: 8.2729e-05 lr: 8.2729e-05  eta: 2:20:17  time: 0.5010  data_time: 0.0203  memory: 6888  loss: 31.0116  decode.loss_cls: 0.3945  decode.loss_mask: 1.1680  decode.loss_dice: 1.5427  decode.d0.loss_cls: 0.3823  decode.d0.loss_mask: 1.2152  decode.d0.loss_dice: 1.6155  decode.d1.loss_cls: 0.3669  decode.d1.loss_mask: 1.1690  decode.d1.loss_dice: 1.4952  decode.d2.loss_cls: 0.3288  decode.d2.loss_mask: 1.2052  decode.d2.loss_dice: 1.5243  decode.d3.loss_cls: 0.3315  decode.d3.loss_mask: 1.1991  decode.d3.loss_dice: 1.5279  decode.d4.loss_cls: 0.3697  decode.d4.loss_mask: 1.2049  decode.d4.loss_dice: 1.5300  decode.d5.loss_cls: 0.3917  decode.d5.loss_mask: 1.1904  decode.d5.loss_dice: 1.5222  decode.d6.loss_cls: 0.3348  decode.d6.loss_mask: 1.1950  decode.d6.loss_dice: 1.5477  decode.d7.loss_cls: 0.3538  decode.d7.loss_mask: 1.2145  decode.d7.loss_dice: 1.5685  decode.d8.loss_cls: 0.3663  decode.d8.loss_mask: 1.1816  decode.d8.loss_dice: 1.5746
2025/03/27 11:29:48 - mmengine - INFO - Iter(train) [ 3850/20000]  base_lr: 8.2499e-05 lr: 8.2499e-05  eta: 2:19:48  time: 0.5105  data_time: 0.0226  memory: 6891  loss: 31.4679  decode.loss_cls: 0.3020  decode.loss_mask: 1.3929  decode.loss_dice: 1.5144  decode.d0.loss_cls: 0.3616  decode.d0.loss_mask: 1.3789  decode.d0.loss_dice: 1.5691  decode.d1.loss_cls: 0.2112  decode.d1.loss_mask: 1.3804  decode.d1.loss_dice: 1.5120  decode.d2.loss_cls: 0.2154  decode.d2.loss_mask: 1.4001  decode.d2.loss_dice: 1.5143  decode.d3.loss_cls: 0.2510  decode.d3.loss_mask: 1.3676  decode.d3.loss_dice: 1.4950  decode.d4.loss_cls: 0.1957  decode.d4.loss_mask: 1.3793  decode.d4.loss_dice: 1.4988  decode.d5.loss_cls: 0.1880  decode.d5.loss_mask: 1.4169  decode.d5.loss_dice: 1.5216  decode.d6.loss_cls: 0.2134  decode.d6.loss_mask: 1.4024  decode.d6.loss_dice: 1.5215  decode.d7.loss_cls: 0.1672  decode.d7.loss_mask: 1.4497  decode.d7.loss_dice: 1.5036  decode.d8.loss_cls: 0.2558  decode.d8.loss_mask: 1.3677  decode.d8.loss_dice: 1.5206
2025/03/27 11:30:13 - mmengine - INFO - Iter(train) [ 3900/20000]  base_lr: 8.2269e-05 lr: 8.2269e-05  eta: 2:19:20  time: 0.5159  data_time: 0.0216  memory: 6887  loss: 31.6644  decode.loss_cls: 0.4041  decode.loss_mask: 1.2509  decode.loss_dice: 1.5274  decode.d0.loss_cls: 0.3572  decode.d0.loss_mask: 1.2679  decode.d0.loss_dice: 1.6452  decode.d1.loss_cls: 0.3759  decode.d1.loss_mask: 1.2723  decode.d1.loss_dice: 1.5541  decode.d2.loss_cls: 0.3855  decode.d2.loss_mask: 1.2177  decode.d2.loss_dice: 1.4736  decode.d3.loss_cls: 0.3608  decode.d3.loss_mask: 1.2758  decode.d3.loss_dice: 1.4946  decode.d4.loss_cls: 0.4244  decode.d4.loss_mask: 1.2301  decode.d4.loss_dice: 1.5029  decode.d5.loss_cls: 0.3647  decode.d5.loss_mask: 1.2609  decode.d5.loss_dice: 1.5026  decode.d6.loss_cls: 0.3509  decode.d6.loss_mask: 1.2565  decode.d6.loss_dice: 1.5189  decode.d7.loss_cls: 0.4451  decode.d7.loss_mask: 1.2456  decode.d7.loss_dice: 1.4992  decode.d8.loss_cls: 0.4387  decode.d8.loss_mask: 1.2183  decode.d8.loss_dice: 1.5427
2025/03/27 11:30:40 - mmengine - INFO - Iter(train) [ 3950/20000]  base_lr: 8.2039e-05 lr: 8.2039e-05  eta: 2:18:58  time: 0.5387  data_time: 0.0254  memory: 6888  loss: 28.1603  decode.loss_cls: 0.1151  decode.loss_mask: 1.2113  decode.loss_dice: 1.4261  decode.d0.loss_cls: 0.3069  decode.d0.loss_mask: 1.1809  decode.d0.loss_dice: 1.4718  decode.d1.loss_cls: 0.2470  decode.d1.loss_mask: 1.1792  decode.d1.loss_dice: 1.4328  decode.d2.loss_cls: 0.1550  decode.d2.loss_mask: 1.1979  decode.d2.loss_dice: 1.4361  decode.d3.loss_cls: 0.1956  decode.d3.loss_mask: 1.2167  decode.d3.loss_dice: 1.4162  decode.d4.loss_cls: 0.1127  decode.d4.loss_mask: 1.2154  decode.d4.loss_dice: 1.4493  decode.d5.loss_cls: 0.1327  decode.d5.loss_mask: 1.2188  decode.d5.loss_dice: 1.4427  decode.d6.loss_cls: 0.1457  decode.d6.loss_mask: 1.2280  decode.d6.loss_dice: 1.4390  decode.d7.loss_cls: 0.1710  decode.d7.loss_mask: 1.1726  decode.d7.loss_dice: 1.4613  decode.d8.loss_cls: 0.1445  decode.d8.loss_mask: 1.2139  decode.d8.loss_dice: 1.4241
2025/03/27 11:31:07 - mmengine - INFO - Exp name: pr2vi_20250327_105544
2025/03/27 11:31:07 - mmengine - INFO - Iter(train) [ 4000/20000]  base_lr: 8.1809e-05 lr: 8.1809e-05  eta: 2:18:36  time: 0.5382  data_time: 0.0257  memory: 6884  loss: 29.2292  decode.loss_cls: 0.3994  decode.loss_mask: 1.1941  decode.loss_dice: 1.3419  decode.d0.loss_cls: 0.3373  decode.d0.loss_mask: 1.2423  decode.d0.loss_dice: 1.4484  decode.d1.loss_cls: 0.2781  decode.d1.loss_mask: 1.1911  decode.d1.loss_dice: 1.3622  decode.d2.loss_cls: 0.3632  decode.d2.loss_mask: 1.1939  decode.d2.loss_dice: 1.3204  decode.d3.loss_cls: 0.3475  decode.d3.loss_mask: 1.1908  decode.d3.loss_dice: 1.3078  decode.d4.loss_cls: 0.2552  decode.d4.loss_mask: 1.2031  decode.d4.loss_dice: 1.4010  decode.d5.loss_cls: 0.2529  decode.d5.loss_mask: 1.2368  decode.d5.loss_dice: 1.4536  decode.d6.loss_cls: 0.2308  decode.d6.loss_mask: 1.2432  decode.d6.loss_dice: 1.4491  decode.d7.loss_cls: 0.2218  decode.d7.loss_mask: 1.2842  decode.d7.loss_dice: 1.4721  decode.d8.loss_cls: 0.3351  decode.d8.loss_mask: 1.2742  decode.d8.loss_dice: 1.3976
2025/03/27 11:31:07 - mmengine - INFO - Saving checkpoint at 4000 iterations
2025/03/27 11:31:13 - mmengine - INFO - Iter(val) [ 50/398]    eta: 0:00:29  time: 0.0842  data_time: 0.0017  memory: 3120  
2025/03/27 11:31:17 - mmengine - INFO - Iter(val) [100/398]    eta: 0:00:25  time: 0.0844  data_time: 0.0019  memory: 3120  
2025/03/27 11:31:21 - mmengine - INFO - Iter(val) [150/398]    eta: 0:00:20  time: 0.0841  data_time: 0.0017  memory: 3120  
2025/03/27 11:31:25 - mmengine - INFO - Iter(val) [200/398]    eta: 0:00:16  time: 0.0842  data_time: 0.0018  memory: 3120  
2025/03/27 11:31:30 - mmengine - INFO - Iter(val) [250/398]    eta: 0:00:12  time: 0.0844  data_time: 0.0018  memory: 3120  
2025/03/27 11:31:34 - mmengine - INFO - Iter(val) [300/398]    eta: 0:00:08  time: 0.0851  data_time: 0.0018  memory: 3120  
2025/03/27 11:31:38 - mmengine - INFO - Iter(val) [350/398]    eta: 0:00:04  time: 0.0874  data_time: 0.0025  memory: 3120  
2025/03/27 11:31:42 - mmengine - INFO - per class results:
2025/03/27 11:31:42 - mmengine - INFO - 
+--------------------+-------+-------+
|       Class        |  IoU  |  Acc  |
+--------------------+-------+-------+
| impervious_surface | 71.04 |  75.6 |
|      building      |  86.7 | 93.45 |
|   low_vegetation   | 48.35 | 61.01 |
|        tree        | 68.14 | 75.08 |
|        car         | 55.92 | 69.67 |
|      clutter       |  7.72 | 97.43 |
+--------------------+-------+-------+
2025/03/27 11:31:42 - mmengine - INFO - Iter(val) [398/398]    aAcc: 76.9200  mIoU: 56.3100  mAcc: 78.7100  data_time: 0.0020  time: 0.0851
2025/03/27 11:31:42 - mmengine - INFO - The previous best checkpoint /data/xiaoxinghhh/code/my_mmcv/work_dirs/pr2vi/DA_spatial_64_fft_cut_off_0.3_pre3/4ddf0_seed0/best_mIoU_iter_2000.pth is removed
2025/03/27 11:31:43 - mmengine - INFO - The best checkpoint with 56.3100 mIoU at 4000 iter is saved to best_mIoU_iter_4000.pth.
2025/03/27 11:32:37 - mmengine - INFO - Iter(train) [ 4050/20000]  base_lr: 8.1579e-05 lr: 8.1579e-05  eta: 2:20:04  time: 1.0692  data_time: 0.0222  memory: 10805  loss: 59.9374  decode.loss_cls: 0.2060  decode.loss_mask: 1.7749  decode.loss_dice: 1.8612  decode.d0.loss_cls: 0.3250  decode.d0.loss_mask: 1.7460  decode.d0.loss_dice: 1.8647  decode.d1.loss_cls: 0.2431  decode.d1.loss_mask: 1.7205  decode.d1.loss_dice: 1.8573  decode.d2.loss_cls: 0.2516  decode.d2.loss_mask: 1.7474  decode.d2.loss_dice: 1.8523  decode.d3.loss_cls: 0.2406  decode.d3.loss_mask: 1.7322  decode.d3.loss_dice: 1.8487  decode.d4.loss_cls: 0.2099  decode.d4.loss_mask: 1.7451  decode.d4.loss_dice: 1.8655  decode.d5.loss_cls: 0.2060  decode.d5.loss_mask: 1.7809  decode.d5.loss_dice: 1.8638  decode.d6.loss_cls: 0.2125  decode.d6.loss_mask: 1.8012  decode.d6.loss_dice: 1.8681  decode.d7.loss_cls: 0.2557  decode.d7.loss_mask: 1.7812  decode.d7.loss_dice: 1.8767  decode.d8.loss_cls: 0.2211  decode.d8.loss_mask: 1.7495  decode.d8.loss_dice: 1.8661  mix_decode.loss_cls: 0.2748  mix_decode.loss_mask: 0.8044  mix_decode.loss_dice: 1.0919  mix_decode.d0.loss_cls: 0.2539  mix_decode.d0.loss_mask: 0.7841  mix_decode.d0.loss_dice: 1.1342  mix_decode.d1.loss_cls: 0.2471  mix_decode.d1.loss_mask: 0.7945  mix_decode.d1.loss_dice: 1.0803  mix_decode.d2.loss_cls: 0.2422  mix_decode.d2.loss_mask: 0.8093  mix_decode.d2.loss_dice: 1.0727  mix_decode.d3.loss_cls: 0.2497  mix_decode.d3.loss_mask: 0.8077  mix_decode.d3.loss_dice: 1.0878  mix_decode.d4.loss_cls: 0.2593  mix_decode.d4.loss_mask: 0.7961  mix_decode.d4.loss_dice: 1.0678  mix_decode.d5.loss_cls: 0.2466  mix_decode.d5.loss_mask: 0.8105  mix_decode.d5.loss_dice: 1.0733  mix_decode.d6.loss_cls: 0.2144  mix_decode.d6.loss_mask: 0.8284  mix_decode.d6.loss_dice: 1.0786  mix_decode.d7.loss_cls: 0.2144  mix_decode.d7.loss_mask: 0.8246  mix_decode.d7.loss_dice: 1.0883  mix_decode.d8.loss_cls: 0.2304  mix_decode.d8.loss_mask: 0.8049  mix_decode.d8.loss_dice: 1.0907
2025/03/27 11:33:31 - mmengine - INFO - Iter(train) [ 4100/20000]  base_lr: 8.1349e-05 lr: 8.1349e-05  eta: 2:21:23  time: 1.0693  data_time: 0.0218  memory: 10807  loss: 54.1390  decode.loss_cls: 0.3931  decode.loss_mask: 1.5393  decode.loss_dice: 1.6083  decode.d0.loss_cls: 0.4992  decode.d0.loss_mask: 1.4881  decode.d0.loss_dice: 1.5939  decode.d1.loss_cls: 0.5260  decode.d1.loss_mask: 1.4852  decode.d1.loss_dice: 1.5642  decode.d2.loss_cls: 0.5095  decode.d2.loss_mask: 1.4951  decode.d2.loss_dice: 1.5559  decode.d3.loss_cls: 0.4862  decode.d3.loss_mask: 1.5677  decode.d3.loss_dice: 1.5613  decode.d4.loss_cls: 0.4115  decode.d4.loss_mask: 1.5122  decode.d4.loss_dice: 1.5513  decode.d5.loss_cls: 0.4181  decode.d5.loss_mask: 1.4753  decode.d5.loss_dice: 1.5955  decode.d6.loss_cls: 0.3677  decode.d6.loss_mask: 1.6506  decode.d6.loss_dice: 1.5869  decode.d7.loss_cls: 0.4241  decode.d7.loss_mask: 1.6790  decode.d7.loss_dice: 1.5974  decode.d8.loss_cls: 0.3065  decode.d8.loss_mask: 1.7122  decode.d8.loss_dice: 1.6340  mix_decode.loss_cls: 0.2621  mix_decode.loss_mask: 0.6318  mix_decode.loss_dice: 0.9581  mix_decode.d0.loss_cls: 0.2492  mix_decode.d0.loss_mask: 0.6129  mix_decode.d0.loss_dice: 0.9998  mix_decode.d1.loss_cls: 0.2573  mix_decode.d1.loss_mask: 0.6021  mix_decode.d1.loss_dice: 0.9722  mix_decode.d2.loss_cls: 0.2578  mix_decode.d2.loss_mask: 0.6025  mix_decode.d2.loss_dice: 0.9621  mix_decode.d3.loss_cls: 0.2593  mix_decode.d3.loss_mask: 0.6033  mix_decode.d3.loss_dice: 0.9423  mix_decode.d4.loss_cls: 0.2974  mix_decode.d4.loss_mask: 0.6046  mix_decode.d4.loss_dice: 0.9346  mix_decode.d5.loss_cls: 0.2540  mix_decode.d5.loss_mask: 0.6002  mix_decode.d5.loss_dice: 0.9541  mix_decode.d6.loss_cls: 0.2726  mix_decode.d6.loss_mask: 0.6085  mix_decode.d6.loss_dice: 0.9569  mix_decode.d7.loss_cls: 0.2672  mix_decode.d7.loss_mask: 0.6234  mix_decode.d7.loss_dice: 0.9571  mix_decode.d8.loss_cls: 0.2654  mix_decode.d8.loss_mask: 0.6061  mix_decode.d8.loss_dice: 0.9692
2025/03/27 11:34:24 - mmengine - INFO - Iter(train) [ 4150/20000]  base_lr: 8.1118e-05 lr: 8.1118e-05  eta: 2:22:39  time: 1.0703  data_time: 0.0216  memory: 10803  loss: 45.1570  decode.loss_cls: 0.2243  decode.loss_mask: 1.2572  decode.loss_dice: 1.2957  decode.d0.loss_cls: 0.3390  decode.d0.loss_mask: 1.2759  decode.d0.loss_dice: 1.3280  decode.d1.loss_cls: 0.2026  decode.d1.loss_mask: 1.3597  decode.d1.loss_dice: 1.2960  decode.d2.loss_cls: 0.2311  decode.d2.loss_mask: 1.2728  decode.d2.loss_dice: 1.2865  decode.d3.loss_cls: 0.2418  decode.d3.loss_mask: 1.2651  decode.d3.loss_dice: 1.2628  decode.d4.loss_cls: 0.2092  decode.d4.loss_mask: 1.3417  decode.d4.loss_dice: 1.2566  decode.d5.loss_cls: 0.2533  decode.d5.loss_mask: 1.2497  decode.d5.loss_dice: 1.2668  decode.d6.loss_cls: 0.1858  decode.d6.loss_mask: 1.2857  decode.d6.loss_dice: 1.2894  decode.d7.loss_cls: 0.2490  decode.d7.loss_mask: 1.2283  decode.d7.loss_dice: 1.2795  decode.d8.loss_cls: 0.2767  decode.d8.loss_mask: 1.2406  decode.d8.loss_dice: 1.3041  mix_decode.loss_cls: 0.1943  mix_decode.loss_mask: 0.6003  mix_decode.loss_dice: 0.9040  mix_decode.d0.loss_cls: 0.2037  mix_decode.d0.loss_mask: 0.6125  mix_decode.d0.loss_dice: 0.9417  mix_decode.d1.loss_cls: 0.1629  mix_decode.d1.loss_mask: 0.6170  mix_decode.d1.loss_dice: 0.9178  mix_decode.d2.loss_cls: 0.1970  mix_decode.d2.loss_mask: 0.6073  mix_decode.d2.loss_dice: 0.9065  mix_decode.d3.loss_cls: 0.1951  mix_decode.d3.loss_mask: 0.6081  mix_decode.d3.loss_dice: 0.8999  mix_decode.d4.loss_cls: 0.1657  mix_decode.d4.loss_mask: 0.6158  mix_decode.d4.loss_dice: 0.9013  mix_decode.d5.loss_cls: 0.2024  mix_decode.d5.loss_mask: 0.6116  mix_decode.d5.loss_dice: 0.9060  mix_decode.d6.loss_cls: 0.1985  mix_decode.d6.loss_mask: 0.6065  mix_decode.d6.loss_dice: 0.8992  mix_decode.d7.loss_cls: 0.1708  mix_decode.d7.loss_mask: 0.6154  mix_decode.d7.loss_dice: 0.9203  mix_decode.d8.loss_cls: 0.1911  mix_decode.d8.loss_mask: 0.6003  mix_decode.d8.loss_dice: 0.9291
2025/03/27 11:35:18 - mmengine - INFO - Iter(train) [ 4200/20000]  base_lr: 8.0888e-05 lr: 8.0888e-05  eta: 2:23:52  time: 1.0712  data_time: 0.0222  memory: 10810  loss: 41.5357  decode.loss_cls: 0.1410  decode.loss_mask: 1.2649  decode.loss_dice: 1.2765  decode.d0.loss_cls: 0.2491  decode.d0.loss_mask: 1.2212  decode.d0.loss_dice: 1.3255  decode.d1.loss_cls: 0.1601  decode.d1.loss_mask: 1.2543  decode.d1.loss_dice: 1.2345  decode.d2.loss_cls: 0.1500  decode.d2.loss_mask: 1.2607  decode.d2.loss_dice: 1.2559  decode.d3.loss_cls: 0.1470  decode.d3.loss_mask: 1.2714  decode.d3.loss_dice: 1.2502  decode.d4.loss_cls: 0.1536  decode.d4.loss_mask: 1.2777  decode.d4.loss_dice: 1.2298  decode.d5.loss_cls: 0.1867  decode.d5.loss_mask: 1.2676  decode.d5.loss_dice: 1.2605  decode.d6.loss_cls: 0.1855  decode.d6.loss_mask: 1.2494  decode.d6.loss_dice: 1.2488  decode.d7.loss_cls: 0.1462  decode.d7.loss_mask: 1.2712  decode.d7.loss_dice: 1.2683  decode.d8.loss_cls: 0.1542  decode.d8.loss_mask: 1.2600  decode.d8.loss_dice: 1.2778  mix_decode.loss_cls: 0.0624  mix_decode.loss_mask: 0.6032  mix_decode.loss_dice: 0.7912  mix_decode.d0.loss_cls: 0.0942  mix_decode.d0.loss_mask: 0.6095  mix_decode.d0.loss_dice: 0.8106  mix_decode.d1.loss_cls: 0.0604  mix_decode.d1.loss_mask: 0.6051  mix_decode.d1.loss_dice: 0.8018  mix_decode.d2.loss_cls: 0.0546  mix_decode.d2.loss_mask: 0.6110  mix_decode.d2.loss_dice: 0.7971  mix_decode.d3.loss_cls: 0.0688  mix_decode.d3.loss_mask: 0.6114  mix_decode.d3.loss_dice: 0.7832  mix_decode.d4.loss_cls: 0.0632  mix_decode.d4.loss_mask: 0.6080  mix_decode.d4.loss_dice: 0.7822  mix_decode.d5.loss_cls: 0.0670  mix_decode.d5.loss_mask: 0.6092  mix_decode.d5.loss_dice: 0.7721  mix_decode.d6.loss_cls: 0.0608  mix_decode.d6.loss_mask: 0.6127  mix_decode.d6.loss_dice: 0.7897  mix_decode.d7.loss_cls: 0.0607  mix_decode.d7.loss_mask: 0.6056  mix_decode.d7.loss_dice: 0.7855  mix_decode.d8.loss_cls: 0.0490  mix_decode.d8.loss_mask: 0.6090  mix_decode.d8.loss_dice: 0.7969
2025/03/27 11:36:12 - mmengine - INFO - Iter(train) [ 4250/20000]  base_lr: 8.0658e-05 lr: 8.0658e-05  eta: 2:25:02  time: 1.0703  data_time: 0.0223  memory: 10806  loss: 45.1916  decode.loss_cls: 0.2929  decode.loss_mask: 1.2495  decode.loss_dice: 1.4669  decode.d0.loss_cls: 0.3569  decode.d0.loss_mask: 1.2535  decode.d0.loss_dice: 1.4746  decode.d1.loss_cls: 0.2451  decode.d1.loss_mask: 1.2388  decode.d1.loss_dice: 1.4372  decode.d2.loss_cls: 0.2943  decode.d2.loss_mask: 1.2187  decode.d2.loss_dice: 1.4558  decode.d3.loss_cls: 0.2513  decode.d3.loss_mask: 1.2064  decode.d3.loss_dice: 1.4506  decode.d4.loss_cls: 0.3029  decode.d4.loss_mask: 1.2117  decode.d4.loss_dice: 1.4390  decode.d5.loss_cls: 0.2708  decode.d5.loss_mask: 1.2415  decode.d5.loss_dice: 1.4583  decode.d6.loss_cls: 0.2685  decode.d6.loss_mask: 1.2255  decode.d6.loss_dice: 1.4673  decode.d7.loss_cls: 0.2253  decode.d7.loss_mask: 1.2311  decode.d7.loss_dice: 1.4574  decode.d8.loss_cls: 0.2727  decode.d8.loss_mask: 1.2753  decode.d8.loss_dice: 1.4733  mix_decode.loss_cls: 0.1477  mix_decode.loss_mask: 0.6195  mix_decode.loss_dice: 0.8073  mix_decode.d0.loss_cls: 0.1825  mix_decode.d0.loss_mask: 0.6093  mix_decode.d0.loss_dice: 0.8008  mix_decode.d1.loss_cls: 0.1352  mix_decode.d1.loss_mask: 0.6019  mix_decode.d1.loss_dice: 0.7877  mix_decode.d2.loss_cls: 0.1213  mix_decode.d2.loss_mask: 0.6101  mix_decode.d2.loss_dice: 0.7902  mix_decode.d3.loss_cls: 0.1268  mix_decode.d3.loss_mask: 0.6131  mix_decode.d3.loss_dice: 0.7822  mix_decode.d4.loss_cls: 0.1427  mix_decode.d4.loss_mask: 0.6105  mix_decode.d4.loss_dice: 0.7903  mix_decode.d5.loss_cls: 0.1534  mix_decode.d5.loss_mask: 0.6167  mix_decode.d5.loss_dice: 0.7865  mix_decode.d6.loss_cls: 0.1365  mix_decode.d6.loss_mask: 0.6209  mix_decode.d6.loss_dice: 0.7975  mix_decode.d7.loss_cls: 0.1277  mix_decode.d7.loss_mask: 0.6240  mix_decode.d7.loss_dice: 0.7949  mix_decode.d8.loss_cls: 0.1209  mix_decode.d8.loss_mask: 0.6239  mix_decode.d8.loss_dice: 0.7968
2025/03/27 11:37:05 - mmengine - INFO - Iter(train) [ 4300/20000]  base_lr: 8.0427e-05 lr: 8.0427e-05  eta: 2:26:09  time: 1.0684  data_time: 0.0219  memory: 10803  loss: 41.7679  decode.loss_cls: 0.1894  decode.loss_mask: 1.2235  decode.loss_dice: 1.2699  decode.d0.loss_cls: 0.3584  decode.d0.loss_mask: 1.1751  decode.d0.loss_dice: 1.2966  decode.d1.loss_cls: 0.2543  decode.d1.loss_mask: 1.1707  decode.d1.loss_dice: 1.2613  decode.d2.loss_cls: 0.2997  decode.d2.loss_mask: 1.1575  decode.d2.loss_dice: 1.2701  decode.d3.loss_cls: 0.2426  decode.d3.loss_mask: 1.1645  decode.d3.loss_dice: 1.2639  decode.d4.loss_cls: 0.1759  decode.d4.loss_mask: 1.1852  decode.d4.loss_dice: 1.2880  decode.d5.loss_cls: 0.2365  decode.d5.loss_mask: 1.2149  decode.d5.loss_dice: 1.2657  decode.d6.loss_cls: 0.2529  decode.d6.loss_mask: 1.1914  decode.d6.loss_dice: 1.2683  decode.d7.loss_cls: 0.2135  decode.d7.loss_mask: 1.1690  decode.d7.loss_dice: 1.2864  decode.d8.loss_cls: 0.1894  decode.d8.loss_mask: 1.2143  decode.d8.loss_dice: 1.2685  mix_decode.loss_cls: 0.2074  mix_decode.loss_mask: 0.5378  mix_decode.loss_dice: 0.7484  mix_decode.d0.loss_cls: 0.1236  mix_decode.d0.loss_mask: 0.5752  mix_decode.d0.loss_dice: 0.8112  mix_decode.d1.loss_cls: 0.1470  mix_decode.d1.loss_mask: 0.5626  mix_decode.d1.loss_dice: 0.7796  mix_decode.d2.loss_cls: 0.1646  mix_decode.d2.loss_mask: 0.5455  mix_decode.d2.loss_dice: 0.7503  mix_decode.d3.loss_cls: 0.1710  mix_decode.d3.loss_mask: 0.5472  mix_decode.d3.loss_dice: 0.7571  mix_decode.d4.loss_cls: 0.1506  mix_decode.d4.loss_mask: 0.5538  mix_decode.d4.loss_dice: 0.7651  mix_decode.d5.loss_cls: 0.1373  mix_decode.d5.loss_mask: 0.5611  mix_decode.d5.loss_dice: 0.7597  mix_decode.d6.loss_cls: 0.1234  mix_decode.d6.loss_mask: 0.5587  mix_decode.d6.loss_dice: 0.7701  mix_decode.d7.loss_cls: 0.1327  mix_decode.d7.loss_mask: 0.5734  mix_decode.d7.loss_dice: 0.7615  mix_decode.d8.loss_cls: 0.1234  mix_decode.d8.loss_mask: 0.5781  mix_decode.d8.loss_dice: 0.7729
2025/03/27 11:38:00 - mmengine - INFO - Iter(train) [ 4350/20000]  base_lr: 8.0197e-05 lr: 8.0197e-05  eta: 2:27:20  time: 1.1142  data_time: 0.0260  memory: 10805  loss: 46.3672  decode.loss_cls: 0.1962  decode.loss_mask: 1.2467  decode.loss_dice: 1.5540  decode.d0.loss_cls: 0.3100  decode.d0.loss_mask: 1.2740  decode.d0.loss_dice: 1.5525  decode.d1.loss_cls: 0.1897  decode.d1.loss_mask: 1.2444  decode.d1.loss_dice: 1.5259  decode.d2.loss_cls: 0.1831  decode.d2.loss_mask: 1.2563  decode.d2.loss_dice: 1.5268  decode.d3.loss_cls: 0.1849  decode.d3.loss_mask: 1.2661  decode.d3.loss_dice: 1.5460  decode.d4.loss_cls: 0.2628  decode.d4.loss_mask: 1.2749  decode.d4.loss_dice: 1.5385  decode.d5.loss_cls: 0.1903  decode.d5.loss_mask: 1.2735  decode.d5.loss_dice: 1.5717  decode.d6.loss_cls: 0.1261  decode.d6.loss_mask: 1.2786  decode.d6.loss_dice: 1.5629  decode.d7.loss_cls: 0.1291  decode.d7.loss_mask: 1.2419  decode.d7.loss_dice: 1.5845  decode.d8.loss_cls: 0.1145  decode.d8.loss_mask: 1.2932  decode.d8.loss_dice: 1.5894  mix_decode.loss_cls: 0.0594  mix_decode.loss_mask: 0.6410  mix_decode.loss_dice: 0.9186  mix_decode.d0.loss_cls: 0.1150  mix_decode.d0.loss_mask: 0.6485  mix_decode.d0.loss_dice: 0.9123  mix_decode.d1.loss_cls: 0.0894  mix_decode.d1.loss_mask: 0.6310  mix_decode.d1.loss_dice: 0.8967  mix_decode.d2.loss_cls: 0.0843  mix_decode.d2.loss_mask: 0.6359  mix_decode.d2.loss_dice: 0.8962  mix_decode.d3.loss_cls: 0.0665  mix_decode.d3.loss_mask: 0.6505  mix_decode.d3.loss_dice: 0.9138  mix_decode.d4.loss_cls: 0.0878  mix_decode.d4.loss_mask: 0.6235  mix_decode.d4.loss_dice: 0.9133  mix_decode.d5.loss_cls: 0.0876  mix_decode.d5.loss_mask: 0.6284  mix_decode.d5.loss_dice: 0.9068  mix_decode.d6.loss_cls: 0.0794  mix_decode.d6.loss_mask: 0.6308  mix_decode.d6.loss_dice: 0.8995  mix_decode.d7.loss_cls: 0.0838  mix_decode.d7.loss_mask: 0.6333  mix_decode.d7.loss_dice: 0.9304  mix_decode.d8.loss_cls: 0.0684  mix_decode.d8.loss_mask: 0.6331  mix_decode.d8.loss_dice: 0.9135
2025/03/27 11:38:56 - mmengine - INFO - Iter(train) [ 4400/20000]  base_lr: 7.9966e-05 lr: 7.9966e-05  eta: 2:28:29  time: 1.1151  data_time: 0.0257  memory: 10805  loss: 42.5943  decode.loss_cls: 0.2693  decode.loss_mask: 1.1205  decode.loss_dice: 1.3228  decode.d0.loss_cls: 0.3025  decode.d0.loss_mask: 1.1322  decode.d0.loss_dice: 1.3683  decode.d1.loss_cls: 0.2390  decode.d1.loss_mask: 1.1196  decode.d1.loss_dice: 1.3243  decode.d2.loss_cls: 0.2244  decode.d2.loss_mask: 1.1148  decode.d2.loss_dice: 1.3455  decode.d3.loss_cls: 0.1977  decode.d3.loss_mask: 1.1185  decode.d3.loss_dice: 1.3455  decode.d4.loss_cls: 0.2214  decode.d4.loss_mask: 1.1039  decode.d4.loss_dice: 1.3636  decode.d5.loss_cls: 0.2142  decode.d5.loss_mask: 1.1010  decode.d5.loss_dice: 1.3500  decode.d6.loss_cls: 0.2090  decode.d6.loss_mask: 1.1190  decode.d6.loss_dice: 1.3653  decode.d7.loss_cls: 0.2170  decode.d7.loss_mask: 1.1076  decode.d7.loss_dice: 1.3728  decode.d8.loss_cls: 0.2318  decode.d8.loss_mask: 1.1073  decode.d8.loss_dice: 1.3517  mix_decode.loss_cls: 0.1111  mix_decode.loss_mask: 0.6029  mix_decode.loss_dice: 0.8389  mix_decode.d0.loss_cls: 0.1097  mix_decode.d0.loss_mask: 0.6236  mix_decode.d0.loss_dice: 0.8685  mix_decode.d1.loss_cls: 0.1065  mix_decode.d1.loss_mask: 0.6048  mix_decode.d1.loss_dice: 0.8448  mix_decode.d2.loss_cls: 0.1038  mix_decode.d2.loss_mask: 0.5950  mix_decode.d2.loss_dice: 0.8482  mix_decode.d3.loss_cls: 0.0935  mix_decode.d3.loss_mask: 0.6065  mix_decode.d3.loss_dice: 0.8616  mix_decode.d4.loss_cls: 0.0970  mix_decode.d4.loss_mask: 0.6053  mix_decode.d4.loss_dice: 0.8554  mix_decode.d5.loss_cls: 0.0985  mix_decode.d5.loss_mask: 0.6022  mix_decode.d5.loss_dice: 0.8476  mix_decode.d6.loss_cls: 0.1038  mix_decode.d6.loss_mask: 0.6035  mix_decode.d6.loss_dice: 0.8610  mix_decode.d7.loss_cls: 0.0897  mix_decode.d7.loss_mask: 0.6117  mix_decode.d7.loss_dice: 0.8653  mix_decode.d8.loss_cls: 0.0843  mix_decode.d8.loss_mask: 0.6139  mix_decode.d8.loss_dice: 0.8549
2025/03/27 11:39:50 - mmengine - INFO - Iter(train) [ 4450/20000]  base_lr: 7.9735e-05 lr: 7.9735e-05  eta: 2:29:29  time: 1.0702  data_time: 0.0217  memory: 10806  loss: 49.9349  decode.loss_cls: 0.2731  decode.loss_mask: 1.3537  decode.loss_dice: 1.7062  decode.d0.loss_cls: 0.3602  decode.d0.loss_mask: 1.3584  decode.d0.loss_dice: 1.7310  decode.d1.loss_cls: 0.2790  decode.d1.loss_mask: 1.3689  decode.d1.loss_dice: 1.6878  decode.d2.loss_cls: 0.2478  decode.d2.loss_mask: 1.3425  decode.d2.loss_dice: 1.6732  decode.d3.loss_cls: 0.2323  decode.d3.loss_mask: 1.3528  decode.d3.loss_dice: 1.6957  decode.d4.loss_cls: 0.2786  decode.d4.loss_mask: 1.3716  decode.d4.loss_dice: 1.6962  decode.d5.loss_cls: 0.2293  decode.d5.loss_mask: 1.3450  decode.d5.loss_dice: 1.6762  decode.d6.loss_cls: 0.2516  decode.d6.loss_mask: 1.3576  decode.d6.loss_dice: 1.7140  decode.d7.loss_cls: 0.3044  decode.d7.loss_mask: 1.3275  decode.d7.loss_dice: 1.7015  decode.d8.loss_cls: 0.2721  decode.d8.loss_mask: 1.3473  decode.d8.loss_dice: 1.7052  mix_decode.loss_cls: 0.1817  mix_decode.loss_mask: 0.5660  mix_decode.loss_dice: 0.9359  mix_decode.d0.loss_cls: 0.1482  mix_decode.d0.loss_mask: 0.5692  mix_decode.d0.loss_dice: 0.9721  mix_decode.d1.loss_cls: 0.1455  mix_decode.d1.loss_mask: 0.5799  mix_decode.d1.loss_dice: 0.9399  mix_decode.d2.loss_cls: 0.2303  mix_decode.d2.loss_mask: 0.5397  mix_decode.d2.loss_dice: 0.9091  mix_decode.d3.loss_cls: 0.1772  mix_decode.d3.loss_mask: 0.5591  mix_decode.d3.loss_dice: 0.9169  mix_decode.d4.loss_cls: 0.1615  mix_decode.d4.loss_mask: 0.5677  mix_decode.d4.loss_dice: 0.9232  mix_decode.d5.loss_cls: 0.1727  mix_decode.d5.loss_mask: 0.5439  mix_decode.d5.loss_dice: 0.9243  mix_decode.d6.loss_cls: 0.1897  mix_decode.d6.loss_mask: 0.5562  mix_decode.d6.loss_dice: 0.9316  mix_decode.d7.loss_cls: 0.1839  mix_decode.d7.loss_mask: 0.5509  mix_decode.d7.loss_dice: 0.9485  mix_decode.d8.loss_cls: 0.1743  mix_decode.d8.loss_mask: 0.5607  mix_decode.d8.loss_dice: 0.9346
2025/03/27 11:40:44 - mmengine - INFO - Iter(train) [ 4500/20000]  base_lr: 7.9504e-05 lr: 7.9504e-05  eta: 2:30:26  time: 1.0679  data_time: 0.0222  memory: 10809  loss: 41.9587  decode.loss_cls: 0.0652  decode.loss_mask: 1.2705  decode.loss_dice: 1.3676  decode.d0.loss_cls: 0.2180  decode.d0.loss_mask: 1.2429  decode.d0.loss_dice: 1.4295  decode.d1.loss_cls: 0.0848  decode.d1.loss_mask: 1.2790  decode.d1.loss_dice: 1.3987  decode.d2.loss_cls: 0.0615  decode.d2.loss_mask: 1.2955  decode.d2.loss_dice: 1.4117  decode.d3.loss_cls: 0.0647  decode.d3.loss_mask: 1.2820  decode.d3.loss_dice: 1.3941  decode.d4.loss_cls: 0.0709  decode.d4.loss_mask: 1.2929  decode.d4.loss_dice: 1.4192  decode.d5.loss_cls: 0.0661  decode.d5.loss_mask: 1.3014  decode.d5.loss_dice: 1.4038  decode.d6.loss_cls: 0.0659  decode.d6.loss_mask: 1.2811  decode.d6.loss_dice: 1.3727  decode.d7.loss_cls: 0.0634  decode.d7.loss_mask: 1.2556  decode.d7.loss_dice: 1.3792  decode.d8.loss_cls: 0.0664  decode.d8.loss_mask: 1.2601  decode.d8.loss_dice: 1.3755  mix_decode.loss_cls: 0.0947  mix_decode.loss_mask: 0.5946  mix_decode.loss_dice: 0.7452  mix_decode.d0.loss_cls: 0.1190  mix_decode.d0.loss_mask: 0.5962  mix_decode.d0.loss_dice: 0.7860  mix_decode.d1.loss_cls: 0.0836  mix_decode.d1.loss_mask: 0.5819  mix_decode.d1.loss_dice: 0.7403  mix_decode.d2.loss_cls: 0.0679  mix_decode.d2.loss_mask: 0.5870  mix_decode.d2.loss_dice: 0.7451  mix_decode.d3.loss_cls: 0.0791  mix_decode.d3.loss_mask: 0.5928  mix_decode.d3.loss_dice: 0.7454  mix_decode.d4.loss_cls: 0.0821  mix_decode.d4.loss_mask: 0.6068  mix_decode.d4.loss_dice: 0.7517  mix_decode.d5.loss_cls: 0.1200  mix_decode.d5.loss_mask: 0.6021  mix_decode.d5.loss_dice: 0.7376  mix_decode.d6.loss_cls: 0.0984  mix_decode.d6.loss_mask: 0.6013  mix_decode.d6.loss_dice: 0.7517  mix_decode.d7.loss_cls: 0.0882  mix_decode.d7.loss_mask: 0.5977  mix_decode.d7.loss_dice: 0.7629  mix_decode.d8.loss_cls: 0.0831  mix_decode.d8.loss_mask: 0.6094  mix_decode.d8.loss_dice: 0.7672
2025/03/27 11:41:37 - mmengine - INFO - Iter(train) [ 4550/20000]  base_lr: 7.9274e-05 lr: 7.9274e-05  eta: 2:31:20  time: 1.0766  data_time: 0.0224  memory: 10805  loss: 41.6185  decode.loss_cls: 0.3239  decode.loss_mask: 1.0471  decode.loss_dice: 1.3976  decode.d0.loss_cls: 0.3933  decode.d0.loss_mask: 1.0623  decode.d0.loss_dice: 1.4522  decode.d1.loss_cls: 0.2523  decode.d1.loss_mask: 1.0473  decode.d1.loss_dice: 1.3774  decode.d2.loss_cls: 0.2956  decode.d2.loss_mask: 1.0449  decode.d2.loss_dice: 1.4083  decode.d3.loss_cls: 0.2884  decode.d3.loss_mask: 1.0410  decode.d3.loss_dice: 1.3674  decode.d4.loss_cls: 0.2527  decode.d4.loss_mask: 1.0350  decode.d4.loss_dice: 1.3813  decode.d5.loss_cls: 0.2833  decode.d5.loss_mask: 1.0332  decode.d5.loss_dice: 1.4158  decode.d6.loss_cls: 0.2879  decode.d6.loss_mask: 1.0514  decode.d6.loss_dice: 1.3924  decode.d7.loss_cls: 0.2738  decode.d7.loss_mask: 1.0681  decode.d7.loss_dice: 1.4014  decode.d8.loss_cls: 0.2903  decode.d8.loss_mask: 1.0606  decode.d8.loss_dice: 1.4469  mix_decode.loss_cls: 0.1754  mix_decode.loss_mask: 0.4919  mix_decode.loss_dice: 0.7754  mix_decode.d0.loss_cls: 0.1389  mix_decode.d0.loss_mask: 0.4942  mix_decode.d0.loss_dice: 0.8123  mix_decode.d1.loss_cls: 0.1376  mix_decode.d1.loss_mask: 0.4948  mix_decode.d1.loss_dice: 0.7523  mix_decode.d2.loss_cls: 0.1390  mix_decode.d2.loss_mask: 0.4909  mix_decode.d2.loss_dice: 0.7501  mix_decode.d3.loss_cls: 0.1564  mix_decode.d3.loss_mask: 0.4883  mix_decode.d3.loss_dice: 0.7631  mix_decode.d4.loss_cls: 0.1662  mix_decode.d4.loss_mask: 0.4815  mix_decode.d4.loss_dice: 0.7557  mix_decode.d5.loss_cls: 0.1738  mix_decode.d5.loss_mask: 0.4824  mix_decode.d5.loss_dice: 0.7586  mix_decode.d6.loss_cls: 0.1695  mix_decode.d6.loss_mask: 0.4858  mix_decode.d6.loss_dice: 0.7542  mix_decode.d7.loss_cls: 0.1479  mix_decode.d7.loss_mask: 0.4921  mix_decode.d7.loss_dice: 0.7735  mix_decode.d8.loss_cls: 0.1806  mix_decode.d8.loss_mask: 0.4876  mix_decode.d8.loss_dice: 0.7755
2025/03/27 11:42:31 - mmengine - INFO - Iter(train) [ 4600/20000]  base_lr: 7.9043e-05 lr: 7.9043e-05  eta: 2:32:12  time: 1.0830  data_time: 0.0240  memory: 10810  loss: 49.4077  decode.loss_cls: 0.3231  decode.loss_mask: 1.6273  decode.loss_dice: 1.4253  decode.d0.loss_cls: 0.3943  decode.d0.loss_mask: 1.6094  decode.d0.loss_dice: 1.4516  decode.d1.loss_cls: 0.3247  decode.d1.loss_mask: 1.5893  decode.d1.loss_dice: 1.4239  decode.d2.loss_cls: 0.3490  decode.d2.loss_mask: 1.5959  decode.d2.loss_dice: 1.4579  decode.d3.loss_cls: 0.4005  decode.d3.loss_mask: 1.5732  decode.d3.loss_dice: 1.4470  decode.d4.loss_cls: 0.3568  decode.d4.loss_mask: 1.6163  decode.d4.loss_dice: 1.4290  decode.d5.loss_cls: 0.3216  decode.d5.loss_mask: 1.5948  decode.d5.loss_dice: 1.4492  decode.d6.loss_cls: 0.3472  decode.d6.loss_mask: 1.5825  decode.d6.loss_dice: 1.4521  decode.d7.loss_cls: 0.3500  decode.d7.loss_mask: 1.5923  decode.d7.loss_dice: 1.4520  decode.d8.loss_cls: 0.3908  decode.d8.loss_mask: 1.5737  decode.d8.loss_dice: 1.4777  mix_decode.loss_cls: 0.0681  mix_decode.loss_mask: 0.6403  mix_decode.loss_dice: 0.8419  mix_decode.d0.loss_cls: 0.1230  mix_decode.d0.loss_mask: 0.6426  mix_decode.d0.loss_dice: 0.8392  mix_decode.d1.loss_cls: 0.0757  mix_decode.d1.loss_mask: 0.6406  mix_decode.d1.loss_dice: 0.8240  mix_decode.d2.loss_cls: 0.0838  mix_decode.d2.loss_mask: 0.6380  mix_decode.d2.loss_dice: 0.8137  mix_decode.d3.loss_cls: 0.0712  mix_decode.d3.loss_mask: 0.6391  mix_decode.d3.loss_dice: 0.8369  mix_decode.d4.loss_cls: 0.0627  mix_decode.d4.loss_mask: 0.6407  mix_decode.d4.loss_dice: 0.8150  mix_decode.d5.loss_cls: 0.0761  mix_decode.d5.loss_mask: 0.6414  mix_decode.d5.loss_dice: 0.8068  mix_decode.d6.loss_cls: 0.0670  mix_decode.d6.loss_mask: 0.6306  mix_decode.d6.loss_dice: 0.8240  mix_decode.d7.loss_cls: 0.0577  mix_decode.d7.loss_mask: 0.6307  mix_decode.d7.loss_dice: 0.8414  mix_decode.d8.loss_cls: 0.0685  mix_decode.d8.loss_mask: 0.6439  mix_decode.d8.loss_dice: 0.8450
2025/03/27 11:43:25 - mmengine - INFO - Iter(train) [ 4650/20000]  base_lr: 7.8812e-05 lr: 7.8812e-05  eta: 2:33:02  time: 1.0705  data_time: 0.0222  memory: 10816  loss: 43.6261  decode.loss_cls: 0.1857  decode.loss_mask: 1.2371  decode.loss_dice: 1.5517  decode.d0.loss_cls: 0.2423  decode.d0.loss_mask: 1.3268  decode.d0.loss_dice: 1.6256  decode.d1.loss_cls: 0.2051  decode.d1.loss_mask: 1.2634  decode.d1.loss_dice: 1.5563  decode.d2.loss_cls: 0.1953  decode.d2.loss_mask: 1.2818  decode.d2.loss_dice: 1.5646  decode.d3.loss_cls: 0.2754  decode.d3.loss_mask: 1.2562  decode.d3.loss_dice: 1.5061  decode.d4.loss_cls: 0.2379  decode.d4.loss_mask: 1.2688  decode.d4.loss_dice: 1.5369  decode.d5.loss_cls: 0.1929  decode.d5.loss_mask: 1.2721  decode.d5.loss_dice: 1.5384  decode.d6.loss_cls: 0.1177  decode.d6.loss_mask: 1.2974  decode.d6.loss_dice: 1.5763  decode.d7.loss_cls: 0.2030  decode.d7.loss_mask: 1.2435  decode.d7.loss_dice: 1.5486  decode.d8.loss_cls: 0.1635  decode.d8.loss_mask: 1.2936  decode.d8.loss_dice: 1.5799  mix_decode.loss_cls: 0.1426  mix_decode.loss_mask: 0.5007  mix_decode.loss_dice: 0.6990  mix_decode.d0.loss_cls: 0.1260  mix_decode.d0.loss_mask: 0.5064  mix_decode.d0.loss_dice: 0.7234  mix_decode.d1.loss_cls: 0.0997  mix_decode.d1.loss_mask: 0.5110  mix_decode.d1.loss_dice: 0.7051  mix_decode.d2.loss_cls: 0.1293  mix_decode.d2.loss_mask: 0.5036  mix_decode.d2.loss_dice: 0.6759  mix_decode.d3.loss_cls: 0.1337  mix_decode.d3.loss_mask: 0.5249  mix_decode.d3.loss_dice: 0.6913  mix_decode.d4.loss_cls: 0.1182  mix_decode.d4.loss_mask: 0.5118  mix_decode.d4.loss_dice: 0.6823  mix_decode.d5.loss_cls: 0.1177  mix_decode.d5.loss_mask: 0.5072  mix_decode.d5.loss_dice: 0.6801  mix_decode.d6.loss_cls: 0.1499  mix_decode.d6.loss_mask: 0.4992  mix_decode.d6.loss_dice: 0.6705  mix_decode.d7.loss_cls: 0.1231  mix_decode.d7.loss_mask: 0.5161  mix_decode.d7.loss_dice: 0.6847  mix_decode.d8.loss_cls: 0.1520  mix_decode.d8.loss_mask: 0.5003  mix_decode.d8.loss_dice: 0.6963
2025/03/27 11:44:19 - mmengine - INFO - Iter(train) [ 4700/20000]  base_lr: 7.8581e-05 lr: 7.8581e-05  eta: 2:33:50  time: 1.0856  data_time: 0.0239  memory: 10806  loss: 44.9582  decode.loss_cls: 0.1988  decode.loss_mask: 1.4402  decode.loss_dice: 1.4902  decode.d0.loss_cls: 0.3581  decode.d0.loss_mask: 1.4834  decode.d0.loss_dice: 1.4956  decode.d1.loss_cls: 0.2517  decode.d1.loss_mask: 1.4842  decode.d1.loss_dice: 1.4612  decode.d2.loss_cls: 0.2213  decode.d2.loss_mask: 1.4625  decode.d2.loss_dice: 1.4561  decode.d3.loss_cls: 0.2146  decode.d3.loss_mask: 1.4396  decode.d3.loss_dice: 1.4415  decode.d4.loss_cls: 0.2206  decode.d4.loss_mask: 1.4471  decode.d4.loss_dice: 1.4665  decode.d5.loss_cls: 0.2117  decode.d5.loss_mask: 1.4382  decode.d5.loss_dice: 1.4728  decode.d6.loss_cls: 0.2181  decode.d6.loss_mask: 1.4311  decode.d6.loss_dice: 1.4687  decode.d7.loss_cls: 0.2010  decode.d7.loss_mask: 1.4315  decode.d7.loss_dice: 1.4510  decode.d8.loss_cls: 0.1975  decode.d8.loss_mask: 1.4457  decode.d8.loss_dice: 1.4982  mix_decode.loss_cls: 0.1158  mix_decode.loss_mask: 0.5187  mix_decode.loss_dice: 0.7288  mix_decode.d0.loss_cls: 0.1097  mix_decode.d0.loss_mask: 0.5243  mix_decode.d0.loss_dice: 0.7573  mix_decode.d1.loss_cls: 0.0787  mix_decode.d1.loss_mask: 0.5236  mix_decode.d1.loss_dice: 0.7193  mix_decode.d2.loss_cls: 0.0709  mix_decode.d2.loss_mask: 0.5224  mix_decode.d2.loss_dice: 0.7199  mix_decode.d3.loss_cls: 0.0649  mix_decode.d3.loss_mask: 0.5278  mix_decode.d3.loss_dice: 0.7227  mix_decode.d4.loss_cls: 0.1146  mix_decode.d4.loss_mask: 0.5225  mix_decode.d4.loss_dice: 0.7256  mix_decode.d5.loss_cls: 0.1230  mix_decode.d5.loss_mask: 0.5181  mix_decode.d5.loss_dice: 0.7213  mix_decode.d6.loss_cls: 0.1085  mix_decode.d6.loss_mask: 0.5226  mix_decode.d6.loss_dice: 0.7247  mix_decode.d7.loss_cls: 0.0802  mix_decode.d7.loss_mask: 0.5258  mix_decode.d7.loss_dice: 0.7287  mix_decode.d8.loss_cls: 0.0750  mix_decode.d8.loss_mask: 0.5222  mix_decode.d8.loss_dice: 0.7421
2025/03/27 11:45:12 - mmengine - INFO - Iter(train) [ 4750/20000]  base_lr: 7.8349e-05 lr: 7.8349e-05  eta: 2:34:35  time: 1.0976  data_time: 0.0237  memory: 10807  loss: 45.6399  decode.loss_cls: 0.1060  decode.loss_mask: 1.3271  decode.loss_dice: 1.5726  decode.d0.loss_cls: 0.2332  decode.d0.loss_mask: 1.3289  decode.d0.loss_dice: 1.6379  decode.d1.loss_cls: 0.1377  decode.d1.loss_mask: 1.3482  decode.d1.loss_dice: 1.5649  decode.d2.loss_cls: 0.1228  decode.d2.loss_mask: 1.3510  decode.d2.loss_dice: 1.5531  decode.d3.loss_cls: 0.1108  decode.d3.loss_mask: 1.3737  decode.d3.loss_dice: 1.5490  decode.d4.loss_cls: 0.1736  decode.d4.loss_mask: 1.3531  decode.d4.loss_dice: 1.5540  decode.d5.loss_cls: 0.1552  decode.d5.loss_mask: 1.3434  decode.d5.loss_dice: 1.5111  decode.d6.loss_cls: 0.1086  decode.d6.loss_mask: 1.3335  decode.d6.loss_dice: 1.5741  decode.d7.loss_cls: 0.1166  decode.d7.loss_mask: 1.3286  decode.d7.loss_dice: 1.6044  decode.d8.loss_cls: 0.1016  decode.d8.loss_mask: 1.3158  decode.d8.loss_dice: 1.5903  mix_decode.loss_cls: 0.1529  mix_decode.loss_mask: 0.5700  mix_decode.loss_dice: 0.8177  mix_decode.d0.loss_cls: 0.1127  mix_decode.d0.loss_mask: 0.5795  mix_decode.d0.loss_dice: 0.8638  mix_decode.d1.loss_cls: 0.1463  mix_decode.d1.loss_mask: 0.5576  mix_decode.d1.loss_dice: 0.8125  mix_decode.d2.loss_cls: 0.1171  mix_decode.d2.loss_mask: 0.5717  mix_decode.d2.loss_dice: 0.8046  mix_decode.d3.loss_cls: 0.0999  mix_decode.d3.loss_mask: 0.5755  mix_decode.d3.loss_dice: 0.7927  mix_decode.d4.loss_cls: 0.1041  mix_decode.d4.loss_mask: 0.5892  mix_decode.d4.loss_dice: 0.8040  mix_decode.d5.loss_cls: 0.1234  mix_decode.d5.loss_mask: 0.5838  mix_decode.d5.loss_dice: 0.8102  mix_decode.d6.loss_cls: 0.1186  mix_decode.d6.loss_mask: 0.5763  mix_decode.d6.loss_dice: 0.8210  mix_decode.d7.loss_cls: 0.1242  mix_decode.d7.loss_mask: 0.5660  mix_decode.d7.loss_dice: 0.8439  mix_decode.d8.loss_cls: 0.1347  mix_decode.d8.loss_mask: 0.5655  mix_decode.d8.loss_dice: 0.8198
2025/03/27 11:46:06 - mmengine - INFO - Iter(train) [ 4800/20000]  base_lr: 7.8118e-05 lr: 7.8118e-05  eta: 2:35:19  time: 1.0710  data_time: 0.0221  memory: 10806  loss: 43.7559  decode.loss_cls: 0.2886  decode.loss_mask: 1.0760  decode.loss_dice: 1.5119  decode.d0.loss_cls: 0.3444  decode.d0.loss_mask: 1.0573  decode.d0.loss_dice: 1.5461  decode.d1.loss_cls: 0.2540  decode.d1.loss_mask: 1.0927  decode.d1.loss_dice: 1.5198  decode.d2.loss_cls: 0.3933  decode.d2.loss_mask: 1.0644  decode.d2.loss_dice: 1.4518  decode.d3.loss_cls: 0.3369  decode.d3.loss_mask: 1.0766  decode.d3.loss_dice: 1.4487  decode.d4.loss_cls: 0.2332  decode.d4.loss_mask: 1.0881  decode.d4.loss_dice: 1.4952  decode.d5.loss_cls: 0.2860  decode.d5.loss_mask: 1.0626  decode.d5.loss_dice: 1.5046  decode.d6.loss_cls: 0.2691  decode.d6.loss_mask: 1.0666  decode.d6.loss_dice: 1.5265  decode.d7.loss_cls: 0.3408  decode.d7.loss_mask: 1.0727  decode.d7.loss_dice: 1.5322  decode.d8.loss_cls: 0.3106  decode.d8.loss_mask: 1.0901  decode.d8.loss_dice: 1.5174  mix_decode.loss_cls: 0.1196  mix_decode.loss_mask: 0.5709  mix_decode.loss_dice: 0.8000  mix_decode.d0.loss_cls: 0.1241  mix_decode.d0.loss_mask: 0.5594  mix_decode.d0.loss_dice: 0.8128  mix_decode.d1.loss_cls: 0.1554  mix_decode.d1.loss_mask: 0.5573  mix_decode.d1.loss_dice: 0.7693  mix_decode.d2.loss_cls: 0.2010  mix_decode.d2.loss_mask: 0.5593  mix_decode.d2.loss_dice: 0.7675  mix_decode.d3.loss_cls: 0.1383  mix_decode.d3.loss_mask: 0.5766  mix_decode.d3.loss_dice: 0.7689  mix_decode.d4.loss_cls: 0.1497  mix_decode.d4.loss_mask: 0.5675  mix_decode.d4.loss_dice: 0.7714  mix_decode.d5.loss_cls: 0.1311  mix_decode.d5.loss_mask: 0.5670  mix_decode.d5.loss_dice: 0.7752  mix_decode.d6.loss_cls: 0.1212  mix_decode.d6.loss_mask: 0.5798  mix_decode.d6.loss_dice: 0.7946  mix_decode.d7.loss_cls: 0.1085  mix_decode.d7.loss_mask: 0.5863  mix_decode.d7.loss_dice: 0.8059  mix_decode.d8.loss_cls: 0.1171  mix_decode.d8.loss_mask: 0.5571  mix_decode.d8.loss_dice: 0.7849
2025/03/27 11:47:00 - mmengine - INFO - Iter(train) [ 4850/20000]  base_lr: 7.7887e-05 lr: 7.7887e-05  eta: 2:36:00  time: 1.0717  data_time: 0.0219  memory: 10803  loss: 43.8721  decode.loss_cls: 0.1508  decode.loss_mask: 1.2803  decode.loss_dice: 1.3360  decode.d0.loss_cls: 0.2925  decode.d0.loss_mask: 1.2474  decode.d0.loss_dice: 1.3782  decode.d1.loss_cls: 0.2467  decode.d1.loss_mask: 1.2466  decode.d1.loss_dice: 1.3029  decode.d2.loss_cls: 0.2408  decode.d2.loss_mask: 1.2332  decode.d2.loss_dice: 1.3087  decode.d3.loss_cls: 0.2420  decode.d3.loss_mask: 1.2234  decode.d3.loss_dice: 1.2947  decode.d4.loss_cls: 0.2686  decode.d4.loss_mask: 1.2246  decode.d4.loss_dice: 1.2923  decode.d5.loss_cls: 0.2473  decode.d5.loss_mask: 1.3025  decode.d5.loss_dice: 1.3084  decode.d6.loss_cls: 0.1812  decode.d6.loss_mask: 1.2994  decode.d6.loss_dice: 1.3362  decode.d7.loss_cls: 0.2218  decode.d7.loss_mask: 1.2536  decode.d7.loss_dice: 1.3168  decode.d8.loss_cls: 0.1655  decode.d8.loss_mask: 1.2495  decode.d8.loss_dice: 1.3362  mix_decode.loss_cls: 0.1125  mix_decode.loss_mask: 0.5985  mix_decode.loss_dice: 0.8836  mix_decode.d0.loss_cls: 0.1463  mix_decode.d0.loss_mask: 0.5810  mix_decode.d0.loss_dice: 0.8955  mix_decode.d1.loss_cls: 0.1452  mix_decode.d1.loss_mask: 0.5704  mix_decode.d1.loss_dice: 0.8383  mix_decode.d2.loss_cls: 0.1955  mix_decode.d2.loss_mask: 0.5361  mix_decode.d2.loss_dice: 0.8143  mix_decode.d3.loss_cls: 0.1991  mix_decode.d3.loss_mask: 0.5613  mix_decode.d3.loss_dice: 0.8259  mix_decode.d4.loss_cls: 0.1973  mix_decode.d4.loss_mask: 0.5699  mix_decode.d4.loss_dice: 0.8359  mix_decode.d5.loss_cls: 0.1776  mix_decode.d5.loss_mask: 0.5747  mix_decode.d5.loss_dice: 0.8241  mix_decode.d6.loss_cls: 0.1726  mix_decode.d6.loss_mask: 0.5902  mix_decode.d6.loss_dice: 0.8254  mix_decode.d7.loss_cls: 0.0997  mix_decode.d7.loss_mask: 0.5899  mix_decode.d7.loss_dice: 0.8828  mix_decode.d8.loss_cls: 0.1303  mix_decode.d8.loss_mask: 0.5903  mix_decode.d8.loss_dice: 0.8798
2025/03/27 11:47:54 - mmengine - INFO - Iter(train) [ 4900/20000]  base_lr: 7.7655e-05 lr: 7.7655e-05  eta: 2:36:42  time: 1.1160  data_time: 0.0261  memory: 10806  loss: 47.1010  decode.loss_cls: 0.0871  decode.loss_mask: 1.4902  decode.loss_dice: 1.5555  decode.d0.loss_cls: 0.2013  decode.d0.loss_mask: 1.5337  decode.d0.loss_dice: 1.5697  decode.d1.loss_cls: 0.1611  decode.d1.loss_mask: 1.4743  decode.d1.loss_dice: 1.5152  decode.d2.loss_cls: 0.2026  decode.d2.loss_mask: 1.4584  decode.d2.loss_dice: 1.4810  decode.d3.loss_cls: 0.1788  decode.d3.loss_mask: 1.4438  decode.d3.loss_dice: 1.4816  decode.d4.loss_cls: 0.1729  decode.d4.loss_mask: 1.4416  decode.d4.loss_dice: 1.4877  decode.d5.loss_cls: 0.1894  decode.d5.loss_mask: 1.4249  decode.d5.loss_dice: 1.4893  decode.d6.loss_cls: 0.1701  decode.d6.loss_mask: 1.4478  decode.d6.loss_dice: 1.5002  decode.d7.loss_cls: 0.1790  decode.d7.loss_mask: 1.4402  decode.d7.loss_dice: 1.5140  decode.d8.loss_cls: 0.1610  decode.d8.loss_mask: 1.4272  decode.d8.loss_dice: 1.5309  mix_decode.loss_cls: 0.0822  mix_decode.loss_mask: 0.6559  mix_decode.loss_dice: 0.8171  mix_decode.d0.loss_cls: 0.1331  mix_decode.d0.loss_mask: 0.6477  mix_decode.d0.loss_dice: 0.8258  mix_decode.d1.loss_cls: 0.1064  mix_decode.d1.loss_mask: 0.6414  mix_decode.d1.loss_dice: 0.7938  mix_decode.d2.loss_cls: 0.0941  mix_decode.d2.loss_mask: 0.6647  mix_decode.d2.loss_dice: 0.8054  mix_decode.d3.loss_cls: 0.1220  mix_decode.d3.loss_mask: 0.6644  mix_decode.d3.loss_dice: 0.7910  mix_decode.d4.loss_cls: 0.1090  mix_decode.d4.loss_mask: 0.6671  mix_decode.d4.loss_dice: 0.8000  mix_decode.d5.loss_cls: 0.1208  mix_decode.d5.loss_mask: 0.6668  mix_decode.d5.loss_dice: 0.7983  mix_decode.d6.loss_cls: 0.1023  mix_decode.d6.loss_mask: 0.6588  mix_decode.d6.loss_dice: 0.8004  mix_decode.d7.loss_cls: 0.0872  mix_decode.d7.loss_mask: 0.6649  mix_decode.d7.loss_dice: 0.8093  mix_decode.d8.loss_cls: 0.0854  mix_decode.d8.loss_mask: 0.6655  mix_decode.d8.loss_dice: 0.8099
2025/03/27 11:48:50 - mmengine - INFO - Iter(train) [ 4950/20000]  base_lr: 7.7424e-05 lr: 7.7424e-05  eta: 2:37:24  time: 1.0702  data_time: 0.0217  memory: 10808  loss: 44.2950  decode.loss_cls: 0.1579  decode.loss_mask: 1.2666  decode.loss_dice: 1.5903  decode.d0.loss_cls: 0.2687  decode.d0.loss_mask: 1.2788  decode.d0.loss_dice: 1.6003  decode.d1.loss_cls: 0.1969  decode.d1.loss_mask: 1.2532  decode.d1.loss_dice: 1.5280  decode.d2.loss_cls: 0.2514  decode.d2.loss_mask: 1.2137  decode.d2.loss_dice: 1.4818  decode.d3.loss_cls: 0.2931  decode.d3.loss_mask: 1.2253  decode.d3.loss_dice: 1.4868  decode.d4.loss_cls: 0.2888  decode.d4.loss_mask: 1.2119  decode.d4.loss_dice: 1.5026  decode.d5.loss_cls: 0.2681  decode.d5.loss_mask: 1.2168  decode.d5.loss_dice: 1.5013  decode.d6.loss_cls: 0.2645  decode.d6.loss_mask: 1.2632  decode.d6.loss_dice: 1.5172  decode.d7.loss_cls: 0.2519  decode.d7.loss_mask: 1.2487  decode.d7.loss_dice: 1.5586  decode.d8.loss_cls: 0.1787  decode.d8.loss_mask: 1.2886  decode.d8.loss_dice: 1.5438  mix_decode.loss_cls: 0.1077  mix_decode.loss_mask: 0.5295  mix_decode.loss_dice: 0.7526  mix_decode.d0.loss_cls: 0.1227  mix_decode.d0.loss_mask: 0.5393  mix_decode.d0.loss_dice: 0.7728  mix_decode.d1.loss_cls: 0.1682  mix_decode.d1.loss_mask: 0.5190  mix_decode.d1.loss_dice: 0.7394  mix_decode.d2.loss_cls: 0.1715  mix_decode.d2.loss_mask: 0.5223  mix_decode.d2.loss_dice: 0.7335  mix_decode.d3.loss_cls: 0.1554  mix_decode.d3.loss_mask: 0.5281  mix_decode.d3.loss_dice: 0.7154  mix_decode.d4.loss_cls: 0.1678  mix_decode.d4.loss_mask: 0.5215  mix_decode.d4.loss_dice: 0.7237  mix_decode.d5.loss_cls: 0.1747  mix_decode.d5.loss_mask: 0.5260  mix_decode.d5.loss_dice: 0.7264  mix_decode.d6.loss_cls: 0.1584  mix_decode.d6.loss_mask: 0.5171  mix_decode.d6.loss_dice: 0.7249  mix_decode.d7.loss_cls: 0.1210  mix_decode.d7.loss_mask: 0.5250  mix_decode.d7.loss_dice: 0.7485  mix_decode.d8.loss_cls: 0.1058  mix_decode.d8.loss_mask: 0.5253  mix_decode.d8.loss_dice: 0.7537
2025/03/27 11:49:43 - mmengine - INFO - Exp name: pr2vi_20250327_105544
2025/03/27 11:49:43 - mmengine - INFO - Iter(train) [ 5000/20000]  base_lr: 7.7192e-05 lr: 7.7192e-05  eta: 2:37:59  time: 1.0710  data_time: 0.0220  memory: 10801  loss: 51.4185  decode.loss_cls: 0.2697  decode.loss_mask: 1.4390  decode.loss_dice: 1.5617  decode.d0.loss_cls: 0.3684  decode.d0.loss_mask: 1.3853  decode.d0.loss_dice: 1.5865  decode.d1.loss_cls: 0.3248  decode.d1.loss_mask: 1.4211  decode.d1.loss_dice: 1.5511  decode.d2.loss_cls: 0.3052  decode.d2.loss_mask: 1.4404  decode.d2.loss_dice: 1.5335  decode.d3.loss_cls: 0.3218  decode.d3.loss_mask: 1.4044  decode.d3.loss_dice: 1.5251  decode.d4.loss_cls: 0.3303  decode.d4.loss_mask: 1.3929  decode.d4.loss_dice: 1.5484  decode.d5.loss_cls: 0.3697  decode.d5.loss_mask: 1.4237  decode.d5.loss_dice: 1.5167  decode.d6.loss_cls: 0.3184  decode.d6.loss_mask: 1.4287  decode.d6.loss_dice: 1.5489  decode.d7.loss_cls: 0.3320  decode.d7.loss_mask: 1.3941  decode.d7.loss_dice: 1.5539  decode.d8.loss_cls: 0.2797  decode.d8.loss_mask: 1.4481  decode.d8.loss_dice: 1.5442  mix_decode.loss_cls: 0.2485  mix_decode.loss_mask: 0.6115  mix_decode.loss_dice: 0.9346  mix_decode.d0.loss_cls: 0.2837  mix_decode.d0.loss_mask: 0.5898  mix_decode.d0.loss_dice: 0.9538  mix_decode.d1.loss_cls: 0.3461  mix_decode.d1.loss_mask: 0.6168  mix_decode.d1.loss_dice: 0.9033  mix_decode.d2.loss_cls: 0.3403  mix_decode.d2.loss_mask: 0.6085  mix_decode.d2.loss_dice: 0.9086  mix_decode.d3.loss_cls: 0.3321  mix_decode.d3.loss_mask: 0.6452  mix_decode.d3.loss_dice: 0.9168  mix_decode.d4.loss_cls: 0.3272  mix_decode.d4.loss_mask: 0.6386  mix_decode.d4.loss_dice: 0.9312  mix_decode.d5.loss_cls: 0.3640  mix_decode.d5.loss_mask: 0.6394  mix_decode.d5.loss_dice: 0.9060  mix_decode.d6.loss_cls: 0.3008  mix_decode.d6.loss_mask: 0.6121  mix_decode.d6.loss_dice: 0.9187  mix_decode.d7.loss_cls: 0.2930  mix_decode.d7.loss_mask: 0.6113  mix_decode.d7.loss_dice: 0.9342  mix_decode.d8.loss_cls: 0.2789  mix_decode.d8.loss_mask: 0.6217  mix_decode.d8.loss_dice: 0.9339
2025/03/27 11:50:37 - mmengine - INFO - Iter(train) [ 5050/20000]  base_lr: 7.6961e-05 lr: 7.6961e-05  eta: 2:38:32  time: 1.0707  data_time: 0.0218  memory: 10805  loss: 42.3676  decode.loss_cls: 0.1891  decode.loss_mask: 1.1378  decode.loss_dice: 1.3963  decode.d0.loss_cls: 0.2542  decode.d0.loss_mask: 1.0554  decode.d0.loss_dice: 1.3387  decode.d1.loss_cls: 0.2485  decode.d1.loss_mask: 1.0639  decode.d1.loss_dice: 1.3086  decode.d2.loss_cls: 0.2572  decode.d2.loss_mask: 1.0637  decode.d2.loss_dice: 1.2998  decode.d3.loss_cls: 0.2878  decode.d3.loss_mask: 1.0637  decode.d3.loss_dice: 1.3105  decode.d4.loss_cls: 0.3295  decode.d4.loss_mask: 1.0656  decode.d4.loss_dice: 1.3269  decode.d5.loss_cls: 0.3272  decode.d5.loss_mask: 1.0715  decode.d5.loss_dice: 1.3198  decode.d6.loss_cls: 0.2279  decode.d6.loss_mask: 1.0532  decode.d6.loss_dice: 1.3207  decode.d7.loss_cls: 0.2418  decode.d7.loss_mask: 1.0535  decode.d7.loss_dice: 1.2951  decode.d8.loss_cls: 0.2336  decode.d8.loss_mask: 1.0742  decode.d8.loss_dice: 1.3214  mix_decode.loss_cls: 0.1528  mix_decode.loss_mask: 0.5770  mix_decode.loss_dice: 0.8531  mix_decode.d0.loss_cls: 0.1336  mix_decode.d0.loss_mask: 0.5672  mix_decode.d0.loss_dice: 0.8805  mix_decode.d1.loss_cls: 0.1060  mix_decode.d1.loss_mask: 0.5715  mix_decode.d1.loss_dice: 0.8617  mix_decode.d2.loss_cls: 0.1512  mix_decode.d2.loss_mask: 0.5726  mix_decode.d2.loss_dice: 0.8382  mix_decode.d3.loss_cls: 0.1946  mix_decode.d3.loss_mask: 0.5625  mix_decode.d3.loss_dice: 0.8302  mix_decode.d4.loss_cls: 0.2054  mix_decode.d4.loss_mask: 0.5710  mix_decode.d4.loss_dice: 0.8353  mix_decode.d5.loss_cls: 0.1980  mix_decode.d5.loss_mask: 0.5732  mix_decode.d5.loss_dice: 0.8298  mix_decode.d6.loss_cls: 0.2261  mix_decode.d6.loss_mask: 0.5615  mix_decode.d6.loss_dice: 0.8206  mix_decode.d7.loss_cls: 0.1803  mix_decode.d7.loss_mask: 0.5685  mix_decode.d7.loss_dice: 0.8313  mix_decode.d8.loss_cls: 0.1753  mix_decode.d8.loss_mask: 0.5694  mix_decode.d8.loss_dice: 0.8322
2025/03/27 11:51:30 - mmengine - INFO - Iter(train) [ 5100/20000]  base_lr: 7.6729e-05 lr: 7.6729e-05  eta: 2:39:04  time: 1.0801  data_time: 0.0229  memory: 10806  loss: 45.8095  decode.loss_cls: 0.3735  decode.loss_mask: 1.2245  decode.loss_dice: 1.4847  decode.d0.loss_cls: 0.2843  decode.d0.loss_mask: 1.2574  decode.d0.loss_dice: 1.5164  decode.d1.loss_cls: 0.2463  decode.d1.loss_mask: 1.3280  decode.d1.loss_dice: 1.5264  decode.d2.loss_cls: 0.2545  decode.d2.loss_mask: 1.2536  decode.d2.loss_dice: 1.5079  decode.d3.loss_cls: 0.2431  decode.d3.loss_mask: 1.2588  decode.d3.loss_dice: 1.5044  decode.d4.loss_cls: 0.2593  decode.d4.loss_mask: 1.3019  decode.d4.loss_dice: 1.5018  decode.d5.loss_cls: 0.3463  decode.d5.loss_mask: 1.2198  decode.d5.loss_dice: 1.4789  decode.d6.loss_cls: 0.3033  decode.d6.loss_mask: 1.2282  decode.d6.loss_dice: 1.4842  decode.d7.loss_cls: 0.3358  decode.d7.loss_mask: 1.2089  decode.d7.loss_dice: 1.4590  decode.d8.loss_cls: 0.2590  decode.d8.loss_mask: 1.2307  decode.d8.loss_dice: 1.4888  mix_decode.loss_cls: 0.2306  mix_decode.loss_mask: 0.5138  mix_decode.loss_dice: 0.8077  mix_decode.d0.loss_cls: 0.1903  mix_decode.d0.loss_mask: 0.5274  mix_decode.d0.loss_dice: 0.8451  mix_decode.d1.loss_cls: 0.1717  mix_decode.d1.loss_mask: 0.5326  mix_decode.d1.loss_dice: 0.8108  mix_decode.d2.loss_cls: 0.1970  mix_decode.d2.loss_mask: 0.5216  mix_decode.d2.loss_dice: 0.7903  mix_decode.d3.loss_cls: 0.2088  mix_decode.d3.loss_mask: 0.5363  mix_decode.d3.loss_dice: 0.8057  mix_decode.d4.loss_cls: 0.2395  mix_decode.d4.loss_mask: 0.5459  mix_decode.d4.loss_dice: 0.8015  mix_decode.d5.loss_cls: 0.2298  mix_decode.d5.loss_mask: 0.5167  mix_decode.d5.loss_dice: 0.7892  mix_decode.d6.loss_cls: 0.2503  mix_decode.d6.loss_mask: 0.5148  mix_decode.d6.loss_dice: 0.7914  mix_decode.d7.loss_cls: 0.2196  mix_decode.d7.loss_mask: 0.5111  mix_decode.d7.loss_dice: 0.7955  mix_decode.d8.loss_cls: 0.2483  mix_decode.d8.loss_mask: 0.5030  mix_decode.d8.loss_dice: 0.7936
2025/03/27 11:52:24 - mmengine - INFO - Iter(train) [ 5150/20000]  base_lr: 7.6497e-05 lr: 7.6497e-05  eta: 2:39:35  time: 1.0719  data_time: 0.0216  memory: 10804  loss: 44.3654  decode.loss_cls: 0.1990  decode.loss_mask: 1.3313  decode.loss_dice: 1.2914  decode.d0.loss_cls: 0.2783  decode.d0.loss_mask: 1.3655  decode.d0.loss_dice: 1.3463  decode.d1.loss_cls: 0.2309  decode.d1.loss_mask: 1.3477  decode.d1.loss_dice: 1.3130  decode.d2.loss_cls: 0.1411  decode.d2.loss_mask: 1.4332  decode.d2.loss_dice: 1.3209  decode.d3.loss_cls: 0.1839  decode.d3.loss_mask: 1.3706  decode.d3.loss_dice: 1.3052  decode.d4.loss_cls: 0.2191  decode.d4.loss_mask: 1.4146  decode.d4.loss_dice: 1.3029  decode.d5.loss_cls: 0.1611  decode.d5.loss_mask: 1.4307  decode.d5.loss_dice: 1.3232  decode.d6.loss_cls: 0.2070  decode.d6.loss_mask: 1.3535  decode.d6.loss_dice: 1.3118  decode.d7.loss_cls: 0.2388  decode.d7.loss_mask: 1.3512  decode.d7.loss_dice: 1.3140  decode.d8.loss_cls: 0.1523  decode.d8.loss_mask: 1.3656  decode.d8.loss_dice: 1.3216  mix_decode.loss_cls: 0.2707  mix_decode.loss_mask: 0.5278  mix_decode.loss_dice: 0.7433  mix_decode.d0.loss_cls: 0.1460  mix_decode.d0.loss_mask: 0.5708  mix_decode.d0.loss_dice: 0.8148  mix_decode.d1.loss_cls: 0.2398  mix_decode.d1.loss_mask: 0.5347  mix_decode.d1.loss_dice: 0.7544  mix_decode.d2.loss_cls: 0.2649  mix_decode.d2.loss_mask: 0.5573  mix_decode.d2.loss_dice: 0.7303  mix_decode.d3.loss_cls: 0.2264  mix_decode.d3.loss_mask: 0.5542  mix_decode.d3.loss_dice: 0.7299  mix_decode.d4.loss_cls: 0.2231  mix_decode.d4.loss_mask: 0.5644  mix_decode.d4.loss_dice: 0.7564  mix_decode.d5.loss_cls: 0.2639  mix_decode.d5.loss_mask: 0.5511  mix_decode.d5.loss_dice: 0.7474  mix_decode.d6.loss_cls: 0.2642  mix_decode.d6.loss_mask: 0.5441  mix_decode.d6.loss_dice: 0.7487  mix_decode.d7.loss_cls: 0.2601  mix_decode.d7.loss_mask: 0.5439  mix_decode.d7.loss_dice: 0.7551  mix_decode.d8.loss_cls: 0.2609  mix_decode.d8.loss_mask: 0.5381  mix_decode.d8.loss_dice: 0.7525
2025/03/27 11:53:19 - mmengine - INFO - Iter(train) [ 5200/20000]  base_lr: 7.6265e-05 lr: 7.6265e-05  eta: 2:40:07  time: 1.1113  data_time: 0.0276  memory: 10804  loss: 46.1912  decode.loss_cls: 0.2354  decode.loss_mask: 1.2495  decode.loss_dice: 1.5427  decode.d0.loss_cls: 0.2456  decode.d0.loss_mask: 1.2702  decode.d0.loss_dice: 1.5840  decode.d1.loss_cls: 0.2100  decode.d1.loss_mask: 1.2261  decode.d1.loss_dice: 1.5578  decode.d2.loss_cls: 0.2018  decode.d2.loss_mask: 1.2277  decode.d2.loss_dice: 1.5534  decode.d3.loss_cls: 0.1741  decode.d3.loss_mask: 1.2631  decode.d3.loss_dice: 1.5600  decode.d4.loss_cls: 0.2178  decode.d4.loss_mask: 1.2286  decode.d4.loss_dice: 1.5658  decode.d5.loss_cls: 0.2744  decode.d5.loss_mask: 1.2205  decode.d5.loss_dice: 1.5144  decode.d6.loss_cls: 0.2678  decode.d6.loss_mask: 1.2413  decode.d6.loss_dice: 1.5166  decode.d7.loss_cls: 0.2294  decode.d7.loss_mask: 1.2328  decode.d7.loss_dice: 1.5641  decode.d8.loss_cls: 0.2384  decode.d8.loss_mask: 1.2375  decode.d8.loss_dice: 1.5377  mix_decode.loss_cls: 0.1363  mix_decode.loss_mask: 0.6051  mix_decode.loss_dice: 0.8249  mix_decode.d0.loss_cls: 0.1543  mix_decode.d0.loss_mask: 0.6160  mix_decode.d0.loss_dice: 0.8575  mix_decode.d1.loss_cls: 0.1425  mix_decode.d1.loss_mask: 0.6043  mix_decode.d1.loss_dice: 0.8334  mix_decode.d2.loss_cls: 0.1603  mix_decode.d2.loss_mask: 0.5895  mix_decode.d2.loss_dice: 0.8260  mix_decode.d3.loss_cls: 0.1908  mix_decode.d3.loss_mask: 0.6034  mix_decode.d3.loss_dice: 0.8280  mix_decode.d4.loss_cls: 0.1334  mix_decode.d4.loss_mask: 0.6054  mix_decode.d4.loss_dice: 0.8382  mix_decode.d5.loss_cls: 0.2084  mix_decode.d5.loss_mask: 0.5987  mix_decode.d5.loss_dice: 0.8213  mix_decode.d6.loss_cls: 0.1743  mix_decode.d6.loss_mask: 0.6014  mix_decode.d6.loss_dice: 0.8270  mix_decode.d7.loss_cls: 0.1739  mix_decode.d7.loss_mask: 0.5975  mix_decode.d7.loss_dice: 0.8314  mix_decode.d8.loss_cls: 0.1613  mix_decode.d8.loss_mask: 0.6175  mix_decode.d8.loss_dice: 0.8404
2025/03/27 11:54:12 - mmengine - INFO - Iter(train) [ 5250/20000]  base_lr: 7.6034e-05 lr: 7.6034e-05  eta: 2:40:34  time: 1.0696  data_time: 0.0215  memory: 10812  loss: 41.2608  decode.loss_cls: 0.2160  decode.loss_mask: 1.1880  decode.loss_dice: 1.3561  decode.d0.loss_cls: 0.3435  decode.d0.loss_mask: 1.2217  decode.d0.loss_dice: 1.3452  decode.d1.loss_cls: 0.3186  decode.d1.loss_mask: 1.1787  decode.d1.loss_dice: 1.3221  decode.d2.loss_cls: 0.3273  decode.d2.loss_mask: 1.1661  decode.d2.loss_dice: 1.3091  decode.d3.loss_cls: 0.2634  decode.d3.loss_mask: 1.2221  decode.d3.loss_dice: 1.3282  decode.d4.loss_cls: 0.2858  decode.d4.loss_mask: 1.1762  decode.d4.loss_dice: 1.3302  decode.d5.loss_cls: 0.2694  decode.d5.loss_mask: 1.1699  decode.d5.loss_dice: 1.3373  decode.d6.loss_cls: 0.2974  decode.d6.loss_mask: 1.1852  decode.d6.loss_dice: 1.3248  decode.d7.loss_cls: 0.2352  decode.d7.loss_mask: 1.1906  decode.d7.loss_dice: 1.3550  decode.d8.loss_cls: 0.2137  decode.d8.loss_mask: 1.2054  decode.d8.loss_dice: 1.3645  mix_decode.loss_cls: 0.0738  mix_decode.loss_mask: 0.4857  mix_decode.loss_dice: 0.7578  mix_decode.d0.loss_cls: 0.1431  mix_decode.d0.loss_mask: 0.4715  mix_decode.d0.loss_dice: 0.7510  mix_decode.d1.loss_cls: 0.1072  mix_decode.d1.loss_mask: 0.4661  mix_decode.d1.loss_dice: 0.7288  mix_decode.d2.loss_cls: 0.1220  mix_decode.d2.loss_mask: 0.4573  mix_decode.d2.loss_dice: 0.7306  mix_decode.d3.loss_cls: 0.1168  mix_decode.d3.loss_mask: 0.4632  mix_decode.d3.loss_dice: 0.7321  mix_decode.d4.loss_cls: 0.1366  mix_decode.d4.loss_mask: 0.4471  mix_decode.d4.loss_dice: 0.7298  mix_decode.d5.loss_cls: 0.1039  mix_decode.d5.loss_mask: 0.4572  mix_decode.d5.loss_dice: 0.7385  mix_decode.d6.loss_cls: 0.1225  mix_decode.d6.loss_mask: 0.4604  mix_decode.d6.loss_dice: 0.7496  mix_decode.d7.loss_cls: 0.0931  mix_decode.d7.loss_mask: 0.4721  mix_decode.d7.loss_dice: 0.7555  mix_decode.d8.loss_cls: 0.0885  mix_decode.d8.loss_mask: 0.4844  mix_decode.d8.loss_dice: 0.7676
2025/03/27 11:55:06 - mmengine - INFO - Iter(train) [ 5300/20000]  base_lr: 7.5802e-05 lr: 7.5802e-05  eta: 2:40:59  time: 1.0688  data_time: 0.0214  memory: 10809  loss: 44.1499  decode.loss_cls: 0.1378  decode.loss_mask: 1.4021  decode.loss_dice: 1.4626  decode.d0.loss_cls: 0.1937  decode.d0.loss_mask: 1.4605  decode.d0.loss_dice: 1.4684  decode.d1.loss_cls: 0.2089  decode.d1.loss_mask: 1.3808  decode.d1.loss_dice: 1.4693  decode.d2.loss_cls: 0.1152  decode.d2.loss_mask: 1.4237  decode.d2.loss_dice: 1.4976  decode.d3.loss_cls: 0.1035  decode.d3.loss_mask: 1.4038  decode.d3.loss_dice: 1.4819  decode.d4.loss_cls: 0.1617  decode.d4.loss_mask: 1.4447  decode.d4.loss_dice: 1.5223  decode.d5.loss_cls: 0.1566  decode.d5.loss_mask: 1.4372  decode.d5.loss_dice: 1.5324  decode.d6.loss_cls: 0.1299  decode.d6.loss_mask: 1.3870  decode.d6.loss_dice: 1.4816  decode.d7.loss_cls: 0.1010  decode.d7.loss_mask: 1.4037  decode.d7.loss_dice: 1.5055  decode.d8.loss_cls: 0.1106  decode.d8.loss_mask: 1.4049  decode.d8.loss_dice: 1.4873  mix_decode.loss_cls: 0.0829  mix_decode.loss_mask: 0.5114  mix_decode.loss_dice: 0.7725  mix_decode.d0.loss_cls: 0.0769  mix_decode.d0.loss_mask: 0.5294  mix_decode.d0.loss_dice: 0.7851  mix_decode.d1.loss_cls: 0.0590  mix_decode.d1.loss_mask: 0.5176  mix_decode.d1.loss_dice: 0.7580  mix_decode.d2.loss_cls: 0.0798  mix_decode.d2.loss_mask: 0.5203  mix_decode.d2.loss_dice: 0.7523  mix_decode.d3.loss_cls: 0.0888  mix_decode.d3.loss_mask: 0.5224  mix_decode.d3.loss_dice: 0.7410  mix_decode.d4.loss_cls: 0.0853  mix_decode.d4.loss_mask: 0.5271  mix_decode.d4.loss_dice: 0.7838  mix_decode.d5.loss_cls: 0.1067  mix_decode.d5.loss_mask: 0.5180  mix_decode.d5.loss_dice: 0.7751  mix_decode.d6.loss_cls: 0.0712  mix_decode.d6.loss_mask: 0.5224  mix_decode.d6.loss_dice: 0.7588  mix_decode.d7.loss_cls: 0.0773  mix_decode.d7.loss_mask: 0.5073  mix_decode.d7.loss_dice: 0.7641  mix_decode.d8.loss_cls: 0.0874  mix_decode.d8.loss_mask: 0.5115  mix_decode.d8.loss_dice: 0.7802
2025/03/27 11:56:01 - mmengine - INFO - Iter(train) [ 5350/20000]  base_lr: 7.5569e-05 lr: 7.5569e-05  eta: 2:41:27  time: 1.1173  data_time: 0.0259  memory: 10808  loss: 41.0604  decode.loss_cls: 0.1447  decode.loss_mask: 1.1158  decode.loss_dice: 1.4256  decode.d0.loss_cls: 0.1988  decode.d0.loss_mask: 1.1270  decode.d0.loss_dice: 1.4695  decode.d1.loss_cls: 0.1821  decode.d1.loss_mask: 1.1180  decode.d1.loss_dice: 1.4262  decode.d2.loss_cls: 0.1753  decode.d2.loss_mask: 1.1263  decode.d2.loss_dice: 1.3732  decode.d3.loss_cls: 0.2242  decode.d3.loss_mask: 1.1445  decode.d3.loss_dice: 1.4130  decode.d4.loss_cls: 0.1908  decode.d4.loss_mask: 1.1499  decode.d4.loss_dice: 1.4400  decode.d5.loss_cls: 0.1566  decode.d5.loss_mask: 1.1687  decode.d5.loss_dice: 1.4459  decode.d6.loss_cls: 0.1282  decode.d6.loss_mask: 1.1242  decode.d6.loss_dice: 1.4180  decode.d7.loss_cls: 0.1868  decode.d7.loss_mask: 1.1084  decode.d7.loss_dice: 1.4331  decode.d8.loss_cls: 0.1566  decode.d8.loss_mask: 1.1128  decode.d8.loss_dice: 1.4157  mix_decode.loss_cls: 0.0904  mix_decode.loss_mask: 0.5167  mix_decode.loss_dice: 0.7775  mix_decode.d0.loss_cls: 0.1034  mix_decode.d0.loss_mask: 0.5102  mix_decode.d0.loss_dice: 0.8026  mix_decode.d1.loss_cls: 0.0580  mix_decode.d1.loss_mask: 0.5169  mix_decode.d1.loss_dice: 0.8040  mix_decode.d2.loss_cls: 0.0979  mix_decode.d2.loss_mask: 0.5137  mix_decode.d2.loss_dice: 0.7600  mix_decode.d3.loss_cls: 0.0654  mix_decode.d3.loss_mask: 0.5209  mix_decode.d3.loss_dice: 0.7858  mix_decode.d4.loss_cls: 0.0722  mix_decode.d4.loss_mask: 0.5158  mix_decode.d4.loss_dice: 0.7747  mix_decode.d5.loss_cls: 0.0741  mix_decode.d5.loss_mask: 0.5203  mix_decode.d5.loss_dice: 0.7794  mix_decode.d6.loss_cls: 0.1014  mix_decode.d6.loss_mask: 0.4906  mix_decode.d6.loss_dice: 0.7680  mix_decode.d7.loss_cls: 0.0901  mix_decode.d7.loss_mask: 0.4959  mix_decode.d7.loss_dice: 0.7799  mix_decode.d8.loss_cls: 0.1085  mix_decode.d8.loss_mask: 0.4925  mix_decode.d8.loss_dice: 0.7737
2025/03/27 11:56:56 - mmengine - INFO - Iter(train) [ 5400/20000]  base_lr: 7.5337e-05 lr: 7.5337e-05  eta: 2:41:53  time: 1.0810  data_time: 0.0220  memory: 10812  loss: 38.9906  decode.loss_cls: 0.1979  decode.loss_mask: 0.8909  decode.loss_dice: 1.3897  decode.d0.loss_cls: 0.2148  decode.d0.loss_mask: 0.9210  decode.d0.loss_dice: 1.4099  decode.d1.loss_cls: 0.1609  decode.d1.loss_mask: 0.9219  decode.d1.loss_dice: 1.4183  decode.d2.loss_cls: 0.2384  decode.d2.loss_mask: 0.9023  decode.d2.loss_dice: 1.3611  decode.d3.loss_cls: 0.2329  decode.d3.loss_mask: 0.8876  decode.d3.loss_dice: 1.3619  decode.d4.loss_cls: 0.2125  decode.d4.loss_mask: 0.9247  decode.d4.loss_dice: 1.3553  decode.d5.loss_cls: 0.2246  decode.d5.loss_mask: 0.9288  decode.d5.loss_dice: 1.3523  decode.d6.loss_cls: 0.2127  decode.d6.loss_mask: 0.9380  decode.d6.loss_dice: 1.3223  decode.d7.loss_cls: 0.2496  decode.d7.loss_mask: 0.9090  decode.d7.loss_dice: 1.3386  decode.d8.loss_cls: 0.1551  decode.d8.loss_mask: 0.9251  decode.d8.loss_dice: 1.3575  mix_decode.loss_cls: 0.1071  mix_decode.loss_mask: 0.5087  mix_decode.loss_dice: 0.7818  mix_decode.d0.loss_cls: 0.1025  mix_decode.d0.loss_mask: 0.5081  mix_decode.d0.loss_dice: 0.8011  mix_decode.d1.loss_cls: 0.1396  mix_decode.d1.loss_mask: 0.4790  mix_decode.d1.loss_dice: 0.7591  mix_decode.d2.loss_cls: 0.1595  mix_decode.d2.loss_mask: 0.4764  mix_decode.d2.loss_dice: 0.7583  mix_decode.d3.loss_cls: 0.1761  mix_decode.d3.loss_mask: 0.4753  mix_decode.d3.loss_dice: 0.7462  mix_decode.d4.loss_cls: 0.2168  mix_decode.d4.loss_mask: 0.4866  mix_decode.d4.loss_dice: 0.7345  mix_decode.d5.loss_cls: 0.2060  mix_decode.d5.loss_mask: 0.4893  mix_decode.d5.loss_dice: 0.7256  mix_decode.d6.loss_cls: 0.2012  mix_decode.d6.loss_mask: 0.4952  mix_decode.d6.loss_dice: 0.7134  mix_decode.d7.loss_cls: 0.1605  mix_decode.d7.loss_mask: 0.5036  mix_decode.d7.loss_dice: 0.7598  mix_decode.d8.loss_cls: 0.1083  mix_decode.d8.loss_mask: 0.5092  mix_decode.d8.loss_dice: 0.7864
2025/03/27 11:57:49 - mmengine - INFO - Iter(train) [ 5450/20000]  base_lr: 7.5105e-05 lr: 7.5105e-05  eta: 2:42:13  time: 1.0662  data_time: 0.0217  memory: 10804  loss: 44.1888  decode.loss_cls: 0.2061  decode.loss_mask: 1.4312  decode.loss_dice: 1.4166  decode.d0.loss_cls: 0.3041  decode.d0.loss_mask: 1.4404  decode.d0.loss_dice: 1.4177  decode.d1.loss_cls: 0.2604  decode.d1.loss_mask: 1.4402  decode.d1.loss_dice: 1.3635  decode.d2.loss_cls: 0.2551  decode.d2.loss_mask: 1.4587  decode.d2.loss_dice: 1.3754  decode.d3.loss_cls: 0.2640  decode.d3.loss_mask: 1.4523  decode.d3.loss_dice: 1.3869  decode.d4.loss_cls: 0.2415  decode.d4.loss_mask: 1.4635  decode.d4.loss_dice: 1.3744  decode.d5.loss_cls: 0.2809  decode.d5.loss_mask: 1.4647  decode.d5.loss_dice: 1.3894  decode.d6.loss_cls: 0.2642  decode.d6.loss_mask: 1.4540  decode.d6.loss_dice: 1.3716  decode.d7.loss_cls: 0.2686  decode.d7.loss_mask: 1.4602  decode.d7.loss_dice: 1.3887  decode.d8.loss_cls: 0.2395  decode.d8.loss_mask: 1.4692  decode.d8.loss_dice: 1.4040  mix_decode.loss_cls: 0.0873  mix_decode.loss_mask: 0.4569  mix_decode.loss_dice: 0.7595  mix_decode.d0.loss_cls: 0.0911  mix_decode.d0.loss_mask: 0.4658  mix_decode.d0.loss_dice: 0.7667  mix_decode.d1.loss_cls: 0.1118  mix_decode.d1.loss_mask: 0.4688  mix_decode.d1.loss_dice: 0.7540  mix_decode.d2.loss_cls: 0.0842  mix_decode.d2.loss_mask: 0.4729  mix_decode.d2.loss_dice: 0.7528  mix_decode.d3.loss_cls: 0.0867  mix_decode.d3.loss_mask: 0.4558  mix_decode.d3.loss_dice: 0.7593  mix_decode.d4.loss_cls: 0.0849  mix_decode.d4.loss_mask: 0.4674  mix_decode.d4.loss_dice: 0.7570  mix_decode.d5.loss_cls: 0.0925  mix_decode.d5.loss_mask: 0.4750  mix_decode.d5.loss_dice: 0.7545  mix_decode.d6.loss_cls: 0.0786  mix_decode.d6.loss_mask: 0.4744  mix_decode.d6.loss_dice: 0.7547  mix_decode.d7.loss_cls: 0.0854  mix_decode.d7.loss_mask: 0.4789  mix_decode.d7.loss_dice: 0.7734  mix_decode.d8.loss_cls: 0.0974  mix_decode.d8.loss_mask: 0.4663  mix_decode.d8.loss_dice: 0.7675
2025/03/27 11:58:43 - mmengine - INFO - Iter(train) [ 5500/20000]  base_lr: 7.4873e-05 lr: 7.4873e-05  eta: 2:42:32  time: 1.0649  data_time: 0.0217  memory: 10806  loss: 38.2404  decode.loss_cls: 0.2273  decode.loss_mask: 1.1461  decode.loss_dice: 1.3608  decode.d0.loss_cls: 0.2305  decode.d0.loss_mask: 1.1123  decode.d0.loss_dice: 1.3851  decode.d1.loss_cls: 0.1728  decode.d1.loss_mask: 1.0977  decode.d1.loss_dice: 1.3683  decode.d2.loss_cls: 0.1876  decode.d2.loss_mask: 1.1409  decode.d2.loss_dice: 1.3877  decode.d3.loss_cls: 0.2548  decode.d3.loss_mask: 1.1499  decode.d3.loss_dice: 1.3719  decode.d4.loss_cls: 0.1792  decode.d4.loss_mask: 1.1716  decode.d4.loss_dice: 1.3815  decode.d5.loss_cls: 0.1949  decode.d5.loss_mask: 1.1791  decode.d5.loss_dice: 1.3945  decode.d6.loss_cls: 0.2129  decode.d6.loss_mask: 1.1516  decode.d6.loss_dice: 1.3639  decode.d7.loss_cls: 0.2432  decode.d7.loss_mask: 1.1406  decode.d7.loss_dice: 1.3728  decode.d8.loss_cls: 0.2059  decode.d8.loss_mask: 1.1774  decode.d8.loss_dice: 1.3808  mix_decode.loss_cls: 0.0529  mix_decode.loss_mask: 0.4381  mix_decode.loss_dice: 0.5777  mix_decode.d0.loss_cls: 0.0803  mix_decode.d0.loss_mask: 0.4329  mix_decode.d0.loss_dice: 0.5988  mix_decode.d1.loss_cls: 0.0876  mix_decode.d1.loss_mask: 0.4322  mix_decode.d1.loss_dice: 0.5700  mix_decode.d2.loss_cls: 0.0617  mix_decode.d2.loss_mask: 0.4393  mix_decode.d2.loss_dice: 0.5739  mix_decode.d3.loss_cls: 0.0524  mix_decode.d3.loss_mask: 0.4338  mix_decode.d3.loss_dice: 0.5690  mix_decode.d4.loss_cls: 0.0850  mix_decode.d4.loss_mask: 0.4337  mix_decode.d4.loss_dice: 0.5683  mix_decode.d5.loss_cls: 0.1073  mix_decode.d5.loss_mask: 0.4321  mix_decode.d5.loss_dice: 0.5640  mix_decode.d6.loss_cls: 0.1169  mix_decode.d6.loss_mask: 0.4403  mix_decode.d6.loss_dice: 0.5604  mix_decode.d7.loss_cls: 0.1104  mix_decode.d7.loss_mask: 0.4392  mix_decode.d7.loss_dice: 0.5642  mix_decode.d8.loss_cls: 0.0632  mix_decode.d8.loss_mask: 0.4339  mix_decode.d8.loss_dice: 0.5771
2025/03/27 11:59:36 - mmengine - INFO - Iter(train) [ 5550/20000]  base_lr: 7.4640e-05 lr: 7.4640e-05  eta: 2:42:50  time: 1.0665  data_time: 0.0216  memory: 10807  loss: 47.9094  decode.loss_cls: 0.2294  decode.loss_mask: 1.5668  decode.loss_dice: 1.6625  decode.d0.loss_cls: 0.3607  decode.d0.loss_mask: 1.5770  decode.d0.loss_dice: 1.5871  decode.d1.loss_cls: 0.4156  decode.d1.loss_mask: 1.5324  decode.d1.loss_dice: 1.5029  decode.d2.loss_cls: 0.3709  decode.d2.loss_mask: 1.4996  decode.d2.loss_dice: 1.5049  decode.d3.loss_cls: 0.4134  decode.d3.loss_mask: 1.4497  decode.d3.loss_dice: 1.5055  decode.d4.loss_cls: 0.4637  decode.d4.loss_mask: 1.4852  decode.d4.loss_dice: 1.4895  decode.d5.loss_cls: 0.3512  decode.d5.loss_mask: 1.5146  decode.d5.loss_dice: 1.5226  decode.d6.loss_cls: 0.4189  decode.d6.loss_mask: 1.5238  decode.d6.loss_dice: 1.4873  decode.d7.loss_cls: 0.4147  decode.d7.loss_mask: 1.5109  decode.d7.loss_dice: 1.5154  decode.d8.loss_cls: 0.2780  decode.d8.loss_mask: 1.6020  decode.d8.loss_dice: 1.6158  mix_decode.loss_cls: 0.0977  mix_decode.loss_mask: 0.5002  mix_decode.loss_dice: 0.7650  mix_decode.d0.loss_cls: 0.1288  mix_decode.d0.loss_mask: 0.4820  mix_decode.d0.loss_dice: 0.7598  mix_decode.d1.loss_cls: 0.0793  mix_decode.d1.loss_mask: 0.5020  mix_decode.d1.loss_dice: 0.7517  mix_decode.d2.loss_cls: 0.0857  mix_decode.d2.loss_mask: 0.5210  mix_decode.d2.loss_dice: 0.7277  mix_decode.d3.loss_cls: 0.0897  mix_decode.d3.loss_mask: 0.5181  mix_decode.d3.loss_dice: 0.7213  mix_decode.d4.loss_cls: 0.1051  mix_decode.d4.loss_mask: 0.5139  mix_decode.d4.loss_dice: 0.7389  mix_decode.d5.loss_cls: 0.0988  mix_decode.d5.loss_mask: 0.5031  mix_decode.d5.loss_dice: 0.7377  mix_decode.d6.loss_cls: 0.1305  mix_decode.d6.loss_mask: 0.5015  mix_decode.d6.loss_dice: 0.7369  mix_decode.d7.loss_cls: 0.1253  mix_decode.d7.loss_mask: 0.5056  mix_decode.d7.loss_dice: 0.7564  mix_decode.d8.loss_cls: 0.1193  mix_decode.d8.loss_mask: 0.4964  mix_decode.d8.loss_dice: 0.7382
2025/03/27 12:00:29 - mmengine - INFO - Iter(train) [ 5600/20000]  base_lr: 7.4408e-05 lr: 7.4408e-05  eta: 2:43:07  time: 1.0684  data_time: 0.0214  memory: 10808  loss: 37.6273  decode.loss_cls: 0.1798  decode.loss_mask: 1.0349  decode.loss_dice: 1.2783  decode.d0.loss_cls: 0.2715  decode.d0.loss_mask: 1.0214  decode.d0.loss_dice: 1.3080  decode.d1.loss_cls: 0.2183  decode.d1.loss_mask: 1.0230  decode.d1.loss_dice: 1.2891  decode.d2.loss_cls: 0.2152  decode.d2.loss_mask: 1.0129  decode.d2.loss_dice: 1.2970  decode.d3.loss_cls: 0.1637  decode.d3.loss_mask: 1.0141  decode.d3.loss_dice: 1.2902  decode.d4.loss_cls: 0.1883  decode.d4.loss_mask: 1.0160  decode.d4.loss_dice: 1.2804  decode.d5.loss_cls: 0.1911  decode.d5.loss_mask: 1.0187  decode.d5.loss_dice: 1.2999  decode.d6.loss_cls: 0.1964  decode.d6.loss_mask: 1.0162  decode.d6.loss_dice: 1.2935  decode.d7.loss_cls: 0.1803  decode.d7.loss_mask: 1.0273  decode.d7.loss_dice: 1.2870  decode.d8.loss_cls: 0.1838  decode.d8.loss_mask: 1.0221  decode.d8.loss_dice: 1.2804  mix_decode.loss_cls: 0.0855  mix_decode.loss_mask: 0.4729  mix_decode.loss_dice: 0.6901  mix_decode.d0.loss_cls: 0.0879  mix_decode.d0.loss_mask: 0.4745  mix_decode.d0.loss_dice: 0.7235  mix_decode.d1.loss_cls: 0.0782  mix_decode.d1.loss_mask: 0.4653  mix_decode.d1.loss_dice: 0.6997  mix_decode.d2.loss_cls: 0.1149  mix_decode.d2.loss_mask: 0.4474  mix_decode.d2.loss_dice: 0.6939  mix_decode.d3.loss_cls: 0.1174  mix_decode.d3.loss_mask: 0.4580  mix_decode.d3.loss_dice: 0.6839  mix_decode.d4.loss_cls: 0.1448  mix_decode.d4.loss_mask: 0.4456  mix_decode.d4.loss_dice: 0.6738  mix_decode.d5.loss_cls: 0.1118  mix_decode.d5.loss_mask: 0.4421  mix_decode.d5.loss_dice: 0.6646  mix_decode.d6.loss_cls: 0.1028  mix_decode.d6.loss_mask: 0.4480  mix_decode.d6.loss_dice: 0.6847  mix_decode.d7.loss_cls: 0.0828  mix_decode.d7.loss_mask: 0.4682  mix_decode.d7.loss_dice: 0.6856  mix_decode.d8.loss_cls: 0.1288  mix_decode.d8.loss_mask: 0.4633  mix_decode.d8.loss_dice: 0.6888
2025/03/27 12:01:23 - mmengine - INFO - Iter(train) [ 5650/20000]  base_lr: 7.4175e-05 lr: 7.4175e-05  eta: 2:43:22  time: 1.0706  data_time: 0.0223  memory: 10799  loss: 40.4160  decode.loss_cls: 0.3026  decode.loss_mask: 1.1968  decode.loss_dice: 1.2066  decode.d0.loss_cls: 0.3462  decode.d0.loss_mask: 1.1596  decode.d0.loss_dice: 1.2396  decode.d1.loss_cls: 0.3185  decode.d1.loss_mask: 1.1541  decode.d1.loss_dice: 1.1994  decode.d2.loss_cls: 0.2865  decode.d2.loss_mask: 1.1728  decode.d2.loss_dice: 1.2349  decode.d3.loss_cls: 0.3233  decode.d3.loss_mask: 1.1685  decode.d3.loss_dice: 1.2308  decode.d4.loss_cls: 0.2027  decode.d4.loss_mask: 1.2954  decode.d4.loss_dice: 1.2620  decode.d5.loss_cls: 0.2648  decode.d5.loss_mask: 1.1976  decode.d5.loss_dice: 1.2658  decode.d6.loss_cls: 0.2522  decode.d6.loss_mask: 1.2177  decode.d6.loss_dice: 1.2501  decode.d7.loss_cls: 0.3199  decode.d7.loss_mask: 1.1585  decode.d7.loss_dice: 1.2304  decode.d8.loss_cls: 0.2466  decode.d8.loss_mask: 1.2126  decode.d8.loss_dice: 1.2424  mix_decode.loss_cls: 0.0747  mix_decode.loss_mask: 0.5566  mix_decode.loss_dice: 0.6941  mix_decode.d0.loss_cls: 0.1214  mix_decode.d0.loss_mask: 0.5063  mix_decode.d0.loss_dice: 0.6944  mix_decode.d1.loss_cls: 0.1095  mix_decode.d1.loss_mask: 0.5023  mix_decode.d1.loss_dice: 0.6698  mix_decode.d2.loss_cls: 0.1326  mix_decode.d2.loss_mask: 0.5048  mix_decode.d2.loss_dice: 0.6738  mix_decode.d3.loss_cls: 0.0769  mix_decode.d3.loss_mask: 0.5538  mix_decode.d3.loss_dice: 0.6847  mix_decode.d4.loss_cls: 0.0922  mix_decode.d4.loss_mask: 0.5595  mix_decode.d4.loss_dice: 0.6956  mix_decode.d5.loss_cls: 0.0940  mix_decode.d5.loss_mask: 0.5583  mix_decode.d5.loss_dice: 0.7011  mix_decode.d6.loss_cls: 0.0999  mix_decode.d6.loss_mask: 0.5541  mix_decode.d6.loss_dice: 0.6911  mix_decode.d7.loss_cls: 0.1071  mix_decode.d7.loss_mask: 0.5149  mix_decode.d7.loss_dice: 0.6941  mix_decode.d8.loss_cls: 0.0901  mix_decode.d8.loss_mask: 0.5517  mix_decode.d8.loss_dice: 0.6977
2025/03/27 12:02:16 - mmengine - INFO - Iter(train) [ 5700/20000]  base_lr: 7.3943e-05 lr: 7.3943e-05  eta: 2:43:37  time: 1.0676  data_time: 0.0216  memory: 10805  loss: 42.6585  decode.loss_cls: 0.2926  decode.loss_mask: 1.3245  decode.loss_dice: 1.3038  decode.d0.loss_cls: 0.2721  decode.d0.loss_mask: 1.3402  decode.d0.loss_dice: 1.3096  decode.d1.loss_cls: 0.2848  decode.d1.loss_mask: 1.2904  decode.d1.loss_dice: 1.2760  decode.d2.loss_cls: 0.2281  decode.d2.loss_mask: 1.3617  decode.d2.loss_dice: 1.2708  decode.d3.loss_cls: 0.2314  decode.d3.loss_mask: 1.3483  decode.d3.loss_dice: 1.3184  decode.d4.loss_cls: 0.2124  decode.d4.loss_mask: 1.3624  decode.d4.loss_dice: 1.2976  decode.d5.loss_cls: 0.2235  decode.d5.loss_mask: 1.3793  decode.d5.loss_dice: 1.3185  decode.d6.loss_cls: 0.1851  decode.d6.loss_mask: 1.3353  decode.d6.loss_dice: 1.3373  decode.d7.loss_cls: 0.2398  decode.d7.loss_mask: 1.3777  decode.d7.loss_dice: 1.3360  decode.d8.loss_cls: 0.2975  decode.d8.loss_mask: 1.3272  decode.d8.loss_dice: 1.3366  mix_decode.loss_cls: 0.1408  mix_decode.loss_mask: 0.5215  mix_decode.loss_dice: 0.7040  mix_decode.d0.loss_cls: 0.1380  mix_decode.d0.loss_mask: 0.5373  mix_decode.d0.loss_dice: 0.7283  mix_decode.d1.loss_cls: 0.1339  mix_decode.d1.loss_mask: 0.5259  mix_decode.d1.loss_dice: 0.6993  mix_decode.d2.loss_cls: 0.1204  mix_decode.d2.loss_mask: 0.5417  mix_decode.d2.loss_dice: 0.7098  mix_decode.d3.loss_cls: 0.0822  mix_decode.d3.loss_mask: 0.5509  mix_decode.d3.loss_dice: 0.7202  mix_decode.d4.loss_cls: 0.1048  mix_decode.d4.loss_mask: 0.5469  mix_decode.d4.loss_dice: 0.7157  mix_decode.d5.loss_cls: 0.1295  mix_decode.d5.loss_mask: 0.5337  mix_decode.d5.loss_dice: 0.7139  mix_decode.d6.loss_cls: 0.1153  mix_decode.d6.loss_mask: 0.5195  mix_decode.d6.loss_dice: 0.7020  mix_decode.d7.loss_cls: 0.1355  mix_decode.d7.loss_mask: 0.5234  mix_decode.d7.loss_dice: 0.6828  mix_decode.d8.loss_cls: 0.1333  mix_decode.d8.loss_mask: 0.5223  mix_decode.d8.loss_dice: 0.7067
2025/03/27 12:03:10 - mmengine - INFO - Iter(train) [ 5750/20000]  base_lr: 7.3710e-05 lr: 7.3710e-05  eta: 2:43:50  time: 1.0697  data_time: 0.0215  memory: 10807  loss: 46.2341  decode.loss_cls: 0.2207  decode.loss_mask: 1.3612  decode.loss_dice: 1.4766  decode.d0.loss_cls: 0.2684  decode.d0.loss_mask: 1.4311  decode.d0.loss_dice: 1.5205  decode.d1.loss_cls: 0.3108  decode.d1.loss_mask: 1.3573  decode.d1.loss_dice: 1.4442  decode.d2.loss_cls: 0.2961  decode.d2.loss_mask: 1.3439  decode.d2.loss_dice: 1.4867  decode.d3.loss_cls: 0.1957  decode.d3.loss_mask: 1.3577  decode.d3.loss_dice: 1.5110  decode.d4.loss_cls: 0.1906  decode.d4.loss_mask: 1.4098  decode.d4.loss_dice: 1.5419  decode.d5.loss_cls: 0.2259  decode.d5.loss_mask: 1.3843  decode.d5.loss_dice: 1.4950  decode.d6.loss_cls: 0.1648  decode.d6.loss_mask: 1.3965  decode.d6.loss_dice: 1.4990  decode.d7.loss_cls: 0.2172  decode.d7.loss_mask: 1.4444  decode.d7.loss_dice: 1.4907  decode.d8.loss_cls: 0.2267  decode.d8.loss_mask: 1.4183  decode.d8.loss_dice: 1.5029  mix_decode.loss_cls: 0.1160  mix_decode.loss_mask: 0.5756  mix_decode.loss_dice: 0.8269  mix_decode.d0.loss_cls: 0.1446  mix_decode.d0.loss_mask: 0.5616  mix_decode.d0.loss_dice: 0.8314  mix_decode.d1.loss_cls: 0.1250  mix_decode.d1.loss_mask: 0.5485  mix_decode.d1.loss_dice: 0.8088  mix_decode.d2.loss_cls: 0.1313  mix_decode.d2.loss_mask: 0.5456  mix_decode.d2.loss_dice: 0.8121  mix_decode.d3.loss_cls: 0.1382  mix_decode.d3.loss_mask: 0.5358  mix_decode.d3.loss_dice: 0.8079  mix_decode.d4.loss_cls: 0.1461  mix_decode.d4.loss_mask: 0.5471  mix_decode.d4.loss_dice: 0.8093  mix_decode.d5.loss_cls: 0.1478  mix_decode.d5.loss_mask: 0.5509  mix_decode.d5.loss_dice: 0.8087  mix_decode.d6.loss_cls: 0.1352  mix_decode.d6.loss_mask: 0.5666  mix_decode.d6.loss_dice: 0.8130  mix_decode.d7.loss_cls: 0.1299  mix_decode.d7.loss_mask: 0.5685  mix_decode.d7.loss_dice: 0.8039  mix_decode.d8.loss_cls: 0.1170  mix_decode.d8.loss_mask: 0.5699  mix_decode.d8.loss_dice: 0.8213
2025/03/27 12:04:03 - mmengine - INFO - Iter(train) [ 5800/20000]  base_lr: 7.3477e-05 lr: 7.3477e-05  eta: 2:44:02  time: 1.0691  data_time: 0.0220  memory: 10809  loss: 39.4108  decode.loss_cls: 0.1599  decode.loss_mask: 1.2341  decode.loss_dice: 1.3003  decode.d0.loss_cls: 0.2180  decode.d0.loss_mask: 1.2364  decode.d0.loss_dice: 1.3372  decode.d1.loss_cls: 0.1241  decode.d1.loss_mask: 1.2342  decode.d1.loss_dice: 1.2989  decode.d2.loss_cls: 0.1676  decode.d2.loss_mask: 1.2343  decode.d2.loss_dice: 1.2775  decode.d3.loss_cls: 0.1691  decode.d3.loss_mask: 1.2260  decode.d3.loss_dice: 1.2846  decode.d4.loss_cls: 0.1550  decode.d4.loss_mask: 1.2306  decode.d4.loss_dice: 1.2895  decode.d5.loss_cls: 0.1473  decode.d5.loss_mask: 1.2264  decode.d5.loss_dice: 1.3018  decode.d6.loss_cls: 0.1749  decode.d6.loss_mask: 1.2350  decode.d6.loss_dice: 1.3071  decode.d7.loss_cls: 0.1096  decode.d7.loss_mask: 1.2369  decode.d7.loss_dice: 1.3188  decode.d8.loss_cls: 0.1337  decode.d8.loss_mask: 1.2334  decode.d8.loss_dice: 1.3046  mix_decode.loss_cls: 0.1059  mix_decode.loss_mask: 0.4928  mix_decode.loss_dice: 0.6355  mix_decode.d0.loss_cls: 0.1231  mix_decode.d0.loss_mask: 0.5068  mix_decode.d0.loss_dice: 0.6585  mix_decode.d1.loss_cls: 0.1281  mix_decode.d1.loss_mask: 0.4860  mix_decode.d1.loss_dice: 0.6318  mix_decode.d2.loss_cls: 0.0942  mix_decode.d2.loss_mask: 0.4976  mix_decode.d2.loss_dice: 0.6215  mix_decode.d3.loss_cls: 0.1031  mix_decode.d3.loss_mask: 0.5095  mix_decode.d3.loss_dice: 0.6274  mix_decode.d4.loss_cls: 0.1067  mix_decode.d4.loss_mask: 0.4959  mix_decode.d4.loss_dice: 0.6307  mix_decode.d5.loss_cls: 0.1129  mix_decode.d5.loss_mask: 0.5013  mix_decode.d5.loss_dice: 0.6401  mix_decode.d6.loss_cls: 0.1236  mix_decode.d6.loss_mask: 0.5157  mix_decode.d6.loss_dice: 0.6497  mix_decode.d7.loss_cls: 0.1136  mix_decode.d7.loss_mask: 0.5050  mix_decode.d7.loss_dice: 0.6379  mix_decode.d8.loss_cls: 0.1064  mix_decode.d8.loss_mask: 0.5043  mix_decode.d8.loss_dice: 0.6385
2025/03/27 12:04:58 - mmengine - INFO - Iter(train) [ 5850/20000]  base_lr: 7.3244e-05 lr: 7.3244e-05  eta: 2:44:16  time: 1.1062  data_time: 0.0245  memory: 10808  loss: 40.5891  decode.loss_cls: 0.2736  decode.loss_mask: 1.1221  decode.loss_dice: 1.3556  decode.d0.loss_cls: 0.2645  decode.d0.loss_mask: 1.1499  decode.d0.loss_dice: 1.4262  decode.d1.loss_cls: 0.1812  decode.d1.loss_mask: 1.1310  decode.d1.loss_dice: 1.3932  decode.d2.loss_cls: 0.2898  decode.d2.loss_mask: 1.1284  decode.d2.loss_dice: 1.3197  decode.d3.loss_cls: 0.2934  decode.d3.loss_mask: 1.1298  decode.d3.loss_dice: 1.3222  decode.d4.loss_cls: 0.2833  decode.d4.loss_mask: 1.1267  decode.d4.loss_dice: 1.3355  decode.d5.loss_cls: 0.2603  decode.d5.loss_mask: 1.1659  decode.d5.loss_dice: 1.3533  decode.d6.loss_cls: 0.3114  decode.d6.loss_mask: 1.1254  decode.d6.loss_dice: 1.3554  decode.d7.loss_cls: 0.2622  decode.d7.loss_mask: 1.1559  decode.d7.loss_dice: 1.3336  decode.d8.loss_cls: 0.2796  decode.d8.loss_mask: 1.1298  decode.d8.loss_dice: 1.3241  mix_decode.loss_cls: 0.1043  mix_decode.loss_mask: 0.5023  mix_decode.loss_dice: 0.7023  mix_decode.d0.loss_cls: 0.0852  mix_decode.d0.loss_mask: 0.5006  mix_decode.d0.loss_dice: 0.7180  mix_decode.d1.loss_cls: 0.0588  mix_decode.d1.loss_mask: 0.5024  mix_decode.d1.loss_dice: 0.7149  mix_decode.d2.loss_cls: 0.0806  mix_decode.d2.loss_mask: 0.5109  mix_decode.d2.loss_dice: 0.6975  mix_decode.d3.loss_cls: 0.0743  mix_decode.d3.loss_mask: 0.5249  mix_decode.d3.loss_dice: 0.7037  mix_decode.d4.loss_cls: 0.0662  mix_decode.d4.loss_mask: 0.5163  mix_decode.d4.loss_dice: 0.7117  mix_decode.d5.loss_cls: 0.1130  mix_decode.d5.loss_mask: 0.5038  mix_decode.d5.loss_dice: 0.7039  mix_decode.d6.loss_cls: 0.0730  mix_decode.d6.loss_mask: 0.5099  mix_decode.d6.loss_dice: 0.7182  mix_decode.d7.loss_cls: 0.0966  mix_decode.d7.loss_mask: 0.5183  mix_decode.d7.loss_dice: 0.7116  mix_decode.d8.loss_cls: 0.0722  mix_decode.d8.loss_mask: 0.5044  mix_decode.d8.loss_dice: 0.7063
2025/03/27 12:05:52 - mmengine - INFO - Iter(train) [ 5900/20000]  base_lr: 7.3011e-05 lr: 7.3011e-05  eta: 2:44:27  time: 1.0705  data_time: 0.0216  memory: 10806  loss: 41.9846  decode.loss_cls: 0.3385  decode.loss_mask: 1.1763  decode.loss_dice: 1.3538  decode.d0.loss_cls: 0.3240  decode.d0.loss_mask: 1.1777  decode.d0.loss_dice: 1.4416  decode.d1.loss_cls: 0.3892  decode.d1.loss_mask: 1.1800  decode.d1.loss_dice: 1.3626  decode.d2.loss_cls: 0.3498  decode.d2.loss_mask: 1.1739  decode.d2.loss_dice: 1.3706  decode.d3.loss_cls: 0.3460  decode.d3.loss_mask: 1.2250  decode.d3.loss_dice: 1.3605  decode.d4.loss_cls: 0.4264  decode.d4.loss_mask: 1.1866  decode.d4.loss_dice: 1.3252  decode.d5.loss_cls: 0.3098  decode.d5.loss_mask: 1.2494  decode.d5.loss_dice: 1.3606  decode.d6.loss_cls: 0.3236  decode.d6.loss_mask: 1.1695  decode.d6.loss_dice: 1.3378  decode.d7.loss_cls: 0.3395  decode.d7.loss_mask: 1.1853  decode.d7.loss_dice: 1.3310  decode.d8.loss_cls: 0.3384  decode.d8.loss_mask: 1.1638  decode.d8.loss_dice: 1.3623  mix_decode.loss_cls: 0.0726  mix_decode.loss_mask: 0.4987  mix_decode.loss_dice: 0.7174  mix_decode.d0.loss_cls: 0.1092  mix_decode.d0.loss_mask: 0.4799  mix_decode.d0.loss_dice: 0.7485  mix_decode.d1.loss_cls: 0.0585  mix_decode.d1.loss_mask: 0.4874  mix_decode.d1.loss_dice: 0.7323  mix_decode.d2.loss_cls: 0.1136  mix_decode.d2.loss_mask: 0.4764  mix_decode.d2.loss_dice: 0.7003  mix_decode.d3.loss_cls: 0.1061  mix_decode.d3.loss_mask: 0.4841  mix_decode.d3.loss_dice: 0.7110  mix_decode.d4.loss_cls: 0.0739  mix_decode.d4.loss_mask: 0.4970  mix_decode.d4.loss_dice: 0.7222  mix_decode.d5.loss_cls: 0.0852  mix_decode.d5.loss_mask: 0.4914  mix_decode.d5.loss_dice: 0.7174  mix_decode.d6.loss_cls: 0.1228  mix_decode.d6.loss_mask: 0.4809  mix_decode.d6.loss_dice: 0.7158  mix_decode.d7.loss_cls: 0.1008  mix_decode.d7.loss_mask: 0.4950  mix_decode.d7.loss_dice: 0.7078  mix_decode.d8.loss_cls: 0.0835  mix_decode.d8.loss_mask: 0.4935  mix_decode.d8.loss_dice: 0.7231
2025/03/27 12:06:46 - mmengine - INFO - Iter(train) [ 5950/20000]  base_lr: 7.2778e-05 lr: 7.2778e-05  eta: 2:44:36  time: 1.0721  data_time: 0.0216  memory: 10808  loss: 43.2337  decode.loss_cls: 0.2208  decode.loss_mask: 1.2286  decode.loss_dice: 1.3693  decode.d0.loss_cls: 0.2695  decode.d0.loss_mask: 1.2168  decode.d0.loss_dice: 1.4345  decode.d1.loss_cls: 0.2714  decode.d1.loss_mask: 1.2125  decode.d1.loss_dice: 1.4175  decode.d2.loss_cls: 0.2719  decode.d2.loss_mask: 1.2200  decode.d2.loss_dice: 1.3814  decode.d3.loss_cls: 0.2109  decode.d3.loss_mask: 1.2067  decode.d3.loss_dice: 1.3847  decode.d4.loss_cls: 0.1625  decode.d4.loss_mask: 1.2058  decode.d4.loss_dice: 1.3919  decode.d5.loss_cls: 0.2593  decode.d5.loss_mask: 1.2297  decode.d5.loss_dice: 1.3661  decode.d6.loss_cls: 0.1711  decode.d6.loss_mask: 1.2419  decode.d6.loss_dice: 1.3946  decode.d7.loss_cls: 0.2017  decode.d7.loss_mask: 1.2472  decode.d7.loss_dice: 1.4101  decode.d8.loss_cls: 0.1877  decode.d8.loss_mask: 1.2292  decode.d8.loss_dice: 1.4129  mix_decode.loss_cls: 0.1497  mix_decode.loss_mask: 0.5011  mix_decode.loss_dice: 0.8246  mix_decode.d0.loss_cls: 0.1313  mix_decode.d0.loss_mask: 0.5086  mix_decode.d0.loss_dice: 0.8687  mix_decode.d1.loss_cls: 0.1533  mix_decode.d1.loss_mask: 0.4939  mix_decode.d1.loss_dice: 0.8271  mix_decode.d2.loss_cls: 0.1533  mix_decode.d2.loss_mask: 0.4832  mix_decode.d2.loss_dice: 0.8182  mix_decode.d3.loss_cls: 0.1710  mix_decode.d3.loss_mask: 0.4880  mix_decode.d3.loss_dice: 0.8159  mix_decode.d4.loss_cls: 0.1250  mix_decode.d4.loss_mask: 0.5142  mix_decode.d4.loss_dice: 0.8234  mix_decode.d5.loss_cls: 0.1230  mix_decode.d5.loss_mask: 0.5193  mix_decode.d5.loss_dice: 0.8302  mix_decode.d6.loss_cls: 0.1420  mix_decode.d6.loss_mask: 0.5095  mix_decode.d6.loss_dice: 0.8362  mix_decode.d7.loss_cls: 0.1888  mix_decode.d7.loss_mask: 0.5071  mix_decode.d7.loss_dice: 0.8402  mix_decode.d8.loss_cls: 0.1144  mix_decode.d8.loss_mask: 0.5114  mix_decode.d8.loss_dice: 0.8330
2025/03/27 12:07:40 - mmengine - INFO - Exp name: pr2vi_20250327_105544
2025/03/27 12:07:40 - mmengine - INFO - Iter(train) [ 6000/20000]  base_lr: 7.2545e-05 lr: 7.2545e-05  eta: 2:44:44  time: 1.0718  data_time: 0.0217  memory: 10811  loss: 45.3541  decode.loss_cls: 0.2878  decode.loss_mask: 1.3241  decode.loss_dice: 1.3145  decode.d0.loss_cls: 0.4139  decode.d0.loss_mask: 1.3263  decode.d0.loss_dice: 1.3649  decode.d1.loss_cls: 0.3321  decode.d1.loss_mask: 1.3284  decode.d1.loss_dice: 1.3068  decode.d2.loss_cls: 0.3274  decode.d2.loss_mask: 1.3234  decode.d2.loss_dice: 1.3407  decode.d3.loss_cls: 0.3187  decode.d3.loss_mask: 1.3576  decode.d3.loss_dice: 1.3158  decode.d4.loss_cls: 0.2874  decode.d4.loss_mask: 1.3684  decode.d4.loss_dice: 1.3298  decode.d5.loss_cls: 0.3141  decode.d5.loss_mask: 1.3377  decode.d5.loss_dice: 1.3173  decode.d6.loss_cls: 0.2653  decode.d6.loss_mask: 1.3698  decode.d6.loss_dice: 1.3733  decode.d7.loss_cls: 0.2548  decode.d7.loss_mask: 1.3446  decode.d7.loss_dice: 1.3570  decode.d8.loss_cls: 0.3122  decode.d8.loss_mask: 1.3242  decode.d8.loss_dice: 1.3237  mix_decode.loss_cls: 0.1172  mix_decode.loss_mask: 0.6071  mix_decode.loss_dice: 0.8171  mix_decode.d0.loss_cls: 0.1621  mix_decode.d0.loss_mask: 0.5721  mix_decode.d0.loss_dice: 0.8267  mix_decode.d1.loss_cls: 0.1772  mix_decode.d1.loss_mask: 0.5497  mix_decode.d1.loss_dice: 0.7889  mix_decode.d2.loss_cls: 0.1768  mix_decode.d2.loss_mask: 0.5787  mix_decode.d2.loss_dice: 0.7825  mix_decode.d3.loss_cls: 0.1330  mix_decode.d3.loss_mask: 0.6134  mix_decode.d3.loss_dice: 0.7924  mix_decode.d4.loss_cls: 0.1338  mix_decode.d4.loss_mask: 0.6158  mix_decode.d4.loss_dice: 0.8036  mix_decode.d5.loss_cls: 0.1105  mix_decode.d5.loss_mask: 0.6215  mix_decode.d5.loss_dice: 0.8180  mix_decode.d6.loss_cls: 0.1339  mix_decode.d6.loss_mask: 0.6146  mix_decode.d6.loss_dice: 0.8227  mix_decode.d7.loss_cls: 0.1276  mix_decode.d7.loss_mask: 0.6172  mix_decode.d7.loss_dice: 0.8255  mix_decode.d8.loss_cls: 0.1227  mix_decode.d8.loss_mask: 0.6129  mix_decode.d8.loss_dice: 0.8165
2025/03/27 12:07:40 - mmengine - INFO - Saving checkpoint at 6000 iterations
2025/03/27 12:07:45 - mmengine - INFO - Iter(val) [ 50/398]    eta: 0:00:30  time: 0.0863  data_time: 0.0018  memory: 3120  
2025/03/27 12:07:49 - mmengine - INFO - Iter(val) [100/398]    eta: 0:00:25  time: 0.0855  data_time: 0.0017  memory: 3120  
2025/03/27 12:07:54 - mmengine - INFO - Iter(val) [150/398]    eta: 0:00:21  time: 0.0853  data_time: 0.0017  memory: 3120  
2025/03/27 12:07:58 - mmengine - INFO - Iter(val) [200/398]    eta: 0:00:17  time: 0.0872  data_time: 0.0018  memory: 3120  
2025/03/27 12:08:02 - mmengine - INFO - Iter(val) [250/398]    eta: 0:00:12  time: 0.0858  data_time: 0.0019  memory: 3120  
2025/03/27 12:08:07 - mmengine - INFO - Iter(val) [300/398]    eta: 0:00:08  time: 0.0846  data_time: 0.0015  memory: 3120  
2025/03/27 12:08:11 - mmengine - INFO - Iter(val) [350/398]    eta: 0:00:04  time: 0.0851  data_time: 0.0016  memory: 3120  
2025/03/27 12:08:15 - mmengine - INFO - per class results:
2025/03/27 12:08:15 - mmengine - INFO - 
+--------------------+-------+-------+
|       Class        |  IoU  |  Acc  |
+--------------------+-------+-------+
| impervious_surface | 77.73 | 81.86 |
|      building      | 89.18 | 94.75 |
|   low_vegetation   | 65.31 |  85.7 |
|        tree        | 71.48 | 79.23 |
|        car         | 55.04 | 90.65 |
|      clutter       | 37.82 | 86.99 |
+--------------------+-------+-------+
2025/03/27 12:08:15 - mmengine - INFO - Iter(val) [398/398]    aAcc: 85.5600  mIoU: 66.0900  mAcc: 86.5300  data_time: 0.0019  time: 0.0861
2025/03/27 12:08:15 - mmengine - INFO - The previous best checkpoint /data/xiaoxinghhh/code/my_mmcv/work_dirs/pr2vi/DA_spatial_64_fft_cut_off_0.3_pre3/4ddf0_seed0/best_mIoU_iter_4000.pth is removed
2025/03/27 12:08:16 - mmengine - INFO - The best checkpoint with 66.0900 mIoU at 6000 iter is saved to best_mIoU_iter_6000.pth.
2025/03/27 12:09:11 - mmengine - INFO - Iter(train) [ 6050/20000]  base_lr: 7.2312e-05 lr: 7.2312e-05  eta: 2:44:56  time: 1.0733  data_time: 0.0223  memory: 10806  loss: 42.5074  decode.loss_cls: 0.1745  decode.loss_mask: 1.2630  decode.loss_dice: 1.3237  decode.d0.loss_cls: 0.2697  decode.d0.loss_mask: 1.3118  decode.d0.loss_dice: 1.3829  decode.d1.loss_cls: 0.2178  decode.d1.loss_mask: 1.2681  decode.d1.loss_dice: 1.3388  decode.d2.loss_cls: 0.1726  decode.d2.loss_mask: 1.2699  decode.d2.loss_dice: 1.3230  decode.d3.loss_cls: 0.2390  decode.d3.loss_mask: 1.2620  decode.d3.loss_dice: 1.3007  decode.d4.loss_cls: 0.2359  decode.d4.loss_mask: 1.2716  decode.d4.loss_dice: 1.2941  decode.d5.loss_cls: 0.2276  decode.d5.loss_mask: 1.2701  decode.d5.loss_dice: 1.3285  decode.d6.loss_cls: 0.2343  decode.d6.loss_mask: 1.2729  decode.d6.loss_dice: 1.2923  decode.d7.loss_cls: 0.2440  decode.d7.loss_mask: 1.2590  decode.d7.loss_dice: 1.2932  decode.d8.loss_cls: 0.2377  decode.d8.loss_mask: 1.2391  decode.d8.loss_dice: 1.2953  mix_decode.loss_cls: 0.1310  mix_decode.loss_mask: 0.5069  mix_decode.loss_dice: 0.8186  mix_decode.d0.loss_cls: 0.1017  mix_decode.d0.loss_mask: 0.5028  mix_decode.d0.loss_dice: 0.8319  mix_decode.d1.loss_cls: 0.1486  mix_decode.d1.loss_mask: 0.4901  mix_decode.d1.loss_dice: 0.8090  mix_decode.d2.loss_cls: 0.1227  mix_decode.d2.loss_mask: 0.4998  mix_decode.d2.loss_dice: 0.8089  mix_decode.d3.loss_cls: 0.1085  mix_decode.d3.loss_mask: 0.4995  mix_decode.d3.loss_dice: 0.8098  mix_decode.d4.loss_cls: 0.1291  mix_decode.d4.loss_mask: 0.5012  mix_decode.d4.loss_dice: 0.8112  mix_decode.d5.loss_cls: 0.1379  mix_decode.d5.loss_mask: 0.4931  mix_decode.d5.loss_dice: 0.8047  mix_decode.d6.loss_cls: 0.1035  mix_decode.d6.loss_mask: 0.5056  mix_decode.d6.loss_dice: 0.8122  mix_decode.d7.loss_cls: 0.1127  mix_decode.d7.loss_mask: 0.5085  mix_decode.d7.loss_dice: 0.8167  mix_decode.d8.loss_cls: 0.1477  mix_decode.d8.loss_mask: 0.5025  mix_decode.d8.loss_dice: 0.8181
2025/03/27 12:10:05 - mmengine - INFO - Iter(train) [ 6100/20000]  base_lr: 7.2079e-05 lr: 7.2079e-05  eta: 2:45:03  time: 1.1065  data_time: 0.0250  memory: 10805  loss: 40.4918  decode.loss_cls: 0.1547  decode.loss_mask: 1.1365  decode.loss_dice: 1.5170  decode.d0.loss_cls: 0.2673  decode.d0.loss_mask: 1.1475  decode.d0.loss_dice: 1.5965  decode.d1.loss_cls: 0.1583  decode.d1.loss_mask: 1.1308  decode.d1.loss_dice: 1.5303  decode.d2.loss_cls: 0.1538  decode.d2.loss_mask: 1.1291  decode.d2.loss_dice: 1.5208  decode.d3.loss_cls: 0.1571  decode.d3.loss_mask: 1.1329  decode.d3.loss_dice: 1.5049  decode.d4.loss_cls: 0.1677  decode.d4.loss_mask: 1.1281  decode.d4.loss_dice: 1.4903  decode.d5.loss_cls: 0.2092  decode.d5.loss_mask: 1.1278  decode.d5.loss_dice: 1.5260  decode.d6.loss_cls: 0.2048  decode.d6.loss_mask: 1.1265  decode.d6.loss_dice: 1.5282  decode.d7.loss_cls: 0.2142  decode.d7.loss_mask: 1.1313  decode.d7.loss_dice: 1.4591  decode.d8.loss_cls: 0.1688  decode.d8.loss_mask: 1.1199  decode.d8.loss_dice: 1.4870  mix_decode.loss_cls: 0.0654  mix_decode.loss_mask: 0.4110  mix_decode.loss_dice: 0.7231  mix_decode.d0.loss_cls: 0.1148  mix_decode.d0.loss_mask: 0.3964  mix_decode.d0.loss_dice: 0.7303  mix_decode.d1.loss_cls: 0.0826  mix_decode.d1.loss_mask: 0.3857  mix_decode.d1.loss_dice: 0.7047  mix_decode.d2.loss_cls: 0.1253  mix_decode.d2.loss_mask: 0.4124  mix_decode.d2.loss_dice: 0.7119  mix_decode.d3.loss_cls: 0.1070  mix_decode.d3.loss_mask: 0.4175  mix_decode.d3.loss_dice: 0.7208  mix_decode.d4.loss_cls: 0.0923  mix_decode.d4.loss_mask: 0.4123  mix_decode.d4.loss_dice: 0.7148  mix_decode.d5.loss_cls: 0.0917  mix_decode.d5.loss_mask: 0.4035  mix_decode.d5.loss_dice: 0.7024  mix_decode.d6.loss_cls: 0.0825  mix_decode.d6.loss_mask: 0.4121  mix_decode.d6.loss_dice: 0.7182  mix_decode.d7.loss_cls: 0.0630  mix_decode.d7.loss_mask: 0.4138  mix_decode.d7.loss_dice: 0.7316  mix_decode.d8.loss_cls: 0.0749  mix_decode.d8.loss_mask: 0.4138  mix_decode.d8.loss_dice: 0.7299
2025/03/27 12:11:01 - mmengine - INFO - Iter(train) [ 6150/20000]  base_lr: 7.1845e-05 lr: 7.1845e-05  eta: 2:45:14  time: 1.1201  data_time: 0.0258  memory: 10806  loss: 45.8948  decode.loss_cls: 0.2457  decode.loss_mask: 1.4307  decode.loss_dice: 1.4665  decode.d0.loss_cls: 0.4247  decode.d0.loss_mask: 1.3565  decode.d0.loss_dice: 1.4624  decode.d1.loss_cls: 0.3206  decode.d1.loss_mask: 1.3380  decode.d1.loss_dice: 1.4343  decode.d2.loss_cls: 0.3169  decode.d2.loss_mask: 1.3411  decode.d2.loss_dice: 1.4341  decode.d3.loss_cls: 0.3660  decode.d3.loss_mask: 1.2742  decode.d3.loss_dice: 1.3720  decode.d4.loss_cls: 0.3280  decode.d4.loss_mask: 1.3826  decode.d4.loss_dice: 1.4025  decode.d5.loss_cls: 0.2848  decode.d5.loss_mask: 1.3917  decode.d5.loss_dice: 1.4207  decode.d6.loss_cls: 0.2959  decode.d6.loss_mask: 1.3791  decode.d6.loss_dice: 1.4252  decode.d7.loss_cls: 0.2417  decode.d7.loss_mask: 1.4190  decode.d7.loss_dice: 1.4580  decode.d8.loss_cls: 0.3170  decode.d8.loss_mask: 1.3527  decode.d8.loss_dice: 1.4431  mix_decode.loss_cls: 0.1928  mix_decode.loss_mask: 0.5539  mix_decode.loss_dice: 0.7336  mix_decode.d0.loss_cls: 0.2115  mix_decode.d0.loss_mask: 0.5468  mix_decode.d0.loss_dice: 0.7538  mix_decode.d1.loss_cls: 0.1783  mix_decode.d1.loss_mask: 0.5600  mix_decode.d1.loss_dice: 0.7318  mix_decode.d2.loss_cls: 0.2189  mix_decode.d2.loss_mask: 0.5583  mix_decode.d2.loss_dice: 0.7028  mix_decode.d3.loss_cls: 0.1630  mix_decode.d3.loss_mask: 0.5724  mix_decode.d3.loss_dice: 0.7128  mix_decode.d4.loss_cls: 0.1689  mix_decode.d4.loss_mask: 0.5662  mix_decode.d4.loss_dice: 0.7173  mix_decode.d5.loss_cls: 0.2301  mix_decode.d5.loss_mask: 0.5533  mix_decode.d5.loss_dice: 0.7186  mix_decode.d6.loss_cls: 0.1963  mix_decode.d6.loss_mask: 0.5687  mix_decode.d6.loss_dice: 0.7309  mix_decode.d7.loss_cls: 0.1870  mix_decode.d7.loss_mask: 0.5553  mix_decode.d7.loss_dice: 0.7259  mix_decode.d8.loss_cls: 0.1427  mix_decode.d8.loss_mask: 0.5755  mix_decode.d8.loss_dice: 0.7412
2025/03/27 12:11:55 - mmengine - INFO - Iter(train) [ 6200/20000]  base_lr: 7.1612e-05 lr: 7.1612e-05  eta: 2:45:19  time: 1.0749  data_time: 0.0218  memory: 10809  loss: 39.0800  decode.loss_cls: 0.2355  decode.loss_mask: 1.0793  decode.loss_dice: 1.3846  decode.d0.loss_cls: 0.2775  decode.d0.loss_mask: 1.1179  decode.d0.loss_dice: 1.4348  decode.d1.loss_cls: 0.1553  decode.d1.loss_mask: 1.0947  decode.d1.loss_dice: 1.4006  decode.d2.loss_cls: 0.1624  decode.d2.loss_mask: 1.0930  decode.d2.loss_dice: 1.4032  decode.d3.loss_cls: 0.1620  decode.d3.loss_mask: 1.1048  decode.d3.loss_dice: 1.4079  decode.d4.loss_cls: 0.1774  decode.d4.loss_mask: 1.0874  decode.d4.loss_dice: 1.4145  decode.d5.loss_cls: 0.1797  decode.d5.loss_mask: 1.0823  decode.d5.loss_dice: 1.4301  decode.d6.loss_cls: 0.1106  decode.d6.loss_mask: 1.1335  decode.d6.loss_dice: 1.4490  decode.d7.loss_cls: 0.1995  decode.d7.loss_mask: 1.1140  decode.d7.loss_dice: 1.3972  decode.d8.loss_cls: 0.2003  decode.d8.loss_mask: 1.0860  decode.d8.loss_dice: 1.4289  mix_decode.loss_cls: 0.0481  mix_decode.loss_mask: 0.4513  mix_decode.loss_dice: 0.6965  mix_decode.d0.loss_cls: 0.1030  mix_decode.d0.loss_mask: 0.4502  mix_decode.d0.loss_dice: 0.6956  mix_decode.d1.loss_cls: 0.0679  mix_decode.d1.loss_mask: 0.4402  mix_decode.d1.loss_dice: 0.6930  mix_decode.d2.loss_cls: 0.0972  mix_decode.d2.loss_mask: 0.4272  mix_decode.d2.loss_dice: 0.6738  mix_decode.d3.loss_cls: 0.0920  mix_decode.d3.loss_mask: 0.4311  mix_decode.d3.loss_dice: 0.6719  mix_decode.d4.loss_cls: 0.0592  mix_decode.d4.loss_mask: 0.4341  mix_decode.d4.loss_dice: 0.6963  mix_decode.d5.loss_cls: 0.1122  mix_decode.d5.loss_mask: 0.4240  mix_decode.d5.loss_dice: 0.6873  mix_decode.d6.loss_cls: 0.0865  mix_decode.d6.loss_mask: 0.4329  mix_decode.d6.loss_dice: 0.6910  mix_decode.d7.loss_cls: 0.0632  mix_decode.d7.loss_mask: 0.4475  mix_decode.d7.loss_dice: 0.6956  mix_decode.d8.loss_cls: 0.0817  mix_decode.d8.loss_mask: 0.4325  mix_decode.d8.loss_dice: 0.6929
2025/03/27 12:12:50 - mmengine - INFO - Iter(train) [ 6250/20000]  base_lr: 7.1378e-05 lr: 7.1378e-05  eta: 2:45:25  time: 1.1218  data_time: 0.0268  memory: 10806  loss: 43.7325  decode.loss_cls: 0.1740  decode.loss_mask: 1.3846  decode.loss_dice: 1.4602  decode.d0.loss_cls: 0.2405  decode.d0.loss_mask: 1.3488  decode.d0.loss_dice: 1.5093  decode.d1.loss_cls: 0.1684  decode.d1.loss_mask: 1.3345  decode.d1.loss_dice: 1.4731  decode.d2.loss_cls: 0.2118  decode.d2.loss_mask: 1.3652  decode.d2.loss_dice: 1.4528  decode.d3.loss_cls: 0.3215  decode.d3.loss_mask: 1.3609  decode.d3.loss_dice: 1.4025  decode.d4.loss_cls: 0.2418  decode.d4.loss_mask: 1.3571  decode.d4.loss_dice: 1.4165  decode.d5.loss_cls: 0.1745  decode.d5.loss_mask: 1.3515  decode.d5.loss_dice: 1.4360  decode.d6.loss_cls: 0.2185  decode.d6.loss_mask: 1.3734  decode.d6.loss_dice: 1.4442  decode.d7.loss_cls: 0.2622  decode.d7.loss_mask: 1.3897  decode.d7.loss_dice: 1.4491  decode.d8.loss_cls: 0.2309  decode.d8.loss_mask: 1.3502  decode.d8.loss_dice: 1.4569  mix_decode.loss_cls: 0.1074  mix_decode.loss_mask: 0.5310  mix_decode.loss_dice: 0.6955  mix_decode.d0.loss_cls: 0.1076  mix_decode.d0.loss_mask: 0.5154  mix_decode.d0.loss_dice: 0.7417  mix_decode.d1.loss_cls: 0.1069  mix_decode.d1.loss_mask: 0.5217  mix_decode.d1.loss_dice: 0.6977  mix_decode.d2.loss_cls: 0.1295  mix_decode.d2.loss_mask: 0.5260  mix_decode.d2.loss_dice: 0.6836  mix_decode.d3.loss_cls: 0.0651  mix_decode.d3.loss_mask: 0.5377  mix_decode.d3.loss_dice: 0.7181  mix_decode.d4.loss_cls: 0.0811  mix_decode.d4.loss_mask: 0.5372  mix_decode.d4.loss_dice: 0.7056  mix_decode.d5.loss_cls: 0.1075  mix_decode.d5.loss_mask: 0.5424  mix_decode.d5.loss_dice: 0.6965  mix_decode.d6.loss_cls: 0.1102  mix_decode.d6.loss_mask: 0.5363  mix_decode.d6.loss_dice: 0.7021  mix_decode.d7.loss_cls: 0.1189  mix_decode.d7.loss_mask: 0.5245  mix_decode.d7.loss_dice: 0.6800  mix_decode.d8.loss_cls: 0.1138  mix_decode.d8.loss_mask: 0.5303  mix_decode.d8.loss_dice: 0.7003
2025/03/27 12:13:45 - mmengine - INFO - Iter(train) [ 6300/20000]  base_lr: 7.1144e-05 lr: 7.1144e-05  eta: 2:45:29  time: 1.0725  data_time: 0.0215  memory: 10810  loss: 37.5098  decode.loss_cls: 0.0657  decode.loss_mask: 1.0623  decode.loss_dice: 1.1779  decode.d0.loss_cls: 0.1662  decode.d0.loss_mask: 1.0487  decode.d0.loss_dice: 1.1838  decode.d1.loss_cls: 0.1739  decode.d1.loss_mask: 1.0176  decode.d1.loss_dice: 1.1873  decode.d2.loss_cls: 0.1113  decode.d2.loss_mask: 1.0264  decode.d2.loss_dice: 1.1905  decode.d3.loss_cls: 0.0839  decode.d3.loss_mask: 1.0652  decode.d3.loss_dice: 1.1834  decode.d4.loss_cls: 0.1302  decode.d4.loss_mask: 1.0164  decode.d4.loss_dice: 1.1788  decode.d5.loss_cls: 0.1290  decode.d5.loss_mask: 1.0165  decode.d5.loss_dice: 1.1626  decode.d6.loss_cls: 0.1329  decode.d6.loss_mask: 1.0126  decode.d6.loss_dice: 1.1798  decode.d7.loss_cls: 0.0973  decode.d7.loss_mask: 1.0391  decode.d7.loss_dice: 1.1811  decode.d8.loss_cls: 0.1412  decode.d8.loss_mask: 1.0098  decode.d8.loss_dice: 1.1705  mix_decode.loss_cls: 0.1408  mix_decode.loss_mask: 0.5137  mix_decode.loss_dice: 0.7432  mix_decode.d0.loss_cls: 0.1255  mix_decode.d0.loss_mask: 0.5339  mix_decode.d0.loss_dice: 0.7849  mix_decode.d1.loss_cls: 0.1575  mix_decode.d1.loss_mask: 0.5225  mix_decode.d1.loss_dice: 0.7333  mix_decode.d2.loss_cls: 0.1752  mix_decode.d2.loss_mask: 0.5143  mix_decode.d2.loss_dice: 0.7288  mix_decode.d3.loss_cls: 0.1665  mix_decode.d3.loss_mask: 0.5082  mix_decode.d3.loss_dice: 0.7235  mix_decode.d4.loss_cls: 0.1700  mix_decode.d4.loss_mask: 0.5160  mix_decode.d4.loss_dice: 0.7434  mix_decode.d5.loss_cls: 0.1979  mix_decode.d5.loss_mask: 0.5180  mix_decode.d5.loss_dice: 0.7214  mix_decode.d6.loss_cls: 0.1695  mix_decode.d6.loss_mask: 0.5218  mix_decode.d6.loss_dice: 0.7184  mix_decode.d7.loss_cls: 0.1379  mix_decode.d7.loss_mask: 0.5254  mix_decode.d7.loss_dice: 0.7524  mix_decode.d8.loss_cls: 0.1519  mix_decode.d8.loss_mask: 0.5111  mix_decode.d8.loss_dice: 0.7409
2025/03/27 12:14:39 - mmengine - INFO - Iter(train) [ 6350/20000]  base_lr: 7.0911e-05 lr: 7.0911e-05  eta: 2:45:30  time: 1.0722  data_time: 0.0213  memory: 10803  loss: 40.8559  decode.loss_cls: 0.0943  decode.loss_mask: 1.2364  decode.loss_dice: 1.4171  decode.d0.loss_cls: 0.1776  decode.d0.loss_mask: 1.2179  decode.d0.loss_dice: 1.4270  decode.d1.loss_cls: 0.1497  decode.d1.loss_mask: 1.2031  decode.d1.loss_dice: 1.4092  decode.d2.loss_cls: 0.1359  decode.d2.loss_mask: 1.1885  decode.d2.loss_dice: 1.4064  decode.d3.loss_cls: 0.1382  decode.d3.loss_mask: 1.1893  decode.d3.loss_dice: 1.4035  decode.d4.loss_cls: 0.0976  decode.d4.loss_mask: 1.2177  decode.d4.loss_dice: 1.4208  decode.d5.loss_cls: 0.0978  decode.d5.loss_mask: 1.2293  decode.d5.loss_dice: 1.4053  decode.d6.loss_cls: 0.1002  decode.d6.loss_mask: 1.2255  decode.d6.loss_dice: 1.4194  decode.d7.loss_cls: 0.1348  decode.d7.loss_mask: 1.2199  decode.d7.loss_dice: 1.4085  decode.d8.loss_cls: 0.1006  decode.d8.loss_mask: 1.2335  decode.d8.loss_dice: 1.4234  mix_decode.loss_cls: 0.1160  mix_decode.loss_mask: 0.4738  mix_decode.loss_dice: 0.7268  mix_decode.d0.loss_cls: 0.1115  mix_decode.d0.loss_mask: 0.4839  mix_decode.d0.loss_dice: 0.7535  mix_decode.d1.loss_cls: 0.1531  mix_decode.d1.loss_mask: 0.4753  mix_decode.d1.loss_dice: 0.7166  mix_decode.d2.loss_cls: 0.1612  mix_decode.d2.loss_mask: 0.4723  mix_decode.d2.loss_dice: 0.7012  mix_decode.d3.loss_cls: 0.1226  mix_decode.d3.loss_mask: 0.4753  mix_decode.d3.loss_dice: 0.7082  mix_decode.d4.loss_cls: 0.1219  mix_decode.d4.loss_mask: 0.4724  mix_decode.d4.loss_dice: 0.7265  mix_decode.d5.loss_cls: 0.1321  mix_decode.d5.loss_mask: 0.4798  mix_decode.d5.loss_dice: 0.7215  mix_decode.d6.loss_cls: 0.1185  mix_decode.d6.loss_mask: 0.4789  mix_decode.d6.loss_dice: 0.7303  mix_decode.d7.loss_cls: 0.1511  mix_decode.d7.loss_mask: 0.4732  mix_decode.d7.loss_dice: 0.7313  mix_decode.d8.loss_cls: 0.1346  mix_decode.d8.loss_mask: 0.4778  mix_decode.d8.loss_dice: 0.7264
2025/03/27 12:15:33 - mmengine - INFO - Iter(train) [ 6400/20000]  base_lr: 7.0677e-05 lr: 7.0677e-05  eta: 2:45:33  time: 1.0744  data_time: 0.0218  memory: 10811  loss: 49.8616  decode.loss_cls: 0.1419  decode.loss_mask: 1.6198  decode.loss_dice: 1.6316  decode.d0.loss_cls: 0.2876  decode.d0.loss_mask: 1.6017  decode.d0.loss_dice: 1.6050  decode.d1.loss_cls: 0.3102  decode.d1.loss_mask: 1.5442  decode.d1.loss_dice: 1.5842  decode.d2.loss_cls: 0.1756  decode.d2.loss_mask: 1.6032  decode.d2.loss_dice: 1.6057  decode.d3.loss_cls: 0.2062  decode.d3.loss_mask: 1.5423  decode.d3.loss_dice: 1.5763  decode.d4.loss_cls: 0.2568  decode.d4.loss_mask: 1.5227  decode.d4.loss_dice: 1.5710  decode.d5.loss_cls: 0.2512  decode.d5.loss_mask: 1.5118  decode.d5.loss_dice: 1.5673  decode.d6.loss_cls: 0.1656  decode.d6.loss_mask: 1.5903  decode.d6.loss_dice: 1.5784  decode.d7.loss_cls: 0.1703  decode.d7.loss_mask: 1.5845  decode.d7.loss_dice: 1.6095  decode.d8.loss_cls: 0.2031  decode.d8.loss_mask: 1.5715  decode.d8.loss_dice: 1.6286  mix_decode.loss_cls: 0.0787  mix_decode.loss_mask: 0.5673  mix_decode.loss_dice: 0.9279  mix_decode.d0.loss_cls: 0.0884  mix_decode.d0.loss_mask: 0.5688  mix_decode.d0.loss_dice: 0.9541  mix_decode.d1.loss_cls: 0.1713  mix_decode.d1.loss_mask: 0.5570  mix_decode.d1.loss_dice: 0.8827  mix_decode.d2.loss_cls: 0.2485  mix_decode.d2.loss_mask: 0.5499  mix_decode.d2.loss_dice: 0.8560  mix_decode.d3.loss_cls: 0.1492  mix_decode.d3.loss_mask: 0.5445  mix_decode.d3.loss_dice: 0.8839  mix_decode.d4.loss_cls: 0.1875  mix_decode.d4.loss_mask: 0.5367  mix_decode.d4.loss_dice: 0.8868  mix_decode.d5.loss_cls: 0.1637  mix_decode.d5.loss_mask: 0.5545  mix_decode.d5.loss_dice: 0.9100  mix_decode.d6.loss_cls: 0.1614  mix_decode.d6.loss_mask: 0.5469  mix_decode.d6.loss_dice: 0.9010  mix_decode.d7.loss_cls: 0.1013  mix_decode.d7.loss_mask: 0.5673  mix_decode.d7.loss_dice: 0.9086  mix_decode.d8.loss_cls: 0.0850  mix_decode.d8.loss_mask: 0.5659  mix_decode.d8.loss_dice: 0.9389
2025/03/27 12:16:28 - mmengine - INFO - Iter(train) [ 6450/20000]  base_lr: 7.0443e-05 lr: 7.0443e-05  eta: 2:45:34  time: 1.0723  data_time: 0.0210  memory: 10808  loss: 41.5600  decode.loss_cls: 0.2547  decode.loss_mask: 1.1364  decode.loss_dice: 1.5390  decode.d0.loss_cls: 0.2489  decode.d0.loss_mask: 1.1577  decode.d0.loss_dice: 1.6108  decode.d1.loss_cls: 0.2376  decode.d1.loss_mask: 1.1345  decode.d1.loss_dice: 1.5539  decode.d2.loss_cls: 0.2359  decode.d2.loss_mask: 1.1188  decode.d2.loss_dice: 1.5224  decode.d3.loss_cls: 0.2692  decode.d3.loss_mask: 1.1567  decode.d3.loss_dice: 1.5338  decode.d4.loss_cls: 0.2333  decode.d4.loss_mask: 1.1260  decode.d4.loss_dice: 1.5144  decode.d5.loss_cls: 0.2232  decode.d5.loss_mask: 1.1360  decode.d5.loss_dice: 1.5253  decode.d6.loss_cls: 0.1621  decode.d6.loss_mask: 1.1408  decode.d6.loss_dice: 1.5621  decode.d7.loss_cls: 0.2144  decode.d7.loss_mask: 1.1617  decode.d7.loss_dice: 1.5533  decode.d8.loss_cls: 0.2156  decode.d8.loss_mask: 1.1460  decode.d8.loss_dice: 1.5456  mix_decode.loss_cls: 0.0769  mix_decode.loss_mask: 0.5274  mix_decode.loss_dice: 0.6393  mix_decode.d0.loss_cls: 0.0739  mix_decode.d0.loss_mask: 0.5289  mix_decode.d0.loss_dice: 0.6383  mix_decode.d1.loss_cls: 0.0649  mix_decode.d1.loss_mask: 0.5290  mix_decode.d1.loss_dice: 0.6377  mix_decode.d2.loss_cls: 0.0583  mix_decode.d2.loss_mask: 0.5284  mix_decode.d2.loss_dice: 0.6413  mix_decode.d3.loss_cls: 0.0724  mix_decode.d3.loss_mask: 0.5232  mix_decode.d3.loss_dice: 0.6303  mix_decode.d4.loss_cls: 0.0753  mix_decode.d4.loss_mask: 0.5295  mix_decode.d4.loss_dice: 0.6243  mix_decode.d5.loss_cls: 0.0597  mix_decode.d5.loss_mask: 0.5251  mix_decode.d5.loss_dice: 0.6359  mix_decode.d6.loss_cls: 0.1030  mix_decode.d6.loss_mask: 0.5209  mix_decode.d6.loss_dice: 0.6328  mix_decode.d7.loss_cls: 0.0960  mix_decode.d7.loss_mask: 0.5279  mix_decode.d7.loss_dice: 0.6442  mix_decode.d8.loss_cls: 0.0761  mix_decode.d8.loss_mask: 0.5326  mix_decode.d8.loss_dice: 0.6367
2025/03/27 12:17:22 - mmengine - INFO - Iter(train) [ 6500/20000]  base_lr: 7.0209e-05 lr: 7.0209e-05  eta: 2:45:33  time: 1.1108  data_time: 0.0249  memory: 10802  loss: 39.4353  decode.loss_cls: 0.2628  decode.loss_mask: 1.0589  decode.loss_dice: 1.3673  decode.d0.loss_cls: 0.2776  decode.d0.loss_mask: 1.0216  decode.d0.loss_dice: 1.4179  decode.d1.loss_cls: 0.3167  decode.d1.loss_mask: 1.0206  decode.d1.loss_dice: 1.3309  decode.d2.loss_cls: 0.2955  decode.d2.loss_mask: 1.0313  decode.d2.loss_dice: 1.3148  decode.d3.loss_cls: 0.3057  decode.d3.loss_mask: 1.0165  decode.d3.loss_dice: 1.3113  decode.d4.loss_cls: 0.2825  decode.d4.loss_mask: 1.0339  decode.d4.loss_dice: 1.3510  decode.d5.loss_cls: 0.2710  decode.d5.loss_mask: 1.0373  decode.d5.loss_dice: 1.3358  decode.d6.loss_cls: 0.2880  decode.d6.loss_mask: 1.0217  decode.d6.loss_dice: 1.3302  decode.d7.loss_cls: 0.2567  decode.d7.loss_mask: 1.0547  decode.d7.loss_dice: 1.3521  decode.d8.loss_cls: 0.2730  decode.d8.loss_mask: 1.0601  decode.d8.loss_dice: 1.3322  mix_decode.loss_cls: 0.1167  mix_decode.loss_mask: 0.4245  mix_decode.loss_dice: 0.7370  mix_decode.d0.loss_cls: 0.1246  mix_decode.d0.loss_mask: 0.4039  mix_decode.d0.loss_dice: 0.7495  mix_decode.d1.loss_cls: 0.1443  mix_decode.d1.loss_mask: 0.4077  mix_decode.d1.loss_dice: 0.7277  mix_decode.d2.loss_cls: 0.1450  mix_decode.d2.loss_mask: 0.3955  mix_decode.d2.loss_dice: 0.7169  mix_decode.d3.loss_cls: 0.1674  mix_decode.d3.loss_mask: 0.3966  mix_decode.d3.loss_dice: 0.7158  mix_decode.d4.loss_cls: 0.1630  mix_decode.d4.loss_mask: 0.4038  mix_decode.d4.loss_dice: 0.7323  mix_decode.d5.loss_cls: 0.1495  mix_decode.d5.loss_mask: 0.4039  mix_decode.d5.loss_dice: 0.7338  mix_decode.d6.loss_cls: 0.1499  mix_decode.d6.loss_mask: 0.3982  mix_decode.d6.loss_dice: 0.7296  mix_decode.d7.loss_cls: 0.1725  mix_decode.d7.loss_mask: 0.4027  mix_decode.d7.loss_dice: 0.7120  mix_decode.d8.loss_cls: 0.1196  mix_decode.d8.loss_mask: 0.4229  mix_decode.d8.loss_dice: 0.7385
2025/03/27 12:18:15 - mmengine - INFO - Iter(train) [ 6550/20000]  base_lr: 6.9975e-05 lr: 6.9975e-05  eta: 2:45:31  time: 1.0737  data_time: 0.0212  memory: 10807  loss: 42.0674  decode.loss_cls: 0.1806  decode.loss_mask: 1.3804  decode.loss_dice: 1.4280  decode.d0.loss_cls: 0.2996  decode.d0.loss_mask: 1.3832  decode.d0.loss_dice: 1.3947  decode.d1.loss_cls: 0.1941  decode.d1.loss_mask: 1.3509  decode.d1.loss_dice: 1.4120  decode.d2.loss_cls: 0.1813  decode.d2.loss_mask: 1.3582  decode.d2.loss_dice: 1.4205  decode.d3.loss_cls: 0.1666  decode.d3.loss_mask: 1.3561  decode.d3.loss_dice: 1.3963  decode.d4.loss_cls: 0.1646  decode.d4.loss_mask: 1.3514  decode.d4.loss_dice: 1.4019  decode.d5.loss_cls: 0.1442  decode.d5.loss_mask: 1.3577  decode.d5.loss_dice: 1.4242  decode.d6.loss_cls: 0.1330  decode.d6.loss_mask: 1.3712  decode.d6.loss_dice: 1.4391  decode.d7.loss_cls: 0.1456  decode.d7.loss_mask: 1.3881  decode.d7.loss_dice: 1.4489  decode.d8.loss_cls: 0.1646  decode.d8.loss_mask: 1.3787  decode.d8.loss_dice: 1.4404  mix_decode.loss_cls: 0.0520  mix_decode.loss_mask: 0.4809  mix_decode.loss_dice: 0.6865  mix_decode.d0.loss_cls: 0.0656  mix_decode.d0.loss_mask: 0.4994  mix_decode.d0.loss_dice: 0.6882  mix_decode.d1.loss_cls: 0.0700  mix_decode.d1.loss_mask: 0.4952  mix_decode.d1.loss_dice: 0.6740  mix_decode.d2.loss_cls: 0.0839  mix_decode.d2.loss_mask: 0.4921  mix_decode.d2.loss_dice: 0.6725  mix_decode.d3.loss_cls: 0.0809  mix_decode.d3.loss_mask: 0.4896  mix_decode.d3.loss_dice: 0.6707  mix_decode.d4.loss_cls: 0.0579  mix_decode.d4.loss_mask: 0.4948  mix_decode.d4.loss_dice: 0.6730  mix_decode.d5.loss_cls: 0.0603  mix_decode.d5.loss_mask: 0.4902  mix_decode.d5.loss_dice: 0.6895  mix_decode.d6.loss_cls: 0.0523  mix_decode.d6.loss_mask: 0.4956  mix_decode.d6.loss_dice: 0.6893  mix_decode.d7.loss_cls: 0.0578  mix_decode.d7.loss_mask: 0.4890  mix_decode.d7.loss_dice: 0.6936  mix_decode.d8.loss_cls: 0.0992  mix_decode.d8.loss_mask: 0.4828  mix_decode.d8.loss_dice: 0.6844
2025/03/27 12:19:09 - mmengine - INFO - Iter(train) [ 6600/20000]  base_lr: 6.9741e-05 lr: 6.9741e-05  eta: 2:45:29  time: 1.0745  data_time: 0.0217  memory: 10805  loss: 38.7328  decode.loss_cls: 0.2455  decode.loss_mask: 1.0375  decode.loss_dice: 1.2818  decode.d0.loss_cls: 0.3659  decode.d0.loss_mask: 1.0115  decode.d0.loss_dice: 1.2375  decode.d1.loss_cls: 0.2897  decode.d1.loss_mask: 1.0164  decode.d1.loss_dice: 1.2341  decode.d2.loss_cls: 0.2328  decode.d2.loss_mask: 0.9978  decode.d2.loss_dice: 1.2369  decode.d3.loss_cls: 0.2792  decode.d3.loss_mask: 1.0491  decode.d3.loss_dice: 1.2232  decode.d4.loss_cls: 0.2735  decode.d4.loss_mask: 1.0063  decode.d4.loss_dice: 1.2266  decode.d5.loss_cls: 0.2157  decode.d5.loss_mask: 0.9967  decode.d5.loss_dice: 1.2467  decode.d6.loss_cls: 0.1987  decode.d6.loss_mask: 1.0546  decode.d6.loss_dice: 1.2660  decode.d7.loss_cls: 0.2706  decode.d7.loss_mask: 1.0208  decode.d7.loss_dice: 1.2524  decode.d8.loss_cls: 0.2216  decode.d8.loss_mask: 1.0400  decode.d8.loss_dice: 1.2664  mix_decode.loss_cls: 0.1311  mix_decode.loss_mask: 0.5033  mix_decode.loss_dice: 0.6935  mix_decode.d0.loss_cls: 0.1352  mix_decode.d0.loss_mask: 0.5105  mix_decode.d0.loss_dice: 0.7130  mix_decode.d1.loss_cls: 0.1528  mix_decode.d1.loss_mask: 0.5087  mix_decode.d1.loss_dice: 0.6857  mix_decode.d2.loss_cls: 0.2033  mix_decode.d2.loss_mask: 0.4802  mix_decode.d2.loss_dice: 0.6507  mix_decode.d3.loss_cls: 0.1494  mix_decode.d3.loss_mask: 0.5116  mix_decode.d3.loss_dice: 0.6721  mix_decode.d4.loss_cls: 0.1351  mix_decode.d4.loss_mask: 0.5084  mix_decode.d4.loss_dice: 0.6967  mix_decode.d5.loss_cls: 0.1525  mix_decode.d5.loss_mask: 0.5113  mix_decode.d5.loss_dice: 0.6913  mix_decode.d6.loss_cls: 0.2025  mix_decode.d6.loss_mask: 0.4810  mix_decode.d6.loss_dice: 0.6739  mix_decode.d7.loss_cls: 0.1536  mix_decode.d7.loss_mask: 0.4956  mix_decode.d7.loss_dice: 0.6832  mix_decode.d8.loss_cls: 0.1769  mix_decode.d8.loss_mask: 0.5024  mix_decode.d8.loss_dice: 0.6719
2025/03/27 12:20:03 - mmengine - INFO - Iter(train) [ 6650/20000]  base_lr: 6.9507e-05 lr: 6.9507e-05  eta: 2:45:25  time: 1.0759  data_time: 0.0218  memory: 10804  loss: 40.7127  decode.loss_cls: 0.2096  decode.loss_mask: 1.2353  decode.loss_dice: 1.3217  decode.d0.loss_cls: 0.2831  decode.d0.loss_mask: 1.2297  decode.d0.loss_dice: 1.3492  decode.d1.loss_cls: 0.1951  decode.d1.loss_mask: 1.2000  decode.d1.loss_dice: 1.3490  decode.d2.loss_cls: 0.2517  decode.d2.loss_mask: 1.2227  decode.d2.loss_dice: 1.3151  decode.d3.loss_cls: 0.2439  decode.d3.loss_mask: 1.1962  decode.d3.loss_dice: 1.3228  decode.d4.loss_cls: 0.3012  decode.d4.loss_mask: 1.1538  decode.d4.loss_dice: 1.2808  decode.d5.loss_cls: 0.3006  decode.d5.loss_mask: 1.1598  decode.d5.loss_dice: 1.3162  decode.d6.loss_cls: 0.2074  decode.d6.loss_mask: 1.2420  decode.d6.loss_dice: 1.3324  decode.d7.loss_cls: 0.1997  decode.d7.loss_mask: 1.2335  decode.d7.loss_dice: 1.3254  decode.d8.loss_cls: 0.2011  decode.d8.loss_mask: 1.2328  decode.d8.loss_dice: 1.3237  mix_decode.loss_cls: 0.0884  mix_decode.loss_mask: 0.5140  mix_decode.loss_dice: 0.6962  mix_decode.d0.loss_cls: 0.1243  mix_decode.d0.loss_mask: 0.5070  mix_decode.d0.loss_dice: 0.7166  mix_decode.d1.loss_cls: 0.1511  mix_decode.d1.loss_mask: 0.4824  mix_decode.d1.loss_dice: 0.6518  mix_decode.d2.loss_cls: 0.1967  mix_decode.d2.loss_mask: 0.4690  mix_decode.d2.loss_dice: 0.6163  mix_decode.d3.loss_cls: 0.1564  mix_decode.d3.loss_mask: 0.4714  mix_decode.d3.loss_dice: 0.6348  mix_decode.d4.loss_cls: 0.1808  mix_decode.d4.loss_mask: 0.4730  mix_decode.d4.loss_dice: 0.6403  mix_decode.d5.loss_cls: 0.1388  mix_decode.d5.loss_mask: 0.4853  mix_decode.d5.loss_dice: 0.6688  mix_decode.d6.loss_cls: 0.1487  mix_decode.d6.loss_mask: 0.4660  mix_decode.d6.loss_dice: 0.6679  mix_decode.d7.loss_cls: 0.1128  mix_decode.d7.loss_mask: 0.4988  mix_decode.d7.loss_dice: 0.6982  mix_decode.d8.loss_cls: 0.1597  mix_decode.d8.loss_mask: 0.4935  mix_decode.d8.loss_dice: 0.6680
2025/03/27 12:20:57 - mmengine - INFO - Iter(train) [ 6700/20000]  base_lr: 6.9272e-05 lr: 6.9272e-05  eta: 2:45:22  time: 1.0740  data_time: 0.0215  memory: 10813  loss: 42.1429  decode.loss_cls: 0.1660  decode.loss_mask: 1.3158  decode.loss_dice: 1.3229  decode.d0.loss_cls: 0.2119  decode.d0.loss_mask: 1.3825  decode.d0.loss_dice: 1.3176  decode.d1.loss_cls: 0.2072  decode.d1.loss_mask: 1.3183  decode.d1.loss_dice: 1.2998  decode.d2.loss_cls: 0.1567  decode.d2.loss_mask: 1.3339  decode.d2.loss_dice: 1.2885  decode.d3.loss_cls: 0.1930  decode.d3.loss_mask: 1.3255  decode.d3.loss_dice: 1.2904  decode.d4.loss_cls: 0.1838  decode.d4.loss_mask: 1.3270  decode.d4.loss_dice: 1.2961  decode.d5.loss_cls: 0.2149  decode.d5.loss_mask: 1.2925  decode.d5.loss_dice: 1.2995  decode.d6.loss_cls: 0.2665  decode.d6.loss_mask: 1.2503  decode.d6.loss_dice: 1.2923  decode.d7.loss_cls: 0.2302  decode.d7.loss_mask: 1.2751  decode.d7.loss_dice: 1.2979  decode.d8.loss_cls: 0.1657  decode.d8.loss_mask: 1.3135  decode.d8.loss_dice: 1.3185  mix_decode.loss_cls: 0.1285  mix_decode.loss_mask: 0.5434  mix_decode.loss_dice: 0.7106  mix_decode.d0.loss_cls: 0.1320  mix_decode.d0.loss_mask: 0.5582  mix_decode.d0.loss_dice: 0.7422  mix_decode.d1.loss_cls: 0.1026  mix_decode.d1.loss_mask: 0.5570  mix_decode.d1.loss_dice: 0.7247  mix_decode.d2.loss_cls: 0.1362  mix_decode.d2.loss_mask: 0.5564  mix_decode.d2.loss_dice: 0.7087  mix_decode.d3.loss_cls: 0.1333  mix_decode.d3.loss_mask: 0.5577  mix_decode.d3.loss_dice: 0.7031  mix_decode.d4.loss_cls: 0.1069  mix_decode.d4.loss_mask: 0.5450  mix_decode.d4.loss_dice: 0.7227  mix_decode.d5.loss_cls: 0.1243  mix_decode.d5.loss_mask: 0.5449  mix_decode.d5.loss_dice: 0.7120  mix_decode.d6.loss_cls: 0.1282  mix_decode.d6.loss_mask: 0.5468  mix_decode.d6.loss_dice: 0.7377  mix_decode.d7.loss_cls: 0.1320  mix_decode.d7.loss_mask: 0.5412  mix_decode.d7.loss_dice: 0.7434  mix_decode.d8.loss_cls: 0.1394  mix_decode.d8.loss_mask: 0.5410  mix_decode.d8.loss_dice: 0.7292
2025/03/27 12:21:51 - mmengine - INFO - Iter(train) [ 6750/20000]  base_lr: 6.9038e-05 lr: 6.9038e-05  eta: 2:45:17  time: 1.0788  data_time: 0.0222  memory: 10811  loss: 39.3752  decode.loss_cls: 0.1533  decode.loss_mask: 1.2139  decode.loss_dice: 1.3509  decode.d0.loss_cls: 0.2336  decode.d0.loss_mask: 1.2125  decode.d0.loss_dice: 1.3827  decode.d1.loss_cls: 0.1793  decode.d1.loss_mask: 1.2155  decode.d1.loss_dice: 1.3657  decode.d2.loss_cls: 0.2063  decode.d2.loss_mask: 1.2177  decode.d2.loss_dice: 1.3405  decode.d3.loss_cls: 0.1334  decode.d3.loss_mask: 1.2097  decode.d3.loss_dice: 1.3482  decode.d4.loss_cls: 0.1527  decode.d4.loss_mask: 1.2354  decode.d4.loss_dice: 1.3365  decode.d5.loss_cls: 0.1080  decode.d5.loss_mask: 1.2736  decode.d5.loss_dice: 1.3965  decode.d6.loss_cls: 0.1841  decode.d6.loss_mask: 1.2100  decode.d6.loss_dice: 1.3510  decode.d7.loss_cls: 0.1703  decode.d7.loss_mask: 1.2062  decode.d7.loss_dice: 1.3396  decode.d8.loss_cls: 0.1762  decode.d8.loss_mask: 1.2071  decode.d8.loss_dice: 1.3555  mix_decode.loss_cls: 0.1203  mix_decode.loss_mask: 0.4578  mix_decode.loss_dice: 0.6207  mix_decode.d0.loss_cls: 0.1144  mix_decode.d0.loss_mask: 0.4700  mix_decode.d0.loss_dice: 0.6447  mix_decode.d1.loss_cls: 0.1290  mix_decode.d1.loss_mask: 0.4587  mix_decode.d1.loss_dice: 0.6160  mix_decode.d2.loss_cls: 0.1175  mix_decode.d2.loss_mask: 0.4610  mix_decode.d2.loss_dice: 0.6234  mix_decode.d3.loss_cls: 0.0838  mix_decode.d3.loss_mask: 0.4655  mix_decode.d3.loss_dice: 0.6218  mix_decode.d4.loss_cls: 0.0890  mix_decode.d4.loss_mask: 0.4600  mix_decode.d4.loss_dice: 0.6182  mix_decode.d5.loss_cls: 0.0880  mix_decode.d5.loss_mask: 0.4536  mix_decode.d5.loss_dice: 0.6281  mix_decode.d6.loss_cls: 0.1302  mix_decode.d6.loss_mask: 0.4454  mix_decode.d6.loss_dice: 0.6204  mix_decode.d7.loss_cls: 0.1193  mix_decode.d7.loss_mask: 0.4531  mix_decode.d7.loss_dice: 0.6223  mix_decode.d8.loss_cls: 0.1298  mix_decode.d8.loss_mask: 0.4242  mix_decode.d8.loss_dice: 0.6229
2025/03/27 12:22:45 - mmengine - INFO - Iter(train) [ 6800/20000]  base_lr: 6.8803e-05 lr: 6.8803e-05  eta: 2:45:12  time: 1.0783  data_time: 0.0236  memory: 10806  loss: 42.8034  decode.loss_cls: 0.2973  decode.loss_mask: 1.2314  decode.loss_dice: 1.3819  decode.d0.loss_cls: 0.3359  decode.d0.loss_mask: 1.2818  decode.d0.loss_dice: 1.4053  decode.d1.loss_cls: 0.3395  decode.d1.loss_mask: 1.2057  decode.d1.loss_dice: 1.3552  decode.d2.loss_cls: 0.3325  decode.d2.loss_mask: 1.2193  decode.d2.loss_dice: 1.3548  decode.d3.loss_cls: 0.3316  decode.d3.loss_mask: 1.2269  decode.d3.loss_dice: 1.3339  decode.d4.loss_cls: 0.3528  decode.d4.loss_mask: 1.2420  decode.d4.loss_dice: 1.3343  decode.d5.loss_cls: 0.2962  decode.d5.loss_mask: 1.2533  decode.d5.loss_dice: 1.3710  decode.d6.loss_cls: 0.2581  decode.d6.loss_mask: 1.2619  decode.d6.loss_dice: 1.4179  decode.d7.loss_cls: 0.3250  decode.d7.loss_mask: 1.2442  decode.d7.loss_dice: 1.3715  decode.d8.loss_cls: 0.3547  decode.d8.loss_mask: 1.2722  decode.d8.loss_dice: 1.3549  mix_decode.loss_cls: 0.1246  mix_decode.loss_mask: 0.4936  mix_decode.loss_dice: 0.7314  mix_decode.d0.loss_cls: 0.1062  mix_decode.d0.loss_mask: 0.4860  mix_decode.d0.loss_dice: 0.7597  mix_decode.d1.loss_cls: 0.1330  mix_decode.d1.loss_mask: 0.4823  mix_decode.d1.loss_dice: 0.7225  mix_decode.d2.loss_cls: 0.1282  mix_decode.d2.loss_mask: 0.4930  mix_decode.d2.loss_dice: 0.7274  mix_decode.d3.loss_cls: 0.1280  mix_decode.d3.loss_mask: 0.4944  mix_decode.d3.loss_dice: 0.7324  mix_decode.d4.loss_cls: 0.1288  mix_decode.d4.loss_mask: 0.4840  mix_decode.d4.loss_dice: 0.7350  mix_decode.d5.loss_cls: 0.1404  mix_decode.d5.loss_mask: 0.4792  mix_decode.d5.loss_dice: 0.7289  mix_decode.d6.loss_cls: 0.1160  mix_decode.d6.loss_mask: 0.4905  mix_decode.d6.loss_dice: 0.7356  mix_decode.d7.loss_cls: 0.1041  mix_decode.d7.loss_mask: 0.4943  mix_decode.d7.loss_dice: 0.7337  mix_decode.d8.loss_cls: 0.0938  mix_decode.d8.loss_mask: 0.5067  mix_decode.d8.loss_dice: 0.7466
2025/03/27 12:23:39 - mmengine - INFO - Iter(train) [ 6850/20000]  base_lr: 6.8569e-05 lr: 6.8569e-05  eta: 2:45:06  time: 1.0996  data_time: 0.0250  memory: 10809  loss: 36.8228  decode.loss_cls: 0.0993  decode.loss_mask: 1.0745  decode.loss_dice: 1.2264  decode.d0.loss_cls: 0.1999  decode.d0.loss_mask: 1.0906  decode.d0.loss_dice: 1.2603  decode.d1.loss_cls: 0.1295  decode.d1.loss_mask: 1.0466  decode.d1.loss_dice: 1.2006  decode.d2.loss_cls: 0.1460  decode.d2.loss_mask: 1.0571  decode.d2.loss_dice: 1.1834  decode.d3.loss_cls: 0.1478  decode.d3.loss_mask: 1.0614  decode.d3.loss_dice: 1.1855  decode.d4.loss_cls: 0.1009  decode.d4.loss_mask: 1.0653  decode.d4.loss_dice: 1.2158  decode.d5.loss_cls: 0.1038  decode.d5.loss_mask: 1.0518  decode.d5.loss_dice: 1.2203  decode.d6.loss_cls: 0.0801  decode.d6.loss_mask: 1.0667  decode.d6.loss_dice: 1.2434  decode.d7.loss_cls: 0.1089  decode.d7.loss_mask: 1.0564  decode.d7.loss_dice: 1.2338  decode.d8.loss_cls: 0.1063  decode.d8.loss_mask: 1.0778  decode.d8.loss_dice: 1.2554  mix_decode.loss_cls: 0.2047  mix_decode.loss_mask: 0.4666  mix_decode.loss_dice: 0.6206  mix_decode.d0.loss_cls: 0.1512  mix_decode.d0.loss_mask: 0.4786  mix_decode.d0.loss_dice: 0.6761  mix_decode.d1.loss_cls: 0.1711  mix_decode.d1.loss_mask: 0.4504  mix_decode.d1.loss_dice: 0.6128  mix_decode.d2.loss_cls: 0.1758  mix_decode.d2.loss_mask: 0.4588  mix_decode.d2.loss_dice: 0.6095  mix_decode.d3.loss_cls: 0.1431  mix_decode.d3.loss_mask: 0.4608  mix_decode.d3.loss_dice: 0.6121  mix_decode.d4.loss_cls: 0.1833  mix_decode.d4.loss_mask: 0.4599  mix_decode.d4.loss_dice: 0.6196  mix_decode.d5.loss_cls: 0.1966  mix_decode.d5.loss_mask: 0.4872  mix_decode.d5.loss_dice: 0.6131  mix_decode.d6.loss_cls: 0.2063  mix_decode.d6.loss_mask: 0.4746  mix_decode.d6.loss_dice: 0.6159  mix_decode.d7.loss_cls: 0.1912  mix_decode.d7.loss_mask: 0.4731  mix_decode.d7.loss_dice: 0.6183  mix_decode.d8.loss_cls: 0.2085  mix_decode.d8.loss_mask: 0.4615  mix_decode.d8.loss_dice: 0.6255
2025/03/27 12:24:34 - mmengine - INFO - Iter(train) [ 6900/20000]  base_lr: 6.8334e-05 lr: 6.8334e-05  eta: 2:45:00  time: 1.1027  data_time: 0.0251  memory: 10805  loss: 40.5034  decode.loss_cls: 0.2719  decode.loss_mask: 1.0475  decode.loss_dice: 1.4242  decode.d0.loss_cls: 0.2840  decode.d0.loss_mask: 1.0909  decode.d0.loss_dice: 1.4863  decode.d1.loss_cls: 0.2142  decode.d1.loss_mask: 1.1198  decode.d1.loss_dice: 1.4241  decode.d2.loss_cls: 0.2039  decode.d2.loss_mask: 1.1090  decode.d2.loss_dice: 1.3842  decode.d3.loss_cls: 0.1937  decode.d3.loss_mask: 1.1141  decode.d3.loss_dice: 1.3990  decode.d4.loss_cls: 0.2875  decode.d4.loss_mask: 1.0071  decode.d4.loss_dice: 1.3925  decode.d5.loss_cls: 0.2623  decode.d5.loss_mask: 1.0602  decode.d5.loss_dice: 1.3786  decode.d6.loss_cls: 0.2351  decode.d6.loss_mask: 1.0187  decode.d6.loss_dice: 1.3960  decode.d7.loss_cls: 0.2567  decode.d7.loss_mask: 1.0428  decode.d7.loss_dice: 1.4069  decode.d8.loss_cls: 0.1971  decode.d8.loss_mask: 1.1124  decode.d8.loss_dice: 1.4093  mix_decode.loss_cls: 0.1662  mix_decode.loss_mask: 0.4677  mix_decode.loss_dice: 0.6915  mix_decode.d0.loss_cls: 0.1538  mix_decode.d0.loss_mask: 0.4813  mix_decode.d0.loss_dice: 0.7224  mix_decode.d1.loss_cls: 0.1488  mix_decode.d1.loss_mask: 0.4844  mix_decode.d1.loss_dice: 0.6876  mix_decode.d2.loss_cls: 0.1095  mix_decode.d2.loss_mask: 0.4906  mix_decode.d2.loss_dice: 0.6849  mix_decode.d3.loss_cls: 0.1128  mix_decode.d3.loss_mask: 0.4908  mix_decode.d3.loss_dice: 0.6844  mix_decode.d4.loss_cls: 0.1649  mix_decode.d4.loss_mask: 0.4863  mix_decode.d4.loss_dice: 0.6695  mix_decode.d5.loss_cls: 0.1307  mix_decode.d5.loss_mask: 0.4867  mix_decode.d5.loss_dice: 0.6788  mix_decode.d6.loss_cls: 0.0760  mix_decode.d6.loss_mask: 0.4947  mix_decode.d6.loss_dice: 0.6862  mix_decode.d7.loss_cls: 0.1291  mix_decode.d7.loss_mask: 0.5440  mix_decode.d7.loss_dice: 0.6990  mix_decode.d8.loss_cls: 0.1465  mix_decode.d8.loss_mask: 0.6041  mix_decode.d8.loss_dice: 0.6997
2025/03/27 12:25:28 - mmengine - INFO - Iter(train) [ 6950/20000]  base_lr: 6.8099e-05 lr: 6.8099e-05  eta: 2:44:53  time: 1.0729  data_time: 0.0220  memory: 10807  loss: 38.4829  decode.loss_cls: 0.1427  decode.loss_mask: 1.0781  decode.loss_dice: 1.2883  decode.d0.loss_cls: 0.1781  decode.d0.loss_mask: 1.0660  decode.d0.loss_dice: 1.3432  decode.d1.loss_cls: 0.1862  decode.d1.loss_mask: 1.0696  decode.d1.loss_dice: 1.2710  decode.d2.loss_cls: 0.2813  decode.d2.loss_mask: 1.0431  decode.d2.loss_dice: 1.2392  decode.d3.loss_cls: 0.2278  decode.d3.loss_mask: 1.0600  decode.d3.loss_dice: 1.2382  decode.d4.loss_cls: 0.2567  decode.d4.loss_mask: 1.0529  decode.d4.loss_dice: 1.2552  decode.d5.loss_cls: 0.2119  decode.d5.loss_mask: 1.0681  decode.d5.loss_dice: 1.2745  decode.d6.loss_cls: 0.1443  decode.d6.loss_mask: 1.0862  decode.d6.loss_dice: 1.2698  decode.d7.loss_cls: 0.0991  decode.d7.loss_mask: 1.0666  decode.d7.loss_dice: 1.3172  decode.d8.loss_cls: 0.0956  decode.d8.loss_mask: 1.0928  decode.d8.loss_dice: 1.3053  mix_decode.loss_cls: 0.1700  mix_decode.loss_mask: 0.4246  mix_decode.loss_dice: 0.7132  mix_decode.d0.loss_cls: 0.2030  mix_decode.d0.loss_mask: 0.4036  mix_decode.d0.loss_dice: 0.7518  mix_decode.d1.loss_cls: 0.1604  mix_decode.d1.loss_mask: 0.4344  mix_decode.d1.loss_dice: 0.7159  mix_decode.d2.loss_cls: 0.1590  mix_decode.d2.loss_mask: 0.4420  mix_decode.d2.loss_dice: 0.6989  mix_decode.d3.loss_cls: 0.1819  mix_decode.d3.loss_mask: 0.4545  mix_decode.d3.loss_dice: 0.7134  mix_decode.d4.loss_cls: 0.2052  mix_decode.d4.loss_mask: 0.4248  mix_decode.d4.loss_dice: 0.6901  mix_decode.d5.loss_cls: 0.1740  mix_decode.d5.loss_mask: 0.4224  mix_decode.d5.loss_dice: 0.6929  mix_decode.d6.loss_cls: 0.1777  mix_decode.d6.loss_mask: 0.4193  mix_decode.d6.loss_dice: 0.7035  mix_decode.d7.loss_cls: 0.1783  mix_decode.d7.loss_mask: 0.4120  mix_decode.d7.loss_dice: 0.7108  mix_decode.d8.loss_cls: 0.1813  mix_decode.d8.loss_mask: 0.4326  mix_decode.d8.loss_dice: 0.7225
2025/03/27 12:26:21 - mmengine - INFO - Exp name: pr2vi_20250327_105544
2025/03/27 12:26:21 - mmengine - INFO - Iter(train) [ 7000/20000]  base_lr: 6.7864e-05 lr: 6.7864e-05  eta: 2:44:44  time: 1.0737  data_time: 0.0220  memory: 10804  loss: 39.4779  decode.loss_cls: 0.1886  decode.loss_mask: 1.0396  decode.loss_dice: 1.2200  decode.d0.loss_cls: 0.2124  decode.d0.loss_mask: 1.0557  decode.d0.loss_dice: 1.2897  decode.d1.loss_cls: 0.1930  decode.d1.loss_mask: 1.0534  decode.d1.loss_dice: 1.2353  decode.d2.loss_cls: 0.1843  decode.d2.loss_mask: 1.0695  decode.d2.loss_dice: 1.2292  decode.d3.loss_cls: 0.1841  decode.d3.loss_mask: 1.0710  decode.d3.loss_dice: 1.2384  decode.d4.loss_cls: 0.1825  decode.d4.loss_mask: 1.0590  decode.d4.loss_dice: 1.2319  decode.d5.loss_cls: 0.2026  decode.d5.loss_mask: 1.0479  decode.d5.loss_dice: 1.2305  decode.d6.loss_cls: 0.1295  decode.d6.loss_mask: 1.0705  decode.d6.loss_dice: 1.2525  decode.d7.loss_cls: 0.1802  decode.d7.loss_mask: 1.0544  decode.d7.loss_dice: 1.2455  decode.d8.loss_cls: 0.1498  decode.d8.loss_mask: 1.0494  decode.d8.loss_dice: 1.2331  mix_decode.loss_cls: 0.1264  mix_decode.loss_mask: 0.4968  mix_decode.loss_dice: 0.8078  mix_decode.d0.loss_cls: 0.1278  mix_decode.d0.loss_mask: 0.5121  mix_decode.d0.loss_dice: 0.8616  mix_decode.d1.loss_cls: 0.1603  mix_decode.d1.loss_mask: 0.4997  mix_decode.d1.loss_dice: 0.8118  mix_decode.d2.loss_cls: 0.1608  mix_decode.d2.loss_mask: 0.5099  mix_decode.d2.loss_dice: 0.7976  mix_decode.d3.loss_cls: 0.1371  mix_decode.d3.loss_mask: 0.5151  mix_decode.d3.loss_dice: 0.8099  mix_decode.d4.loss_cls: 0.1632  mix_decode.d4.loss_mask: 0.5084  mix_decode.d4.loss_dice: 0.8258  mix_decode.d5.loss_cls: 0.1237  mix_decode.d5.loss_mask: 0.5452  mix_decode.d5.loss_dice: 0.8152  mix_decode.d6.loss_cls: 0.1109  mix_decode.d6.loss_mask: 0.5122  mix_decode.d6.loss_dice: 0.8154  mix_decode.d7.loss_cls: 0.1407  mix_decode.d7.loss_mask: 0.5134  mix_decode.d7.loss_dice: 0.8078  mix_decode.d8.loss_cls: 0.1376  mix_decode.d8.loss_mask: 0.5109  mix_decode.d8.loss_dice: 0.8289
2025/03/27 12:27:15 - mmengine - INFO - Iter(train) [ 7050/20000]  base_lr: 6.7629e-05 lr: 6.7629e-05  eta: 2:44:35  time: 1.0755  data_time: 0.0223  memory: 10805  loss: 36.5027  decode.loss_cls: 0.1534  decode.loss_mask: 1.4087  decode.loss_dice: 1.3812  decode.d0.loss_cls: 0.2248  decode.d0.loss_mask: 1.0609  decode.d0.loss_dice: 1.2940  decode.d1.loss_cls: 0.1527  decode.d1.loss_mask: 1.0674  decode.d1.loss_dice: 1.2406  decode.d2.loss_cls: 0.1545  decode.d2.loss_mask: 1.0429  decode.d2.loss_dice: 1.2380  decode.d3.loss_cls: 0.1193  decode.d3.loss_mask: 1.0429  decode.d3.loss_dice: 1.2528  decode.d4.loss_cls: 0.1254  decode.d4.loss_mask: 1.0433  decode.d4.loss_dice: 1.2395  decode.d5.loss_cls: 0.1198  decode.d5.loss_mask: 1.0318  decode.d5.loss_dice: 1.2468  decode.d6.loss_cls: 0.1217  decode.d6.loss_mask: 1.0502  decode.d6.loss_dice: 1.2498  decode.d7.loss_cls: 0.1276  decode.d7.loss_mask: 1.0438  decode.d7.loss_dice: 1.2611  decode.d8.loss_cls: 0.1363  decode.d8.loss_mask: 1.1115  decode.d8.loss_dice: 1.2825  mix_decode.loss_cls: 0.0696  mix_decode.loss_mask: 0.5705  mix_decode.loss_dice: 0.6047  mix_decode.d0.loss_cls: 0.0802  mix_decode.d0.loss_mask: 0.5034  mix_decode.d0.loss_dice: 0.5940  mix_decode.d1.loss_cls: 0.0479  mix_decode.d1.loss_mask: 0.4897  mix_decode.d1.loss_dice: 0.5780  mix_decode.d2.loss_cls: 0.0391  mix_decode.d2.loss_mask: 0.4994  mix_decode.d2.loss_dice: 0.5895  mix_decode.d3.loss_cls: 0.0486  mix_decode.d3.loss_mask: 0.4949  mix_decode.d3.loss_dice: 0.5833  mix_decode.d4.loss_cls: 0.0486  mix_decode.d4.loss_mask: 0.4887  mix_decode.d4.loss_dice: 0.5859  mix_decode.d5.loss_cls: 0.0608  mix_decode.d5.loss_mask: 0.4897  mix_decode.d5.loss_dice: 0.5856  mix_decode.d6.loss_cls: 0.0515  mix_decode.d6.loss_mask: 0.4973  mix_decode.d6.loss_dice: 0.5887  mix_decode.d7.loss_cls: 0.0562  mix_decode.d7.loss_mask: 0.4899  mix_decode.d7.loss_dice: 0.5821  mix_decode.d8.loss_cls: 0.0573  mix_decode.d8.loss_mask: 0.5062  mix_decode.d8.loss_dice: 0.5963
2025/03/27 12:28:09 - mmengine - INFO - Iter(train) [ 7100/20000]  base_lr: 6.7394e-05 lr: 6.7394e-05  eta: 2:44:25  time: 1.0750  data_time: 0.0219  memory: 10802  loss: 38.4459  decode.loss_cls: 0.1661  decode.loss_mask: 1.0609  decode.loss_dice: 1.2705  decode.d0.loss_cls: 0.2122  decode.d0.loss_mask: 1.0758  decode.d0.loss_dice: 1.2652  decode.d1.loss_cls: 0.2555  decode.d1.loss_mask: 1.0653  decode.d1.loss_dice: 1.2061  decode.d2.loss_cls: 0.2131  decode.d2.loss_mask: 1.0649  decode.d2.loss_dice: 1.2290  decode.d3.loss_cls: 0.2249  decode.d3.loss_mask: 1.0664  decode.d3.loss_dice: 1.2291  decode.d4.loss_cls: 0.2347  decode.d4.loss_mask: 1.0550  decode.d4.loss_dice: 1.2399  decode.d5.loss_cls: 0.1505  decode.d5.loss_mask: 1.0648  decode.d5.loss_dice: 1.2838  decode.d6.loss_cls: 0.1733  decode.d6.loss_mask: 1.0576  decode.d6.loss_dice: 1.2499  decode.d7.loss_cls: 0.1913  decode.d7.loss_mask: 1.0575  decode.d7.loss_dice: 1.2625  decode.d8.loss_cls: 0.1733  decode.d8.loss_mask: 1.0626  decode.d8.loss_dice: 1.2529  mix_decode.loss_cls: 0.1362  mix_decode.loss_mask: 0.5149  mix_decode.loss_dice: 0.6850  mix_decode.d0.loss_cls: 0.1257  mix_decode.d0.loss_mask: 0.4911  mix_decode.d0.loss_dice: 0.6971  mix_decode.d1.loss_cls: 0.1763  mix_decode.d1.loss_mask: 0.4677  mix_decode.d1.loss_dice: 0.6582  mix_decode.d2.loss_cls: 0.1443  mix_decode.d2.loss_mask: 0.4744  mix_decode.d2.loss_dice: 0.6966  mix_decode.d3.loss_cls: 0.1636  mix_decode.d3.loss_mask: 0.4784  mix_decode.d3.loss_dice: 0.6886  mix_decode.d4.loss_cls: 0.1338  mix_decode.d4.loss_mask: 0.5033  mix_decode.d4.loss_dice: 0.7031  mix_decode.d5.loss_cls: 0.1351  mix_decode.d5.loss_mask: 0.5196  mix_decode.d5.loss_dice: 0.6992  mix_decode.d6.loss_cls: 0.1328  mix_decode.d6.loss_mask: 0.5172  mix_decode.d6.loss_dice: 0.6881  mix_decode.d7.loss_cls: 0.1375  mix_decode.d7.loss_mask: 0.5139  mix_decode.d7.loss_dice: 0.6916  mix_decode.d8.loss_cls: 0.1172  mix_decode.d8.loss_mask: 0.5262  mix_decode.d8.loss_dice: 0.7146
2025/03/27 12:29:03 - mmengine - INFO - Iter(train) [ 7150/20000]  base_lr: 6.7159e-05 lr: 6.7159e-05  eta: 2:44:15  time: 1.0731  data_time: 0.0215  memory: 10811  loss: 39.6178  decode.loss_cls: 0.1500  decode.loss_mask: 1.2567  decode.loss_dice: 1.3307  decode.d0.loss_cls: 0.2621  decode.d0.loss_mask: 1.2890  decode.d0.loss_dice: 1.3050  decode.d1.loss_cls: 0.1558  decode.d1.loss_mask: 1.3010  decode.d1.loss_dice: 1.3406  decode.d2.loss_cls: 0.1450  decode.d2.loss_mask: 1.2767  decode.d2.loss_dice: 1.3299  decode.d3.loss_cls: 0.1418  decode.d3.loss_mask: 1.2683  decode.d3.loss_dice: 1.3260  decode.d4.loss_cls: 0.1566  decode.d4.loss_mask: 1.2909  decode.d4.loss_dice: 1.3413  decode.d5.loss_cls: 0.1826  decode.d5.loss_mask: 1.2748  decode.d5.loss_dice: 1.3333  decode.d6.loss_cls: 0.1524  decode.d6.loss_mask: 1.2729  decode.d6.loss_dice: 1.3136  decode.d7.loss_cls: 0.2272  decode.d7.loss_mask: 1.2657  decode.d7.loss_dice: 1.3108  decode.d8.loss_cls: 0.1567  decode.d8.loss_mask: 1.2636  decode.d8.loss_dice: 1.3484  mix_decode.loss_cls: 0.0631  mix_decode.loss_mask: 0.4578  mix_decode.loss_dice: 0.6588  mix_decode.d0.loss_cls: 0.0925  mix_decode.d0.loss_mask: 0.4667  mix_decode.d0.loss_dice: 0.6578  mix_decode.d1.loss_cls: 0.0587  mix_decode.d1.loss_mask: 0.4666  mix_decode.d1.loss_dice: 0.6514  mix_decode.d2.loss_cls: 0.0440  mix_decode.d2.loss_mask: 0.4667  mix_decode.d2.loss_dice: 0.6664  mix_decode.d3.loss_cls: 0.0631  mix_decode.d3.loss_mask: 0.4626  mix_decode.d3.loss_dice: 0.6424  mix_decode.d4.loss_cls: 0.0602  mix_decode.d4.loss_mask: 0.4653  mix_decode.d4.loss_dice: 0.6519  mix_decode.d5.loss_cls: 0.0770  mix_decode.d5.loss_mask: 0.4588  mix_decode.d5.loss_dice: 0.6439  mix_decode.d6.loss_cls: 0.0659  mix_decode.d6.loss_mask: 0.4635  mix_decode.d6.loss_dice: 0.6591  mix_decode.d7.loss_cls: 0.0500  mix_decode.d7.loss_mask: 0.4759  mix_decode.d7.loss_dice: 0.6592  mix_decode.d8.loss_cls: 0.0646  mix_decode.d8.loss_mask: 0.4666  mix_decode.d8.loss_dice: 0.6679
2025/03/27 12:29:56 - mmengine - INFO - Iter(train) [ 7200/20000]  base_lr: 6.6924e-05 lr: 6.6924e-05  eta: 2:44:04  time: 1.0728  data_time: 0.0221  memory: 10806  loss: 42.3680  decode.loss_cls: 0.2349  decode.loss_mask: 1.2216  decode.loss_dice: 1.4881  decode.d0.loss_cls: 0.2342  decode.d0.loss_mask: 1.2433  decode.d0.loss_dice: 1.5685  decode.d1.loss_cls: 0.2700  decode.d1.loss_mask: 1.2130  decode.d1.loss_dice: 1.4519  decode.d2.loss_cls: 0.2927  decode.d2.loss_mask: 1.2315  decode.d2.loss_dice: 1.4438  decode.d3.loss_cls: 0.3003  decode.d3.loss_mask: 1.2250  decode.d3.loss_dice: 1.4768  decode.d4.loss_cls: 0.3079  decode.d4.loss_mask: 1.2365  decode.d4.loss_dice: 1.4454  decode.d5.loss_cls: 0.2049  decode.d5.loss_mask: 1.2379  decode.d5.loss_dice: 1.4988  decode.d6.loss_cls: 0.2376  decode.d6.loss_mask: 1.2357  decode.d6.loss_dice: 1.4983  decode.d7.loss_cls: 0.2594  decode.d7.loss_mask: 1.2205  decode.d7.loss_dice: 1.4650  decode.d8.loss_cls: 0.2141  decode.d8.loss_mask: 1.2403  decode.d8.loss_dice: 1.4752  mix_decode.loss_cls: 0.1565  mix_decode.loss_mask: 0.4394  mix_decode.loss_dice: 0.6898  mix_decode.d0.loss_cls: 0.1032  mix_decode.d0.loss_mask: 0.4437  mix_decode.d0.loss_dice: 0.7193  mix_decode.d1.loss_cls: 0.1140  mix_decode.d1.loss_mask: 0.4361  mix_decode.d1.loss_dice: 0.6914  mix_decode.d2.loss_cls: 0.1365  mix_decode.d2.loss_mask: 0.4439  mix_decode.d2.loss_dice: 0.6923  mix_decode.d3.loss_cls: 0.1028  mix_decode.d3.loss_mask: 0.4494  mix_decode.d3.loss_dice: 0.7054  mix_decode.d4.loss_cls: 0.1260  mix_decode.d4.loss_mask: 0.4441  mix_decode.d4.loss_dice: 0.6913  mix_decode.d5.loss_cls: 0.1066  mix_decode.d5.loss_mask: 0.4507  mix_decode.d5.loss_dice: 0.7106  mix_decode.d6.loss_cls: 0.1072  mix_decode.d6.loss_mask: 0.4442  mix_decode.d6.loss_dice: 0.7038  mix_decode.d7.loss_cls: 0.1500  mix_decode.d7.loss_mask: 0.4394  mix_decode.d7.loss_dice: 0.7026  mix_decode.d8.loss_cls: 0.1344  mix_decode.d8.loss_mask: 0.4424  mix_decode.d8.loss_dice: 0.7178
2025/03/27 12:30:50 - mmengine - INFO - Iter(train) [ 7250/20000]  base_lr: 6.6689e-05 lr: 6.6689e-05  eta: 2:43:53  time: 1.0729  data_time: 0.0214  memory: 10804  loss: 41.4146  decode.loss_cls: 0.4398  decode.loss_mask: 1.0220  decode.loss_dice: 1.3508  decode.d0.loss_cls: 0.3153  decode.d0.loss_mask: 1.0629  decode.d0.loss_dice: 1.4634  decode.d1.loss_cls: 0.3803  decode.d1.loss_mask: 1.0189  decode.d1.loss_dice: 1.3213  decode.d2.loss_cls: 0.4144  decode.d2.loss_mask: 1.0325  decode.d2.loss_dice: 1.3377  decode.d3.loss_cls: 0.3955  decode.d3.loss_mask: 1.0333  decode.d3.loss_dice: 1.3669  decode.d4.loss_cls: 0.4667  decode.d4.loss_mask: 1.0491  decode.d4.loss_dice: 1.3306  decode.d5.loss_cls: 0.4174  decode.d5.loss_mask: 1.0441  decode.d5.loss_dice: 1.3212  decode.d6.loss_cls: 0.3065  decode.d6.loss_mask: 1.0610  decode.d6.loss_dice: 1.3719  decode.d7.loss_cls: 0.3570  decode.d7.loss_mask: 1.0231  decode.d7.loss_dice: 1.3179  decode.d8.loss_cls: 0.3514  decode.d8.loss_mask: 1.0359  decode.d8.loss_dice: 1.3571  mix_decode.loss_cls: 0.1600  mix_decode.loss_mask: 0.4740  mix_decode.loss_dice: 0.7270  mix_decode.d0.loss_cls: 0.1045  mix_decode.d0.loss_mask: 0.4869  mix_decode.d0.loss_dice: 0.7892  mix_decode.d1.loss_cls: 0.1790  mix_decode.d1.loss_mask: 0.4576  mix_decode.d1.loss_dice: 0.7222  mix_decode.d2.loss_cls: 0.1807  mix_decode.d2.loss_mask: 0.4637  mix_decode.d2.loss_dice: 0.7307  mix_decode.d3.loss_cls: 0.1379  mix_decode.d3.loss_mask: 0.4744  mix_decode.d3.loss_dice: 0.7388  mix_decode.d4.loss_cls: 0.1614  mix_decode.d4.loss_mask: 0.4652  mix_decode.d4.loss_dice: 0.7227  mix_decode.d5.loss_cls: 0.1492  mix_decode.d5.loss_mask: 0.4703  mix_decode.d5.loss_dice: 0.7320  mix_decode.d6.loss_cls: 0.1644  mix_decode.d6.loss_mask: 0.4679  mix_decode.d6.loss_dice: 0.7324  mix_decode.d7.loss_cls: 0.1668  mix_decode.d7.loss_mask: 0.4737  mix_decode.d7.loss_dice: 0.7263  mix_decode.d8.loss_cls: 0.1753  mix_decode.d8.loss_mask: 0.4857  mix_decode.d8.loss_dice: 0.7286
2025/03/27 12:31:44 - mmengine - INFO - Iter(train) [ 7300/20000]  base_lr: 6.6453e-05 lr: 6.6453e-05  eta: 2:43:41  time: 1.0900  data_time: 0.0240  memory: 10803  loss: 44.2958  decode.loss_cls: 0.3634  decode.loss_mask: 1.3340  decode.loss_dice: 1.3281  decode.d0.loss_cls: 0.4327  decode.d0.loss_mask: 1.3416  decode.d0.loss_dice: 1.3494  decode.d1.loss_cls: 0.3721  decode.d1.loss_mask: 1.3517  decode.d1.loss_dice: 1.3303  decode.d2.loss_cls: 0.3389  decode.d2.loss_mask: 1.3805  decode.d2.loss_dice: 1.3076  decode.d3.loss_cls: 0.3095  decode.d3.loss_mask: 1.3957  decode.d3.loss_dice: 1.3622  decode.d4.loss_cls: 0.3499  decode.d4.loss_mask: 1.3788  decode.d4.loss_dice: 1.3436  decode.d5.loss_cls: 0.3500  decode.d5.loss_mask: 1.3685  decode.d5.loss_dice: 1.3270  decode.d6.loss_cls: 0.4047  decode.d6.loss_mask: 1.3530  decode.d6.loss_dice: 1.3298  decode.d7.loss_cls: 0.3220  decode.d7.loss_mask: 1.3863  decode.d7.loss_dice: 1.3427  decode.d8.loss_cls: 0.3781  decode.d8.loss_mask: 1.3094  decode.d8.loss_dice: 1.3267  mix_decode.loss_cls: 0.2071  mix_decode.loss_mask: 0.5060  mix_decode.loss_dice: 0.6732  mix_decode.d0.loss_cls: 0.1893  mix_decode.d0.loss_mask: 0.5185  mix_decode.d0.loss_dice: 0.6970  mix_decode.d1.loss_cls: 0.1934  mix_decode.d1.loss_mask: 0.5024  mix_decode.d1.loss_dice: 0.6699  mix_decode.d2.loss_cls: 0.2103  mix_decode.d2.loss_mask: 0.4958  mix_decode.d2.loss_dice: 0.6690  mix_decode.d3.loss_cls: 0.1981  mix_decode.d3.loss_mask: 0.5035  mix_decode.d3.loss_dice: 0.6724  mix_decode.d4.loss_cls: 0.1684  mix_decode.d4.loss_mask: 0.5108  mix_decode.d4.loss_dice: 0.6757  mix_decode.d5.loss_cls: 0.1668  mix_decode.d5.loss_mask: 0.5147  mix_decode.d5.loss_dice: 0.6827  mix_decode.d6.loss_cls: 0.1741  mix_decode.d6.loss_mask: 0.5093  mix_decode.d6.loss_dice: 0.6884  mix_decode.d7.loss_cls: 0.1744  mix_decode.d7.loss_mask: 0.5052  mix_decode.d7.loss_dice: 0.6939  mix_decode.d8.loss_cls: 0.1851  mix_decode.d8.loss_mask: 0.5056  mix_decode.d8.loss_dice: 0.6672
2025/03/27 12:32:38 - mmengine - INFO - Iter(train) [ 7350/20000]  base_lr: 6.6218e-05 lr: 6.6218e-05  eta: 2:43:28  time: 1.0682  data_time: 0.0216  memory: 10807  loss: 38.5416  decode.loss_cls: 0.2181  decode.loss_mask: 1.0739  decode.loss_dice: 1.2652  decode.d0.loss_cls: 0.2957  decode.d0.loss_mask: 1.0902  decode.d0.loss_dice: 1.3062  decode.d1.loss_cls: 0.2075  decode.d1.loss_mask: 1.0761  decode.d1.loss_dice: 1.2479  decode.d2.loss_cls: 0.2032  decode.d2.loss_mask: 1.0658  decode.d2.loss_dice: 1.2761  decode.d3.loss_cls: 0.1879  decode.d3.loss_mask: 1.0621  decode.d3.loss_dice: 1.2677  decode.d4.loss_cls: 0.2189  decode.d4.loss_mask: 1.0650  decode.d4.loss_dice: 1.2689  decode.d5.loss_cls: 0.1659  decode.d5.loss_mask: 1.0795  decode.d5.loss_dice: 1.3098  decode.d6.loss_cls: 0.1554  decode.d6.loss_mask: 1.0611  decode.d6.loss_dice: 1.3051  decode.d7.loss_cls: 0.2070  decode.d7.loss_mask: 1.0538  decode.d7.loss_dice: 1.2661  decode.d8.loss_cls: 0.1832  decode.d8.loss_mask: 1.0565  decode.d8.loss_dice: 1.2941  mix_decode.loss_cls: 0.1184  mix_decode.loss_mask: 0.4164  mix_decode.loss_dice: 0.7393  mix_decode.d0.loss_cls: 0.1349  mix_decode.d0.loss_mask: 0.4255  mix_decode.d0.loss_dice: 0.7683  mix_decode.d1.loss_cls: 0.1552  mix_decode.d1.loss_mask: 0.4250  mix_decode.d1.loss_dice: 0.7271  mix_decode.d2.loss_cls: 0.1374  mix_decode.d2.loss_mask: 0.4253  mix_decode.d2.loss_dice: 0.7199  mix_decode.d3.loss_cls: 0.1501  mix_decode.d3.loss_mask: 0.4230  mix_decode.d3.loss_dice: 0.7359  mix_decode.d4.loss_cls: 0.1387  mix_decode.d4.loss_mask: 0.4257  mix_decode.d4.loss_dice: 0.7418  mix_decode.d5.loss_cls: 0.1494  mix_decode.d5.loss_mask: 0.4221  mix_decode.d5.loss_dice: 0.7425  mix_decode.d6.loss_cls: 0.1301  mix_decode.d6.loss_mask: 0.4163  mix_decode.d6.loss_dice: 0.7330  mix_decode.d7.loss_cls: 0.1295  mix_decode.d7.loss_mask: 0.4237  mix_decode.d7.loss_dice: 0.7426  mix_decode.d8.loss_cls: 0.1441  mix_decode.d8.loss_mask: 0.4254  mix_decode.d8.loss_dice: 0.7410
2025/03/27 12:33:31 - mmengine - INFO - Iter(train) [ 7400/20000]  base_lr: 6.5982e-05 lr: 6.5982e-05  eta: 2:43:14  time: 1.0717  data_time: 0.0222  memory: 10801  loss: 39.7740  decode.loss_cls: 0.1366  decode.loss_mask: 1.1746  decode.loss_dice: 1.3730  decode.d0.loss_cls: 0.2321  decode.d0.loss_mask: 1.1301  decode.d0.loss_dice: 1.3803  decode.d1.loss_cls: 0.1629  decode.d1.loss_mask: 1.1461  decode.d1.loss_dice: 1.3590  decode.d2.loss_cls: 0.1937  decode.d2.loss_mask: 1.1485  decode.d2.loss_dice: 1.3347  decode.d3.loss_cls: 0.1816  decode.d3.loss_mask: 1.1648  decode.d3.loss_dice: 1.3036  decode.d4.loss_cls: 0.1782  decode.d4.loss_mask: 1.1646  decode.d4.loss_dice: 1.3457  decode.d5.loss_cls: 0.2137  decode.d5.loss_mask: 1.1868  decode.d5.loss_dice: 1.3319  decode.d6.loss_cls: 0.2351  decode.d6.loss_mask: 1.1880  decode.d6.loss_dice: 1.3399  decode.d7.loss_cls: 0.1600  decode.d7.loss_mask: 1.1704  decode.d7.loss_dice: 1.3485  decode.d8.loss_cls: 0.1892  decode.d8.loss_mask: 1.1543  decode.d8.loss_dice: 1.3245  mix_decode.loss_cls: 0.0966  mix_decode.loss_mask: 0.5188  mix_decode.loss_dice: 0.6682  mix_decode.d0.loss_cls: 0.0900  mix_decode.d0.loss_mask: 0.5203  mix_decode.d0.loss_dice: 0.6804  mix_decode.d1.loss_cls: 0.0749  mix_decode.d1.loss_mask: 0.5131  mix_decode.d1.loss_dice: 0.6759  mix_decode.d2.loss_cls: 0.0603  mix_decode.d2.loss_mask: 0.5143  mix_decode.d2.loss_dice: 0.6723  mix_decode.d3.loss_cls: 0.0726  mix_decode.d3.loss_mask: 0.5251  mix_decode.d3.loss_dice: 0.6743  mix_decode.d4.loss_cls: 0.0855  mix_decode.d4.loss_mask: 0.5287  mix_decode.d4.loss_dice: 0.6755  mix_decode.d5.loss_cls: 0.0687  mix_decode.d5.loss_mask: 0.5452  mix_decode.d5.loss_dice: 0.6705  mix_decode.d6.loss_cls: 0.0893  mix_decode.d6.loss_mask: 0.5272  mix_decode.d6.loss_dice: 0.6644  mix_decode.d7.loss_cls: 0.0974  mix_decode.d7.loss_mask: 0.5082  mix_decode.d7.loss_dice: 0.6770  mix_decode.d8.loss_cls: 0.1347  mix_decode.d8.loss_mask: 0.5079  mix_decode.d8.loss_dice: 0.6841
2025/03/27 12:34:25 - mmengine - INFO - Iter(train) [ 7450/20000]  base_lr: 6.5746e-05 lr: 6.5746e-05  eta: 2:43:01  time: 1.1164  data_time: 0.0249  memory: 10804  loss: 49.6420  decode.loss_cls: 0.3870  decode.loss_mask: 1.5311  decode.loss_dice: 1.7416  decode.d0.loss_cls: 0.4908  decode.d0.loss_mask: 1.4816  decode.d0.loss_dice: 1.7333  decode.d1.loss_cls: 0.3829  decode.d1.loss_mask: 1.5220  decode.d1.loss_dice: 1.7090  decode.d2.loss_cls: 0.4741  decode.d2.loss_mask: 1.4856  decode.d2.loss_dice: 1.6897  decode.d3.loss_cls: 0.4124  decode.d3.loss_mask: 1.4775  decode.d3.loss_dice: 1.6520  decode.d4.loss_cls: 0.4851  decode.d4.loss_mask: 1.4715  decode.d4.loss_dice: 1.6796  decode.d5.loss_cls: 0.4474  decode.d5.loss_mask: 1.4171  decode.d5.loss_dice: 1.6699  decode.d6.loss_cls: 0.3062  decode.d6.loss_mask: 1.4933  decode.d6.loss_dice: 1.6983  decode.d7.loss_cls: 0.4030  decode.d7.loss_mask: 1.4545  decode.d7.loss_dice: 1.7052  decode.d8.loss_cls: 0.4332  decode.d8.loss_mask: 1.4914  decode.d8.loss_dice: 1.7024  mix_decode.loss_cls: 0.1197  mix_decode.loss_mask: 0.5034  mix_decode.loss_dice: 0.6993  mix_decode.d0.loss_cls: 0.1793  mix_decode.d0.loss_mask: 0.4838  mix_decode.d0.loss_dice: 0.7051  mix_decode.d1.loss_cls: 0.1980  mix_decode.d1.loss_mask: 0.4926  mix_decode.d1.loss_dice: 0.6893  mix_decode.d2.loss_cls: 0.1643  mix_decode.d2.loss_mask: 0.5089  mix_decode.d2.loss_dice: 0.6924  mix_decode.d3.loss_cls: 0.1558  mix_decode.d3.loss_mask: 0.5178  mix_decode.d3.loss_dice: 0.6919  mix_decode.d4.loss_cls: 0.1906  mix_decode.d4.loss_mask: 0.5064  mix_decode.d4.loss_dice: 0.6954  mix_decode.d5.loss_cls: 0.1456  mix_decode.d5.loss_mask: 0.5109  mix_decode.d5.loss_dice: 0.6947  mix_decode.d6.loss_cls: 0.1407  mix_decode.d6.loss_mask: 0.5122  mix_decode.d6.loss_dice: 0.6963  mix_decode.d7.loss_cls: 0.1128  mix_decode.d7.loss_mask: 0.5393  mix_decode.d7.loss_dice: 0.7172  mix_decode.d8.loss_cls: 0.1480  mix_decode.d8.loss_mask: 0.5138  mix_decode.d8.loss_dice: 0.6874
2025/03/27 12:35:19 - mmengine - INFO - Iter(train) [ 7500/20000]  base_lr: 6.5511e-05 lr: 6.5511e-05  eta: 2:42:47  time: 1.0887  data_time: 0.0217  memory: 10810  loss: 35.7066  decode.loss_cls: 0.2449  decode.loss_mask: 0.9536  decode.loss_dice: 1.1752  decode.d0.loss_cls: 0.3317  decode.d0.loss_mask: 0.9975  decode.d0.loss_dice: 1.2104  decode.d1.loss_cls: 0.2884  decode.d1.loss_mask: 0.9916  decode.d1.loss_dice: 1.1555  decode.d2.loss_cls: 0.2939  decode.d2.loss_mask: 1.0098  decode.d2.loss_dice: 1.1450  decode.d3.loss_cls: 0.2677  decode.d3.loss_mask: 1.0097  decode.d3.loss_dice: 1.1379  decode.d4.loss_cls: 0.2998  decode.d4.loss_mask: 1.0147  decode.d4.loss_dice: 1.1534  decode.d5.loss_cls: 0.2756  decode.d5.loss_mask: 1.0103  decode.d5.loss_dice: 1.1579  decode.d6.loss_cls: 0.3077  decode.d6.loss_mask: 1.0063  decode.d6.loss_dice: 1.1573  decode.d7.loss_cls: 0.2823  decode.d7.loss_mask: 1.0023  decode.d7.loss_dice: 1.1684  decode.d8.loss_cls: 0.2239  decode.d8.loss_mask: 1.0114  decode.d8.loss_dice: 1.1765  mix_decode.loss_cls: 0.0575  mix_decode.loss_mask: 0.4145  mix_decode.loss_dice: 0.6694  mix_decode.d0.loss_cls: 0.0561  mix_decode.d0.loss_mask: 0.3974  mix_decode.d0.loss_dice: 0.6671  mix_decode.d1.loss_cls: 0.0581  mix_decode.d1.loss_mask: 0.3965  mix_decode.d1.loss_dice: 0.6530  mix_decode.d2.loss_cls: 0.0733  mix_decode.d2.loss_mask: 0.3896  mix_decode.d2.loss_dice: 0.6518  mix_decode.d3.loss_cls: 0.0803  mix_decode.d3.loss_mask: 0.3977  mix_decode.d3.loss_dice: 0.6474  mix_decode.d4.loss_cls: 0.0973  mix_decode.d4.loss_mask: 0.3985  mix_decode.d4.loss_dice: 0.6532  mix_decode.d5.loss_cls: 0.0724  mix_decode.d5.loss_mask: 0.3968  mix_decode.d5.loss_dice: 0.6581  mix_decode.d6.loss_cls: 0.0937  mix_decode.d6.loss_mask: 0.3997  mix_decode.d6.loss_dice: 0.6431  mix_decode.d7.loss_cls: 0.0874  mix_decode.d7.loss_mask: 0.3940  mix_decode.d7.loss_dice: 0.6373  mix_decode.d8.loss_cls: 0.0508  mix_decode.d8.loss_mask: 0.4002  mix_decode.d8.loss_dice: 0.6534
2025/03/27 12:36:13 - mmengine - INFO - Iter(train) [ 7550/20000]  base_lr: 6.5275e-05 lr: 6.5275e-05  eta: 2:42:33  time: 1.0762  data_time: 0.0216  memory: 10811  loss: 37.9942  decode.loss_cls: 0.3322  decode.loss_mask: 1.1051  decode.loss_dice: 1.3023  decode.d0.loss_cls: 0.4044  decode.d0.loss_mask: 1.0578  decode.d0.loss_dice: 1.2675  decode.d1.loss_cls: 0.3230  decode.d1.loss_mask: 1.0654  decode.d1.loss_dice: 1.2064  decode.d2.loss_cls: 0.2595  decode.d2.loss_mask: 1.1551  decode.d2.loss_dice: 1.2154  decode.d3.loss_cls: 0.2920  decode.d3.loss_mask: 1.1405  decode.d3.loss_dice: 1.2260  decode.d4.loss_cls: 0.3510  decode.d4.loss_mask: 1.0837  decode.d4.loss_dice: 1.2360  decode.d5.loss_cls: 0.3318  decode.d5.loss_mask: 1.1013  decode.d5.loss_dice: 1.2147  decode.d6.loss_cls: 0.3576  decode.d6.loss_mask: 1.0689  decode.d6.loss_dice: 1.2267  decode.d7.loss_cls: 0.3432  decode.d7.loss_mask: 1.0595  decode.d7.loss_dice: 1.2351  decode.d8.loss_cls: 0.2942  decode.d8.loss_mask: 1.0679  decode.d8.loss_dice: 1.2178  mix_decode.loss_cls: 0.0904  mix_decode.loss_mask: 0.4098  mix_decode.loss_dice: 0.6384  mix_decode.d0.loss_cls: 0.1057  mix_decode.d0.loss_mask: 0.3870  mix_decode.d0.loss_dice: 0.6470  mix_decode.d1.loss_cls: 0.1179  mix_decode.d1.loss_mask: 0.4115  mix_decode.d1.loss_dice: 0.6266  mix_decode.d2.loss_cls: 0.0932  mix_decode.d2.loss_mask: 0.4265  mix_decode.d2.loss_dice: 0.6306  mix_decode.d3.loss_cls: 0.1260  mix_decode.d3.loss_mask: 0.4108  mix_decode.d3.loss_dice: 0.6126  mix_decode.d4.loss_cls: 0.0852  mix_decode.d4.loss_mask: 0.4159  mix_decode.d4.loss_dice: 0.6410  mix_decode.d5.loss_cls: 0.1130  mix_decode.d5.loss_mask: 0.4000  mix_decode.d5.loss_dice: 0.6376  mix_decode.d6.loss_cls: 0.1094  mix_decode.d6.loss_mask: 0.4062  mix_decode.d6.loss_dice: 0.6238  mix_decode.d7.loss_cls: 0.1308  mix_decode.d7.loss_mask: 0.3849  mix_decode.d7.loss_dice: 0.6314  mix_decode.d8.loss_cls: 0.0938  mix_decode.d8.loss_mask: 0.3985  mix_decode.d8.loss_dice: 0.6470
2025/03/27 12:37:07 - mmengine - INFO - Iter(train) [ 7600/20000]  base_lr: 6.5039e-05 lr: 6.5039e-05  eta: 2:42:17  time: 1.0732  data_time: 0.0215  memory: 10808  loss: 33.6223  decode.loss_cls: 0.2350  decode.loss_mask: 1.0152  decode.loss_dice: 1.1501  decode.d0.loss_cls: 0.3056  decode.d0.loss_mask: 1.0224  decode.d0.loss_dice: 1.1514  decode.d1.loss_cls: 0.2478  decode.d1.loss_mask: 0.9875  decode.d1.loss_dice: 1.0549  decode.d2.loss_cls: 0.2320  decode.d2.loss_mask: 0.9830  decode.d2.loss_dice: 1.0725  decode.d3.loss_cls: 0.2552  decode.d3.loss_mask: 0.9995  decode.d3.loss_dice: 1.1029  decode.d4.loss_cls: 0.2226  decode.d4.loss_mask: 1.0006  decode.d4.loss_dice: 1.0942  decode.d5.loss_cls: 0.2039  decode.d5.loss_mask: 0.9709  decode.d5.loss_dice: 1.1052  decode.d6.loss_cls: 0.2537  decode.d6.loss_mask: 0.9882  decode.d6.loss_dice: 1.0851  decode.d7.loss_cls: 0.2947  decode.d7.loss_mask: 0.9646  decode.d7.loss_dice: 1.0575  decode.d8.loss_cls: 0.2644  decode.d8.loss_mask: 0.9894  decode.d8.loss_dice: 1.1076  mix_decode.loss_cls: 0.0249  mix_decode.loss_mask: 0.4037  mix_decode.loss_dice: 0.5933  mix_decode.d0.loss_cls: 0.0570  mix_decode.d0.loss_mask: 0.3891  mix_decode.d0.loss_dice: 0.5936  mix_decode.d1.loss_cls: 0.0375  mix_decode.d1.loss_mask: 0.4012  mix_decode.d1.loss_dice: 0.5642  mix_decode.d2.loss_cls: 0.0449  mix_decode.d2.loss_mask: 0.3949  mix_decode.d2.loss_dice: 0.5645  mix_decode.d3.loss_cls: 0.0652  mix_decode.d3.loss_mask: 0.3944  mix_decode.d3.loss_dice: 0.5658  mix_decode.d4.loss_cls: 0.0732  mix_decode.d4.loss_mask: 0.4005  mix_decode.d4.loss_dice: 0.5519  mix_decode.d5.loss_cls: 0.0701  mix_decode.d5.loss_mask: 0.3908  mix_decode.d5.loss_dice: 0.5568  mix_decode.d6.loss_cls: 0.0484  mix_decode.d6.loss_mask: 0.3917  mix_decode.d6.loss_dice: 0.5639  mix_decode.d7.loss_cls: 0.0541  mix_decode.d7.loss_mask: 0.4039  mix_decode.d7.loss_dice: 0.5737  mix_decode.d8.loss_cls: 0.0386  mix_decode.d8.loss_mask: 0.4056  mix_decode.d8.loss_dice: 0.5874
2025/03/27 12:38:01 - mmengine - INFO - Iter(train) [ 7650/20000]  base_lr: 6.4803e-05 lr: 6.4803e-05  eta: 2:42:01  time: 1.0698  data_time: 0.0221  memory: 10804  loss: 42.3084  decode.loss_cls: 0.1919  decode.loss_mask: 1.3086  decode.loss_dice: 1.5210  decode.d0.loss_cls: 0.3587  decode.d0.loss_mask: 1.3093  decode.d0.loss_dice: 1.5546  decode.d1.loss_cls: 0.1760  decode.d1.loss_mask: 1.3043  decode.d1.loss_dice: 1.5054  decode.d2.loss_cls: 0.1903  decode.d2.loss_mask: 1.3331  decode.d2.loss_dice: 1.5158  decode.d3.loss_cls: 0.1691  decode.d3.loss_mask: 1.3374  decode.d3.loss_dice: 1.5361  decode.d4.loss_cls: 0.2052  decode.d4.loss_mask: 1.3164  decode.d4.loss_dice: 1.5214  decode.d5.loss_cls: 0.1811  decode.d5.loss_mask: 1.2971  decode.d5.loss_dice: 1.5185  decode.d6.loss_cls: 0.1812  decode.d6.loss_mask: 1.3056  decode.d6.loss_dice: 1.5145  decode.d7.loss_cls: 0.2130  decode.d7.loss_mask: 1.2934  decode.d7.loss_dice: 1.4876  decode.d8.loss_cls: 0.2267  decode.d8.loss_mask: 1.3121  decode.d8.loss_dice: 1.5247  mix_decode.loss_cls: 0.0979  mix_decode.loss_mask: 0.4426  mix_decode.loss_dice: 0.6558  mix_decode.d0.loss_cls: 0.0901  mix_decode.d0.loss_mask: 0.4341  mix_decode.d0.loss_dice: 0.6627  mix_decode.d1.loss_cls: 0.1008  mix_decode.d1.loss_mask: 0.4212  mix_decode.d1.loss_dice: 0.6462  mix_decode.d2.loss_cls: 0.0999  mix_decode.d2.loss_mask: 0.4488  mix_decode.d2.loss_dice: 0.6617  mix_decode.d3.loss_cls: 0.0861  mix_decode.d3.loss_mask: 0.4432  mix_decode.d3.loss_dice: 0.6615  mix_decode.d4.loss_cls: 0.0952  mix_decode.d4.loss_mask: 0.4312  mix_decode.d4.loss_dice: 0.6407  mix_decode.d5.loss_cls: 0.0964  mix_decode.d5.loss_mask: 0.4347  mix_decode.d5.loss_dice: 0.6449  mix_decode.d6.loss_cls: 0.1279  mix_decode.d6.loss_mask: 0.4261  mix_decode.d6.loss_dice: 0.6398  mix_decode.d7.loss_cls: 0.1290  mix_decode.d7.loss_mask: 0.4353  mix_decode.d7.loss_dice: 0.6437  mix_decode.d8.loss_cls: 0.1223  mix_decode.d8.loss_mask: 0.4302  mix_decode.d8.loss_dice: 0.6487
2025/03/27 12:38:54 - mmengine - INFO - Iter(train) [ 7700/20000]  base_lr: 6.4566e-05 lr: 6.4566e-05  eta: 2:41:45  time: 1.0697  data_time: 0.0217  memory: 10804  loss: 44.8460  decode.loss_cls: 0.2850  decode.loss_mask: 1.3019  decode.loss_dice: 1.4729  decode.d0.loss_cls: 0.4217  decode.d0.loss_mask: 1.2891  decode.d0.loss_dice: 1.4840  decode.d1.loss_cls: 0.3565  decode.d1.loss_mask: 1.3201  decode.d1.loss_dice: 1.4329  decode.d2.loss_cls: 0.4253  decode.d2.loss_mask: 1.2722  decode.d2.loss_dice: 1.4327  decode.d3.loss_cls: 0.3638  decode.d3.loss_mask: 1.2991  decode.d3.loss_dice: 1.4656  decode.d4.loss_cls: 0.3043  decode.d4.loss_mask: 1.4110  decode.d4.loss_dice: 1.4725  decode.d5.loss_cls: 0.4707  decode.d5.loss_mask: 1.2795  decode.d5.loss_dice: 1.4907  decode.d6.loss_cls: 0.3116  decode.d6.loss_mask: 1.4519  decode.d6.loss_dice: 1.5389  decode.d7.loss_cls: 0.3153  decode.d7.loss_mask: 1.4710  decode.d7.loss_dice: 1.5111  decode.d8.loss_cls: 0.3880  decode.d8.loss_mask: 1.3178  decode.d8.loss_dice: 1.4787  mix_decode.loss_cls: 0.1084  mix_decode.loss_mask: 0.4745  mix_decode.loss_dice: 0.6845  mix_decode.d0.loss_cls: 0.1445  mix_decode.d0.loss_mask: 0.4710  mix_decode.d0.loss_dice: 0.7410  mix_decode.d1.loss_cls: 0.1199  mix_decode.d1.loss_mask: 0.4792  mix_decode.d1.loss_dice: 0.6920  mix_decode.d2.loss_cls: 0.1597  mix_decode.d2.loss_mask: 0.4670  mix_decode.d2.loss_dice: 0.6741  mix_decode.d3.loss_cls: 0.1519  mix_decode.d3.loss_mask: 0.4791  mix_decode.d3.loss_dice: 0.6749  mix_decode.d4.loss_cls: 0.1619  mix_decode.d4.loss_mask: 0.4603  mix_decode.d4.loss_dice: 0.6595  mix_decode.d5.loss_cls: 0.1440  mix_decode.d5.loss_mask: 0.4684  mix_decode.d5.loss_dice: 0.6841  mix_decode.d6.loss_cls: 0.1059  mix_decode.d6.loss_mask: 0.4834  mix_decode.d6.loss_dice: 0.6985  mix_decode.d7.loss_cls: 0.1025  mix_decode.d7.loss_mask: 0.5110  mix_decode.d7.loss_dice: 0.6993  mix_decode.d8.loss_cls: 0.1185  mix_decode.d8.loss_mask: 0.5051  mix_decode.d8.loss_dice: 0.6861
2025/03/27 12:39:48 - mmengine - INFO - Iter(train) [ 7750/20000]  base_lr: 6.4330e-05 lr: 6.4330e-05  eta: 2:41:28  time: 1.0722  data_time: 0.0219  memory: 10810  loss: 39.5565  decode.loss_cls: 0.2305  decode.loss_mask: 1.1887  decode.loss_dice: 1.2625  decode.d0.loss_cls: 0.2579  decode.d0.loss_mask: 1.1958  decode.d0.loss_dice: 1.3028  decode.d1.loss_cls: 0.1772  decode.d1.loss_mask: 1.2336  decode.d1.loss_dice: 1.2834  decode.d2.loss_cls: 0.2409  decode.d2.loss_mask: 1.1843  decode.d2.loss_dice: 1.2383  decode.d3.loss_cls: 0.1589  decode.d3.loss_mask: 1.2242  decode.d3.loss_dice: 1.2798  decode.d4.loss_cls: 0.1843  decode.d4.loss_mask: 1.2227  decode.d4.loss_dice: 1.2920  decode.d5.loss_cls: 0.1262  decode.d5.loss_mask: 1.2297  decode.d5.loss_dice: 1.2735  decode.d6.loss_cls: 0.1556  decode.d6.loss_mask: 1.2324  decode.d6.loss_dice: 1.2944  decode.d7.loss_cls: 0.1595  decode.d7.loss_mask: 1.2502  decode.d7.loss_dice: 1.2913  decode.d8.loss_cls: 0.1519  decode.d8.loss_mask: 1.1925  decode.d8.loss_dice: 1.2325  mix_decode.loss_cls: 0.0978  mix_decode.loss_mask: 0.4683  mix_decode.loss_dice: 0.7150  mix_decode.d0.loss_cls: 0.0866  mix_decode.d0.loss_mask: 0.4648  mix_decode.d0.loss_dice: 0.7555  mix_decode.d1.loss_cls: 0.1501  mix_decode.d1.loss_mask: 0.4425  mix_decode.d1.loss_dice: 0.7035  mix_decode.d2.loss_cls: 0.1414  mix_decode.d2.loss_mask: 0.4342  mix_decode.d2.loss_dice: 0.6917  mix_decode.d3.loss_cls: 0.1470  mix_decode.d3.loss_mask: 0.4223  mix_decode.d3.loss_dice: 0.6888  mix_decode.d4.loss_cls: 0.1294  mix_decode.d4.loss_mask: 0.4293  mix_decode.d4.loss_dice: 0.6828  mix_decode.d5.loss_cls: 0.1162  mix_decode.d5.loss_mask: 0.4416  mix_decode.d5.loss_dice: 0.7138  mix_decode.d6.loss_cls: 0.1269  mix_decode.d6.loss_mask: 0.4483  mix_decode.d6.loss_dice: 0.7176  mix_decode.d7.loss_cls: 0.1458  mix_decode.d7.loss_mask: 0.4481  mix_decode.d7.loss_dice: 0.7176  mix_decode.d8.loss_cls: 0.1198  mix_decode.d8.loss_mask: 0.4549  mix_decode.d8.loss_dice: 0.7073
2025/03/27 12:40:42 - mmengine - INFO - Iter(train) [ 7800/20000]  base_lr: 6.4094e-05 lr: 6.4094e-05  eta: 2:41:11  time: 1.0729  data_time: 0.0223  memory: 10795  loss: 38.2902  decode.loss_cls: 0.2978  decode.loss_mask: 1.1181  decode.loss_dice: 1.1956  decode.d0.loss_cls: 0.3687  decode.d0.loss_mask: 1.1752  decode.d0.loss_dice: 1.3165  decode.d1.loss_cls: 0.4125  decode.d1.loss_mask: 1.0806  decode.d1.loss_dice: 1.1940  decode.d2.loss_cls: 0.3473  decode.d2.loss_mask: 1.1126  decode.d2.loss_dice: 1.1981  decode.d3.loss_cls: 0.3248  decode.d3.loss_mask: 1.1405  decode.d3.loss_dice: 1.1975  decode.d4.loss_cls: 0.3587  decode.d4.loss_mask: 1.1342  decode.d4.loss_dice: 1.2100  decode.d5.loss_cls: 0.2971  decode.d5.loss_mask: 1.1388  decode.d5.loss_dice: 1.2149  decode.d6.loss_cls: 0.3003  decode.d6.loss_mask: 1.1584  decode.d6.loss_dice: 1.2357  decode.d7.loss_cls: 0.3659  decode.d7.loss_mask: 1.1060  decode.d7.loss_dice: 1.1831  decode.d8.loss_cls: 0.3186  decode.d8.loss_mask: 1.1235  decode.d8.loss_dice: 1.2126  mix_decode.loss_cls: 0.0908  mix_decode.loss_mask: 0.4736  mix_decode.loss_dice: 0.5703  mix_decode.d0.loss_cls: 0.0984  mix_decode.d0.loss_mask: 0.4662  mix_decode.d0.loss_dice: 0.5876  mix_decode.d1.loss_cls: 0.0772  mix_decode.d1.loss_mask: 0.4672  mix_decode.d1.loss_dice: 0.5837  mix_decode.d2.loss_cls: 0.0860  mix_decode.d2.loss_mask: 0.4795  mix_decode.d2.loss_dice: 0.5805  mix_decode.d3.loss_cls: 0.0886  mix_decode.d3.loss_mask: 0.4749  mix_decode.d3.loss_dice: 0.5793  mix_decode.d4.loss_cls: 0.0935  mix_decode.d4.loss_mask: 0.4689  mix_decode.d4.loss_dice: 0.5753  mix_decode.d5.loss_cls: 0.1057  mix_decode.d5.loss_mask: 0.4664  mix_decode.d5.loss_dice: 0.5697  mix_decode.d6.loss_cls: 0.0751  mix_decode.d6.loss_mask: 0.4998  mix_decode.d6.loss_dice: 0.5986  mix_decode.d7.loss_cls: 0.0539  mix_decode.d7.loss_mask: 0.4946  mix_decode.d7.loss_dice: 0.5879  mix_decode.d8.loss_cls: 0.0907  mix_decode.d8.loss_mask: 0.4757  mix_decode.d8.loss_dice: 0.5929
2025/03/27 12:41:37 - mmengine - INFO - Iter(train) [ 7850/20000]  base_lr: 6.3857e-05 lr: 6.3857e-05  eta: 2:40:55  time: 1.1180  data_time: 0.0260  memory: 10808  loss: 38.9743  decode.loss_cls: 0.2323  decode.loss_mask: 1.0184  decode.loss_dice: 1.4421  decode.d0.loss_cls: 0.4123  decode.d0.loss_mask: 0.9807  decode.d0.loss_dice: 1.4207  decode.d1.loss_cls: 0.3385  decode.d1.loss_mask: 1.0254  decode.d1.loss_dice: 1.4474  decode.d2.loss_cls: 0.3766  decode.d2.loss_mask: 0.9981  decode.d2.loss_dice: 1.3759  decode.d3.loss_cls: 0.3716  decode.d3.loss_mask: 1.0487  decode.d3.loss_dice: 1.4302  decode.d4.loss_cls: 0.3317  decode.d4.loss_mask: 1.0737  decode.d4.loss_dice: 1.4153  decode.d5.loss_cls: 0.3907  decode.d5.loss_mask: 1.0114  decode.d5.loss_dice: 1.4217  decode.d6.loss_cls: 0.3687  decode.d6.loss_mask: 1.0165  decode.d6.loss_dice: 1.4196  decode.d7.loss_cls: 0.2734  decode.d7.loss_mask: 1.0894  decode.d7.loss_dice: 1.4230  decode.d8.loss_cls: 0.3420  decode.d8.loss_mask: 1.0357  decode.d8.loss_dice: 1.4367  mix_decode.loss_cls: 0.0974  mix_decode.loss_mask: 0.3856  mix_decode.loss_dice: 0.6037  mix_decode.d0.loss_cls: 0.1424  mix_decode.d0.loss_mask: 0.3841  mix_decode.d0.loss_dice: 0.6235  mix_decode.d1.loss_cls: 0.1529  mix_decode.d1.loss_mask: 0.3646  mix_decode.d1.loss_dice: 0.5914  mix_decode.d2.loss_cls: 0.1592  mix_decode.d2.loss_mask: 0.3726  mix_decode.d2.loss_dice: 0.6032  mix_decode.d3.loss_cls: 0.0957  mix_decode.d3.loss_mask: 0.3717  mix_decode.d3.loss_dice: 0.6041  mix_decode.d4.loss_cls: 0.1360  mix_decode.d4.loss_mask: 0.3837  mix_decode.d4.loss_dice: 0.5754  mix_decode.d5.loss_cls: 0.1564  mix_decode.d5.loss_mask: 0.3718  mix_decode.d5.loss_dice: 0.5791  mix_decode.d6.loss_cls: 0.1395  mix_decode.d6.loss_mask: 0.3786  mix_decode.d6.loss_dice: 0.5824  mix_decode.d7.loss_cls: 0.1121  mix_decode.d7.loss_mask: 0.3822  mix_decode.d7.loss_dice: 0.5868  mix_decode.d8.loss_cls: 0.0763  mix_decode.d8.loss_mask: 0.3875  mix_decode.d8.loss_dice: 0.6059
2025/03/27 12:42:31 - mmengine - INFO - Iter(train) [ 7900/20000]  base_lr: 6.3621e-05 lr: 6.3621e-05  eta: 2:40:37  time: 1.1015  data_time: 0.0256  memory: 10813  loss: 36.7013  decode.loss_cls: 0.1992  decode.loss_mask: 1.0181  decode.loss_dice: 1.3400  decode.d0.loss_cls: 0.2516  decode.d0.loss_mask: 1.0038  decode.d0.loss_dice: 1.3433  decode.d1.loss_cls: 0.3970  decode.d1.loss_mask: 0.9184  decode.d1.loss_dice: 1.2384  decode.d2.loss_cls: 0.2707  decode.d2.loss_mask: 0.9725  decode.d2.loss_dice: 1.2851  decode.d3.loss_cls: 0.2218  decode.d3.loss_mask: 1.0121  decode.d3.loss_dice: 1.2815  decode.d4.loss_cls: 0.3103  decode.d4.loss_mask: 0.9350  decode.d4.loss_dice: 1.2580  decode.d5.loss_cls: 0.3185  decode.d5.loss_mask: 0.9059  decode.d5.loss_dice: 1.2533  decode.d6.loss_cls: 0.2660  decode.d6.loss_mask: 0.9729  decode.d6.loss_dice: 1.2273  decode.d7.loss_cls: 0.2308  decode.d7.loss_mask: 0.9699  decode.d7.loss_dice: 1.3065  decode.d8.loss_cls: 0.2001  decode.d8.loss_mask: 1.0234  decode.d8.loss_dice: 1.3109  mix_decode.loss_cls: 0.0536  mix_decode.loss_mask: 0.4009  mix_decode.loss_dice: 0.6886  mix_decode.d0.loss_cls: 0.0570  mix_decode.d0.loss_mask: 0.4002  mix_decode.d0.loss_dice: 0.7199  mix_decode.d1.loss_cls: 0.0518  mix_decode.d1.loss_mask: 0.4027  mix_decode.d1.loss_dice: 0.7069  mix_decode.d2.loss_cls: 0.0459  mix_decode.d2.loss_mask: 0.3969  mix_decode.d2.loss_dice: 0.6909  mix_decode.d3.loss_cls: 0.0295  mix_decode.d3.loss_mask: 0.3989  mix_decode.d3.loss_dice: 0.6987  mix_decode.d4.loss_cls: 0.0734  mix_decode.d4.loss_mask: 0.4022  mix_decode.d4.loss_dice: 0.6876  mix_decode.d5.loss_cls: 0.0295  mix_decode.d5.loss_mask: 0.4003  mix_decode.d5.loss_dice: 0.7048  mix_decode.d6.loss_cls: 0.0232  mix_decode.d6.loss_mask: 0.3987  mix_decode.d6.loss_dice: 0.6957  mix_decode.d7.loss_cls: 0.0848  mix_decode.d7.loss_mask: 0.4025  mix_decode.d7.loss_dice: 0.6798  mix_decode.d8.loss_cls: 0.0338  mix_decode.d8.loss_mask: 0.4064  mix_decode.d8.loss_dice: 0.6938
2025/03/27 12:43:25 - mmengine - INFO - Iter(train) [ 7950/20000]  base_lr: 6.3384e-05 lr: 6.3384e-05  eta: 2:40:18  time: 1.0707  data_time: 0.0218  memory: 10801  loss: 41.1074  decode.loss_cls: 0.1581  decode.loss_mask: 1.2827  decode.loss_dice: 1.3848  decode.d0.loss_cls: 0.2332  decode.d0.loss_mask: 1.2301  decode.d0.loss_dice: 1.4223  decode.d1.loss_cls: 0.2693  decode.d1.loss_mask: 1.2351  decode.d1.loss_dice: 1.3447  decode.d2.loss_cls: 0.2807  decode.d2.loss_mask: 1.2342  decode.d2.loss_dice: 1.3286  decode.d3.loss_cls: 0.2666  decode.d3.loss_mask: 1.2768  decode.d3.loss_dice: 1.3557  decode.d4.loss_cls: 0.3071  decode.d4.loss_mask: 1.2441  decode.d4.loss_dice: 1.4134  decode.d5.loss_cls: 0.2400  decode.d5.loss_mask: 1.8385  decode.d5.loss_dice: 1.4965  decode.d6.loss_cls: 0.2032  decode.d6.loss_mask: 1.3235  decode.d6.loss_dice: 1.4475  decode.d7.loss_cls: 0.1742  decode.d7.loss_mask: 1.2786  decode.d7.loss_dice: 1.4379  decode.d8.loss_cls: 0.2070  decode.d8.loss_mask: 1.2314  decode.d8.loss_dice: 1.3904  mix_decode.loss_cls: 0.1296  mix_decode.loss_mask: 0.4000  mix_decode.loss_dice: 0.6271  mix_decode.d0.loss_cls: 0.0887  mix_decode.d0.loss_mask: 0.4045  mix_decode.d0.loss_dice: 0.6675  mix_decode.d1.loss_cls: 0.1183  mix_decode.d1.loss_mask: 0.3951  mix_decode.d1.loss_dice: 0.6256  mix_decode.d2.loss_cls: 0.1348  mix_decode.d2.loss_mask: 0.4159  mix_decode.d2.loss_dice: 0.6189  mix_decode.d3.loss_cls: 0.1059  mix_decode.d3.loss_mask: 0.4033  mix_decode.d3.loss_dice: 0.6355  mix_decode.d4.loss_cls: 0.1189  mix_decode.d4.loss_mask: 0.4107  mix_decode.d4.loss_dice: 0.6376  mix_decode.d5.loss_cls: 0.1090  mix_decode.d5.loss_mask: 0.4063  mix_decode.d5.loss_dice: 0.6594  mix_decode.d6.loss_cls: 0.0759  mix_decode.d6.loss_mask: 0.4367  mix_decode.d6.loss_dice: 0.6491  mix_decode.d7.loss_cls: 0.1131  mix_decode.d7.loss_mask: 0.4120  mix_decode.d7.loss_dice: 0.6414  mix_decode.d8.loss_cls: 0.0956  mix_decode.d8.loss_mask: 0.3980  mix_decode.d8.loss_dice: 0.6364
2025/03/27 12:44:19 - mmengine - INFO - Exp name: pr2vi_20250327_105544
2025/03/27 12:44:19 - mmengine - INFO - Iter(train) [ 8000/20000]  base_lr: 6.3147e-05 lr: 6.3147e-05  eta: 2:39:59  time: 1.0797  data_time: 0.0231  memory: 10804  loss: 41.2886  decode.loss_cls: 0.1905  decode.loss_mask: 1.2089  decode.loss_dice: 1.2544  decode.d0.loss_cls: 0.2950  decode.d0.loss_mask: 1.2233  decode.d0.loss_dice: 1.2379  decode.d1.loss_cls: 0.2566  decode.d1.loss_mask: 1.2083  decode.d1.loss_dice: 1.2186  decode.d2.loss_cls: 0.2362  decode.d2.loss_mask: 1.2160  decode.d2.loss_dice: 1.2116  decode.d3.loss_cls: 0.2376  decode.d3.loss_mask: 1.1993  decode.d3.loss_dice: 1.2363  decode.d4.loss_cls: 0.2032  decode.d4.loss_mask: 1.2402  decode.d4.loss_dice: 1.2607  decode.d5.loss_cls: 0.2038  decode.d5.loss_mask: 1.2055  decode.d5.loss_dice: 1.2661  decode.d6.loss_cls: 0.2292  decode.d6.loss_mask: 1.2074  decode.d6.loss_dice: 1.2577  decode.d7.loss_cls: 0.2287  decode.d7.loss_mask: 1.2022  decode.d7.loss_dice: 1.2432  decode.d8.loss_cls: 0.1845  decode.d8.loss_mask: 1.2000  decode.d8.loss_dice: 1.2518  mix_decode.loss_cls: 0.1734  mix_decode.loss_mask: 0.5813  mix_decode.loss_dice: 0.7069  mix_decode.d0.loss_cls: 0.2155  mix_decode.d0.loss_mask: 0.5442  mix_decode.d0.loss_dice: 0.6973  mix_decode.d1.loss_cls: 0.2001  mix_decode.d1.loss_mask: 0.5647  mix_decode.d1.loss_dice: 0.6906  mix_decode.d2.loss_cls: 0.2034  mix_decode.d2.loss_mask: 0.5581  mix_decode.d2.loss_dice: 0.6649  mix_decode.d3.loss_cls: 0.1647  mix_decode.d3.loss_mask: 0.5700  mix_decode.d3.loss_dice: 0.6744  mix_decode.d4.loss_cls: 0.1750  mix_decode.d4.loss_mask: 0.5766  mix_decode.d4.loss_dice: 0.6789  mix_decode.d5.loss_cls: 0.1817  mix_decode.d5.loss_mask: 0.5752  mix_decode.d5.loss_dice: 0.6902  mix_decode.d6.loss_cls: 0.1882  mix_decode.d6.loss_mask: 0.5865  mix_decode.d6.loss_dice: 0.6785  mix_decode.d7.loss_cls: 0.1934  mix_decode.d7.loss_mask: 0.5845  mix_decode.d7.loss_dice: 0.7001  mix_decode.d8.loss_cls: 0.1409  mix_decode.d8.loss_mask: 0.6026  mix_decode.d8.loss_dice: 0.7121
2025/03/27 12:44:19 - mmengine - INFO - Saving checkpoint at 8000 iterations
2025/03/27 12:44:24 - mmengine - INFO - Iter(val) [ 50/398]    eta: 0:00:29  time: 0.0849  data_time: 0.0016  memory: 3119  
2025/03/27 12:44:28 - mmengine - INFO - Iter(val) [100/398]    eta: 0:00:25  time: 0.0852  data_time: 0.0017  memory: 3119  
2025/03/27 12:44:32 - mmengine - INFO - Iter(val) [150/398]    eta: 0:00:21  time: 0.0852  data_time: 0.0018  memory: 3119  
2025/03/27 12:44:37 - mmengine - INFO - Iter(val) [200/398]    eta: 0:00:16  time: 0.0851  data_time: 0.0017  memory: 3119  
2025/03/27 12:44:41 - mmengine - INFO - Iter(val) [250/398]    eta: 0:00:12  time: 0.0850  data_time: 0.0017  memory: 3119  
2025/03/27 12:44:45 - mmengine - INFO - Iter(val) [300/398]    eta: 0:00:08  time: 0.0849  data_time: 0.0017  memory: 3119  
2025/03/27 12:44:49 - mmengine - INFO - Iter(val) [350/398]    eta: 0:00:04  time: 0.0851  data_time: 0.0017  memory: 3119  
2025/03/27 12:44:54 - mmengine - INFO - per class results:
2025/03/27 12:44:54 - mmengine - INFO - 
+--------------------+-------+-------+
|       Class        |  IoU  |  Acc  |
+--------------------+-------+-------+
| impervious_surface | 79.77 | 88.53 |
|      building      | 89.22 | 95.58 |
|   low_vegetation   | 66.02 | 79.53 |
|        tree        | 73.81 | 80.52 |
|        car         |  60.2 |  78.7 |
|      clutter       | 32.58 | 92.52 |
+--------------------+-------+-------+
2025/03/27 12:44:54 - mmengine - INFO - Iter(val) [398/398]    aAcc: 86.4500  mIoU: 66.9300  mAcc: 85.9000  data_time: 0.0018  time: 0.0851
2025/03/27 12:44:54 - mmengine - INFO - The previous best checkpoint /data/xiaoxinghhh/code/my_mmcv/work_dirs/pr2vi/DA_spatial_64_fft_cut_off_0.3_pre3/4ddf0_seed0/best_mIoU_iter_6000.pth is removed
2025/03/27 12:44:54 - mmengine - INFO - The best checkpoint with 66.9300 mIoU at 8000 iter is saved to best_mIoU_iter_8000.pth.
2025/03/27 12:45:49 - mmengine - INFO - Iter(train) [ 8050/20000]  base_lr: 6.2911e-05 lr: 6.2911e-05  eta: 2:39:43  time: 1.0898  data_time: 0.0232  memory: 10804  loss: 36.4113  decode.loss_cls: 0.0896  decode.loss_mask: 0.9953  decode.loss_dice: 1.2998  decode.d0.loss_cls: 0.1594  decode.d0.loss_mask: 0.9942  decode.d0.loss_dice: 1.3168  decode.d1.loss_cls: 0.1162  decode.d1.loss_mask: 0.9706  decode.d1.loss_dice: 1.2971  decode.d2.loss_cls: 0.0738  decode.d2.loss_mask: 1.0240  decode.d2.loss_dice: 1.3194  decode.d3.loss_cls: 0.0790  decode.d3.loss_mask: 1.0161  decode.d3.loss_dice: 1.3113  decode.d4.loss_cls: 0.0815  decode.d4.loss_mask: 1.0063  decode.d4.loss_dice: 1.3141  decode.d5.loss_cls: 0.0797  decode.d5.loss_mask: 1.0177  decode.d5.loss_dice: 1.3142  decode.d6.loss_cls: 0.0635  decode.d6.loss_mask: 1.0029  decode.d6.loss_dice: 1.3073  decode.d7.loss_cls: 0.0794  decode.d7.loss_mask: 0.9902  decode.d7.loss_dice: 1.3012  decode.d8.loss_cls: 0.0772  decode.d8.loss_mask: 1.0006  decode.d8.loss_dice: 1.2974  mix_decode.loss_cls: 0.0996  mix_decode.loss_mask: 0.4648  mix_decode.loss_dice: 0.7044  mix_decode.d0.loss_cls: 0.0684  mix_decode.d0.loss_mask: 0.4576  mix_decode.d0.loss_dice: 0.7197  mix_decode.d1.loss_cls: 0.1086  mix_decode.d1.loss_mask: 0.4486  mix_decode.d1.loss_dice: 0.6865  mix_decode.d2.loss_cls: 0.1415  mix_decode.d2.loss_mask: 0.4478  mix_decode.d2.loss_dice: 0.6698  mix_decode.d3.loss_cls: 0.0982  mix_decode.d3.loss_mask: 0.4476  mix_decode.d3.loss_dice: 0.6601  mix_decode.d4.loss_cls: 0.1016  mix_decode.d4.loss_mask: 0.4539  mix_decode.d4.loss_dice: 0.6743  mix_decode.d5.loss_cls: 0.1033  mix_decode.d5.loss_mask: 0.4612  mix_decode.d5.loss_dice: 0.6669  mix_decode.d6.loss_cls: 0.1004  mix_decode.d6.loss_mask: 0.4628  mix_decode.d6.loss_dice: 0.6767  mix_decode.d7.loss_cls: 0.1037  mix_decode.d7.loss_mask: 0.4500  mix_decode.d7.loss_dice: 0.6853  mix_decode.d8.loss_cls: 0.1081  mix_decode.d8.loss_mask: 0.4482  mix_decode.d8.loss_dice: 0.6958
2025/03/27 12:46:43 - mmengine - INFO - Iter(train) [ 8100/20000]  base_lr: 6.2674e-05 lr: 6.2674e-05  eta: 2:39:23  time: 1.0781  data_time: 0.0222  memory: 10808  loss: 39.9149  decode.loss_cls: 0.2964  decode.loss_mask: 1.1404  decode.loss_dice: 1.2933  decode.d0.loss_cls: 0.3036  decode.d0.loss_mask: 1.1438  decode.d0.loss_dice: 1.3805  decode.d1.loss_cls: 0.2872  decode.d1.loss_mask: 1.1419  decode.d1.loss_dice: 1.2970  decode.d2.loss_cls: 0.3089  decode.d2.loss_mask: 1.1455  decode.d2.loss_dice: 1.2864  decode.d3.loss_cls: 0.3084  decode.d3.loss_mask: 1.1735  decode.d3.loss_dice: 1.2582  decode.d4.loss_cls: 0.2946  decode.d4.loss_mask: 1.1571  decode.d4.loss_dice: 1.3102  decode.d5.loss_cls: 0.3543  decode.d5.loss_mask: 1.1475  decode.d5.loss_dice: 1.2758  decode.d6.loss_cls: 0.3661  decode.d6.loss_mask: 1.1502  decode.d6.loss_dice: 1.2616  decode.d7.loss_cls: 0.3076  decode.d7.loss_mask: 1.1690  decode.d7.loss_dice: 1.2864  decode.d8.loss_cls: 0.2484  decode.d8.loss_mask: 1.1634  decode.d8.loss_dice: 1.3175  mix_decode.loss_cls: 0.1580  mix_decode.loss_mask: 0.4222  mix_decode.loss_dice: 0.6799  mix_decode.d0.loss_cls: 0.1090  mix_decode.d0.loss_mask: 0.4046  mix_decode.d0.loss_dice: 0.6968  mix_decode.d1.loss_cls: 0.1596  mix_decode.d1.loss_mask: 0.4121  mix_decode.d1.loss_dice: 0.6622  mix_decode.d2.loss_cls: 0.1695  mix_decode.d2.loss_mask: 0.3968  mix_decode.d2.loss_dice: 0.6400  mix_decode.d3.loss_cls: 0.1743  mix_decode.d3.loss_mask: 0.4077  mix_decode.d3.loss_dice: 0.6519  mix_decode.d4.loss_cls: 0.1818  mix_decode.d4.loss_mask: 0.4018  mix_decode.d4.loss_dice: 0.6546  mix_decode.d5.loss_cls: 0.1861  mix_decode.d5.loss_mask: 0.4060  mix_decode.d5.loss_dice: 0.6338  mix_decode.d6.loss_cls: 0.1759  mix_decode.d6.loss_mask: 0.4263  mix_decode.d6.loss_dice: 0.6486  mix_decode.d7.loss_cls: 0.1732  mix_decode.d7.loss_mask: 0.3975  mix_decode.d7.loss_dice: 0.6473  mix_decode.d8.loss_cls: 0.1820  mix_decode.d8.loss_mask: 0.4262  mix_decode.d8.loss_dice: 0.6546
2025/03/27 12:47:38 - mmengine - INFO - Iter(train) [ 8150/20000]  base_lr: 6.2437e-05 lr: 6.2437e-05  eta: 2:39:03  time: 1.0948  data_time: 0.0238  memory: 10805  loss: 35.1138  decode.loss_cls: 0.1672  decode.loss_mask: 1.1407  decode.loss_dice: 1.2084  decode.d0.loss_cls: 0.2663  decode.d0.loss_mask: 1.1477  decode.d0.loss_dice: 1.2120  decode.d1.loss_cls: 0.1950  decode.d1.loss_mask: 1.1299  decode.d1.loss_dice: 1.1826  decode.d2.loss_cls: 0.1750  decode.d2.loss_mask: 1.1292  decode.d2.loss_dice: 1.1777  decode.d3.loss_cls: 0.1480  decode.d3.loss_mask: 1.1216  decode.d3.loss_dice: 1.1897  decode.d4.loss_cls: 0.1326  decode.d4.loss_mask: 1.1589  decode.d4.loss_dice: 1.2260  decode.d5.loss_cls: 0.1281  decode.d5.loss_mask: 1.1294  decode.d5.loss_dice: 1.2214  decode.d6.loss_cls: 0.1785  decode.d6.loss_mask: 1.1062  decode.d6.loss_dice: 1.2192  decode.d7.loss_cls: 0.1316  decode.d7.loss_mask: 1.1412  decode.d7.loss_dice: 1.2174  decode.d8.loss_cls: 0.1440  decode.d8.loss_mask: 1.1477  decode.d8.loss_dice: 1.2290  mix_decode.loss_cls: 0.0444  mix_decode.loss_mask: 0.3299  mix_decode.loss_dice: 0.6002  mix_decode.d0.loss_cls: 0.0714  mix_decode.d0.loss_mask: 0.3253  mix_decode.d0.loss_dice: 0.6277  mix_decode.d1.loss_cls: 0.1029  mix_decode.d1.loss_mask: 0.3105  mix_decode.d1.loss_dice: 0.5727  mix_decode.d2.loss_cls: 0.0755  mix_decode.d2.loss_mask: 0.3265  mix_decode.d2.loss_dice: 0.5759  mix_decode.d3.loss_cls: 0.0813  mix_decode.d3.loss_mask: 0.3237  mix_decode.d3.loss_dice: 0.5748  mix_decode.d4.loss_cls: 0.0680  mix_decode.d4.loss_mask: 0.3259  mix_decode.d4.loss_dice: 0.6046  mix_decode.d5.loss_cls: 0.0646  mix_decode.d5.loss_mask: 0.3327  mix_decode.d5.loss_dice: 0.6029  mix_decode.d6.loss_cls: 0.1204  mix_decode.d6.loss_mask: 0.3362  mix_decode.d6.loss_dice: 0.6104  mix_decode.d7.loss_cls: 0.0736  mix_decode.d7.loss_mask: 0.3319  mix_decode.d7.loss_dice: 0.6095  mix_decode.d8.loss_cls: 0.0329  mix_decode.d8.loss_mask: 0.3317  mix_decode.d8.loss_dice: 0.6235
2025/03/27 12:48:32 - mmengine - INFO - Iter(train) [ 8200/20000]  base_lr: 6.2199e-05 lr: 6.2199e-05  eta: 2:38:43  time: 1.0763  data_time: 0.0216  memory: 10810  loss: 36.5376  decode.loss_cls: 0.2259  decode.loss_mask: 1.1412  decode.loss_dice: 1.1200  decode.d0.loss_cls: 0.3100  decode.d0.loss_mask: 1.0819  decode.d0.loss_dice: 1.1909  decode.d1.loss_cls: 0.2727  decode.d1.loss_mask: 1.0814  decode.d1.loss_dice: 1.1332  decode.d2.loss_cls: 0.2166  decode.d2.loss_mask: 1.1135  decode.d2.loss_dice: 1.1217  decode.d3.loss_cls: 0.2762  decode.d3.loss_mask: 1.1222  decode.d3.loss_dice: 1.1402  decode.d4.loss_cls: 0.2424  decode.d4.loss_mask: 1.1365  decode.d4.loss_dice: 1.1195  decode.d5.loss_cls: 0.2313  decode.d5.loss_mask: 1.1328  decode.d5.loss_dice: 1.1240  decode.d6.loss_cls: 0.2840  decode.d6.loss_mask: 1.1321  decode.d6.loss_dice: 1.1458  decode.d7.loss_cls: 0.2526  decode.d7.loss_mask: 1.1367  decode.d7.loss_dice: 1.1580  decode.d8.loss_cls: 0.2397  decode.d8.loss_mask: 1.1013  decode.d8.loss_dice: 1.1039  mix_decode.loss_cls: 0.1527  mix_decode.loss_mask: 0.4490  mix_decode.loss_dice: 0.5538  mix_decode.d0.loss_cls: 0.1476  mix_decode.d0.loss_mask: 0.4387  mix_decode.d0.loss_dice: 0.5610  mix_decode.d1.loss_cls: 0.1397  mix_decode.d1.loss_mask: 0.4234  mix_decode.d1.loss_dice: 0.5293  mix_decode.d2.loss_cls: 0.1736  mix_decode.d2.loss_mask: 0.4287  mix_decode.d2.loss_dice: 0.5229  mix_decode.d3.loss_cls: 0.1725  mix_decode.d3.loss_mask: 0.4394  mix_decode.d3.loss_dice: 0.5385  mix_decode.d4.loss_cls: 0.1843  mix_decode.d4.loss_mask: 0.4258  mix_decode.d4.loss_dice: 0.5256  mix_decode.d5.loss_cls: 0.1790  mix_decode.d5.loss_mask: 0.4279  mix_decode.d5.loss_dice: 0.5336  mix_decode.d6.loss_cls: 0.1532  mix_decode.d6.loss_mask: 0.4804  mix_decode.d6.loss_dice: 0.5608  mix_decode.d7.loss_cls: 0.1591  mix_decode.d7.loss_mask: 0.4411  mix_decode.d7.loss_dice: 0.5503  mix_decode.d8.loss_cls: 0.1197  mix_decode.d8.loss_mask: 0.4798  mix_decode.d8.loss_dice: 0.5579
2025/03/27 12:49:25 - mmengine - INFO - Iter(train) [ 8250/20000]  base_lr: 6.1962e-05 lr: 6.1962e-05  eta: 2:38:22  time: 1.0741  data_time: 0.0217  memory: 10810  loss: 41.7247  decode.loss_cls: 0.2738  decode.loss_mask: 1.1244  decode.loss_dice: 1.4232  decode.d0.loss_cls: 0.2896  decode.d0.loss_mask: 1.1450  decode.d0.loss_dice: 1.5307  decode.d1.loss_cls: 0.2159  decode.d1.loss_mask: 1.1611  decode.d1.loss_dice: 1.4432  decode.d2.loss_cls: 0.2439  decode.d2.loss_mask: 1.1367  decode.d2.loss_dice: 1.4386  decode.d3.loss_cls: 0.2721  decode.d3.loss_mask: 1.1576  decode.d3.loss_dice: 1.3971  decode.d4.loss_cls: 0.2727  decode.d4.loss_mask: 1.1241  decode.d4.loss_dice: 1.4058  decode.d5.loss_cls: 0.3013  decode.d5.loss_mask: 1.1209  decode.d5.loss_dice: 1.4051  decode.d6.loss_cls: 0.3062  decode.d6.loss_mask: 1.1269  decode.d6.loss_dice: 1.4116  decode.d7.loss_cls: 0.2825  decode.d7.loss_mask: 1.1149  decode.d7.loss_dice: 1.4296  decode.d8.loss_cls: 0.2377  decode.d8.loss_mask: 1.1244  decode.d8.loss_dice: 1.4450  mix_decode.loss_cls: 0.1328  mix_decode.loss_mask: 0.4981  mix_decode.loss_dice: 0.7108  mix_decode.d0.loss_cls: 0.1312  mix_decode.d0.loss_mask: 0.4843  mix_decode.d0.loss_dice: 0.7296  mix_decode.d1.loss_cls: 0.1447  mix_decode.d1.loss_mask: 0.4692  mix_decode.d1.loss_dice: 0.6974  mix_decode.d2.loss_cls: 0.1647  mix_decode.d2.loss_mask: 0.4652  mix_decode.d2.loss_dice: 0.6823  mix_decode.d3.loss_cls: 0.1678  mix_decode.d3.loss_mask: 0.4741  mix_decode.d3.loss_dice: 0.6787  mix_decode.d4.loss_cls: 0.1659  mix_decode.d4.loss_mask: 0.4718  mix_decode.d4.loss_dice: 0.6919  mix_decode.d5.loss_cls: 0.1218  mix_decode.d5.loss_mask: 0.4952  mix_decode.d5.loss_dice: 0.7170  mix_decode.d6.loss_cls: 0.1634  mix_decode.d6.loss_mask: 0.4938  mix_decode.d6.loss_dice: 0.7216  mix_decode.d7.loss_cls: 0.1462  mix_decode.d7.loss_mask: 0.4984  mix_decode.d7.loss_dice: 0.7085  mix_decode.d8.loss_cls: 0.1288  mix_decode.d8.loss_mask: 0.4993  mix_decode.d8.loss_dice: 0.7086
2025/03/27 12:50:19 - mmengine - INFO - Iter(train) [ 8300/20000]  base_lr: 6.1725e-05 lr: 6.1725e-05  eta: 2:38:00  time: 1.0808  data_time: 0.0231  memory: 10804  loss: 38.2856  decode.loss_cls: 0.2488  decode.loss_mask: 0.9033  decode.loss_dice: 1.3347  decode.d0.loss_cls: 0.2908  decode.d0.loss_mask: 0.8786  decode.d0.loss_dice: 1.3473  decode.d1.loss_cls: 0.2898  decode.d1.loss_mask: 0.8925  decode.d1.loss_dice: 1.3334  decode.d2.loss_cls: 0.3261  decode.d2.loss_mask: 0.9283  decode.d2.loss_dice: 1.3226  decode.d3.loss_cls: 0.3678  decode.d3.loss_mask: 0.9239  decode.d3.loss_dice: 1.3424  decode.d4.loss_cls: 0.3456  decode.d4.loss_mask: 0.8939  decode.d4.loss_dice: 1.3256  decode.d5.loss_cls: 0.3444  decode.d5.loss_mask: 0.9113  decode.d5.loss_dice: 1.3527  decode.d6.loss_cls: 0.3865  decode.d6.loss_mask: 0.9256  decode.d6.loss_dice: 1.3496  decode.d7.loss_cls: 0.3309  decode.d7.loss_mask: 0.8902  decode.d7.loss_dice: 1.3212  decode.d8.loss_cls: 0.3113  decode.d8.loss_mask: 0.8910  decode.d8.loss_dice: 1.3134  mix_decode.loss_cls: 0.1340  mix_decode.loss_mask: 0.4773  mix_decode.loss_dice: 0.6500  mix_decode.d0.loss_cls: 0.1064  mix_decode.d0.loss_mask: 0.4861  mix_decode.d0.loss_dice: 0.6634  mix_decode.d1.loss_cls: 0.1107  mix_decode.d1.loss_mask: 0.4996  mix_decode.d1.loss_dice: 0.6577  mix_decode.d2.loss_cls: 0.0970  mix_decode.d2.loss_mask: 0.4900  mix_decode.d2.loss_dice: 0.6571  mix_decode.d3.loss_cls: 0.1196  mix_decode.d3.loss_mask: 0.4885  mix_decode.d3.loss_dice: 0.6595  mix_decode.d4.loss_cls: 0.1157  mix_decode.d4.loss_mask: 0.4858  mix_decode.d4.loss_dice: 0.6609  mix_decode.d5.loss_cls: 0.1304  mix_decode.d5.loss_mask: 0.4824  mix_decode.d5.loss_dice: 0.6545  mix_decode.d6.loss_cls: 0.1130  mix_decode.d6.loss_mask: 0.5094  mix_decode.d6.loss_dice: 0.6744  mix_decode.d7.loss_cls: 0.1411  mix_decode.d7.loss_mask: 0.4910  mix_decode.d7.loss_dice: 0.6334  mix_decode.d8.loss_cls: 0.1371  mix_decode.d8.loss_mask: 0.4897  mix_decode.d8.loss_dice: 0.6460
2025/03/27 12:51:13 - mmengine - INFO - Iter(train) [ 8350/20000]  base_lr: 6.1487e-05 lr: 6.1487e-05  eta: 2:37:38  time: 1.1031  data_time: 0.0251  memory: 10806  loss: 41.3471  decode.loss_cls: 0.2076  decode.loss_mask: 1.2359  decode.loss_dice: 1.4107  decode.d0.loss_cls: 0.2609  decode.d0.loss_mask: 1.2406  decode.d0.loss_dice: 1.4634  decode.d1.loss_cls: 0.1670  decode.d1.loss_mask: 1.2850  decode.d1.loss_dice: 1.4357  decode.d2.loss_cls: 0.1573  decode.d2.loss_mask: 1.2840  decode.d2.loss_dice: 1.4227  decode.d3.loss_cls: 0.1718  decode.d3.loss_mask: 1.2424  decode.d3.loss_dice: 1.3911  decode.d4.loss_cls: 0.1551  decode.d4.loss_mask: 1.2778  decode.d4.loss_dice: 1.4086  decode.d5.loss_cls: 0.2277  decode.d5.loss_mask: 1.2325  decode.d5.loss_dice: 1.3895  decode.d6.loss_cls: 0.1746  decode.d6.loss_mask: 1.2735  decode.d6.loss_dice: 1.3892  decode.d7.loss_cls: 0.1860  decode.d7.loss_mask: 1.2645  decode.d7.loss_dice: 1.3857  decode.d8.loss_cls: 0.2429  decode.d8.loss_mask: 1.2602  decode.d8.loss_dice: 1.3898  mix_decode.loss_cls: 0.0733  mix_decode.loss_mask: 0.5226  mix_decode.loss_dice: 0.6766  mix_decode.d0.loss_cls: 0.0528  mix_decode.d0.loss_mask: 0.5230  mix_decode.d0.loss_dice: 0.7012  mix_decode.d1.loss_cls: 0.0792  mix_decode.d1.loss_mask: 0.5216  mix_decode.d1.loss_dice: 0.6750  mix_decode.d2.loss_cls: 0.0701  mix_decode.d2.loss_mask: 0.5217  mix_decode.d2.loss_dice: 0.6825  mix_decode.d3.loss_cls: 0.0932  mix_decode.d3.loss_mask: 0.5253  mix_decode.d3.loss_dice: 0.6816  mix_decode.d4.loss_cls: 0.0675  mix_decode.d4.loss_mask: 0.5170  mix_decode.d4.loss_dice: 0.6799  mix_decode.d5.loss_cls: 0.0608  mix_decode.d5.loss_mask: 0.5167  mix_decode.d5.loss_dice: 0.6862  mix_decode.d6.loss_cls: 0.0556  mix_decode.d6.loss_mask: 0.5189  mix_decode.d6.loss_dice: 0.6784  mix_decode.d7.loss_cls: 0.0713  mix_decode.d7.loss_mask: 0.5206  mix_decode.d7.loss_dice: 0.6784  mix_decode.d8.loss_cls: 0.0543  mix_decode.d8.loss_mask: 0.5200  mix_decode.d8.loss_dice: 0.6883
2025/03/27 12:52:07 - mmengine - INFO - Iter(train) [ 8400/20000]  base_lr: 6.1250e-05 lr: 6.1250e-05  eta: 2:37:16  time: 1.0768  data_time: 0.0217  memory: 10807  loss: 42.5166  decode.loss_cls: 0.3210  decode.loss_mask: 1.2705  decode.loss_dice: 1.2997  decode.d0.loss_cls: 0.4275  decode.d0.loss_mask: 1.2446  decode.d0.loss_dice: 1.3591  decode.d1.loss_cls: 0.3882  decode.d1.loss_mask: 1.2568  decode.d1.loss_dice: 1.2959  decode.d2.loss_cls: 0.3528  decode.d2.loss_mask: 1.2849  decode.d2.loss_dice: 1.3086  decode.d3.loss_cls: 0.3649  decode.d3.loss_mask: 1.2727  decode.d3.loss_dice: 1.3227  decode.d4.loss_cls: 0.3894  decode.d4.loss_mask: 1.2933  decode.d4.loss_dice: 1.3221  decode.d5.loss_cls: 0.3528  decode.d5.loss_mask: 1.2972  decode.d5.loss_dice: 1.2939  decode.d6.loss_cls: 0.3297  decode.d6.loss_mask: 1.3162  decode.d6.loss_dice: 1.3454  decode.d7.loss_cls: 0.2882  decode.d7.loss_mask: 1.2971  decode.d7.loss_dice: 1.3471  decode.d8.loss_cls: 0.3070  decode.d8.loss_mask: 1.2750  decode.d8.loss_dice: 1.2962  mix_decode.loss_cls: 0.1177  mix_decode.loss_mask: 0.5185  mix_decode.loss_dice: 0.6533  mix_decode.d0.loss_cls: 0.1510  mix_decode.d0.loss_mask: 0.5070  mix_decode.d0.loss_dice: 0.6836  mix_decode.d1.loss_cls: 0.1446  mix_decode.d1.loss_mask: 0.4865  mix_decode.d1.loss_dice: 0.6273  mix_decode.d2.loss_cls: 0.1675  mix_decode.d2.loss_mask: 0.4827  mix_decode.d2.loss_dice: 0.6178  mix_decode.d3.loss_cls: 0.1577  mix_decode.d3.loss_mask: 0.4890  mix_decode.d3.loss_dice: 0.6263  mix_decode.d4.loss_cls: 0.1574  mix_decode.d4.loss_mask: 0.5043  mix_decode.d4.loss_dice: 0.6363  mix_decode.d5.loss_cls: 0.2071  mix_decode.d5.loss_mask: 0.5090  mix_decode.d5.loss_dice: 0.6329  mix_decode.d6.loss_cls: 0.1436  mix_decode.d6.loss_mask: 0.5220  mix_decode.d6.loss_dice: 0.6654  mix_decode.d7.loss_cls: 0.1387  mix_decode.d7.loss_mask: 0.5065  mix_decode.d7.loss_dice: 0.6534  mix_decode.d8.loss_cls: 0.1386  mix_decode.d8.loss_mask: 0.5021  mix_decode.d8.loss_dice: 0.6484
2025/03/27 12:53:01 - mmengine - INFO - Iter(train) [ 8450/20000]  base_lr: 6.1012e-05 lr: 6.1012e-05  eta: 2:36:53  time: 1.0761  data_time: 0.0225  memory: 10809  loss: 41.8063  decode.loss_cls: 0.2877  decode.loss_mask: 1.2747  decode.loss_dice: 1.3652  decode.d0.loss_cls: 0.2386  decode.d0.loss_mask: 1.3287  decode.d0.loss_dice: 1.3534  decode.d1.loss_cls: 0.2394  decode.d1.loss_mask: 1.2764  decode.d1.loss_dice: 1.3753  decode.d2.loss_cls: 0.2248  decode.d2.loss_mask: 1.2593  decode.d2.loss_dice: 1.3687  decode.d3.loss_cls: 0.2195  decode.d3.loss_mask: 1.2575  decode.d3.loss_dice: 1.4017  decode.d4.loss_cls: 0.2523  decode.d4.loss_mask: 1.2737  decode.d4.loss_dice: 1.3959  decode.d5.loss_cls: 0.2281  decode.d5.loss_mask: 1.2608  decode.d5.loss_dice: 1.3894  decode.d6.loss_cls: 0.2182  decode.d6.loss_mask: 1.2773  decode.d6.loss_dice: 1.3790  decode.d7.loss_cls: 0.2534  decode.d7.loss_mask: 1.2836  decode.d7.loss_dice: 1.3586  decode.d8.loss_cls: 0.2932  decode.d8.loss_mask: 1.2690  decode.d8.loss_dice: 1.3576  mix_decode.loss_cls: 0.1314  mix_decode.loss_mask: 0.4333  mix_decode.loss_dice: 0.7077  mix_decode.d0.loss_cls: 0.1381  mix_decode.d0.loss_mask: 0.4283  mix_decode.d0.loss_dice: 0.7212  mix_decode.d1.loss_cls: 0.1313  mix_decode.d1.loss_mask: 0.4335  mix_decode.d1.loss_dice: 0.7039  mix_decode.d2.loss_cls: 0.1316  mix_decode.d2.loss_mask: 0.4365  mix_decode.d2.loss_dice: 0.7134  mix_decode.d3.loss_cls: 0.1469  mix_decode.d3.loss_mask: 0.4403  mix_decode.d3.loss_dice: 0.6994  mix_decode.d4.loss_cls: 0.1383  mix_decode.d4.loss_mask: 0.4400  mix_decode.d4.loss_dice: 0.6984  mix_decode.d5.loss_cls: 0.1289  mix_decode.d5.loss_mask: 0.4633  mix_decode.d5.loss_dice: 0.7132  mix_decode.d6.loss_cls: 0.1310  mix_decode.d6.loss_mask: 0.4693  mix_decode.d6.loss_dice: 0.7122  mix_decode.d7.loss_cls: 0.1209  mix_decode.d7.loss_mask: 0.4271  mix_decode.d7.loss_dice: 0.7170  mix_decode.d8.loss_cls: 0.1342  mix_decode.d8.loss_mask: 0.4341  mix_decode.d8.loss_dice: 0.7205
2025/03/27 12:53:54 - mmengine - INFO - Iter(train) [ 8500/20000]  base_lr: 6.0774e-05 lr: 6.0774e-05  eta: 2:36:30  time: 1.0806  data_time: 0.0231  memory: 10812  loss: 36.8211  decode.loss_cls: 0.1260  decode.loss_mask: 1.0760  decode.loss_dice: 1.2868  decode.d0.loss_cls: 0.2122  decode.d0.loss_mask: 1.0422  decode.d0.loss_dice: 1.2988  decode.d1.loss_cls: 0.1688  decode.d1.loss_mask: 1.0212  decode.d1.loss_dice: 1.2342  decode.d2.loss_cls: 0.1693  decode.d2.loss_mask: 1.0278  decode.d2.loss_dice: 1.2537  decode.d3.loss_cls: 0.2019  decode.d3.loss_mask: 1.0271  decode.d3.loss_dice: 1.2280  decode.d4.loss_cls: 0.2153  decode.d4.loss_mask: 1.0571  decode.d4.loss_dice: 1.2456  decode.d5.loss_cls: 0.1915  decode.d5.loss_mask: 1.0618  decode.d5.loss_dice: 1.2308  decode.d6.loss_cls: 0.1660  decode.d6.loss_mask: 1.1012  decode.d6.loss_dice: 1.2409  decode.d7.loss_cls: 0.2106  decode.d7.loss_mask: 1.0698  decode.d7.loss_dice: 1.2399  decode.d8.loss_cls: 0.2004  decode.d8.loss_mask: 1.0643  decode.d8.loss_dice: 1.2435  mix_decode.loss_cls: 0.0851  mix_decode.loss_mask: 0.4293  mix_decode.loss_dice: 0.6881  mix_decode.d0.loss_cls: 0.0662  mix_decode.d0.loss_mask: 0.4327  mix_decode.d0.loss_dice: 0.7134  mix_decode.d1.loss_cls: 0.1015  mix_decode.d1.loss_mask: 0.4165  mix_decode.d1.loss_dice: 0.6552  mix_decode.d2.loss_cls: 0.0845  mix_decode.d2.loss_mask: 0.4237  mix_decode.d2.loss_dice: 0.6661  mix_decode.d3.loss_cls: 0.0846  mix_decode.d3.loss_mask: 0.4242  mix_decode.d3.loss_dice: 0.6745  mix_decode.d4.loss_cls: 0.0672  mix_decode.d4.loss_mask: 0.4314  mix_decode.d4.loss_dice: 0.6876  mix_decode.d5.loss_cls: 0.0822  mix_decode.d5.loss_mask: 0.4292  mix_decode.d5.loss_dice: 0.6731  mix_decode.d6.loss_cls: 0.1041  mix_decode.d6.loss_mask: 0.4351  mix_decode.d6.loss_dice: 0.6681  mix_decode.d7.loss_cls: 0.1062  mix_decode.d7.loss_mask: 0.4293  mix_decode.d7.loss_dice: 0.6664  mix_decode.d8.loss_cls: 0.0770  mix_decode.d8.loss_mask: 0.4298  mix_decode.d8.loss_dice: 0.6762
2025/03/27 12:54:49 - mmengine - INFO - Iter(train) [ 8550/20000]  base_lr: 6.0537e-05 lr: 6.0537e-05  eta: 2:36:07  time: 1.0926  data_time: 0.0225  memory: 10806  loss: 37.4835  decode.loss_cls: 0.1507  decode.loss_mask: 1.0394  decode.loss_dice: 1.3241  decode.d0.loss_cls: 0.2390  decode.d0.loss_mask: 1.0342  decode.d0.loss_dice: 1.3477  decode.d1.loss_cls: 0.1965  decode.d1.loss_mask: 1.0190  decode.d1.loss_dice: 1.3268  decode.d2.loss_cls: 0.1723  decode.d2.loss_mask: 1.0190  decode.d2.loss_dice: 1.3095  decode.d3.loss_cls: 0.1990  decode.d3.loss_mask: 1.0328  decode.d3.loss_dice: 1.3255  decode.d4.loss_cls: 0.1551  decode.d4.loss_mask: 1.0270  decode.d4.loss_dice: 1.3117  decode.d5.loss_cls: 0.1547  decode.d5.loss_mask: 1.0645  decode.d5.loss_dice: 1.3217  decode.d6.loss_cls: 0.1646  decode.d6.loss_mask: 1.0374  decode.d6.loss_dice: 1.3079  decode.d7.loss_cls: 0.0930  decode.d7.loss_mask: 1.0536  decode.d7.loss_dice: 1.3745  decode.d8.loss_cls: 0.1512  decode.d8.loss_mask: 1.0309  decode.d8.loss_dice: 1.3023  mix_decode.loss_cls: 0.1295  mix_decode.loss_mask: 0.4407  mix_decode.loss_dice: 0.6673  mix_decode.d0.loss_cls: 0.0851  mix_decode.d0.loss_mask: 0.4358  mix_decode.d0.loss_dice: 0.6912  mix_decode.d1.loss_cls: 0.1754  mix_decode.d1.loss_mask: 0.4110  mix_decode.d1.loss_dice: 0.6624  mix_decode.d2.loss_cls: 0.1524  mix_decode.d2.loss_mask: 0.4127  mix_decode.d2.loss_dice: 0.6554  mix_decode.d3.loss_cls: 0.1477  mix_decode.d3.loss_mask: 0.4199  mix_decode.d3.loss_dice: 0.6401  mix_decode.d4.loss_cls: 0.1678  mix_decode.d4.loss_mask: 0.4134  mix_decode.d4.loss_dice: 0.6385  mix_decode.d5.loss_cls: 0.1439  mix_decode.d5.loss_mask: 0.4174  mix_decode.d5.loss_dice: 0.6380  mix_decode.d6.loss_cls: 0.1364  mix_decode.d6.loss_mask: 0.4420  mix_decode.d6.loss_dice: 0.6513  mix_decode.d7.loss_cls: 0.1058  mix_decode.d7.loss_mask: 0.4570  mix_decode.d7.loss_dice: 0.6439  mix_decode.d8.loss_cls: 0.0933  mix_decode.d8.loss_mask: 0.4591  mix_decode.d8.loss_dice: 0.6631
2025/03/27 12:55:43 - mmengine - INFO - Iter(train) [ 8600/20000]  base_lr: 6.0299e-05 lr: 6.0299e-05  eta: 2:35:44  time: 1.0766  data_time: 0.0219  memory: 10805  loss: 39.7213  decode.loss_cls: 0.0903  decode.loss_mask: 1.2286  decode.loss_dice: 1.3718  decode.d0.loss_cls: 0.1744  decode.d0.loss_mask: 1.2466  decode.d0.loss_dice: 1.4209  decode.d1.loss_cls: 0.1869  decode.d1.loss_mask: 1.2515  decode.d1.loss_dice: 1.3979  decode.d2.loss_cls: 0.1634  decode.d2.loss_mask: 1.2173  decode.d2.loss_dice: 1.3485  decode.d3.loss_cls: 0.1612  decode.d3.loss_mask: 1.2035  decode.d3.loss_dice: 1.3634  decode.d4.loss_cls: 0.1049  decode.d4.loss_mask: 1.2229  decode.d4.loss_dice: 1.4037  decode.d5.loss_cls: 0.0988  decode.d5.loss_mask: 1.2324  decode.d5.loss_dice: 1.4063  decode.d6.loss_cls: 0.1109  decode.d6.loss_mask: 1.2318  decode.d6.loss_dice: 1.4008  decode.d7.loss_cls: 0.0757  decode.d7.loss_mask: 1.2144  decode.d7.loss_dice: 1.3819  decode.d8.loss_cls: 0.1403  decode.d8.loss_mask: 1.2116  decode.d8.loss_dice: 1.4150  mix_decode.loss_cls: 0.0835  mix_decode.loss_mask: 0.4816  mix_decode.loss_dice: 0.6219  mix_decode.d0.loss_cls: 0.1015  mix_decode.d0.loss_mask: 0.4925  mix_decode.d0.loss_dice: 0.6433  mix_decode.d1.loss_cls: 0.1337  mix_decode.d1.loss_mask: 0.5017  mix_decode.d1.loss_dice: 0.6196  mix_decode.d2.loss_cls: 0.1338  mix_decode.d2.loss_mask: 0.4929  mix_decode.d2.loss_dice: 0.6173  mix_decode.d3.loss_cls: 0.1065  mix_decode.d3.loss_mask: 0.5061  mix_decode.d3.loss_dice: 0.6209  mix_decode.d4.loss_cls: 0.0834  mix_decode.d4.loss_mask: 0.5080  mix_decode.d4.loss_dice: 0.6321  mix_decode.d5.loss_cls: 0.1012  mix_decode.d5.loss_mask: 0.5082  mix_decode.d5.loss_dice: 0.6283  mix_decode.d6.loss_cls: 0.0762  mix_decode.d6.loss_mask: 0.5026  mix_decode.d6.loss_dice: 0.6370  mix_decode.d7.loss_cls: 0.0824  mix_decode.d7.loss_mask: 0.5025  mix_decode.d7.loss_dice: 0.6424  mix_decode.d8.loss_cls: 0.0765  mix_decode.d8.loss_mask: 0.4770  mix_decode.d8.loss_dice: 0.6290
2025/03/27 12:56:37 - mmengine - INFO - Iter(train) [ 8650/20000]  base_lr: 6.0060e-05 lr: 6.0060e-05  eta: 2:35:19  time: 1.0739  data_time: 0.0221  memory: 10803  loss: 40.5393  decode.loss_cls: 0.1088  decode.loss_mask: 1.2677  decode.loss_dice: 1.3401  decode.d0.loss_cls: 0.2506  decode.d0.loss_mask: 1.2453  decode.d0.loss_dice: 1.3692  decode.d1.loss_cls: 0.1449  decode.d1.loss_mask: 1.2459  decode.d1.loss_dice: 1.3677  decode.d2.loss_cls: 0.1500  decode.d2.loss_mask: 1.2322  decode.d2.loss_dice: 1.3605  decode.d3.loss_cls: 0.1780  decode.d3.loss_mask: 1.2204  decode.d3.loss_dice: 1.3375  decode.d4.loss_cls: 0.1307  decode.d4.loss_mask: 1.2487  decode.d4.loss_dice: 1.3568  decode.d5.loss_cls: 0.1352  decode.d5.loss_mask: 1.2392  decode.d5.loss_dice: 1.3450  decode.d6.loss_cls: 0.1412  decode.d6.loss_mask: 1.2441  decode.d6.loss_dice: 1.3496  decode.d7.loss_cls: 0.0905  decode.d7.loss_mask: 1.2556  decode.d7.loss_dice: 1.3659  decode.d8.loss_cls: 0.1203  decode.d8.loss_mask: 1.2453  decode.d8.loss_dice: 1.3648  mix_decode.loss_cls: 0.1117  mix_decode.loss_mask: 0.4894  mix_decode.loss_dice: 0.7151  mix_decode.d0.loss_cls: 0.0605  mix_decode.d0.loss_mask: 0.4784  mix_decode.d0.loss_dice: 0.7690  mix_decode.d1.loss_cls: 0.0844  mix_decode.d1.loss_mask: 0.4865  mix_decode.d1.loss_dice: 0.7356  mix_decode.d2.loss_cls: 0.1502  mix_decode.d2.loss_mask: 0.4855  mix_decode.d2.loss_dice: 0.7056  mix_decode.d3.loss_cls: 0.1185  mix_decode.d3.loss_mask: 0.4713  mix_decode.d3.loss_dice: 0.7008  mix_decode.d4.loss_cls: 0.0904  mix_decode.d4.loss_mask: 0.4860  mix_decode.d4.loss_dice: 0.7201  mix_decode.d5.loss_cls: 0.1109  mix_decode.d5.loss_mask: 0.4917  mix_decode.d5.loss_dice: 0.7175  mix_decode.d6.loss_cls: 0.0939  mix_decode.d6.loss_mask: 0.4900  mix_decode.d6.loss_dice: 0.7215  mix_decode.d7.loss_cls: 0.0705  mix_decode.d7.loss_mask: 0.4860  mix_decode.d7.loss_dice: 0.7280  mix_decode.d8.loss_cls: 0.1042  mix_decode.d8.loss_mask: 0.4847  mix_decode.d8.loss_dice: 0.7296
2025/03/27 12:57:31 - mmengine - INFO - Iter(train) [ 8700/20000]  base_lr: 5.9822e-05 lr: 5.9822e-05  eta: 2:34:55  time: 1.0802  data_time: 0.0232  memory: 10810  loss: 40.1996  decode.loss_cls: 0.1789  decode.loss_mask: 1.3132  decode.loss_dice: 1.2625  decode.d0.loss_cls: 0.3226  decode.d0.loss_mask: 1.2878  decode.d0.loss_dice: 1.3229  decode.d1.loss_cls: 0.1845  decode.d1.loss_mask: 1.3330  decode.d1.loss_dice: 1.2986  decode.d2.loss_cls: 0.1792  decode.d2.loss_mask: 1.3149  decode.d2.loss_dice: 1.2619  decode.d3.loss_cls: 0.2479  decode.d3.loss_mask: 1.2731  decode.d3.loss_dice: 1.2318  decode.d4.loss_cls: 0.2039  decode.d4.loss_mask: 1.2813  decode.d4.loss_dice: 1.2507  decode.d5.loss_cls: 0.1566  decode.d5.loss_mask: 1.3204  decode.d5.loss_dice: 1.2695  decode.d6.loss_cls: 0.1646  decode.d6.loss_mask: 1.2976  decode.d6.loss_dice: 1.2552  decode.d7.loss_cls: 0.1800  decode.d7.loss_mask: 1.2963  decode.d7.loss_dice: 1.2745  decode.d8.loss_cls: 0.1877  decode.d8.loss_mask: 1.2921  decode.d8.loss_dice: 1.2538  mix_decode.loss_cls: 0.1857  mix_decode.loss_mask: 0.4056  mix_decode.loss_dice: 0.6649  mix_decode.d0.loss_cls: 0.1335  mix_decode.d0.loss_mask: 0.4092  mix_decode.d0.loss_dice: 0.7130  mix_decode.d1.loss_cls: 0.1880  mix_decode.d1.loss_mask: 0.3832  mix_decode.d1.loss_dice: 0.6797  mix_decode.d2.loss_cls: 0.2426  mix_decode.d2.loss_mask: 0.3944  mix_decode.d2.loss_dice: 0.6537  mix_decode.d3.loss_cls: 0.1764  mix_decode.d3.loss_mask: 0.4026  mix_decode.d3.loss_dice: 0.6704  mix_decode.d4.loss_cls: 0.1825  mix_decode.d4.loss_mask: 0.3945  mix_decode.d4.loss_dice: 0.6573  mix_decode.d5.loss_cls: 0.1899  mix_decode.d5.loss_mask: 0.3834  mix_decode.d5.loss_dice: 0.6572  mix_decode.d6.loss_cls: 0.1775  mix_decode.d6.loss_mask: 0.3832  mix_decode.d6.loss_dice: 0.6547  mix_decode.d7.loss_cls: 0.2055  mix_decode.d7.loss_mask: 0.3832  mix_decode.d7.loss_dice: 0.6673  mix_decode.d8.loss_cls: 0.1686  mix_decode.d8.loss_mask: 0.4198  mix_decode.d8.loss_dice: 0.6752
2025/03/27 12:58:24 - mmengine - INFO - Iter(train) [ 8750/20000]  base_lr: 5.9584e-05 lr: 5.9584e-05  eta: 2:34:31  time: 1.0720  data_time: 0.0216  memory: 10805  loss: 42.0963  decode.loss_cls: 0.1357  decode.loss_mask: 1.2794  decode.loss_dice: 1.4343  decode.d0.loss_cls: 0.1740  decode.d0.loss_mask: 1.3296  decode.d0.loss_dice: 1.4567  decode.d1.loss_cls: 0.1472  decode.d1.loss_mask: 1.3181  decode.d1.loss_dice: 1.4294  decode.d2.loss_cls: 0.1303  decode.d2.loss_mask: 1.3196  decode.d2.loss_dice: 1.4404  decode.d3.loss_cls: 0.1689  decode.d3.loss_mask: 1.3041  decode.d3.loss_dice: 1.4310  decode.d4.loss_cls: 0.1353  decode.d4.loss_mask: 1.3145  decode.d4.loss_dice: 1.4454  decode.d5.loss_cls: 0.1072  decode.d5.loss_mask: 1.3122  decode.d5.loss_dice: 1.4604  decode.d6.loss_cls: 0.1232  decode.d6.loss_mask: 1.3188  decode.d6.loss_dice: 1.4449  decode.d7.loss_cls: 0.0999  decode.d7.loss_mask: 1.3264  decode.d7.loss_dice: 1.4591  decode.d8.loss_cls: 0.1131  decode.d8.loss_mask: 1.3147  decode.d8.loss_dice: 1.4751  mix_decode.loss_cls: 0.0819  mix_decode.loss_mask: 0.5507  mix_decode.loss_dice: 0.6765  mix_decode.d0.loss_cls: 0.0929  mix_decode.d0.loss_mask: 0.5587  mix_decode.d0.loss_dice: 0.6934  mix_decode.d1.loss_cls: 0.0777  mix_decode.d1.loss_mask: 0.5652  mix_decode.d1.loss_dice: 0.6703  mix_decode.d2.loss_cls: 0.0837  mix_decode.d2.loss_mask: 0.5595  mix_decode.d2.loss_dice: 0.6662  mix_decode.d3.loss_cls: 0.0939  mix_decode.d3.loss_mask: 0.5453  mix_decode.d3.loss_dice: 0.6523  mix_decode.d4.loss_cls: 0.0773  mix_decode.d4.loss_mask: 0.5652  mix_decode.d4.loss_dice: 0.6814  mix_decode.d5.loss_cls: 0.0781  mix_decode.d5.loss_mask: 0.5419  mix_decode.d5.loss_dice: 0.6768  mix_decode.d6.loss_cls: 0.0867  mix_decode.d6.loss_mask: 0.5507  mix_decode.d6.loss_dice: 0.6722  mix_decode.d7.loss_cls: 0.0704  mix_decode.d7.loss_mask: 0.5688  mix_decode.d7.loss_dice: 0.6869  mix_decode.d8.loss_cls: 0.1021  mix_decode.d8.loss_mask: 0.5455  mix_decode.d8.loss_dice: 0.6748
2025/03/27 12:59:18 - mmengine - INFO - Iter(train) [ 8800/20000]  base_lr: 5.9346e-05 lr: 5.9346e-05  eta: 2:34:05  time: 1.0722  data_time: 0.0217  memory: 10804  loss: 37.2635  decode.loss_cls: 0.1278  decode.loss_mask: 1.2540  decode.loss_dice: 1.1713  decode.d0.loss_cls: 0.2222  decode.d0.loss_mask: 1.1946  decode.d0.loss_dice: 1.1771  decode.d1.loss_cls: 0.1840  decode.d1.loss_mask: 1.1829  decode.d1.loss_dice: 1.1376  decode.d2.loss_cls: 0.1036  decode.d2.loss_mask: 1.2717  decode.d2.loss_dice: 1.1682  decode.d3.loss_cls: 0.1956  decode.d3.loss_mask: 1.2039  decode.d3.loss_dice: 1.1304  decode.d4.loss_cls: 0.1175  decode.d4.loss_mask: 1.2766  decode.d4.loss_dice: 1.1701  decode.d5.loss_cls: 0.1227  decode.d5.loss_mask: 1.2616  decode.d5.loss_dice: 1.1751  decode.d6.loss_cls: 0.1269  decode.d6.loss_mask: 1.2696  decode.d6.loss_dice: 1.1730  decode.d7.loss_cls: 0.1277  decode.d7.loss_mask: 1.2670  decode.d7.loss_dice: 1.1728  decode.d8.loss_cls: 0.1353  decode.d8.loss_mask: 1.2741  decode.d8.loss_dice: 1.2017  mix_decode.loss_cls: 0.1024  mix_decode.loss_mask: 0.4486  mix_decode.loss_dice: 0.6299  mix_decode.d0.loss_cls: 0.1051  mix_decode.d0.loss_mask: 0.4259  mix_decode.d0.loss_dice: 0.6504  mix_decode.d1.loss_cls: 0.1604  mix_decode.d1.loss_mask: 0.4149  mix_decode.d1.loss_dice: 0.6105  mix_decode.d2.loss_cls: 0.1518  mix_decode.d2.loss_mask: 0.4108  mix_decode.d2.loss_dice: 0.6104  mix_decode.d3.loss_cls: 0.1457  mix_decode.d3.loss_mask: 0.4284  mix_decode.d3.loss_dice: 0.6014  mix_decode.d4.loss_cls: 0.1152  mix_decode.d4.loss_mask: 0.4284  mix_decode.d4.loss_dice: 0.6155  mix_decode.d5.loss_cls: 0.0966  mix_decode.d5.loss_mask: 0.4214  mix_decode.d5.loss_dice: 0.6328  mix_decode.d6.loss_cls: 0.1025  mix_decode.d6.loss_mask: 0.4315  mix_decode.d6.loss_dice: 0.6190  mix_decode.d7.loss_cls: 0.1138  mix_decode.d7.loss_mask: 0.4282  mix_decode.d7.loss_dice: 0.6055  mix_decode.d8.loss_cls: 0.1086  mix_decode.d8.loss_mask: 0.4258  mix_decode.d8.loss_dice: 0.6260
2025/03/27 13:00:12 - mmengine - INFO - Iter(train) [ 8850/20000]  base_lr: 5.9107e-05 lr: 5.9107e-05  eta: 2:33:40  time: 1.0739  data_time: 0.0219  memory: 10794  loss: 44.2730  decode.loss_cls: 0.2099  decode.loss_mask: 1.5166  decode.loss_dice: 1.3936  decode.d0.loss_cls: 0.3644  decode.d0.loss_mask: 1.4893  decode.d0.loss_dice: 1.4589  decode.d1.loss_cls: 0.3394  decode.d1.loss_mask: 1.4941  decode.d1.loss_dice: 1.3984  decode.d2.loss_cls: 0.3374  decode.d2.loss_mask: 1.4761  decode.d2.loss_dice: 1.3894  decode.d3.loss_cls: 0.2996  decode.d3.loss_mask: 1.4417  decode.d3.loss_dice: 1.3766  decode.d4.loss_cls: 0.2823  decode.d4.loss_mask: 1.4551  decode.d4.loss_dice: 1.3594  decode.d5.loss_cls: 0.3969  decode.d5.loss_mask: 1.4074  decode.d5.loss_dice: 1.3742  decode.d6.loss_cls: 0.3195  decode.d6.loss_mask: 1.4829  decode.d6.loss_dice: 1.3919  decode.d7.loss_cls: 0.3569  decode.d7.loss_mask: 1.4502  decode.d7.loss_dice: 1.3668  decode.d8.loss_cls: 0.3155  decode.d8.loss_mask: 1.4727  decode.d8.loss_dice: 1.4327  mix_decode.loss_cls: 0.1249  mix_decode.loss_mask: 0.4861  mix_decode.loss_dice: 0.6555  mix_decode.d0.loss_cls: 0.0944  mix_decode.d0.loss_mask: 0.4787  mix_decode.d0.loss_dice: 0.6961  mix_decode.d1.loss_cls: 0.0773  mix_decode.d1.loss_mask: 0.5095  mix_decode.d1.loss_dice: 0.6788  mix_decode.d2.loss_cls: 0.0978  mix_decode.d2.loss_mask: 0.4993  mix_decode.d2.loss_dice: 0.6500  mix_decode.d3.loss_cls: 0.1259  mix_decode.d3.loss_mask: 0.4768  mix_decode.d3.loss_dice: 0.6482  mix_decode.d4.loss_cls: 0.0968  mix_decode.d4.loss_mask: 0.4776  mix_decode.d4.loss_dice: 0.6586  mix_decode.d5.loss_cls: 0.1252  mix_decode.d5.loss_mask: 0.4760  mix_decode.d5.loss_dice: 0.6434  mix_decode.d6.loss_cls: 0.0934  mix_decode.d6.loss_mask: 0.4684  mix_decode.d6.loss_dice: 0.6484  mix_decode.d7.loss_cls: 0.1062  mix_decode.d7.loss_mask: 0.4698  mix_decode.d7.loss_dice: 0.6306  mix_decode.d8.loss_cls: 0.1163  mix_decode.d8.loss_mask: 0.4666  mix_decode.d8.loss_dice: 0.6467
2025/03/27 13:01:06 - mmengine - INFO - Iter(train) [ 8900/20000]  base_lr: 5.8869e-05 lr: 5.8869e-05  eta: 2:33:14  time: 1.0742  data_time: 0.0227  memory: 10800  loss: 34.7606  decode.loss_cls: 0.1643  decode.loss_mask: 1.0479  decode.loss_dice: 1.0986  decode.d0.loss_cls: 0.1719  decode.d0.loss_mask: 1.0744  decode.d0.loss_dice: 1.0942  decode.d1.loss_cls: 0.1553  decode.d1.loss_mask: 1.0495  decode.d1.loss_dice: 1.1114  decode.d2.loss_cls: 0.1673  decode.d2.loss_mask: 1.0440  decode.d2.loss_dice: 1.1064  decode.d3.loss_cls: 0.1780  decode.d3.loss_mask: 1.0752  decode.d3.loss_dice: 1.1014  decode.d4.loss_cls: 0.1746  decode.d4.loss_mask: 1.0471  decode.d4.loss_dice: 1.0921  decode.d5.loss_cls: 0.1893  decode.d5.loss_mask: 1.0596  decode.d5.loss_dice: 1.1040  decode.d6.loss_cls: 0.1480  decode.d6.loss_mask: 1.0617  decode.d6.loss_dice: 1.1026  decode.d7.loss_cls: 0.1164  decode.d7.loss_mask: 1.0555  decode.d7.loss_dice: 1.1170  decode.d8.loss_cls: 0.1152  decode.d8.loss_mask: 1.0585  decode.d8.loss_dice: 1.1190  mix_decode.loss_cls: 0.1047  mix_decode.loss_mask: 0.4644  mix_decode.loss_dice: 0.5993  mix_decode.d0.loss_cls: 0.1137  mix_decode.d0.loss_mask: 0.4497  mix_decode.d0.loss_dice: 0.6186  mix_decode.d1.loss_cls: 0.1038  mix_decode.d1.loss_mask: 0.4514  mix_decode.d1.loss_dice: 0.5926  mix_decode.d2.loss_cls: 0.1008  mix_decode.d2.loss_mask: 0.4376  mix_decode.d2.loss_dice: 0.5949  mix_decode.d3.loss_cls: 0.0726  mix_decode.d3.loss_mask: 0.4693  mix_decode.d3.loss_dice: 0.6039  mix_decode.d4.loss_cls: 0.1136  mix_decode.d4.loss_mask: 0.4311  mix_decode.d4.loss_dice: 0.5875  mix_decode.d5.loss_cls: 0.0809  mix_decode.d5.loss_mask: 0.4706  mix_decode.d5.loss_dice: 0.6108  mix_decode.d6.loss_cls: 0.1147  mix_decode.d6.loss_mask: 0.4433  mix_decode.d6.loss_dice: 0.6078  mix_decode.d7.loss_cls: 0.1162  mix_decode.d7.loss_mask: 0.4432  mix_decode.d7.loss_dice: 0.5937  mix_decode.d8.loss_cls: 0.0900  mix_decode.d8.loss_mask: 0.4589  mix_decode.d8.loss_dice: 0.6211
2025/03/27 13:01:59 - mmengine - INFO - Iter(train) [ 8950/20000]  base_lr: 5.8630e-05 lr: 5.8630e-05  eta: 2:32:48  time: 1.0707  data_time: 0.0217  memory: 10813  loss: 37.7727  decode.loss_cls: 0.1379  decode.loss_mask: 1.1076  decode.loss_dice: 1.3087  decode.d0.loss_cls: 0.2655  decode.d0.loss_mask: 1.0865  decode.d0.loss_dice: 1.3110  decode.d1.loss_cls: 0.2509  decode.d1.loss_mask: 1.0726  decode.d1.loss_dice: 1.2309  decode.d2.loss_cls: 0.2217  decode.d2.loss_mask: 1.0726  decode.d2.loss_dice: 1.2356  decode.d3.loss_cls: 0.2084  decode.d3.loss_mask: 1.0767  decode.d3.loss_dice: 1.2303  decode.d4.loss_cls: 0.1790  decode.d4.loss_mask: 1.0919  decode.d4.loss_dice: 1.2736  decode.d5.loss_cls: 0.2430  decode.d5.loss_mask: 1.0918  decode.d5.loss_dice: 1.2527  decode.d6.loss_cls: 0.1967  decode.d6.loss_mask: 1.1062  decode.d6.loss_dice: 1.2593  decode.d7.loss_cls: 0.2692  decode.d7.loss_mask: 1.0813  decode.d7.loss_dice: 1.2497  decode.d8.loss_cls: 0.1961  decode.d8.loss_mask: 1.1208  decode.d8.loss_dice: 1.2682  mix_decode.loss_cls: 0.1435  mix_decode.loss_mask: 0.3676  mix_decode.loss_dice: 0.6968  mix_decode.d0.loss_cls: 0.0573  mix_decode.d0.loss_mask: 0.3758  mix_decode.d0.loss_dice: 0.7765  mix_decode.d1.loss_cls: 0.1855  mix_decode.d1.loss_mask: 0.3605  mix_decode.d1.loss_dice: 0.6860  mix_decode.d2.loss_cls: 0.1680  mix_decode.d2.loss_mask: 0.3592  mix_decode.d2.loss_dice: 0.6833  mix_decode.d3.loss_cls: 0.1877  mix_decode.d3.loss_mask: 0.3612  mix_decode.d3.loss_dice: 0.6822  mix_decode.d4.loss_cls: 0.1396  mix_decode.d4.loss_mask: 0.3699  mix_decode.d4.loss_dice: 0.6989  mix_decode.d5.loss_cls: 0.1316  mix_decode.d5.loss_mask: 0.3718  mix_decode.d5.loss_dice: 0.6986  mix_decode.d6.loss_cls: 0.1310  mix_decode.d6.loss_mask: 0.3726  mix_decode.d6.loss_dice: 0.7016  mix_decode.d7.loss_cls: 0.1005  mix_decode.d7.loss_mask: 0.3694  mix_decode.d7.loss_dice: 0.7007  mix_decode.d8.loss_cls: 0.1287  mix_decode.d8.loss_mask: 0.3691  mix_decode.d8.loss_dice: 0.7012
2025/03/27 13:02:53 - mmengine - INFO - Exp name: pr2vi_20250327_105544
2025/03/27 13:02:53 - mmengine - INFO - Iter(train) [ 9000/20000]  base_lr: 5.8391e-05 lr: 5.8391e-05  eta: 2:32:21  time: 1.0696  data_time: 0.0215  memory: 10803  loss: 42.0284  decode.loss_cls: 0.2935  decode.loss_mask: 1.3738  decode.loss_dice: 1.3641  decode.d0.loss_cls: 0.2400  decode.d0.loss_mask: 1.4544  decode.d0.loss_dice: 1.4607  decode.d1.loss_cls: 0.3123  decode.d1.loss_mask: 1.3319  decode.d1.loss_dice: 1.3498  decode.d2.loss_cls: 0.2948  decode.d2.loss_mask: 1.3381  decode.d2.loss_dice: 1.3248  decode.d3.loss_cls: 0.3063  decode.d3.loss_mask: 1.3556  decode.d3.loss_dice: 1.3637  decode.d4.loss_cls: 0.2357  decode.d4.loss_mask: 1.4239  decode.d4.loss_dice: 1.3703  decode.d5.loss_cls: 0.2422  decode.d5.loss_mask: 1.4305  decode.d5.loss_dice: 1.3742  decode.d6.loss_cls: 0.2891  decode.d6.loss_mask: 1.3908  decode.d6.loss_dice: 1.3606  decode.d7.loss_cls: 0.2256  decode.d7.loss_mask: 1.3658  decode.d7.loss_dice: 1.3650  decode.d8.loss_cls: 0.1934  decode.d8.loss_mask: 1.4528  decode.d8.loss_dice: 1.3977  mix_decode.loss_cls: 0.1033  mix_decode.loss_mask: 0.4325  mix_decode.loss_dice: 0.6314  mix_decode.d0.loss_cls: 0.1083  mix_decode.d0.loss_mask: 0.4461  mix_decode.d0.loss_dice: 0.6675  mix_decode.d1.loss_cls: 0.1162  mix_decode.d1.loss_mask: 0.4137  mix_decode.d1.loss_dice: 0.6162  mix_decode.d2.loss_cls: 0.1206  mix_decode.d2.loss_mask: 0.4264  mix_decode.d2.loss_dice: 0.6103  mix_decode.d3.loss_cls: 0.1384  mix_decode.d3.loss_mask: 0.4418  mix_decode.d3.loss_dice: 0.6068  mix_decode.d4.loss_cls: 0.1140  mix_decode.d4.loss_mask: 0.4240  mix_decode.d4.loss_dice: 0.6122  mix_decode.d5.loss_cls: 0.1188  mix_decode.d5.loss_mask: 0.4300  mix_decode.d5.loss_dice: 0.6263  mix_decode.d6.loss_cls: 0.1175  mix_decode.d6.loss_mask: 0.4486  mix_decode.d6.loss_dice: 0.6206  mix_decode.d7.loss_cls: 0.1099  mix_decode.d7.loss_mask: 0.4262  mix_decode.d7.loss_dice: 0.6284  mix_decode.d8.loss_cls: 0.1175  mix_decode.d8.loss_mask: 0.4322  mix_decode.d8.loss_dice: 0.6411
2025/03/27 13:03:47 - mmengine - INFO - Iter(train) [ 9050/20000]  base_lr: 5.8152e-05 lr: 5.8152e-05  eta: 2:31:54  time: 1.0771  data_time: 0.0223  memory: 10812  loss: 38.7435  decode.loss_cls: 0.2263  decode.loss_mask: 1.2452  decode.loss_dice: 1.2461  decode.d0.loss_cls: 0.2886  decode.d0.loss_mask: 1.3075  decode.d0.loss_dice: 1.2986  decode.d1.loss_cls: 0.2469  decode.d1.loss_mask: 1.2857  decode.d1.loss_dice: 1.2804  decode.d2.loss_cls: 0.1533  decode.d2.loss_mask: 1.2861  decode.d2.loss_dice: 1.2711  decode.d3.loss_cls: 0.1800  decode.d3.loss_mask: 1.2528  decode.d3.loss_dice: 1.2824  decode.d4.loss_cls: 0.2147  decode.d4.loss_mask: 1.2407  decode.d4.loss_dice: 1.2441  decode.d5.loss_cls: 0.1773  decode.d5.loss_mask: 1.2691  decode.d5.loss_dice: 1.2686  decode.d6.loss_cls: 0.1729  decode.d6.loss_mask: 1.2810  decode.d6.loss_dice: 1.2619  decode.d7.loss_cls: 0.2357  decode.d7.loss_mask: 1.2665  decode.d7.loss_dice: 1.2371  decode.d8.loss_cls: 0.2398  decode.d8.loss_mask: 1.2502  decode.d8.loss_dice: 1.2444  mix_decode.loss_cls: 0.0816  mix_decode.loss_mask: 0.4174  mix_decode.loss_dice: 0.6167  mix_decode.d0.loss_cls: 0.1331  mix_decode.d0.loss_mask: 0.4286  mix_decode.d0.loss_dice: 0.6394  mix_decode.d1.loss_cls: 0.0908  mix_decode.d1.loss_mask: 0.4239  mix_decode.d1.loss_dice: 0.6233  mix_decode.d2.loss_cls: 0.0927  mix_decode.d2.loss_mask: 0.4231  mix_decode.d2.loss_dice: 0.5964  mix_decode.d3.loss_cls: 0.0841  mix_decode.d3.loss_mask: 0.4201  mix_decode.d3.loss_dice: 0.6012  mix_decode.d4.loss_cls: 0.0966  mix_decode.d4.loss_mask: 0.4096  mix_decode.d4.loss_dice: 0.6109  mix_decode.d5.loss_cls: 0.0957  mix_decode.d5.loss_mask: 0.4184  mix_decode.d5.loss_dice: 0.6190  mix_decode.d6.loss_cls: 0.0836  mix_decode.d6.loss_mask: 0.4195  mix_decode.d6.loss_dice: 0.6068  mix_decode.d7.loss_cls: 0.0913  mix_decode.d7.loss_mask: 0.4163  mix_decode.d7.loss_dice: 0.6147  mix_decode.d8.loss_cls: 0.0732  mix_decode.d8.loss_mask: 0.4357  mix_decode.d8.loss_dice: 0.6248
2025/03/27 13:04:41 - mmengine - INFO - Iter(train) [ 9100/20000]  base_lr: 5.7913e-05 lr: 5.7913e-05  eta: 2:31:28  time: 1.0753  data_time: 0.0217  memory: 10810  loss: 37.8998  decode.loss_cls: 0.1045  decode.loss_mask: 1.1879  decode.loss_dice: 1.2362  decode.d0.loss_cls: 0.3048  decode.d0.loss_mask: 1.1766  decode.d0.loss_dice: 1.2004  decode.d1.loss_cls: 0.1151  decode.d1.loss_mask: 1.1918  decode.d1.loss_dice: 1.2364  decode.d2.loss_cls: 0.1434  decode.d2.loss_mask: 1.2128  decode.d2.loss_dice: 1.2261  decode.d3.loss_cls: 0.1520  decode.d3.loss_mask: 1.2091  decode.d3.loss_dice: 1.2177  decode.d4.loss_cls: 0.1421  decode.d4.loss_mask: 1.1969  decode.d4.loss_dice: 1.2154  decode.d5.loss_cls: 0.1650  decode.d5.loss_mask: 1.1530  decode.d5.loss_dice: 1.1899  decode.d6.loss_cls: 0.1036  decode.d6.loss_mask: 1.2139  decode.d6.loss_dice: 1.2510  decode.d7.loss_cls: 0.1283  decode.d7.loss_mask: 1.2184  decode.d7.loss_dice: 1.2210  decode.d8.loss_cls: 0.1334  decode.d8.loss_mask: 1.2150  decode.d8.loss_dice: 1.2398  mix_decode.loss_cls: 0.1364  mix_decode.loss_mask: 0.4907  mix_decode.loss_dice: 0.6234  mix_decode.d0.loss_cls: 0.1648  mix_decode.d0.loss_mask: 0.4664  mix_decode.d0.loss_dice: 0.6624  mix_decode.d1.loss_cls: 0.1759  mix_decode.d1.loss_mask: 0.4478  mix_decode.d1.loss_dice: 0.5820  mix_decode.d2.loss_cls: 0.1764  mix_decode.d2.loss_mask: 0.4404  mix_decode.d2.loss_dice: 0.5633  mix_decode.d3.loss_cls: 0.1594  mix_decode.d3.loss_mask: 0.4589  mix_decode.d3.loss_dice: 0.5796  mix_decode.d4.loss_cls: 0.1381  mix_decode.d4.loss_mask: 0.4555  mix_decode.d4.loss_dice: 0.5944  mix_decode.d5.loss_cls: 0.0929  mix_decode.d5.loss_mask: 0.4927  mix_decode.d5.loss_dice: 0.6345  mix_decode.d6.loss_cls: 0.1142  mix_decode.d6.loss_mask: 0.4707  mix_decode.d6.loss_dice: 0.6149  mix_decode.d7.loss_cls: 0.1178  mix_decode.d7.loss_mask: 0.4955  mix_decode.d7.loss_dice: 0.6193  mix_decode.d8.loss_cls: 0.1486  mix_decode.d8.loss_mask: 0.4675  mix_decode.d8.loss_dice: 0.6142
2025/03/27 13:05:35 - mmengine - INFO - Iter(train) [ 9150/20000]  base_lr: 5.7674e-05 lr: 5.7674e-05  eta: 2:31:00  time: 1.0755  data_time: 0.0218  memory: 10811  loss: 40.5276  decode.loss_cls: 0.2151  decode.loss_mask: 1.1630  decode.loss_dice: 1.3366  decode.d0.loss_cls: 0.2498  decode.d0.loss_mask: 1.1839  decode.d0.loss_dice: 1.3548  decode.d1.loss_cls: 0.2788  decode.d1.loss_mask: 1.1464  decode.d1.loss_dice: 1.3226  decode.d2.loss_cls: 0.2120  decode.d2.loss_mask: 1.1711  decode.d2.loss_dice: 1.3320  decode.d3.loss_cls: 0.2823  decode.d3.loss_mask: 1.1272  decode.d3.loss_dice: 1.3230  decode.d4.loss_cls: 0.2054  decode.d4.loss_mask: 1.1383  decode.d4.loss_dice: 1.3463  decode.d5.loss_cls: 0.2554  decode.d5.loss_mask: 1.1480  decode.d5.loss_dice: 1.2951  decode.d6.loss_cls: 0.2975  decode.d6.loss_mask: 1.1142  decode.d6.loss_dice: 1.2818  decode.d7.loss_cls: 0.2332  decode.d7.loss_mask: 1.1383  decode.d7.loss_dice: 1.3397  decode.d8.loss_cls: 0.2740  decode.d8.loss_mask: 1.1948  decode.d8.loss_dice: 1.3494  mix_decode.loss_cls: 0.0684  mix_decode.loss_mask: 0.5698  mix_decode.loss_dice: 0.7157  mix_decode.d0.loss_cls: 0.1476  mix_decode.d0.loss_mask: 0.4966  mix_decode.d0.loss_dice: 0.6900  mix_decode.d1.loss_cls: 0.1847  mix_decode.d1.loss_mask: 0.4673  mix_decode.d1.loss_dice: 0.6355  mix_decode.d2.loss_cls: 0.1953  mix_decode.d2.loss_mask: 0.4562  mix_decode.d2.loss_dice: 0.6308  mix_decode.d3.loss_cls: 0.2019  mix_decode.d3.loss_mask: 0.4517  mix_decode.d3.loss_dice: 0.6322  mix_decode.d4.loss_cls: 0.1681  mix_decode.d4.loss_mask: 0.4868  mix_decode.d4.loss_dice: 0.6625  mix_decode.d5.loss_cls: 0.1605  mix_decode.d5.loss_mask: 0.4837  mix_decode.d5.loss_dice: 0.6626  mix_decode.d6.loss_cls: 0.1765  mix_decode.d6.loss_mask: 0.4966  mix_decode.d6.loss_dice: 0.6689  mix_decode.d7.loss_cls: 0.1534  mix_decode.d7.loss_mask: 0.5245  mix_decode.d7.loss_dice: 0.6917  mix_decode.d8.loss_cls: 0.0739  mix_decode.d8.loss_mask: 0.5594  mix_decode.d8.loss_dice: 0.7049
2025/03/27 13:06:29 - mmengine - INFO - Iter(train) [ 9200/20000]  base_lr: 5.7435e-05 lr: 5.7435e-05  eta: 2:30:33  time: 1.0741  data_time: 0.0220  memory: 10808  loss: 40.7530  decode.loss_cls: 0.2391  decode.loss_mask: 1.2595  decode.loss_dice: 1.5369  decode.d0.loss_cls: 0.1800  decode.d0.loss_mask: 1.2829  decode.d0.loss_dice: 1.6695  decode.d1.loss_cls: 0.1755  decode.d1.loss_mask: 1.2219  decode.d1.loss_dice: 1.5786  decode.d2.loss_cls: 0.2319  decode.d2.loss_mask: 1.2224  decode.d2.loss_dice: 1.5480  decode.d3.loss_cls: 0.2184  decode.d3.loss_mask: 1.2401  decode.d3.loss_dice: 1.5658  decode.d4.loss_cls: 0.2067  decode.d4.loss_mask: 1.2281  decode.d4.loss_dice: 1.5437  decode.d5.loss_cls: 0.2405  decode.d5.loss_mask: 1.2340  decode.d5.loss_dice: 1.5473  decode.d6.loss_cls: 0.2125  decode.d6.loss_mask: 1.2578  decode.d6.loss_dice: 1.5584  decode.d7.loss_cls: 0.1986  decode.d7.loss_mask: 1.2249  decode.d7.loss_dice: 1.5652  decode.d8.loss_cls: 0.2412  decode.d8.loss_mask: 1.2385  decode.d8.loss_dice: 1.5631  mix_decode.loss_cls: 0.0489  mix_decode.loss_mask: 0.4157  mix_decode.loss_dice: 0.5992  mix_decode.d0.loss_cls: 0.0978  mix_decode.d0.loss_mask: 0.3811  mix_decode.d0.loss_dice: 0.5866  mix_decode.d1.loss_cls: 0.0904  mix_decode.d1.loss_mask: 0.3810  mix_decode.d1.loss_dice: 0.5687  mix_decode.d2.loss_cls: 0.0762  mix_decode.d2.loss_mask: 0.3897  mix_decode.d2.loss_dice: 0.5618  mix_decode.d3.loss_cls: 0.0808  mix_decode.d3.loss_mask: 0.3882  mix_decode.d3.loss_dice: 0.5839  mix_decode.d4.loss_cls: 0.0890  mix_decode.d4.loss_mask: 0.3871  mix_decode.d4.loss_dice: 0.5652  mix_decode.d5.loss_cls: 0.0688  mix_decode.d5.loss_mask: 0.3953  mix_decode.d5.loss_dice: 0.5817  mix_decode.d6.loss_cls: 0.0602  mix_decode.d6.loss_mask: 0.3980  mix_decode.d6.loss_dice: 0.5803  mix_decode.d7.loss_cls: 0.0634  mix_decode.d7.loss_mask: 0.3974  mix_decode.d7.loss_dice: 0.5944  mix_decode.d8.loss_cls: 0.0825  mix_decode.d8.loss_mask: 0.4083  mix_decode.d8.loss_dice: 0.6000
2025/03/27 13:07:22 - mmengine - INFO - Iter(train) [ 9250/20000]  base_lr: 5.7195e-05 lr: 5.7195e-05  eta: 2:30:05  time: 1.0749  data_time: 0.0220  memory: 10807  loss: 36.0656  decode.loss_cls: 0.1494  decode.loss_mask: 1.2477  decode.loss_dice: 1.1578  decode.d0.loss_cls: 0.2989  decode.d0.loss_mask: 1.2733  decode.d0.loss_dice: 1.1575  decode.d1.loss_cls: 0.1888  decode.d1.loss_mask: 1.2794  decode.d1.loss_dice: 1.1273  decode.d2.loss_cls: 0.1936  decode.d2.loss_mask: 1.2707  decode.d2.loss_dice: 1.1338  decode.d3.loss_cls: 0.1651  decode.d3.loss_mask: 1.2672  decode.d3.loss_dice: 1.1554  decode.d4.loss_cls: 0.1293  decode.d4.loss_mask: 1.2969  decode.d4.loss_dice: 1.1602  decode.d5.loss_cls: 0.1958  decode.d5.loss_mask: 1.2602  decode.d5.loss_dice: 1.1215  decode.d6.loss_cls: 0.1319  decode.d6.loss_mask: 1.2863  decode.d6.loss_dice: 1.1695  decode.d7.loss_cls: 0.1106  decode.d7.loss_mask: 1.2841  decode.d7.loss_dice: 1.1675  decode.d8.loss_cls: 0.1168  decode.d8.loss_mask: 1.2689  decode.d8.loss_dice: 1.1811  mix_decode.loss_cls: 0.0790  mix_decode.loss_mask: 0.4304  mix_decode.loss_dice: 0.5080  mix_decode.d0.loss_cls: 0.1055  mix_decode.d0.loss_mask: 0.4197  mix_decode.d0.loss_dice: 0.5375  mix_decode.d1.loss_cls: 0.1055  mix_decode.d1.loss_mask: 0.4145  mix_decode.d1.loss_dice: 0.4894  mix_decode.d2.loss_cls: 0.0838  mix_decode.d2.loss_mask: 0.4122  mix_decode.d2.loss_dice: 0.4861  mix_decode.d3.loss_cls: 0.0674  mix_decode.d3.loss_mask: 0.4367  mix_decode.d3.loss_dice: 0.5068  mix_decode.d4.loss_cls: 0.0817  mix_decode.d4.loss_mask: 0.4193  mix_decode.d4.loss_dice: 0.4944  mix_decode.d5.loss_cls: 0.1193  mix_decode.d5.loss_mask: 0.4177  mix_decode.d5.loss_dice: 0.4859  mix_decode.d6.loss_cls: 0.0626  mix_decode.d6.loss_mask: 0.4291  mix_decode.d6.loss_dice: 0.5036  mix_decode.d7.loss_cls: 0.0624  mix_decode.d7.loss_mask: 0.4309  mix_decode.d7.loss_dice: 0.5124  mix_decode.d8.loss_cls: 0.0892  mix_decode.d8.loss_mask: 0.4152  mix_decode.d8.loss_dice: 0.5127
2025/03/27 13:08:17 - mmengine - INFO - Iter(train) [ 9300/20000]  base_lr: 5.6956e-05 lr: 5.6956e-05  eta: 2:29:37  time: 1.0732  data_time: 0.0219  memory: 10804  loss: 39.3568  decode.loss_cls: 0.2757  decode.loss_mask: 1.2029  decode.loss_dice: 1.2830  decode.d0.loss_cls: 0.2728  decode.d0.loss_mask: 1.2607  decode.d0.loss_dice: 1.3125  decode.d1.loss_cls: 0.2024  decode.d1.loss_mask: 1.2217  decode.d1.loss_dice: 1.2985  decode.d2.loss_cls: 0.2134  decode.d2.loss_mask: 1.2311  decode.d2.loss_dice: 1.2699  decode.d3.loss_cls: 0.1481  decode.d3.loss_mask: 1.2488  decode.d3.loss_dice: 1.2853  decode.d4.loss_cls: 0.1745  decode.d4.loss_mask: 1.2340  decode.d4.loss_dice: 1.2919  decode.d5.loss_cls: 0.1462  decode.d5.loss_mask: 1.2545  decode.d5.loss_dice: 1.2998  decode.d6.loss_cls: 0.1840  decode.d6.loss_mask: 1.2169  decode.d6.loss_dice: 1.2945  decode.d7.loss_cls: 0.2136  decode.d7.loss_mask: 1.2168  decode.d7.loss_dice: 1.2860  decode.d8.loss_cls: 0.1892  decode.d8.loss_mask: 1.2525  decode.d8.loss_dice: 1.3020  mix_decode.loss_cls: 0.1286  mix_decode.loss_mask: 0.4392  mix_decode.loss_dice: 0.6247  mix_decode.d0.loss_cls: 0.0980  mix_decode.d0.loss_mask: 0.4440  mix_decode.d0.loss_dice: 0.6845  mix_decode.d1.loss_cls: 0.1407  mix_decode.d1.loss_mask: 0.4410  mix_decode.d1.loss_dice: 0.6279  mix_decode.d2.loss_cls: 0.1188  mix_decode.d2.loss_mask: 0.4479  mix_decode.d2.loss_dice: 0.6203  mix_decode.d3.loss_cls: 0.1287  mix_decode.d3.loss_mask: 0.4494  mix_decode.d3.loss_dice: 0.6276  mix_decode.d4.loss_cls: 0.1454  mix_decode.d4.loss_mask: 0.4433  mix_decode.d4.loss_dice: 0.6295  mix_decode.d5.loss_cls: 0.1522  mix_decode.d5.loss_mask: 0.4429  mix_decode.d5.loss_dice: 0.6150  mix_decode.d6.loss_cls: 0.1610  mix_decode.d6.loss_mask: 0.4184  mix_decode.d6.loss_dice: 0.6156  mix_decode.d7.loss_cls: 0.1553  mix_decode.d7.loss_mask: 0.4409  mix_decode.d7.loss_dice: 0.6238  mix_decode.d8.loss_cls: 0.1294  mix_decode.d8.loss_mask: 0.4516  mix_decode.d8.loss_dice: 0.6280
2025/03/27 13:09:11 - mmengine - INFO - Iter(train) [ 9350/20000]  base_lr: 5.6716e-05 lr: 5.6716e-05  eta: 2:29:09  time: 1.0716  data_time: 0.0219  memory: 10807  loss: 41.3199  decode.loss_cls: 0.1763  decode.loss_mask: 1.3720  decode.loss_dice: 1.3956  decode.d0.loss_cls: 0.2782  decode.d0.loss_mask: 1.2646  decode.d0.loss_dice: 1.4043  decode.d1.loss_cls: 0.2356  decode.d1.loss_mask: 1.2740  decode.d1.loss_dice: 1.3468  decode.d2.loss_cls: 0.2446  decode.d2.loss_mask: 1.2824  decode.d2.loss_dice: 1.3467  decode.d3.loss_cls: 0.2277  decode.d3.loss_mask: 1.2963  decode.d3.loss_dice: 1.3346  decode.d4.loss_cls: 0.2307  decode.d4.loss_mask: 1.2897  decode.d4.loss_dice: 1.3470  decode.d5.loss_cls: 0.2236  decode.d5.loss_mask: 1.2985  decode.d5.loss_dice: 1.3471  decode.d6.loss_cls: 0.2669  decode.d6.loss_mask: 1.2825  decode.d6.loss_dice: 1.3511  decode.d7.loss_cls: 0.2117  decode.d7.loss_mask: 1.2908  decode.d7.loss_dice: 1.3981  decode.d8.loss_cls: 0.1981  decode.d8.loss_mask: 1.3490  decode.d8.loss_dice: 1.3972  mix_decode.loss_cls: 0.1102  mix_decode.loss_mask: 0.4541  mix_decode.loss_dice: 0.6616  mix_decode.d0.loss_cls: 0.0960  mix_decode.d0.loss_mask: 0.4446  mix_decode.d0.loss_dice: 0.6990  mix_decode.d1.loss_cls: 0.1321  mix_decode.d1.loss_mask: 0.4339  mix_decode.d1.loss_dice: 0.6552  mix_decode.d2.loss_cls: 0.1346  mix_decode.d2.loss_mask: 0.4450  mix_decode.d2.loss_dice: 0.6587  mix_decode.d3.loss_cls: 0.1329  mix_decode.d3.loss_mask: 0.4446  mix_decode.d3.loss_dice: 0.6572  mix_decode.d4.loss_cls: 0.1324  mix_decode.d4.loss_mask: 0.4394  mix_decode.d4.loss_dice: 0.6626  mix_decode.d5.loss_cls: 0.1110  mix_decode.d5.loss_mask: 0.4457  mix_decode.d5.loss_dice: 0.6579  mix_decode.d6.loss_cls: 0.1289  mix_decode.d6.loss_mask: 0.4366  mix_decode.d6.loss_dice: 0.6662  mix_decode.d7.loss_cls: 0.1350  mix_decode.d7.loss_mask: 0.4412  mix_decode.d7.loss_dice: 0.6651  mix_decode.d8.loss_cls: 0.1376  mix_decode.d8.loss_mask: 0.4613  mix_decode.d8.loss_dice: 0.6778
2025/03/27 13:10:05 - mmengine - INFO - Iter(train) [ 9400/20000]  base_lr: 5.6477e-05 lr: 5.6477e-05  eta: 2:28:41  time: 1.0754  data_time: 0.0221  memory: 10804  loss: 37.3304  decode.loss_cls: 0.2925  decode.loss_mask: 1.0812  decode.loss_dice: 1.1120  decode.d0.loss_cls: 0.3954  decode.d0.loss_mask: 1.0891  decode.d0.loss_dice: 1.1215  decode.d1.loss_cls: 0.4255  decode.d1.loss_mask: 1.0459  decode.d1.loss_dice: 1.0541  decode.d2.loss_cls: 0.2999  decode.d2.loss_mask: 1.0441  decode.d2.loss_dice: 1.0876  decode.d3.loss_cls: 0.3388  decode.d3.loss_mask: 1.0384  decode.d3.loss_dice: 1.0613  decode.d4.loss_cls: 0.3249  decode.d4.loss_mask: 1.0430  decode.d4.loss_dice: 1.0791  decode.d5.loss_cls: 0.3088  decode.d5.loss_mask: 1.0372  decode.d5.loss_dice: 1.0734  decode.d6.loss_cls: 0.3256  decode.d6.loss_mask: 1.0675  decode.d6.loss_dice: 1.0726  decode.d7.loss_cls: 0.3231  decode.d7.loss_mask: 1.0654  decode.d7.loss_dice: 1.0887  decode.d8.loss_cls: 0.3531  decode.d8.loss_mask: 1.1110  decode.d8.loss_dice: 1.1018  mix_decode.loss_cls: 0.1838  mix_decode.loss_mask: 0.4785  mix_decode.loss_dice: 0.6343  mix_decode.d0.loss_cls: 0.1331  mix_decode.d0.loss_mask: 0.4721  mix_decode.d0.loss_dice: 0.6719  mix_decode.d1.loss_cls: 0.1940  mix_decode.d1.loss_mask: 0.4548  mix_decode.d1.loss_dice: 0.6219  mix_decode.d2.loss_cls: 0.1697  mix_decode.d2.loss_mask: 0.4514  mix_decode.d2.loss_dice: 0.6154  mix_decode.d3.loss_cls: 0.1416  mix_decode.d3.loss_mask: 0.4861  mix_decode.d3.loss_dice: 0.6046  mix_decode.d4.loss_cls: 0.1496  mix_decode.d4.loss_mask: 0.4701  mix_decode.d4.loss_dice: 0.6145  mix_decode.d5.loss_cls: 0.1831  mix_decode.d5.loss_mask: 0.4544  mix_decode.d5.loss_dice: 0.6246  mix_decode.d6.loss_cls: 0.1268  mix_decode.d6.loss_mask: 0.4679  mix_decode.d6.loss_dice: 0.6256  mix_decode.d7.loss_cls: 0.1078  mix_decode.d7.loss_mask: 0.4815  mix_decode.d7.loss_dice: 0.6194  mix_decode.d8.loss_cls: 0.1382  mix_decode.d8.loss_mask: 0.4578  mix_decode.d8.loss_dice: 0.6336
2025/03/27 13:10:59 - mmengine - INFO - Iter(train) [ 9450/20000]  base_lr: 5.6237e-05 lr: 5.6237e-05  eta: 2:28:12  time: 1.0764  data_time: 0.0219  memory: 10810  loss: 35.9718  decode.loss_cls: 0.2256  decode.loss_mask: 1.0804  decode.loss_dice: 1.1218  decode.d0.loss_cls: 0.2807  decode.d0.loss_mask: 1.0540  decode.d0.loss_dice: 1.1304  decode.d1.loss_cls: 0.1736  decode.d1.loss_mask: 1.0710  decode.d1.loss_dice: 1.1210  decode.d2.loss_cls: 0.2107  decode.d2.loss_mask: 1.0674  decode.d2.loss_dice: 1.1071  decode.d3.loss_cls: 0.2120  decode.d3.loss_mask: 1.0751  decode.d3.loss_dice: 1.1282  decode.d4.loss_cls: 0.1482  decode.d4.loss_mask: 1.0923  decode.d4.loss_dice: 1.1332  decode.d5.loss_cls: 0.2767  decode.d5.loss_mask: 1.0559  decode.d5.loss_dice: 1.1000  decode.d6.loss_cls: 0.1744  decode.d6.loss_mask: 1.0754  decode.d6.loss_dice: 1.1424  decode.d7.loss_cls: 0.1376  decode.d7.loss_mask: 1.0882  decode.d7.loss_dice: 1.1495  decode.d8.loss_cls: 0.1932  decode.d8.loss_mask: 1.0764  decode.d8.loss_dice: 1.1252  mix_decode.loss_cls: 0.1205  mix_decode.loss_mask: 0.4670  mix_decode.loss_dice: 0.6165  mix_decode.d0.loss_cls: 0.1256  mix_decode.d0.loss_mask: 0.4433  mix_decode.d0.loss_dice: 0.6706  mix_decode.d1.loss_cls: 0.1441  mix_decode.d1.loss_mask: 0.4425  mix_decode.d1.loss_dice: 0.5979  mix_decode.d2.loss_cls: 0.1277  mix_decode.d2.loss_mask: 0.4653  mix_decode.d2.loss_dice: 0.6094  mix_decode.d3.loss_cls: 0.1058  mix_decode.d3.loss_mask: 0.4606  mix_decode.d3.loss_dice: 0.6098  mix_decode.d4.loss_cls: 0.1011  mix_decode.d4.loss_mask: 0.4654  mix_decode.d4.loss_dice: 0.6200  mix_decode.d5.loss_cls: 0.0850  mix_decode.d5.loss_mask: 0.4570  mix_decode.d5.loss_dice: 0.6320  mix_decode.d6.loss_cls: 0.0943  mix_decode.d6.loss_mask: 0.4602  mix_decode.d6.loss_dice: 0.6219  mix_decode.d7.loss_cls: 0.0833  mix_decode.d7.loss_mask: 0.4788  mix_decode.d7.loss_dice: 0.6286  mix_decode.d8.loss_cls: 0.0862  mix_decode.d8.loss_mask: 0.4873  mix_decode.d8.loss_dice: 0.6368
2025/03/27 13:11:53 - mmengine - INFO - Iter(train) [ 9500/20000]  base_lr: 5.5997e-05 lr: 5.5997e-05  eta: 2:27:43  time: 1.1237  data_time: 0.0274  memory: 10807  loss: 35.4342  decode.loss_cls: 0.2602  decode.loss_mask: 1.0089  decode.loss_dice: 1.1906  decode.d0.loss_cls: 0.1710  decode.d0.loss_mask: 1.0254  decode.d0.loss_dice: 1.3235  decode.d1.loss_cls: 0.2421  decode.d1.loss_mask: 1.0017  decode.d1.loss_dice: 1.2256  decode.d2.loss_cls: 0.2563  decode.d2.loss_mask: 1.0145  decode.d2.loss_dice: 1.2082  decode.d3.loss_cls: 0.2501  decode.d3.loss_mask: 0.9873  decode.d3.loss_dice: 1.1972  decode.d4.loss_cls: 0.2567  decode.d4.loss_mask: 0.9938  decode.d4.loss_dice: 1.2060  decode.d5.loss_cls: 0.2718  decode.d5.loss_mask: 1.0105  decode.d5.loss_dice: 1.1996  decode.d6.loss_cls: 0.3045  decode.d6.loss_mask: 0.9992  decode.d6.loss_dice: 1.2103  decode.d7.loss_cls: 0.1970  decode.d7.loss_mask: 1.0072  decode.d7.loss_dice: 1.2533  decode.d8.loss_cls: 0.3189  decode.d8.loss_mask: 0.9857  decode.d8.loss_dice: 1.2150  mix_decode.loss_cls: 0.1074  mix_decode.loss_mask: 0.4179  mix_decode.loss_dice: 0.5658  mix_decode.d0.loss_cls: 0.0819  mix_decode.d0.loss_mask: 0.4059  mix_decode.d0.loss_dice: 0.5945  mix_decode.d1.loss_cls: 0.0735  mix_decode.d1.loss_mask: 0.4129  mix_decode.d1.loss_dice: 0.5642  mix_decode.d2.loss_cls: 0.0906  mix_decode.d2.loss_mask: 0.4108  mix_decode.d2.loss_dice: 0.5603  mix_decode.d3.loss_cls: 0.0738  mix_decode.d3.loss_mask: 0.4128  mix_decode.d3.loss_dice: 0.5715  mix_decode.d4.loss_cls: 0.0797  mix_decode.d4.loss_mask: 0.4093  mix_decode.d4.loss_dice: 0.5817  mix_decode.d5.loss_cls: 0.0645  mix_decode.d5.loss_mask: 0.4047  mix_decode.d5.loss_dice: 0.5834  mix_decode.d6.loss_cls: 0.0637  mix_decode.d6.loss_mask: 0.4094  mix_decode.d6.loss_dice: 0.5832  mix_decode.d7.loss_cls: 0.0507  mix_decode.d7.loss_mask: 0.4162  mix_decode.d7.loss_dice: 0.5907  mix_decode.d8.loss_cls: 0.0915  mix_decode.d8.loss_mask: 0.3998  mix_decode.d8.loss_dice: 0.5696
2025/03/27 13:12:48 - mmengine - INFO - Iter(train) [ 9550/20000]  base_lr: 5.5757e-05 lr: 5.5757e-05  eta: 2:27:15  time: 1.0775  data_time: 0.0223  memory: 10801  loss: 43.7902  decode.loss_cls: 0.1848  decode.loss_mask: 1.4076  decode.loss_dice: 1.2901  decode.d0.loss_cls: 0.3424  decode.d0.loss_mask: 1.4812  decode.d0.loss_dice: 1.3376  decode.d1.loss_cls: 0.1725  decode.d1.loss_mask: 1.4274  decode.d1.loss_dice: 1.3165  decode.d2.loss_cls: 0.1922  decode.d2.loss_mask: 1.4892  decode.d2.loss_dice: 1.3979  decode.d3.loss_cls: 0.2304  decode.d3.loss_mask: 1.4454  decode.d3.loss_dice: 1.3760  decode.d4.loss_cls: 0.1819  decode.d4.loss_mask: 1.4371  decode.d4.loss_dice: 1.3428  decode.d5.loss_cls: 0.1842  decode.d5.loss_mask: 1.4494  decode.d5.loss_dice: 1.3327  decode.d6.loss_cls: 0.1846  decode.d6.loss_mask: 1.4411  decode.d6.loss_dice: 1.3433  decode.d7.loss_cls: 0.2054  decode.d7.loss_mask: 1.4298  decode.d7.loss_dice: 1.3345  decode.d8.loss_cls: 0.1973  decode.d8.loss_mask: 1.4206  decode.d8.loss_dice: 1.3071  mix_decode.loss_cls: 0.1253  mix_decode.loss_mask: 0.5508  mix_decode.loss_dice: 0.7151  mix_decode.d0.loss_cls: 0.1451  mix_decode.d0.loss_mask: 0.5370  mix_decode.d0.loss_dice: 0.7239  mix_decode.d1.loss_cls: 0.2015  mix_decode.d1.loss_mask: 0.5428  mix_decode.d1.loss_dice: 0.6783  mix_decode.d2.loss_cls: 0.1359  mix_decode.d2.loss_mask: 0.5407  mix_decode.d2.loss_dice: 0.6980  mix_decode.d3.loss_cls: 0.1176  mix_decode.d3.loss_mask: 0.5378  mix_decode.d3.loss_dice: 0.7007  mix_decode.d4.loss_cls: 0.1266  mix_decode.d4.loss_mask: 0.5440  mix_decode.d4.loss_dice: 0.7125  mix_decode.d5.loss_cls: 0.1299  mix_decode.d5.loss_mask: 0.5398  mix_decode.d5.loss_dice: 0.7072  mix_decode.d6.loss_cls: 0.1628  mix_decode.d6.loss_mask: 0.5416  mix_decode.d6.loss_dice: 0.7033  mix_decode.d7.loss_cls: 0.1482  mix_decode.d7.loss_mask: 0.5470  mix_decode.d7.loss_dice: 0.7151  mix_decode.d8.loss_cls: 0.1325  mix_decode.d8.loss_mask: 0.5400  mix_decode.d8.loss_dice: 0.7063
2025/03/27 13:13:42 - mmengine - INFO - Iter(train) [ 9600/20000]  base_lr: 5.5517e-05 lr: 5.5517e-05  eta: 2:26:45  time: 1.0753  data_time: 0.0220  memory: 10806  loss: 39.8095  decode.loss_cls: 0.2673  decode.loss_mask: 1.2573  decode.loss_dice: 1.2102  decode.d0.loss_cls: 0.4063  decode.d0.loss_mask: 1.2380  decode.d0.loss_dice: 1.1840  decode.d1.loss_cls: 0.3558  decode.d1.loss_mask: 1.2191  decode.d1.loss_dice: 1.1915  decode.d2.loss_cls: 0.3744  decode.d2.loss_mask: 1.2322  decode.d2.loss_dice: 1.1679  decode.d3.loss_cls: 0.3473  decode.d3.loss_mask: 1.2735  decode.d3.loss_dice: 1.1484  decode.d4.loss_cls: 0.3120  decode.d4.loss_mask: 1.2606  decode.d4.loss_dice: 1.1648  decode.d5.loss_cls: 0.3651  decode.d5.loss_mask: 1.2787  decode.d5.loss_dice: 1.1923  decode.d6.loss_cls: 0.2408  decode.d6.loss_mask: 1.3332  decode.d6.loss_dice: 1.2369  decode.d7.loss_cls: 0.3191  decode.d7.loss_mask: 1.2536  decode.d7.loss_dice: 1.1890  decode.d8.loss_cls: 0.2448  decode.d8.loss_mask: 1.3029  decode.d8.loss_dice: 1.2070  mix_decode.loss_cls: 0.1382  mix_decode.loss_mask: 0.4595  mix_decode.loss_dice: 0.6154  mix_decode.d0.loss_cls: 0.1239  mix_decode.d0.loss_mask: 0.4501  mix_decode.d0.loss_dice: 0.6640  mix_decode.d1.loss_cls: 0.1640  mix_decode.d1.loss_mask: 0.4367  mix_decode.d1.loss_dice: 0.6002  mix_decode.d2.loss_cls: 0.1693  mix_decode.d2.loss_mask: 0.4278  mix_decode.d2.loss_dice: 0.5998  mix_decode.d3.loss_cls: 0.1874  mix_decode.d3.loss_mask: 0.4257  mix_decode.d3.loss_dice: 0.5899  mix_decode.d4.loss_cls: 0.1110  mix_decode.d4.loss_mask: 0.4540  mix_decode.d4.loss_dice: 0.6230  mix_decode.d5.loss_cls: 0.1168  mix_decode.d5.loss_mask: 0.4610  mix_decode.d5.loss_dice: 0.6145  mix_decode.d6.loss_cls: 0.1145  mix_decode.d6.loss_mask: 0.4612  mix_decode.d6.loss_dice: 0.6139  mix_decode.d7.loss_cls: 0.1254  mix_decode.d7.loss_mask: 0.4636  mix_decode.d7.loss_dice: 0.6189  mix_decode.d8.loss_cls: 0.1432  mix_decode.d8.loss_mask: 0.4601  mix_decode.d8.loss_dice: 0.6019
2025/03/27 13:14:36 - mmengine - INFO - Iter(train) [ 9650/20000]  base_lr: 5.5276e-05 lr: 5.5276e-05  eta: 2:26:15  time: 1.0743  data_time: 0.0219  memory: 10811  loss: 42.9773  decode.loss_cls: 0.3421  decode.loss_mask: 1.2033  decode.loss_dice: 1.3844  decode.d0.loss_cls: 0.3135  decode.d0.loss_mask: 1.1215  decode.d0.loss_dice: 1.4212  decode.d1.loss_cls: 0.3260  decode.d1.loss_mask: 1.1128  decode.d1.loss_dice: 1.3516  decode.d2.loss_cls: 0.3779  decode.d2.loss_mask: 1.1288  decode.d2.loss_dice: 1.3358  decode.d3.loss_cls: 0.3283  decode.d3.loss_mask: 1.1153  decode.d3.loss_dice: 1.3273  decode.d4.loss_cls: 0.2758  decode.d4.loss_mask: 1.1564  decode.d4.loss_dice: 1.3328  decode.d5.loss_cls: 0.3543  decode.d5.loss_mask: 1.1222  decode.d5.loss_dice: 1.3031  decode.d6.loss_cls: 0.2988  decode.d6.loss_mask: 1.0973  decode.d6.loss_dice: 1.2844  decode.d7.loss_cls: 0.3838  decode.d7.loss_mask: 1.1020  decode.d7.loss_dice: 1.2836  decode.d8.loss_cls: 0.4102  decode.d8.loss_mask: 3.6944  decode.d8.loss_dice: 1.4718  mix_decode.loss_cls: 0.1417  mix_decode.loss_mask: 0.4477  mix_decode.loss_dice: 0.6403  mix_decode.d0.loss_cls: 0.1243  mix_decode.d0.loss_mask: 0.4111  mix_decode.d0.loss_dice: 0.6371  mix_decode.d1.loss_cls: 0.1094  mix_decode.d1.loss_mask: 0.4200  mix_decode.d1.loss_dice: 0.6256  mix_decode.d2.loss_cls: 0.1022  mix_decode.d2.loss_mask: 0.4130  mix_decode.d2.loss_dice: 0.6091  mix_decode.d3.loss_cls: 0.1102  mix_decode.d3.loss_mask: 0.4105  mix_decode.d3.loss_dice: 0.6109  mix_decode.d4.loss_cls: 0.1334  mix_decode.d4.loss_mask: 0.4112  mix_decode.d4.loss_dice: 0.6204  mix_decode.d5.loss_cls: 0.1086  mix_decode.d5.loss_mask: 0.4157  mix_decode.d5.loss_dice: 0.6208  mix_decode.d6.loss_cls: 0.1097  mix_decode.d6.loss_mask: 0.4247  mix_decode.d6.loss_dice: 0.6125  mix_decode.d7.loss_cls: 0.1257  mix_decode.d7.loss_mask: 0.4185  mix_decode.d7.loss_dice: 0.6129  mix_decode.d8.loss_cls: 0.1477  mix_decode.d8.loss_mask: 0.9820  mix_decode.d8.loss_dice: 0.6596
2025/03/27 13:15:30 - mmengine - INFO - Iter(train) [ 9700/20000]  base_lr: 5.5036e-05 lr: 5.5036e-05  eta: 2:25:45  time: 1.0741  data_time: 0.0219  memory: 10804  loss: 36.8337  decode.loss_cls: 0.2051  decode.loss_mask: 1.0924  decode.loss_dice: 1.1836  decode.d0.loss_cls: 0.1317  decode.d0.loss_mask: 1.1753  decode.d0.loss_dice: 1.2746  decode.d1.loss_cls: 0.1977  decode.d1.loss_mask: 1.1275  decode.d1.loss_dice: 1.2255  decode.d2.loss_cls: 0.1580  decode.d2.loss_mask: 1.1112  decode.d2.loss_dice: 1.2357  decode.d3.loss_cls: 0.1666  decode.d3.loss_mask: 1.0900  decode.d3.loss_dice: 1.2351  decode.d4.loss_cls: 0.1849  decode.d4.loss_mask: 1.0963  decode.d4.loss_dice: 1.2164  decode.d5.loss_cls: 0.2148  decode.d5.loss_mask: 1.1011  decode.d5.loss_dice: 1.2091  decode.d6.loss_cls: 0.2410  decode.d6.loss_mask: 1.0921  decode.d6.loss_dice: 1.1943  decode.d7.loss_cls: 0.2548  decode.d7.loss_mask: 1.1077  decode.d7.loss_dice: 1.2005  decode.d8.loss_cls: 0.2151  decode.d8.loss_mask: 1.1085  decode.d8.loss_dice: 1.1920  mix_decode.loss_cls: 0.1157  mix_decode.loss_mask: 0.4563  mix_decode.loss_dice: 0.5931  mix_decode.d0.loss_cls: 0.0809  mix_decode.d0.loss_mask: 0.4682  mix_decode.d0.loss_dice: 0.6290  mix_decode.d1.loss_cls: 0.1097  mix_decode.d1.loss_mask: 0.4417  mix_decode.d1.loss_dice: 0.5766  mix_decode.d2.loss_cls: 0.1052  mix_decode.d2.loss_mask: 0.4618  mix_decode.d2.loss_dice: 0.5752  mix_decode.d3.loss_cls: 0.0993  mix_decode.d3.loss_mask: 0.4575  mix_decode.d3.loss_dice: 0.6027  mix_decode.d4.loss_cls: 0.1495  mix_decode.d4.loss_mask: 0.4314  mix_decode.d4.loss_dice: 0.5695  mix_decode.d5.loss_cls: 0.1296  mix_decode.d5.loss_mask: 0.4536  mix_decode.d5.loss_dice: 0.5609  mix_decode.d6.loss_cls: 0.1007  mix_decode.d6.loss_mask: 0.4710  mix_decode.d6.loss_dice: 0.5935  mix_decode.d7.loss_cls: 0.1031  mix_decode.d7.loss_mask: 0.4608  mix_decode.d7.loss_dice: 0.6041  mix_decode.d8.loss_cls: 0.1408  mix_decode.d8.loss_mask: 0.4609  mix_decode.d8.loss_dice: 0.5930
2025/03/27 13:16:23 - mmengine - INFO - Iter(train) [ 9750/20000]  base_lr: 5.4795e-05 lr: 5.4795e-05  eta: 2:25:14  time: 1.0756  data_time: 0.0222  memory: 10806  loss: 39.2570  decode.loss_cls: 0.2289  decode.loss_mask: 1.1760  decode.loss_dice: 1.2736  decode.d0.loss_cls: 0.3361  decode.d0.loss_mask: 1.1314  decode.d0.loss_dice: 1.2896  decode.d1.loss_cls: 0.2999  decode.d1.loss_mask: 1.1314  decode.d1.loss_dice: 1.2531  decode.d2.loss_cls: 0.2968  decode.d2.loss_mask: 1.1611  decode.d2.loss_dice: 1.2256  decode.d3.loss_cls: 0.2801  decode.d3.loss_mask: 1.1673  decode.d3.loss_dice: 1.2101  decode.d4.loss_cls: 0.3319  decode.d4.loss_mask: 1.1352  decode.d4.loss_dice: 1.2400  decode.d5.loss_cls: 0.3181  decode.d5.loss_mask: 1.1213  decode.d5.loss_dice: 1.2316  decode.d6.loss_cls: 0.2695  decode.d6.loss_mask: 1.2076  decode.d6.loss_dice: 1.3019  decode.d7.loss_cls: 0.2792  decode.d7.loss_mask: 1.1778  decode.d7.loss_dice: 1.2716  decode.d8.loss_cls: 0.3429  decode.d8.loss_mask: 1.1227  decode.d8.loss_dice: 1.2491  mix_decode.loss_cls: 0.1271  mix_decode.loss_mask: 0.4476  mix_decode.loss_dice: 0.6422  mix_decode.d0.loss_cls: 0.1270  mix_decode.d0.loss_mask: 0.4512  mix_decode.d0.loss_dice: 0.6604  mix_decode.d1.loss_cls: 0.1683  mix_decode.d1.loss_mask: 0.4328  mix_decode.d1.loss_dice: 0.6164  mix_decode.d2.loss_cls: 0.1533  mix_decode.d2.loss_mask: 0.4506  mix_decode.d2.loss_dice: 0.6136  mix_decode.d3.loss_cls: 0.1678  mix_decode.d3.loss_mask: 0.4488  mix_decode.d3.loss_dice: 0.6043  mix_decode.d4.loss_cls: 0.1363  mix_decode.d4.loss_mask: 0.4446  mix_decode.d4.loss_dice: 0.6095  mix_decode.d5.loss_cls: 0.1667  mix_decode.d5.loss_mask: 0.4562  mix_decode.d5.loss_dice: 0.6182  mix_decode.d6.loss_cls: 0.1554  mix_decode.d6.loss_mask: 0.4305  mix_decode.d6.loss_dice: 0.6183  mix_decode.d7.loss_cls: 0.1590  mix_decode.d7.loss_mask: 0.4421  mix_decode.d7.loss_dice: 0.6261  mix_decode.d8.loss_cls: 0.1365  mix_decode.d8.loss_mask: 0.4467  mix_decode.d8.loss_dice: 0.6380
2025/03/27 13:17:17 - mmengine - INFO - Iter(train) [ 9800/20000]  base_lr: 5.4555e-05 lr: 5.4555e-05  eta: 2:24:43  time: 1.0740  data_time: 0.0221  memory: 10803  loss: 39.1749  decode.loss_cls: 0.1666  decode.loss_mask: 1.2732  decode.loss_dice: 1.4434  decode.d0.loss_cls: 0.2483  decode.d0.loss_mask: 1.2981  decode.d0.loss_dice: 1.4965  decode.d1.loss_cls: 0.3121  decode.d1.loss_mask: 1.1972  decode.d1.loss_dice: 1.4495  decode.d2.loss_cls: 0.2322  decode.d2.loss_mask: 1.2089  decode.d2.loss_dice: 1.4362  decode.d3.loss_cls: 0.2017  decode.d3.loss_mask: 1.2131  decode.d3.loss_dice: 1.4500  decode.d4.loss_cls: 0.0896  decode.d4.loss_mask: 1.2592  decode.d4.loss_dice: 1.4789  decode.d5.loss_cls: 0.2052  decode.d5.loss_mask: 1.2616  decode.d5.loss_dice: 1.4514  decode.d6.loss_cls: 0.1912  decode.d6.loss_mask: 1.2354  decode.d6.loss_dice: 1.4546  decode.d7.loss_cls: 0.1823  decode.d7.loss_mask: 1.2341  decode.d7.loss_dice: 1.4408  decode.d8.loss_cls: 0.1539  decode.d8.loss_mask: 1.2551  decode.d8.loss_dice: 1.4434  mix_decode.loss_cls: 0.0918  mix_decode.loss_mask: 0.4065  mix_decode.loss_dice: 0.5147  mix_decode.d0.loss_cls: 0.1290  mix_decode.d0.loss_mask: 0.4038  mix_decode.d0.loss_dice: 0.5363  mix_decode.d1.loss_cls: 0.1138  mix_decode.d1.loss_mask: 0.4008  mix_decode.d1.loss_dice: 0.5067  mix_decode.d2.loss_cls: 0.1278  mix_decode.d2.loss_mask: 0.3945  mix_decode.d2.loss_dice: 0.4943  mix_decode.d3.loss_cls: 0.0780  mix_decode.d3.loss_mask: 0.3932  mix_decode.d3.loss_dice: 0.5096  mix_decode.d4.loss_cls: 0.0552  mix_decode.d4.loss_mask: 0.3981  mix_decode.d4.loss_dice: 0.5410  mix_decode.d5.loss_cls: 0.0898  mix_decode.d5.loss_mask: 0.3995  mix_decode.d5.loss_dice: 0.5314  mix_decode.d6.loss_cls: 0.0963  mix_decode.d6.loss_mask: 0.4049  mix_decode.d6.loss_dice: 0.5240  mix_decode.d7.loss_cls: 0.1099  mix_decode.d7.loss_mask: 0.4076  mix_decode.d7.loss_dice: 0.5168  mix_decode.d8.loss_cls: 0.1142  mix_decode.d8.loss_mask: 0.4019  mix_decode.d8.loss_dice: 0.5201
2025/03/27 13:18:11 - mmengine - INFO - Iter(train) [ 9850/20000]  base_lr: 5.4314e-05 lr: 5.4314e-05  eta: 2:24:12  time: 1.0727  data_time: 0.0214  memory: 10806  loss: 34.0385  decode.loss_cls: 0.2349  decode.loss_mask: 0.8201  decode.loss_dice: 1.1425  decode.d0.loss_cls: 0.2636  decode.d0.loss_mask: 0.8419  decode.d0.loss_dice: 1.1679  decode.d1.loss_cls: 0.2139  decode.d1.loss_mask: 0.8274  decode.d1.loss_dice: 1.1681  decode.d2.loss_cls: 0.2353  decode.d2.loss_mask: 0.8445  decode.d2.loss_dice: 1.1355  decode.d3.loss_cls: 0.2071  decode.d3.loss_mask: 0.8371  decode.d3.loss_dice: 1.1393  decode.d4.loss_cls: 0.2195  decode.d4.loss_mask: 0.8366  decode.d4.loss_dice: 1.1408  decode.d5.loss_cls: 0.2287  decode.d5.loss_mask: 0.8205  decode.d5.loss_dice: 1.1370  decode.d6.loss_cls: 0.2629  decode.d6.loss_mask: 0.8481  decode.d6.loss_dice: 1.1263  decode.d7.loss_cls: 0.2639  decode.d7.loss_mask: 0.8313  decode.d7.loss_dice: 1.1265  decode.d8.loss_cls: 0.2599  decode.d8.loss_mask: 0.8319  decode.d8.loss_dice: 1.1385  mix_decode.loss_cls: 0.1377  mix_decode.loss_mask: 0.3780  mix_decode.loss_dice: 0.6738  mix_decode.d0.loss_cls: 0.1170  mix_decode.d0.loss_mask: 0.3657  mix_decode.d0.loss_dice: 0.6835  mix_decode.d1.loss_cls: 0.1845  mix_decode.d1.loss_mask: 0.3706  mix_decode.d1.loss_dice: 0.6520  mix_decode.d2.loss_cls: 0.2017  mix_decode.d2.loss_mask: 0.3760  mix_decode.d2.loss_dice: 0.6422  mix_decode.d3.loss_cls: 0.1763  mix_decode.d3.loss_mask: 0.3715  mix_decode.d3.loss_dice: 0.6394  mix_decode.d4.loss_cls: 0.1769  mix_decode.d4.loss_mask: 0.3795  mix_decode.d4.loss_dice: 0.6553  mix_decode.d5.loss_cls: 0.1255  mix_decode.d5.loss_mask: 0.3801  mix_decode.d5.loss_dice: 0.6821  mix_decode.d6.loss_cls: 0.1388  mix_decode.d6.loss_mask: 0.3752  mix_decode.d6.loss_dice: 0.6547  mix_decode.d7.loss_cls: 0.1158  mix_decode.d7.loss_mask: 0.3720  mix_decode.d7.loss_dice: 0.6687  mix_decode.d8.loss_cls: 0.1293  mix_decode.d8.loss_mask: 0.3856  mix_decode.d8.loss_dice: 0.6775
2025/03/27 13:19:04 - mmengine - INFO - Iter(train) [ 9900/20000]  base_lr: 5.4073e-05 lr: 5.4073e-05  eta: 2:23:41  time: 1.0732  data_time: 0.0218  memory: 10805  loss: 40.9832  decode.loss_cls: 0.3084  decode.loss_mask: 1.2561  decode.loss_dice: 1.3558  decode.d0.loss_cls: 0.4182  decode.d0.loss_mask: 1.2462  decode.d0.loss_dice: 1.3971  decode.d1.loss_cls: 0.3540  decode.d1.loss_mask: 1.2207  decode.d1.loss_dice: 1.3528  decode.d2.loss_cls: 0.3650  decode.d2.loss_mask: 1.2577  decode.d2.loss_dice: 1.3659  decode.d3.loss_cls: 0.3318  decode.d3.loss_mask: 1.2302  decode.d3.loss_dice: 1.3465  decode.d4.loss_cls: 0.3273  decode.d4.loss_mask: 1.2403  decode.d4.loss_dice: 1.3315  decode.d5.loss_cls: 0.3451  decode.d5.loss_mask: 1.2490  decode.d5.loss_dice: 1.3741  decode.d6.loss_cls: 0.3053  decode.d6.loss_mask: 1.2515  decode.d6.loss_dice: 1.3631  decode.d7.loss_cls: 0.3812  decode.d7.loss_mask: 1.2425  decode.d7.loss_dice: 1.3485  decode.d8.loss_cls: 0.3059  decode.d8.loss_mask: 1.2351  decode.d8.loss_dice: 1.3633  mix_decode.loss_cls: 0.1672  mix_decode.loss_mask: 0.4486  mix_decode.loss_dice: 0.5569  mix_decode.d0.loss_cls: 0.1342  mix_decode.d0.loss_mask: 0.4488  mix_decode.d0.loss_dice: 0.5704  mix_decode.d1.loss_cls: 0.1481  mix_decode.d1.loss_mask: 0.4546  mix_decode.d1.loss_dice: 0.5450  mix_decode.d2.loss_cls: 0.1719  mix_decode.d2.loss_mask: 0.4642  mix_decode.d2.loss_dice: 0.5373  mix_decode.d3.loss_cls: 0.1629  mix_decode.d3.loss_mask: 0.4495  mix_decode.d3.loss_dice: 0.5445  mix_decode.d4.loss_cls: 0.1496  mix_decode.d4.loss_mask: 0.4620  mix_decode.d4.loss_dice: 0.5456  mix_decode.d5.loss_cls: 0.1106  mix_decode.d5.loss_mask: 0.4512  mix_decode.d5.loss_dice: 0.5640  mix_decode.d6.loss_cls: 0.1247  mix_decode.d6.loss_mask: 0.4517  mix_decode.d6.loss_dice: 0.5645  mix_decode.d7.loss_cls: 0.1434  mix_decode.d7.loss_mask: 0.4629  mix_decode.d7.loss_dice: 0.5550  mix_decode.d8.loss_cls: 0.1139  mix_decode.d8.loss_mask: 0.4497  mix_decode.d8.loss_dice: 0.5603
2025/03/27 13:19:58 - mmengine - INFO - Iter(train) [ 9950/20000]  base_lr: 5.3832e-05 lr: 5.3832e-05  eta: 2:23:09  time: 1.0727  data_time: 0.0219  memory: 10809  loss: 43.2306  decode.loss_cls: 0.2286  decode.loss_mask: 1.3253  decode.loss_dice: 1.4260  decode.d0.loss_cls: 0.3599  decode.d0.loss_mask: 1.3584  decode.d0.loss_dice: 1.4319  decode.d1.loss_cls: 0.2853  decode.d1.loss_mask: 1.3107  decode.d1.loss_dice: 1.4457  decode.d2.loss_cls: 0.2795  decode.d2.loss_mask: 1.3151  decode.d2.loss_dice: 1.4172  decode.d3.loss_cls: 0.3166  decode.d3.loss_mask: 1.3052  decode.d3.loss_dice: 1.4029  decode.d4.loss_cls: 0.2611  decode.d4.loss_mask: 1.3218  decode.d4.loss_dice: 1.3730  decode.d5.loss_cls: 0.1691  decode.d5.loss_mask: 1.3548  decode.d5.loss_dice: 1.4094  decode.d6.loss_cls: 0.2514  decode.d6.loss_mask: 1.3035  decode.d6.loss_dice: 1.3796  decode.d7.loss_cls: 0.2678  decode.d7.loss_mask: 1.3081  decode.d7.loss_dice: 1.3664  decode.d8.loss_cls: 0.2528  decode.d8.loss_mask: 1.3417  decode.d8.loss_dice: 1.3886  mix_decode.loss_cls: 0.1263  mix_decode.loss_mask: 0.5285  mix_decode.loss_dice: 0.6761  mix_decode.d0.loss_cls: 0.1196  mix_decode.d0.loss_mask: 0.5264  mix_decode.d0.loss_dice: 0.7061  mix_decode.d1.loss_cls: 0.1527  mix_decode.d1.loss_mask: 0.4993  mix_decode.d1.loss_dice: 0.6569  mix_decode.d2.loss_cls: 0.1102  mix_decode.d2.loss_mask: 0.5164  mix_decode.d2.loss_dice: 0.6846  mix_decode.d3.loss_cls: 0.1435  mix_decode.d3.loss_mask: 0.5158  mix_decode.d3.loss_dice: 0.6561  mix_decode.d4.loss_cls: 0.1396  mix_decode.d4.loss_mask: 0.5207  mix_decode.d4.loss_dice: 0.6704  mix_decode.d5.loss_cls: 0.1238  mix_decode.d5.loss_mask: 0.5323  mix_decode.d5.loss_dice: 0.6801  mix_decode.d6.loss_cls: 0.1178  mix_decode.d6.loss_mask: 0.5227  mix_decode.d6.loss_dice: 0.6855  mix_decode.d7.loss_cls: 0.1320  mix_decode.d7.loss_mask: 0.5154  mix_decode.d7.loss_dice: 0.6788  mix_decode.d8.loss_cls: 0.1551  mix_decode.d8.loss_mask: 0.5089  mix_decode.d8.loss_dice: 0.6717
2025/03/27 13:20:52 - mmengine - INFO - Exp name: pr2vi_20250327_105544
2025/03/27 13:20:52 - mmengine - INFO - Iter(train) [10000/20000]  base_lr: 5.3591e-05 lr: 5.3591e-05  eta: 2:22:38  time: 1.0728  data_time: 0.0218  memory: 10814  loss: 38.6169  decode.loss_cls: 0.2053  decode.loss_mask: 1.1061  decode.loss_dice: 1.4224  decode.d0.loss_cls: 0.2027  decode.d0.loss_mask: 1.1117  decode.d0.loss_dice: 1.4407  decode.d1.loss_cls: 0.2900  decode.d1.loss_mask: 1.0470  decode.d1.loss_dice: 1.3377  decode.d2.loss_cls: 0.2020  decode.d2.loss_mask: 1.0583  decode.d2.loss_dice: 1.3545  decode.d3.loss_cls: 0.2517  decode.d3.loss_mask: 1.0532  decode.d3.loss_dice: 1.3362  decode.d4.loss_cls: 0.2372  decode.d4.loss_mask: 1.0550  decode.d4.loss_dice: 1.3638  decode.d5.loss_cls: 0.2379  decode.d5.loss_mask: 1.0603  decode.d5.loss_dice: 1.3677  decode.d6.loss_cls: 0.2764  decode.d6.loss_mask: 1.0615  decode.d6.loss_dice: 1.3814  decode.d7.loss_cls: 0.2783  decode.d7.loss_mask: 1.0735  decode.d7.loss_dice: 1.3694  decode.d8.loss_cls: 0.2938  decode.d8.loss_mask: 1.0625  decode.d8.loss_dice: 1.3777  mix_decode.loss_cls: 0.1283  mix_decode.loss_mask: 0.3833  mix_decode.loss_dice: 0.6713  mix_decode.d0.loss_cls: 0.0614  mix_decode.d0.loss_mask: 0.3844  mix_decode.d0.loss_dice: 0.7065  mix_decode.d1.loss_cls: 0.1326  mix_decode.d1.loss_mask: 0.3803  mix_decode.d1.loss_dice: 0.6687  mix_decode.d2.loss_cls: 0.0785  mix_decode.d2.loss_mask: 0.3822  mix_decode.d2.loss_dice: 0.6790  mix_decode.d3.loss_cls: 0.1105  mix_decode.d3.loss_mask: 0.3809  mix_decode.d3.loss_dice: 0.6654  mix_decode.d4.loss_cls: 0.0902  mix_decode.d4.loss_mask: 0.3787  mix_decode.d4.loss_dice: 0.6754  mix_decode.d5.loss_cls: 0.1333  mix_decode.d5.loss_mask: 0.3778  mix_decode.d5.loss_dice: 0.6712  mix_decode.d6.loss_cls: 0.1451  mix_decode.d6.loss_mask: 0.3763  mix_decode.d6.loss_dice: 0.6482  mix_decode.d7.loss_cls: 0.1581  mix_decode.d7.loss_mask: 0.3811  mix_decode.d7.loss_dice: 0.6572  mix_decode.d8.loss_cls: 0.1420  mix_decode.d8.loss_mask: 0.3816  mix_decode.d8.loss_dice: 0.6714
2025/03/27 13:20:52 - mmengine - INFO - Saving checkpoint at 10000 iterations
2025/03/27 13:20:57 - mmengine - INFO - Iter(val) [ 50/398]    eta: 0:00:29  time: 0.0849  data_time: 0.0017  memory: 3120  
2025/03/27 13:21:02 - mmengine - INFO - Iter(val) [100/398]    eta: 0:00:25  time: 0.0851  data_time: 0.0017  memory: 3120  
2025/03/27 13:21:06 - mmengine - INFO - Iter(val) [150/398]    eta: 0:00:21  time: 0.0848  data_time: 0.0017  memory: 3120  
2025/03/27 13:21:10 - mmengine - INFO - Iter(val) [200/398]    eta: 0:00:16  time: 0.0849  data_time: 0.0017  memory: 3120  
2025/03/27 13:21:14 - mmengine - INFO - Iter(val) [250/398]    eta: 0:00:12  time: 0.0850  data_time: 0.0020  memory: 3120  
2025/03/27 13:21:19 - mmengine - INFO - Iter(val) [300/398]    eta: 0:00:08  time: 0.0850  data_time: 0.0017  memory: 3120  
2025/03/27 13:21:23 - mmengine - INFO - Iter(val) [350/398]    eta: 0:00:04  time: 0.0850  data_time: 0.0017  memory: 3120  
2025/03/27 13:21:27 - mmengine - INFO - per class results:
2025/03/27 13:21:27 - mmengine - INFO - 
+--------------------+-------+-------+
|       Class        |  IoU  |  Acc  |
+--------------------+-------+-------+
| impervious_surface | 79.21 | 87.93 |
|      building      | 88.68 | 96.43 |
|   low_vegetation   | 65.61 |  76.8 |
|        tree        | 74.78 | 82.34 |
|        car         | 59.42 | 77.13 |
|      clutter       | 30.13 | 94.43 |
+--------------------+-------+-------+
2025/03/27 13:21:27 - mmengine - INFO - Iter(val) [398/398]    aAcc: 86.3000  mIoU: 66.3000  mAcc: 85.8400  data_time: 0.0018  time: 0.0852
2025/03/27 13:22:21 - mmengine - INFO - Iter(train) [10050/20000]  base_lr: 5.3350e-05 lr: 5.3350e-05  eta: 2:22:06  time: 1.0901  data_time: 0.0218  memory: 10809  loss: 32.2802  decode.loss_cls: 0.1239  decode.loss_mask: 0.9444  decode.loss_dice: 1.1267  decode.d0.loss_cls: 0.2478  decode.d0.loss_mask: 0.8852  decode.d0.loss_dice: 1.1418  decode.d1.loss_cls: 0.1080  decode.d1.loss_mask: 0.9671  decode.d1.loss_dice: 1.1350  decode.d2.loss_cls: 0.1067  decode.d2.loss_mask: 0.9552  decode.d2.loss_dice: 1.1418  decode.d3.loss_cls: 0.1089  decode.d3.loss_mask: 0.9581  decode.d3.loss_dice: 1.1238  decode.d4.loss_cls: 0.1135  decode.d4.loss_mask: 0.9602  decode.d4.loss_dice: 1.1411  decode.d5.loss_cls: 0.1167  decode.d5.loss_mask: 0.9560  decode.d5.loss_dice: 1.1496  decode.d6.loss_cls: 0.1990  decode.d6.loss_mask: 0.8684  decode.d6.loss_dice: 1.1279  decode.d7.loss_cls: 0.1995  decode.d7.loss_mask: 0.8787  decode.d7.loss_dice: 1.1297  decode.d8.loss_cls: 0.1157  decode.d8.loss_mask: 0.9495  decode.d8.loss_dice: 1.1384  mix_decode.loss_cls: 0.1288  mix_decode.loss_mask: 0.3123  mix_decode.loss_dice: 0.5700  mix_decode.d0.loss_cls: 0.1162  mix_decode.d0.loss_mask: 0.3072  mix_decode.d0.loss_dice: 0.6092  mix_decode.d1.loss_cls: 0.1605  mix_decode.d1.loss_mask: 0.3050  mix_decode.d1.loss_dice: 0.5378  mix_decode.d2.loss_cls: 0.1740  mix_decode.d2.loss_mask: 0.3082  mix_decode.d2.loss_dice: 0.5424  mix_decode.d3.loss_cls: 0.1435  mix_decode.d3.loss_mask: 0.3098  mix_decode.d3.loss_dice: 0.5453  mix_decode.d4.loss_cls: 0.1272  mix_decode.d4.loss_mask: 0.3164  mix_decode.d4.loss_dice: 0.5711  mix_decode.d5.loss_cls: 0.1414  mix_decode.d5.loss_mask: 0.3113  mix_decode.d5.loss_dice: 0.5632  mix_decode.d6.loss_cls: 0.1460  mix_decode.d6.loss_mask: 0.3120  mix_decode.d6.loss_dice: 0.5610  mix_decode.d7.loss_cls: 0.1463  mix_decode.d7.loss_mask: 0.3141  mix_decode.d7.loss_dice: 0.5430  mix_decode.d8.loss_cls: 0.1384  mix_decode.d8.loss_mask: 0.3335  mix_decode.d8.loss_dice: 0.5670
2025/03/27 13:23:15 - mmengine - INFO - Iter(train) [10100/20000]  base_lr: 5.3109e-05 lr: 5.3109e-05  eta: 2:21:34  time: 1.0781  data_time: 0.0221  memory: 10803  loss: 31.4607  decode.loss_cls: 0.2124  decode.loss_mask: 0.8918  decode.loss_dice: 1.0736  decode.d0.loss_cls: 0.3271  decode.d0.loss_mask: 0.8522  decode.d0.loss_dice: 1.1252  decode.d1.loss_cls: 0.2957  decode.d1.loss_mask: 0.8701  decode.d1.loss_dice: 1.0516  decode.d2.loss_cls: 0.2496  decode.d2.loss_mask: 0.8758  decode.d2.loss_dice: 1.0773  decode.d3.loss_cls: 0.2266  decode.d3.loss_mask: 0.8838  decode.d3.loss_dice: 1.0619  decode.d4.loss_cls: 0.3072  decode.d4.loss_mask: 0.8671  decode.d4.loss_dice: 1.0550  decode.d5.loss_cls: 0.2545  decode.d5.loss_mask: 0.8645  decode.d5.loss_dice: 1.0940  decode.d6.loss_cls: 0.2259  decode.d6.loss_mask: 0.8771  decode.d6.loss_dice: 1.0574  decode.d7.loss_cls: 0.2190  decode.d7.loss_mask: 0.8745  decode.d7.loss_dice: 1.0854  decode.d8.loss_cls: 0.2482  decode.d8.loss_mask: 0.8698  decode.d8.loss_dice: 1.0559  mix_decode.loss_cls: 0.0870  mix_decode.loss_mask: 0.3450  mix_decode.loss_dice: 0.5103  mix_decode.d0.loss_cls: 0.1238  mix_decode.d0.loss_mask: 0.3382  mix_decode.d0.loss_dice: 0.5404  mix_decode.d1.loss_cls: 0.1010  mix_decode.d1.loss_mask: 0.3442  mix_decode.d1.loss_dice: 0.5229  mix_decode.d2.loss_cls: 0.1098  mix_decode.d2.loss_mask: 0.3393  mix_decode.d2.loss_dice: 0.5097  mix_decode.d3.loss_cls: 0.0685  mix_decode.d3.loss_mask: 0.3440  mix_decode.d3.loss_dice: 0.5097  mix_decode.d4.loss_cls: 0.0750  mix_decode.d4.loss_mask: 0.3446  mix_decode.d4.loss_dice: 0.5057  mix_decode.d5.loss_cls: 0.0696  mix_decode.d5.loss_mask: 0.3401  mix_decode.d5.loss_dice: 0.5178  mix_decode.d6.loss_cls: 0.0817  mix_decode.d6.loss_mask: 0.3383  mix_decode.d6.loss_dice: 0.4973  mix_decode.d7.loss_cls: 0.0755  mix_decode.d7.loss_mask: 0.3406  mix_decode.d7.loss_dice: 0.5084  mix_decode.d8.loss_cls: 0.0804  mix_decode.d8.loss_mask: 0.3422  mix_decode.d8.loss_dice: 0.5198
2025/03/27 13:24:09 - mmengine - INFO - Iter(train) [10150/20000]  base_lr: 5.2867e-05 lr: 5.2867e-05  eta: 2:21:02  time: 1.0787  data_time: 0.0228  memory: 10807  loss: 39.2769  decode.loss_cls: 0.2171  decode.loss_mask: 1.2542  decode.loss_dice: 1.2063  decode.d0.loss_cls: 0.1603  decode.d0.loss_mask: 1.3631  decode.d0.loss_dice: 1.2887  decode.d1.loss_cls: 0.1593  decode.d1.loss_mask: 1.3215  decode.d1.loss_dice: 1.2358  decode.d2.loss_cls: 0.1638  decode.d2.loss_mask: 1.2995  decode.d2.loss_dice: 1.2073  decode.d3.loss_cls: 0.1740  decode.d3.loss_mask: 1.2523  decode.d3.loss_dice: 1.2145  decode.d4.loss_cls: 0.1413  decode.d4.loss_mask: 1.2949  decode.d4.loss_dice: 1.2381  decode.d5.loss_cls: 0.1972  decode.d5.loss_mask: 1.3110  decode.d5.loss_dice: 1.2107  decode.d6.loss_cls: 0.2028  decode.d6.loss_mask: 1.2954  decode.d6.loss_dice: 1.1821  decode.d7.loss_cls: 0.1748  decode.d7.loss_mask: 1.3079  decode.d7.loss_dice: 1.2172  decode.d8.loss_cls: 0.1631  decode.d8.loss_mask: 1.3103  decode.d8.loss_dice: 1.2150  mix_decode.loss_cls: 0.2141  mix_decode.loss_mask: 0.3943  mix_decode.loss_dice: 0.6188  mix_decode.d0.loss_cls: 0.1545  mix_decode.d0.loss_mask: 0.4123  mix_decode.d0.loss_dice: 0.6933  mix_decode.d1.loss_cls: 0.2492  mix_decode.d1.loss_mask: 0.3901  mix_decode.d1.loss_dice: 0.6008  mix_decode.d2.loss_cls: 0.2026  mix_decode.d2.loss_mask: 0.4015  mix_decode.d2.loss_dice: 0.6081  mix_decode.d3.loss_cls: 0.1639  mix_decode.d3.loss_mask: 0.3996  mix_decode.d3.loss_dice: 0.6177  mix_decode.d4.loss_cls: 0.2067  mix_decode.d4.loss_mask: 0.3947  mix_decode.d4.loss_dice: 0.6064  mix_decode.d5.loss_cls: 0.2445  mix_decode.d5.loss_mask: 0.4003  mix_decode.d5.loss_dice: 0.5989  mix_decode.d6.loss_cls: 0.2293  mix_decode.d6.loss_mask: 0.4007  mix_decode.d6.loss_dice: 0.6161  mix_decode.d7.loss_cls: 0.1480  mix_decode.d7.loss_mask: 0.4105  mix_decode.d7.loss_dice: 0.6505  mix_decode.d8.loss_cls: 0.2591  mix_decode.d8.loss_mask: 0.3957  mix_decode.d8.loss_dice: 0.6155
2025/03/27 13:25:03 - mmengine - INFO - Iter(train) [10200/20000]  base_lr: 5.2625e-05 lr: 5.2625e-05  eta: 2:20:29  time: 1.0823  data_time: 0.0235  memory: 10805  loss: 41.3106  decode.loss_cls: 0.1793  decode.loss_mask: 1.3181  decode.loss_dice: 1.3131  decode.d0.loss_cls: 0.2465  decode.d0.loss_mask: 1.3067  decode.d0.loss_dice: 1.2797  decode.d1.loss_cls: 0.2910  decode.d1.loss_mask: 1.2511  decode.d1.loss_dice: 1.2635  decode.d2.loss_cls: 0.2014  decode.d2.loss_mask: 1.2554  decode.d2.loss_dice: 1.2800  decode.d3.loss_cls: 0.2208  decode.d3.loss_mask: 1.2759  decode.d3.loss_dice: 1.2859  decode.d4.loss_cls: 0.2123  decode.d4.loss_mask: 1.2980  decode.d4.loss_dice: 1.2900  decode.d5.loss_cls: 0.1890  decode.d5.loss_mask: 1.3136  decode.d5.loss_dice: 1.3215  decode.d6.loss_cls: 0.2011  decode.d6.loss_mask: 1.2770  decode.d6.loss_dice: 1.3090  decode.d7.loss_cls: 0.1736  decode.d7.loss_mask: 1.2949  decode.d7.loss_dice: 1.3151  decode.d8.loss_cls: 0.2068  decode.d8.loss_mask: 1.2923  decode.d8.loss_dice: 1.3078  mix_decode.loss_cls: 0.1687  mix_decode.loss_mask: 0.4998  mix_decode.loss_dice: 0.6695  mix_decode.d0.loss_cls: 0.1316  mix_decode.d0.loss_mask: 0.5019  mix_decode.d0.loss_dice: 0.7038  mix_decode.d1.loss_cls: 0.1590  mix_decode.d1.loss_mask: 0.5074  mix_decode.d1.loss_dice: 0.6679  mix_decode.d2.loss_cls: 0.1548  mix_decode.d2.loss_mask: 0.4955  mix_decode.d2.loss_dice: 0.6758  mix_decode.d3.loss_cls: 0.1468  mix_decode.d3.loss_mask: 0.5128  mix_decode.d3.loss_dice: 0.6818  mix_decode.d4.loss_cls: 0.1481  mix_decode.d4.loss_mask: 0.5284  mix_decode.d4.loss_dice: 0.6671  mix_decode.d5.loss_cls: 0.1258  mix_decode.d5.loss_mask: 0.5117  mix_decode.d5.loss_dice: 0.6640  mix_decode.d6.loss_cls: 0.1405  mix_decode.d6.loss_mask: 0.5259  mix_decode.d6.loss_dice: 0.6631  mix_decode.d7.loss_cls: 0.1638  mix_decode.d7.loss_mask: 0.5170  mix_decode.d7.loss_dice: 0.6650  mix_decode.d8.loss_cls: 0.1623  mix_decode.d8.loss_mask: 0.5147  mix_decode.d8.loss_dice: 0.6658
2025/03/27 13:25:57 - mmengine - INFO - Iter(train) [10250/20000]  base_lr: 5.2384e-05 lr: 5.2384e-05  eta: 2:19:57  time: 1.0819  data_time: 0.0234  memory: 10804  loss: 39.6496  decode.loss_cls: 0.3282  decode.loss_mask: 1.2091  decode.loss_dice: 1.1950  decode.d0.loss_cls: 0.3400  decode.d0.loss_mask: 1.2545  decode.d0.loss_dice: 1.2225  decode.d1.loss_cls: 0.2562  decode.d1.loss_mask: 1.1882  decode.d1.loss_dice: 1.2307  decode.d2.loss_cls: 0.2637  decode.d2.loss_mask: 1.1672  decode.d2.loss_dice: 1.2214  decode.d3.loss_cls: 0.2935  decode.d3.loss_mask: 1.1762  decode.d3.loss_dice: 1.1959  decode.d4.loss_cls: 0.2885  decode.d4.loss_mask: 1.1841  decode.d4.loss_dice: 1.1970  decode.d5.loss_cls: 0.3403  decode.d5.loss_mask: 1.2211  decode.d5.loss_dice: 1.2215  decode.d6.loss_cls: 0.2751  decode.d6.loss_mask: 1.2116  decode.d6.loss_dice: 1.2374  decode.d7.loss_cls: 0.3857  decode.d7.loss_mask: 1.2290  decode.d7.loss_dice: 1.2541  decode.d8.loss_cls: 0.3461  decode.d8.loss_mask: 1.2385  decode.d8.loss_dice: 1.2326  mix_decode.loss_cls: 0.1145  mix_decode.loss_mask: 0.4456  mix_decode.loss_dice: 0.6768  mix_decode.d0.loss_cls: 0.1110  mix_decode.d0.loss_mask: 0.4387  mix_decode.d0.loss_dice: 0.6992  mix_decode.d1.loss_cls: 0.1349  mix_decode.d1.loss_mask: 0.4229  mix_decode.d1.loss_dice: 0.6391  mix_decode.d2.loss_cls: 0.1181  mix_decode.d2.loss_mask: 0.4302  mix_decode.d2.loss_dice: 0.6572  mix_decode.d3.loss_cls: 0.1045  mix_decode.d3.loss_mask: 0.4458  mix_decode.d3.loss_dice: 0.6380  mix_decode.d4.loss_cls: 0.1086  mix_decode.d4.loss_mask: 0.4468  mix_decode.d4.loss_dice: 0.6633  mix_decode.d5.loss_cls: 0.1166  mix_decode.d5.loss_mask: 0.4456  mix_decode.d5.loss_dice: 0.6552  mix_decode.d6.loss_cls: 0.1065  mix_decode.d6.loss_mask: 0.4543  mix_decode.d6.loss_dice: 0.6737  mix_decode.d7.loss_cls: 0.0826  mix_decode.d7.loss_mask: 0.4750  mix_decode.d7.loss_dice: 0.6928  mix_decode.d8.loss_cls: 0.1198  mix_decode.d8.loss_mask: 0.4405  mix_decode.d8.loss_dice: 0.6865
2025/03/27 13:26:50 - mmengine - INFO - Iter(train) [10300/20000]  base_lr: 5.2142e-05 lr: 5.2142e-05  eta: 2:19:24  time: 1.0741  data_time: 0.0221  memory: 10808  loss: 41.2034  decode.loss_cls: 0.2846  decode.loss_mask: 1.1820  decode.loss_dice: 1.3866  decode.d0.loss_cls: 0.3789  decode.d0.loss_mask: 1.2114  decode.d0.loss_dice: 1.4111  decode.d1.loss_cls: 0.2671  decode.d1.loss_mask: 1.2356  decode.d1.loss_dice: 1.3723  decode.d2.loss_cls: 0.2862  decode.d2.loss_mask: 1.2293  decode.d2.loss_dice: 1.3391  decode.d3.loss_cls: 0.2725  decode.d3.loss_mask: 1.2159  decode.d3.loss_dice: 1.2981  decode.d4.loss_cls: 0.2804  decode.d4.loss_mask: 1.1641  decode.d4.loss_dice: 1.3112  decode.d5.loss_cls: 0.3263  decode.d5.loss_mask: 1.2182  decode.d5.loss_dice: 1.3353  decode.d6.loss_cls: 0.3173  decode.d6.loss_mask: 1.2009  decode.d6.loss_dice: 1.3219  decode.d7.loss_cls: 0.2854  decode.d7.loss_mask: 1.2564  decode.d7.loss_dice: 1.3820  decode.d8.loss_cls: 0.3194  decode.d8.loss_mask: 1.1962  decode.d8.loss_dice: 1.3490  mix_decode.loss_cls: 0.1617  mix_decode.loss_mask: 0.4457  mix_decode.loss_dice: 0.6235  mix_decode.d0.loss_cls: 0.1491  mix_decode.d0.loss_mask: 0.4571  mix_decode.d0.loss_dice: 0.6804  mix_decode.d1.loss_cls: 0.1820  mix_decode.d1.loss_mask: 0.4480  mix_decode.d1.loss_dice: 0.6398  mix_decode.d2.loss_cls: 0.2056  mix_decode.d2.loss_mask: 0.4471  mix_decode.d2.loss_dice: 0.6189  mix_decode.d3.loss_cls: 0.1876  mix_decode.d3.loss_mask: 0.4451  mix_decode.d3.loss_dice: 0.6053  mix_decode.d4.loss_cls: 0.1932  mix_decode.d4.loss_mask: 0.4541  mix_decode.d4.loss_dice: 0.6010  mix_decode.d5.loss_cls: 0.1881  mix_decode.d5.loss_mask: 0.4454  mix_decode.d5.loss_dice: 0.6254  mix_decode.d6.loss_cls: 0.2098  mix_decode.d6.loss_mask: 0.4435  mix_decode.d6.loss_dice: 0.6066  mix_decode.d7.loss_cls: 0.1692  mix_decode.d7.loss_mask: 0.4533  mix_decode.d7.loss_dice: 0.6362  mix_decode.d8.loss_cls: 0.1696  mix_decode.d8.loss_mask: 0.4536  mix_decode.d8.loss_dice: 0.6227
2025/03/27 13:27:44 - mmengine - INFO - Iter(train) [10350/20000]  base_lr: 5.1900e-05 lr: 5.1900e-05  eta: 2:18:51  time: 1.0722  data_time: 0.0223  memory: 10806  loss: 37.2470  decode.loss_cls: 0.2732  decode.loss_mask: 1.0501  decode.loss_dice: 1.2232  decode.d0.loss_cls: 0.3511  decode.d0.loss_mask: 1.0627  decode.d0.loss_dice: 1.2616  decode.d1.loss_cls: 0.3170  decode.d1.loss_mask: 1.0393  decode.d1.loss_dice: 1.2366  decode.d2.loss_cls: 0.3195  decode.d2.loss_mask: 1.0341  decode.d2.loss_dice: 1.2238  decode.d3.loss_cls: 0.2926  decode.d3.loss_mask: 1.0196  decode.d3.loss_dice: 1.2231  decode.d4.loss_cls: 0.3215  decode.d4.loss_mask: 1.0273  decode.d4.loss_dice: 1.2286  decode.d5.loss_cls: 0.3340  decode.d5.loss_mask: 1.0264  decode.d5.loss_dice: 1.2488  decode.d6.loss_cls: 0.3103  decode.d6.loss_mask: 1.0447  decode.d6.loss_dice: 1.2366  decode.d7.loss_cls: 0.3124  decode.d7.loss_mask: 1.0486  decode.d7.loss_dice: 1.2369  decode.d8.loss_cls: 0.2856  decode.d8.loss_mask: 1.0662  decode.d8.loss_dice: 1.2541  mix_decode.loss_cls: 0.0817  mix_decode.loss_mask: 0.4303  mix_decode.loss_dice: 0.6206  mix_decode.d0.loss_cls: 0.0993  mix_decode.d0.loss_mask: 0.4255  mix_decode.d0.loss_dice: 0.6338  mix_decode.d1.loss_cls: 0.1232  mix_decode.d1.loss_mask: 0.4203  mix_decode.d1.loss_dice: 0.6247  mix_decode.d2.loss_cls: 0.1106  mix_decode.d2.loss_mask: 0.4157  mix_decode.d2.loss_dice: 0.6227  mix_decode.d3.loss_cls: 0.0983  mix_decode.d3.loss_mask: 0.4073  mix_decode.d3.loss_dice: 0.5988  mix_decode.d4.loss_cls: 0.1106  mix_decode.d4.loss_mask: 0.4059  mix_decode.d4.loss_dice: 0.6128  mix_decode.d5.loss_cls: 0.0838  mix_decode.d5.loss_mask: 0.4118  mix_decode.d5.loss_dice: 0.6167  mix_decode.d6.loss_cls: 0.0786  mix_decode.d6.loss_mask: 0.4193  mix_decode.d6.loss_dice: 0.6252  mix_decode.d7.loss_cls: 0.0740  mix_decode.d7.loss_mask: 0.4182  mix_decode.d7.loss_dice: 0.6253  mix_decode.d8.loss_cls: 0.0984  mix_decode.d8.loss_mask: 0.4261  mix_decode.d8.loss_dice: 0.6182
2025/03/27 13:28:38 - mmengine - INFO - Iter(train) [10400/20000]  base_lr: 5.1658e-05 lr: 5.1658e-05  eta: 2:18:17  time: 1.0726  data_time: 0.0218  memory: 10806  loss: 43.8055  decode.loss_cls: 0.1806  decode.loss_mask: 1.5489  decode.loss_dice: 1.4740  decode.d0.loss_cls: 0.3435  decode.d0.loss_mask: 1.5210  decode.d0.loss_dice: 1.4774  decode.d1.loss_cls: 0.2119  decode.d1.loss_mask: 1.4653  decode.d1.loss_dice: 1.4442  decode.d2.loss_cls: 0.2182  decode.d2.loss_mask: 1.5224  decode.d2.loss_dice: 1.4572  decode.d3.loss_cls: 0.2084  decode.d3.loss_mask: 1.5026  decode.d3.loss_dice: 1.4542  decode.d4.loss_cls: 0.1876  decode.d4.loss_mask: 1.4966  decode.d4.loss_dice: 1.4485  decode.d5.loss_cls: 0.1651  decode.d5.loss_mask: 1.5444  decode.d5.loss_dice: 1.4514  decode.d6.loss_cls: 0.1880  decode.d6.loss_mask: 1.5059  decode.d6.loss_dice: 1.4370  decode.d7.loss_cls: 0.1595  decode.d7.loss_mask: 1.5556  decode.d7.loss_dice: 1.4691  decode.d8.loss_cls: 0.1926  decode.d8.loss_mask: 1.4987  decode.d8.loss_dice: 1.4473  mix_decode.loss_cls: 0.1876  mix_decode.loss_mask: 0.4505  mix_decode.loss_dice: 0.5956  mix_decode.d0.loss_cls: 0.1757  mix_decode.d0.loss_mask: 0.4156  mix_decode.d0.loss_dice: 0.6420  mix_decode.d1.loss_cls: 0.2345  mix_decode.d1.loss_mask: 0.3942  mix_decode.d1.loss_dice: 0.5478  mix_decode.d2.loss_cls: 0.1407  mix_decode.d2.loss_mask: 0.4450  mix_decode.d2.loss_dice: 0.5859  mix_decode.d3.loss_cls: 0.1647  mix_decode.d3.loss_mask: 0.4256  mix_decode.d3.loss_dice: 0.5865  mix_decode.d4.loss_cls: 0.1811  mix_decode.d4.loss_mask: 0.4157  mix_decode.d4.loss_dice: 0.5714  mix_decode.d5.loss_cls: 0.1622  mix_decode.d5.loss_mask: 0.4226  mix_decode.d5.loss_dice: 0.5805  mix_decode.d6.loss_cls: 0.1198  mix_decode.d6.loss_mask: 0.4805  mix_decode.d6.loss_dice: 0.6096  mix_decode.d7.loss_cls: 0.1701  mix_decode.d7.loss_mask: 0.4739  mix_decode.d7.loss_dice: 0.6001  mix_decode.d8.loss_cls: 0.1960  mix_decode.d8.loss_mask: 0.4612  mix_decode.d8.loss_dice: 0.5915
2025/03/27 13:29:32 - mmengine - INFO - Iter(train) [10450/20000]  base_lr: 5.1416e-05 lr: 5.1416e-05  eta: 2:17:44  time: 1.1093  data_time: 0.0258  memory: 10806  loss: 38.6264  decode.loss_cls: 0.2653  decode.loss_mask: 1.1477  decode.loss_dice: 1.2726  decode.d0.loss_cls: 0.2609  decode.d0.loss_mask: 1.1777  decode.d0.loss_dice: 1.3712  decode.d1.loss_cls: 0.2556  decode.d1.loss_mask: 1.1853  decode.d1.loss_dice: 1.2970  decode.d2.loss_cls: 0.2275  decode.d2.loss_mask: 1.1824  decode.d2.loss_dice: 1.2693  decode.d3.loss_cls: 0.2263  decode.d3.loss_mask: 1.1766  decode.d3.loss_dice: 1.2725  decode.d4.loss_cls: 0.1940  decode.d4.loss_mask: 1.1813  decode.d4.loss_dice: 1.3105  decode.d5.loss_cls: 0.2212  decode.d5.loss_mask: 1.1813  decode.d5.loss_dice: 1.3108  decode.d6.loss_cls: 0.2103  decode.d6.loss_mask: 1.1645  decode.d6.loss_dice: 1.3145  decode.d7.loss_cls: 0.2007  decode.d7.loss_mask: 1.1591  decode.d7.loss_dice: 1.3127  decode.d8.loss_cls: 0.2250  decode.d8.loss_mask: 1.1612  decode.d8.loss_dice: 1.3009  mix_decode.loss_cls: 0.1038  mix_decode.loss_mask: 0.4108  mix_decode.loss_dice: 0.6341  mix_decode.d0.loss_cls: 0.1371  mix_decode.d0.loss_mask: 0.4046  mix_decode.d0.loss_dice: 0.6406  mix_decode.d1.loss_cls: 0.1550  mix_decode.d1.loss_mask: 0.4091  mix_decode.d1.loss_dice: 0.6058  mix_decode.d2.loss_cls: 0.1372  mix_decode.d2.loss_mask: 0.4125  mix_decode.d2.loss_dice: 0.6152  mix_decode.d3.loss_cls: 0.1516  mix_decode.d3.loss_mask: 0.4112  mix_decode.d3.loss_dice: 0.5987  mix_decode.d4.loss_cls: 0.1494  mix_decode.d4.loss_mask: 0.4061  mix_decode.d4.loss_dice: 0.6064  mix_decode.d5.loss_cls: 0.1173  mix_decode.d5.loss_mask: 0.4085  mix_decode.d5.loss_dice: 0.6280  mix_decode.d6.loss_cls: 0.1089  mix_decode.d6.loss_mask: 0.4059  mix_decode.d6.loss_dice: 0.6230  mix_decode.d7.loss_cls: 0.1420  mix_decode.d7.loss_mask: 0.4080  mix_decode.d7.loss_dice: 0.6090  mix_decode.d8.loss_cls: 0.1231  mix_decode.d8.loss_mask: 0.4120  mix_decode.d8.loss_dice: 0.6158
2025/03/27 13:30:26 - mmengine - INFO - Iter(train) [10500/20000]  base_lr: 5.1173e-05 lr: 5.1173e-05  eta: 2:17:10  time: 1.0695  data_time: 0.0220  memory: 10809  loss: 43.8299  decode.loss_cls: 0.3180  decode.loss_mask: 1.2955  decode.loss_dice: 1.4123  decode.d0.loss_cls: 0.4010  decode.d0.loss_mask: 1.2041  decode.d0.loss_dice: 1.4027  decode.d1.loss_cls: 0.3135  decode.d1.loss_mask: 1.2282  decode.d1.loss_dice: 1.3940  decode.d2.loss_cls: 0.3020  decode.d2.loss_mask: 1.2560  decode.d2.loss_dice: 1.3949  decode.d3.loss_cls: 0.3391  decode.d3.loss_mask: 1.2454  decode.d3.loss_dice: 1.3910  decode.d4.loss_cls: 0.3010  decode.d4.loss_mask: 1.2219  decode.d4.loss_dice: 1.3612  decode.d5.loss_cls: 0.3441  decode.d5.loss_mask: 1.2541  decode.d5.loss_dice: 1.3609  decode.d6.loss_cls: 0.2963  decode.d6.loss_mask: 1.2882  decode.d6.loss_dice: 1.4041  decode.d7.loss_cls: 0.2690  decode.d7.loss_mask: 1.3071  decode.d7.loss_dice: 1.4234  decode.d8.loss_cls: 0.3201  decode.d8.loss_mask: 1.2906  decode.d8.loss_dice: 1.4357  mix_decode.loss_cls: 0.1575  mix_decode.loss_mask: 0.5390  mix_decode.loss_dice: 0.7345  mix_decode.d0.loss_cls: 0.1892  mix_decode.d0.loss_mask: 0.4958  mix_decode.d0.loss_dice: 0.7512  mix_decode.d1.loss_cls: 0.2365  mix_decode.d1.loss_mask: 0.5055  mix_decode.d1.loss_dice: 0.6786  mix_decode.d2.loss_cls: 0.2019  mix_decode.d2.loss_mask: 0.5132  mix_decode.d2.loss_dice: 0.6754  mix_decode.d3.loss_cls: 0.2099  mix_decode.d3.loss_mask: 0.4933  mix_decode.d3.loss_dice: 0.6573  mix_decode.d4.loss_cls: 0.2017  mix_decode.d4.loss_mask: 0.5040  mix_decode.d4.loss_dice: 0.6737  mix_decode.d5.loss_cls: 0.1896  mix_decode.d5.loss_mask: 0.5016  mix_decode.d5.loss_dice: 0.7005  mix_decode.d6.loss_cls: 0.1893  mix_decode.d6.loss_mask: 0.5022  mix_decode.d6.loss_dice: 0.6854  mix_decode.d7.loss_cls: 0.1720  mix_decode.d7.loss_mask: 0.5364  mix_decode.d7.loss_dice: 0.7226  mix_decode.d8.loss_cls: 0.1866  mix_decode.d8.loss_mask: 0.5315  mix_decode.d8.loss_dice: 0.7190
2025/03/27 13:31:20 - mmengine - INFO - Iter(train) [10550/20000]  base_lr: 5.0931e-05 lr: 5.0931e-05  eta: 2:16:37  time: 1.1203  data_time: 0.0268  memory: 10809  loss: 37.1249  decode.loss_cls: 0.2186  decode.loss_mask: 1.0333  decode.loss_dice: 1.2440  decode.d0.loss_cls: 0.3462  decode.d0.loss_mask: 1.0258  decode.d0.loss_dice: 1.2402  decode.d1.loss_cls: 0.2606  decode.d1.loss_mask: 0.9861  decode.d1.loss_dice: 1.1759  decode.d2.loss_cls: 0.2419  decode.d2.loss_mask: 0.9958  decode.d2.loss_dice: 1.1779  decode.d3.loss_cls: 0.2907  decode.d3.loss_mask: 1.0087  decode.d3.loss_dice: 1.1648  decode.d4.loss_cls: 0.2170  decode.d4.loss_mask: 1.0113  decode.d4.loss_dice: 1.2033  decode.d5.loss_cls: 0.2441  decode.d5.loss_mask: 0.9868  decode.d5.loss_dice: 1.1793  decode.d6.loss_cls: 0.2269  decode.d6.loss_mask: 1.0588  decode.d6.loss_dice: 1.2386  decode.d7.loss_cls: 0.2278  decode.d7.loss_mask: 1.0392  decode.d7.loss_dice: 1.2259  decode.d8.loss_cls: 0.2141  decode.d8.loss_mask: 1.0637  decode.d8.loss_dice: 1.2550  mix_decode.loss_cls: 0.1065  mix_decode.loss_mask: 0.4437  mix_decode.loss_dice: 0.6389  mix_decode.d0.loss_cls: 0.1190  mix_decode.d0.loss_mask: 0.4630  mix_decode.d0.loss_dice: 0.6987  mix_decode.d1.loss_cls: 0.1516  mix_decode.d1.loss_mask: 0.4452  mix_decode.d1.loss_dice: 0.6495  mix_decode.d2.loss_cls: 0.1317  mix_decode.d2.loss_mask: 0.4537  mix_decode.d2.loss_dice: 0.6478  mix_decode.d3.loss_cls: 0.1453  mix_decode.d3.loss_mask: 0.4343  mix_decode.d3.loss_dice: 0.6341  mix_decode.d4.loss_cls: 0.1374  mix_decode.d4.loss_mask: 0.4350  mix_decode.d4.loss_dice: 0.6436  mix_decode.d5.loss_cls: 0.1092  mix_decode.d5.loss_mask: 0.4492  mix_decode.d5.loss_dice: 0.6553  mix_decode.d6.loss_cls: 0.1322  mix_decode.d6.loss_mask: 0.4563  mix_decode.d6.loss_dice: 0.6444  mix_decode.d7.loss_cls: 0.1394  mix_decode.d7.loss_mask: 0.4655  mix_decode.d7.loss_dice: 0.6482  mix_decode.d8.loss_cls: 0.1276  mix_decode.d8.loss_mask: 0.4549  mix_decode.d8.loss_dice: 0.6613
2025/03/27 13:32:16 - mmengine - INFO - Iter(train) [10600/20000]  base_lr: 5.0688e-05 lr: 5.0688e-05  eta: 2:16:04  time: 1.1186  data_time: 0.0257  memory: 10810  loss: 37.6035  decode.loss_cls: 0.2172  decode.loss_mask: 0.9840  decode.loss_dice: 1.4667  decode.d0.loss_cls: 0.1489  decode.d0.loss_mask: 0.9868  decode.d0.loss_dice: 1.5095  decode.d1.loss_cls: 0.2560  decode.d1.loss_mask: 0.9779  decode.d1.loss_dice: 1.4377  decode.d2.loss_cls: 0.2684  decode.d2.loss_mask: 0.9757  decode.d2.loss_dice: 1.3989  decode.d3.loss_cls: 0.2043  decode.d3.loss_mask: 1.0015  decode.d3.loss_dice: 1.4209  decode.d4.loss_cls: 0.2209  decode.d4.loss_mask: 0.9846  decode.d4.loss_dice: 1.4393  decode.d5.loss_cls: 0.2486  decode.d5.loss_mask: 0.9733  decode.d5.loss_dice: 1.4347  decode.d6.loss_cls: 0.1695  decode.d6.loss_mask: 0.9958  decode.d6.loss_dice: 1.4737  decode.d7.loss_cls: 0.2314  decode.d7.loss_mask: 0.9894  decode.d7.loss_dice: 1.4302  decode.d8.loss_cls: 0.1969  decode.d8.loss_mask: 0.9864  decode.d8.loss_dice: 1.4556  mix_decode.loss_cls: 0.0727  mix_decode.loss_mask: 0.4741  mix_decode.loss_dice: 0.5738  mix_decode.d0.loss_cls: 0.0871  mix_decode.d0.loss_mask: 0.4680  mix_decode.d0.loss_dice: 0.5807  mix_decode.d1.loss_cls: 0.0938  mix_decode.d1.loss_mask: 0.4694  mix_decode.d1.loss_dice: 0.5563  mix_decode.d2.loss_cls: 0.0639  mix_decode.d2.loss_mask: 0.4716  mix_decode.d2.loss_dice: 0.5593  mix_decode.d3.loss_cls: 0.0860  mix_decode.d3.loss_mask: 0.4805  mix_decode.d3.loss_dice: 0.5436  mix_decode.d4.loss_cls: 0.0672  mix_decode.d4.loss_mask: 0.4818  mix_decode.d4.loss_dice: 0.5589  mix_decode.d5.loss_cls: 0.0667  mix_decode.d5.loss_mask: 0.4757  mix_decode.d5.loss_dice: 0.5589  mix_decode.d6.loss_cls: 0.0663  mix_decode.d6.loss_mask: 0.4763  mix_decode.d6.loss_dice: 0.5641  mix_decode.d7.loss_cls: 0.0624  mix_decode.d7.loss_mask: 0.4700  mix_decode.d7.loss_dice: 0.5675  mix_decode.d8.loss_cls: 0.0750  mix_decode.d8.loss_mask: 0.4707  mix_decode.d8.loss_dice: 0.5764
2025/03/27 13:33:11 - mmengine - INFO - Iter(train) [10650/20000]  base_lr: 5.0446e-05 lr: 5.0446e-05  eta: 2:15:31  time: 1.0747  data_time: 0.0213  memory: 10805  loss: 37.5498  decode.loss_cls: 0.0892  decode.loss_mask: 1.2475  decode.loss_dice: 1.3046  decode.d0.loss_cls: 0.2596  decode.d0.loss_mask: 1.2121  decode.d0.loss_dice: 1.2071  decode.d1.loss_cls: 0.1224  decode.d1.loss_mask: 1.2436  decode.d1.loss_dice: 1.2729  decode.d2.loss_cls: 0.1575  decode.d2.loss_mask: 1.1616  decode.d2.loss_dice: 1.1427  decode.d3.loss_cls: 0.1563  decode.d3.loss_mask: 1.1790  decode.d3.loss_dice: 1.1790  decode.d4.loss_cls: 0.1152  decode.d4.loss_mask: 1.2222  decode.d4.loss_dice: 1.2723  decode.d5.loss_cls: 0.1962  decode.d5.loss_mask: 1.2404  decode.d5.loss_dice: 1.2535  decode.d6.loss_cls: 0.0934  decode.d6.loss_mask: 1.2464  decode.d6.loss_dice: 1.3064  decode.d7.loss_cls: 0.1203  decode.d7.loss_mask: 1.2374  decode.d7.loss_dice: 1.2858  decode.d8.loss_cls: 0.1204  decode.d8.loss_mask: 1.2408  decode.d8.loss_dice: 1.2790  mix_decode.loss_cls: 0.1226  mix_decode.loss_mask: 0.4764  mix_decode.loss_dice: 0.5655  mix_decode.d0.loss_cls: 0.1004  mix_decode.d0.loss_mask: 0.4791  mix_decode.d0.loss_dice: 0.5783  mix_decode.d1.loss_cls: 0.0806  mix_decode.d1.loss_mask: 0.4797  mix_decode.d1.loss_dice: 0.5601  mix_decode.d2.loss_cls: 0.0712  mix_decode.d2.loss_mask: 0.4802  mix_decode.d2.loss_dice: 0.5649  mix_decode.d3.loss_cls: 0.0764  mix_decode.d3.loss_mask: 0.4812  mix_decode.d3.loss_dice: 0.5653  mix_decode.d4.loss_cls: 0.0937  mix_decode.d4.loss_mask: 0.4778  mix_decode.d4.loss_dice: 0.5698  mix_decode.d5.loss_cls: 0.0977  mix_decode.d5.loss_mask: 0.4813  mix_decode.d5.loss_dice: 0.5618  mix_decode.d6.loss_cls: 0.0870  mix_decode.d6.loss_mask: 0.4790  mix_decode.d6.loss_dice: 0.5585  mix_decode.d7.loss_cls: 0.1188  mix_decode.d7.loss_mask: 0.4784  mix_decode.d7.loss_dice: 0.5665  mix_decode.d8.loss_cls: 0.0797  mix_decode.d8.loss_mask: 0.4771  mix_decode.d8.loss_dice: 0.5763
2025/03/27 13:34:05 - mmengine - INFO - Iter(train) [10700/20000]  base_lr: 5.0203e-05 lr: 5.0203e-05  eta: 2:14:57  time: 1.0766  data_time: 0.0226  memory: 10813  loss: 43.9048  decode.loss_cls: 0.3604  decode.loss_mask: 1.4238  decode.loss_dice: 1.5183  decode.d0.loss_cls: 0.4468  decode.d0.loss_mask: 1.4059  decode.d0.loss_dice: 1.4944  decode.d1.loss_cls: 0.4329  decode.d1.loss_mask: 1.3486  decode.d1.loss_dice: 1.4416  decode.d2.loss_cls: 0.4431  decode.d2.loss_mask: 1.3649  decode.d2.loss_dice: 1.4335  decode.d3.loss_cls: 0.4693  decode.d3.loss_mask: 1.3641  decode.d3.loss_dice: 1.4958  decode.d4.loss_cls: 0.3929  decode.d4.loss_mask: 1.3789  decode.d4.loss_dice: 1.4514  decode.d5.loss_cls: 0.5006  decode.d5.loss_mask: 1.3826  decode.d5.loss_dice: 1.4193  decode.d6.loss_cls: 0.4402  decode.d6.loss_mask: 1.3989  decode.d6.loss_dice: 1.5025  decode.d7.loss_cls: 0.3445  decode.d7.loss_mask: 1.4224  decode.d7.loss_dice: 1.4949  decode.d8.loss_cls: 0.4177  decode.d8.loss_mask: 1.4207  decode.d8.loss_dice: 1.4658  mix_decode.loss_cls: 0.0868  mix_decode.loss_mask: 0.4015  mix_decode.loss_dice: 0.5917  mix_decode.d0.loss_cls: 0.0809  mix_decode.d0.loss_mask: 0.4131  mix_decode.d0.loss_dice: 0.6239  mix_decode.d1.loss_cls: 0.1049  mix_decode.d1.loss_mask: 0.3987  mix_decode.d1.loss_dice: 0.6014  mix_decode.d2.loss_cls: 0.1403  mix_decode.d2.loss_mask: 0.3955  mix_decode.d2.loss_dice: 0.6038  mix_decode.d3.loss_cls: 0.1153  mix_decode.d3.loss_mask: 0.4155  mix_decode.d3.loss_dice: 0.5995  mix_decode.d4.loss_cls: 0.0928  mix_decode.d4.loss_mask: 0.4056  mix_decode.d4.loss_dice: 0.5958  mix_decode.d5.loss_cls: 0.0938  mix_decode.d5.loss_mask: 0.4092  mix_decode.d5.loss_dice: 0.5933  mix_decode.d6.loss_cls: 0.0906  mix_decode.d6.loss_mask: 0.4202  mix_decode.d6.loss_dice: 0.5837  mix_decode.d7.loss_cls: 0.0859  mix_decode.d7.loss_mask: 0.4132  mix_decode.d7.loss_dice: 0.5830  mix_decode.d8.loss_cls: 0.0831  mix_decode.d8.loss_mask: 0.4114  mix_decode.d8.loss_dice: 0.5936
2025/03/27 13:34:59 - mmengine - INFO - Iter(train) [10750/20000]  base_lr: 4.9960e-05 lr: 4.9960e-05  eta: 2:14:22  time: 1.1041  data_time: 0.0237  memory: 10808  loss: 32.8281  decode.loss_cls: 0.2098  decode.loss_mask: 0.9482  decode.loss_dice: 1.1114  decode.d0.loss_cls: 0.2252  decode.d0.loss_mask: 1.0024  decode.d0.loss_dice: 1.1786  decode.d1.loss_cls: 0.2162  decode.d1.loss_mask: 0.9510  decode.d1.loss_dice: 1.1306  decode.d2.loss_cls: 0.2426  decode.d2.loss_mask: 0.9639  decode.d2.loss_dice: 1.1270  decode.d3.loss_cls: 0.2629  decode.d3.loss_mask: 0.9690  decode.d3.loss_dice: 1.1129  decode.d4.loss_cls: 0.2354  decode.d4.loss_mask: 0.9590  decode.d4.loss_dice: 1.1169  decode.d5.loss_cls: 0.2457  decode.d5.loss_mask: 0.9429  decode.d5.loss_dice: 1.0712  decode.d6.loss_cls: 0.2643  decode.d6.loss_mask: 0.9559  decode.d6.loss_dice: 1.1037  decode.d7.loss_cls: 0.2551  decode.d7.loss_mask: 0.9505  decode.d7.loss_dice: 1.0982  decode.d8.loss_cls: 0.2049  decode.d8.loss_mask: 0.9537  decode.d8.loss_dice: 1.1252  mix_decode.loss_cls: 0.0717  mix_decode.loss_mask: 0.3716  mix_decode.loss_dice: 0.5170  mix_decode.d0.loss_cls: 0.0660  mix_decode.d0.loss_mask: 0.3820  mix_decode.d0.loss_dice: 0.5597  mix_decode.d1.loss_cls: 0.0772  mix_decode.d1.loss_mask: 0.3800  mix_decode.d1.loss_dice: 0.5342  mix_decode.d2.loss_cls: 0.0803  mix_decode.d2.loss_mask: 0.3719  mix_decode.d2.loss_dice: 0.5174  mix_decode.d3.loss_cls: 0.0806  mix_decode.d3.loss_mask: 0.3730  mix_decode.d3.loss_dice: 0.5213  mix_decode.d4.loss_cls: 0.0724  mix_decode.d4.loss_mask: 0.3742  mix_decode.d4.loss_dice: 0.5230  mix_decode.d5.loss_cls: 0.0740  mix_decode.d5.loss_mask: 0.3693  mix_decode.d5.loss_dice: 0.5158  mix_decode.d6.loss_cls: 0.0543  mix_decode.d6.loss_mask: 0.3825  mix_decode.d6.loss_dice: 0.5154  mix_decode.d7.loss_cls: 0.0894  mix_decode.d7.loss_mask: 0.3707  mix_decode.d7.loss_dice: 0.5045  mix_decode.d8.loss_cls: 0.0657  mix_decode.d8.loss_mask: 0.3707  mix_decode.d8.loss_dice: 0.5084
2025/03/27 13:35:53 - mmengine - INFO - Iter(train) [10800/20000]  base_lr: 4.9717e-05 lr: 4.9717e-05  eta: 2:13:48  time: 1.0853  data_time: 0.0231  memory: 10805  loss: 45.4499  decode.loss_cls: 0.2416  decode.loss_mask: 1.4720  decode.loss_dice: 1.5055  decode.d0.loss_cls: 0.3244  decode.d0.loss_mask: 1.4580  decode.d0.loss_dice: 1.5402  decode.d1.loss_cls: 0.3611  decode.d1.loss_mask: 1.3858  decode.d1.loss_dice: 1.4966  decode.d2.loss_cls: 0.3264  decode.d2.loss_mask: 1.4407  decode.d2.loss_dice: 1.4489  decode.d3.loss_cls: 0.2635  decode.d3.loss_mask: 1.4883  decode.d3.loss_dice: 1.4858  decode.d4.loss_cls: 0.2596  decode.d4.loss_mask: 1.4687  decode.d4.loss_dice: 1.4950  decode.d5.loss_cls: 0.3852  decode.d5.loss_mask: 1.4376  decode.d5.loss_dice: 1.4655  decode.d6.loss_cls: 0.2841  decode.d6.loss_mask: 1.5008  decode.d6.loss_dice: 1.4905  decode.d7.loss_cls: 0.2868  decode.d7.loss_mask: 1.4622  decode.d7.loss_dice: 1.5081  decode.d8.loss_cls: 0.2554  decode.d8.loss_mask: 1.4641  decode.d8.loss_dice: 1.5086  mix_decode.loss_cls: 0.1422  mix_decode.loss_mask: 0.5146  mix_decode.loss_dice: 0.6257  mix_decode.d0.loss_cls: 0.1507  mix_decode.d0.loss_mask: 0.5136  mix_decode.d0.loss_dice: 0.6687  mix_decode.d1.loss_cls: 0.1487  mix_decode.d1.loss_mask: 0.5181  mix_decode.d1.loss_dice: 0.6280  mix_decode.d2.loss_cls: 0.1966  mix_decode.d2.loss_mask: 0.5042  mix_decode.d2.loss_dice: 0.6295  mix_decode.d3.loss_cls: 0.1778  mix_decode.d3.loss_mask: 0.4958  mix_decode.d3.loss_dice: 0.6132  mix_decode.d4.loss_cls: 0.1700  mix_decode.d4.loss_mask: 0.5014  mix_decode.d4.loss_dice: 0.6285  mix_decode.d5.loss_cls: 0.1400  mix_decode.d5.loss_mask: 0.5337  mix_decode.d5.loss_dice: 0.6327  mix_decode.d6.loss_cls: 0.1690  mix_decode.d6.loss_mask: 0.4973  mix_decode.d6.loss_dice: 0.6096  mix_decode.d7.loss_cls: 0.1492  mix_decode.d7.loss_mask: 0.5009  mix_decode.d7.loss_dice: 0.6161  mix_decode.d8.loss_cls: 0.1571  mix_decode.d8.loss_mask: 0.4868  mix_decode.d8.loss_dice: 0.6192
2025/03/27 13:36:47 - mmengine - INFO - Iter(train) [10850/20000]  base_lr: 4.9473e-05 lr: 4.9473e-05  eta: 2:13:12  time: 1.0744  data_time: 0.0213  memory: 10802  loss: 39.8393  decode.loss_cls: 0.2654  decode.loss_mask: 1.2695  decode.loss_dice: 1.2909  decode.d0.loss_cls: 0.3317  decode.d0.loss_mask: 1.2550  decode.d0.loss_dice: 1.3017  decode.d1.loss_cls: 0.2591  decode.d1.loss_mask: 1.2635  decode.d1.loss_dice: 1.2477  decode.d2.loss_cls: 0.2354  decode.d2.loss_mask: 1.2594  decode.d2.loss_dice: 1.2856  decode.d3.loss_cls: 0.3011  decode.d3.loss_mask: 1.2634  decode.d3.loss_dice: 1.2421  decode.d4.loss_cls: 0.3585  decode.d4.loss_mask: 1.2592  decode.d4.loss_dice: 1.2523  decode.d5.loss_cls: 0.2967  decode.d5.loss_mask: 1.2819  decode.d5.loss_dice: 1.2710  decode.d6.loss_cls: 0.2840  decode.d6.loss_mask: 1.2354  decode.d6.loss_dice: 1.2722  decode.d7.loss_cls: 0.3578  decode.d7.loss_mask: 1.2054  decode.d7.loss_dice: 1.2194  decode.d8.loss_cls: 0.2525  decode.d8.loss_mask: 1.2741  decode.d8.loss_dice: 1.2551  mix_decode.loss_cls: 0.0837  mix_decode.loss_mask: 0.5089  mix_decode.loss_dice: 0.5629  mix_decode.d0.loss_cls: 0.1489  mix_decode.d0.loss_mask: 0.4520  mix_decode.d0.loss_dice: 0.5752  mix_decode.d1.loss_cls: 0.1489  mix_decode.d1.loss_mask: 0.4680  mix_decode.d1.loss_dice: 0.5628  mix_decode.d2.loss_cls: 0.1565  mix_decode.d2.loss_mask: 0.4623  mix_decode.d2.loss_dice: 0.5617  mix_decode.d3.loss_cls: 0.1304  mix_decode.d3.loss_mask: 0.4939  mix_decode.d3.loss_dice: 0.5592  mix_decode.d4.loss_cls: 0.1601  mix_decode.d4.loss_mask: 0.4533  mix_decode.d4.loss_dice: 0.5382  mix_decode.d5.loss_cls: 0.1628  mix_decode.d5.loss_mask: 0.4590  mix_decode.d5.loss_dice: 0.5389  mix_decode.d6.loss_cls: 0.1495  mix_decode.d6.loss_mask: 0.4687  mix_decode.d6.loss_dice: 0.5513  mix_decode.d7.loss_cls: 0.1494  mix_decode.d7.loss_mask: 0.4712  mix_decode.d7.loss_dice: 0.5604  mix_decode.d8.loss_cls: 0.1251  mix_decode.d8.loss_mask: 0.4694  mix_decode.d8.loss_dice: 0.5601
2025/03/27 13:37:40 - mmengine - INFO - Iter(train) [10900/20000]  base_lr: 4.9230e-05 lr: 4.9230e-05  eta: 2:12:37  time: 1.0704  data_time: 0.0222  memory: 10807  loss: 35.7300  decode.loss_cls: 0.1472  decode.loss_mask: 1.0819  decode.loss_dice: 1.2883  decode.d0.loss_cls: 0.2470  decode.d0.loss_mask: 1.0488  decode.d0.loss_dice: 1.3207  decode.d1.loss_cls: 0.2153  decode.d1.loss_mask: 1.0373  decode.d1.loss_dice: 1.2662  decode.d2.loss_cls: 0.2304  decode.d2.loss_mask: 1.0421  decode.d2.loss_dice: 1.2271  decode.d3.loss_cls: 0.2120  decode.d3.loss_mask: 1.0655  decode.d3.loss_dice: 1.2625  decode.d4.loss_cls: 0.1597  decode.d4.loss_mask: 1.0459  decode.d4.loss_dice: 1.2966  decode.d5.loss_cls: 0.1974  decode.d5.loss_mask: 1.0486  decode.d5.loss_dice: 1.2717  decode.d6.loss_cls: 0.2349  decode.d6.loss_mask: 1.0447  decode.d6.loss_dice: 1.2619  decode.d7.loss_cls: 0.2006  decode.d7.loss_mask: 1.0624  decode.d7.loss_dice: 1.2912  decode.d8.loss_cls: 0.1876  decode.d8.loss_mask: 1.0629  decode.d8.loss_dice: 1.2734  mix_decode.loss_cls: 0.1311  mix_decode.loss_mask: 0.3862  mix_decode.loss_dice: 0.5281  mix_decode.d0.loss_cls: 0.1090  mix_decode.d0.loss_mask: 0.3746  mix_decode.d0.loss_dice: 0.5898  mix_decode.d1.loss_cls: 0.1208  mix_decode.d1.loss_mask: 0.3764  mix_decode.d1.loss_dice: 0.5481  mix_decode.d2.loss_cls: 0.1247  mix_decode.d2.loss_mask: 0.3761  mix_decode.d2.loss_dice: 0.5278  mix_decode.d3.loss_cls: 0.1240  mix_decode.d3.loss_mask: 0.3849  mix_decode.d3.loss_dice: 0.5332  mix_decode.d4.loss_cls: 0.1361  mix_decode.d4.loss_mask: 0.3807  mix_decode.d4.loss_dice: 0.5256  mix_decode.d5.loss_cls: 0.1273  mix_decode.d5.loss_mask: 0.3664  mix_decode.d5.loss_dice: 0.5152  mix_decode.d6.loss_cls: 0.1298  mix_decode.d6.loss_mask: 0.3879  mix_decode.d6.loss_dice: 0.5225  mix_decode.d7.loss_cls: 0.1256  mix_decode.d7.loss_mask: 0.3842  mix_decode.d7.loss_dice: 0.5307  mix_decode.d8.loss_cls: 0.1031  mix_decode.d8.loss_mask: 0.3897  mix_decode.d8.loss_dice: 0.5385
2025/03/27 13:38:34 - mmengine - INFO - Iter(train) [10950/20000]  base_lr: 4.8986e-05 lr: 4.8986e-05  eta: 2:12:01  time: 1.0687  data_time: 0.0215  memory: 10810  loss: 36.3913  decode.loss_cls: 0.1917  decode.loss_mask: 1.0295  decode.loss_dice: 1.2097  decode.d0.loss_cls: 0.2361  decode.d0.loss_mask: 1.0310  decode.d0.loss_dice: 1.2376  decode.d1.loss_cls: 0.2403  decode.d1.loss_mask: 1.0132  decode.d1.loss_dice: 1.1606  decode.d2.loss_cls: 0.2686  decode.d2.loss_mask: 0.9993  decode.d2.loss_dice: 1.1762  decode.d3.loss_cls: 0.1504  decode.d3.loss_mask: 1.0582  decode.d3.loss_dice: 1.2426  decode.d4.loss_cls: 0.2202  decode.d4.loss_mask: 1.0243  decode.d4.loss_dice: 1.1997  decode.d5.loss_cls: 0.1921  decode.d5.loss_mask: 1.0281  decode.d5.loss_dice: 1.1978  decode.d6.loss_cls: 0.1146  decode.d6.loss_mask: 1.0811  decode.d6.loss_dice: 1.2390  decode.d7.loss_cls: 0.1606  decode.d7.loss_mask: 1.0495  decode.d7.loss_dice: 1.2305  decode.d8.loss_cls: 0.1895  decode.d8.loss_mask: 1.0390  decode.d8.loss_dice: 1.2388  mix_decode.loss_cls: 0.1273  mix_decode.loss_mask: 0.4496  mix_decode.loss_dice: 0.5900  mix_decode.d0.loss_cls: 0.1351  mix_decode.d0.loss_mask: 0.4548  mix_decode.d0.loss_dice: 0.6238  mix_decode.d1.loss_cls: 0.1533  mix_decode.d1.loss_mask: 0.4577  mix_decode.d1.loss_dice: 0.6069  mix_decode.d2.loss_cls: 0.1523  mix_decode.d2.loss_mask: 0.4419  mix_decode.d2.loss_dice: 0.6043  mix_decode.d3.loss_cls: 0.1476  mix_decode.d3.loss_mask: 0.4374  mix_decode.d3.loss_dice: 0.5979  mix_decode.d4.loss_cls: 0.1376  mix_decode.d4.loss_mask: 0.4377  mix_decode.d4.loss_dice: 0.6102  mix_decode.d5.loss_cls: 0.1322  mix_decode.d5.loss_mask: 0.4445  mix_decode.d5.loss_dice: 0.6001  mix_decode.d6.loss_cls: 0.1595  mix_decode.d6.loss_mask: 0.4678  mix_decode.d6.loss_dice: 0.5949  mix_decode.d7.loss_cls: 0.0988  mix_decode.d7.loss_mask: 0.4667  mix_decode.d7.loss_dice: 0.6048  mix_decode.d8.loss_cls: 0.1458  mix_decode.d8.loss_mask: 0.4629  mix_decode.d8.loss_dice: 0.5983
2025/03/27 13:39:27 - mmengine - INFO - Exp name: pr2vi_20250327_105544
2025/03/27 13:39:27 - mmengine - INFO - Iter(train) [11000/20000]  base_lr: 4.8743e-05 lr: 4.8743e-05  eta: 2:11:26  time: 1.0758  data_time: 0.0218  memory: 10801  loss: 33.2320  decode.loss_cls: 0.1591  decode.loss_mask: 0.9070  decode.loss_dice: 1.1362  decode.d0.loss_cls: 0.1952  decode.d0.loss_mask: 0.8896  decode.d0.loss_dice: 1.1706  decode.d1.loss_cls: 0.1839  decode.d1.loss_mask: 0.8894  decode.d1.loss_dice: 1.1174  decode.d2.loss_cls: 0.1725  decode.d2.loss_mask: 0.8999  decode.d2.loss_dice: 1.1168  decode.d3.loss_cls: 0.1660  decode.d3.loss_mask: 0.9152  decode.d3.loss_dice: 1.1387  decode.d4.loss_cls: 0.1416  decode.d4.loss_mask: 0.9314  decode.d4.loss_dice: 1.1519  decode.d5.loss_cls: 0.1299  decode.d5.loss_mask: 0.9139  decode.d5.loss_dice: 1.1321  decode.d6.loss_cls: 0.1429  decode.d6.loss_mask: 0.9172  decode.d6.loss_dice: 1.1190  decode.d7.loss_cls: 0.1309  decode.d7.loss_mask: 0.9228  decode.d7.loss_dice: 1.1468  decode.d8.loss_cls: 0.1539  decode.d8.loss_mask: 0.9127  decode.d8.loss_dice: 1.1328  mix_decode.loss_cls: 0.1542  mix_decode.loss_mask: 0.3681  mix_decode.loss_dice: 0.5960  mix_decode.d0.loss_cls: 0.0945  mix_decode.d0.loss_mask: 0.3657  mix_decode.d0.loss_dice: 0.6601  mix_decode.d1.loss_cls: 0.1563  mix_decode.d1.loss_mask: 0.3531  mix_decode.d1.loss_dice: 0.6044  mix_decode.d2.loss_cls: 0.1982  mix_decode.d2.loss_mask: 0.3511  mix_decode.d2.loss_dice: 0.5511  mix_decode.d3.loss_cls: 0.1757  mix_decode.d3.loss_mask: 0.3541  mix_decode.d3.loss_dice: 0.5873  mix_decode.d4.loss_cls: 0.1823  mix_decode.d4.loss_mask: 0.3626  mix_decode.d4.loss_dice: 0.5824  mix_decode.d5.loss_cls: 0.1524  mix_decode.d5.loss_mask: 0.3735  mix_decode.d5.loss_dice: 0.5833  mix_decode.d6.loss_cls: 0.1693  mix_decode.d6.loss_mask: 0.3683  mix_decode.d6.loss_dice: 0.5957  mix_decode.d7.loss_cls: 0.1798  mix_decode.d7.loss_mask: 0.3734  mix_decode.d7.loss_dice: 0.5848  mix_decode.d8.loss_cls: 0.1336  mix_decode.d8.loss_mask: 0.3822  mix_decode.d8.loss_dice: 0.6013
2025/03/27 13:40:21 - mmengine - INFO - Iter(train) [11050/20000]  base_lr: 4.8499e-05 lr: 4.8499e-05  eta: 2:10:50  time: 1.0716  data_time: 0.0217  memory: 10794  loss: 35.1657  decode.loss_cls: 0.1283  decode.loss_mask: 1.0275  decode.loss_dice: 1.1750  decode.d0.loss_cls: 0.2899  decode.d0.loss_mask: 1.0362  decode.d0.loss_dice: 1.1621  decode.d1.loss_cls: 0.2644  decode.d1.loss_mask: 0.9835  decode.d1.loss_dice: 1.1290  decode.d2.loss_cls: 0.1971  decode.d2.loss_mask: 1.0014  decode.d2.loss_dice: 1.1286  decode.d3.loss_cls: 0.1937  decode.d3.loss_mask: 1.0029  decode.d3.loss_dice: 1.1637  decode.d4.loss_cls: 0.1787  decode.d4.loss_mask: 1.0088  decode.d4.loss_dice: 1.1102  decode.d5.loss_cls: 0.1796  decode.d5.loss_mask: 1.0413  decode.d5.loss_dice: 1.1715  decode.d6.loss_cls: 0.1332  decode.d6.loss_mask: 1.0360  decode.d6.loss_dice: 1.1843  decode.d7.loss_cls: 0.1168  decode.d7.loss_mask: 1.0317  decode.d7.loss_dice: 1.1998  decode.d8.loss_cls: 0.1772  decode.d8.loss_mask: 1.0330  decode.d8.loss_dice: 1.1835  mix_decode.loss_cls: 0.1006  mix_decode.loss_mask: 0.4540  mix_decode.loss_dice: 0.5856  mix_decode.d0.loss_cls: 0.1093  mix_decode.d0.loss_mask: 0.4616  mix_decode.d0.loss_dice: 0.6101  mix_decode.d1.loss_cls: 0.0866  mix_decode.d1.loss_mask: 0.4656  mix_decode.d1.loss_dice: 0.5895  mix_decode.d2.loss_cls: 0.1204  mix_decode.d2.loss_mask: 0.4616  mix_decode.d2.loss_dice: 0.5692  mix_decode.d3.loss_cls: 0.1372  mix_decode.d3.loss_mask: 0.4562  mix_decode.d3.loss_dice: 0.5630  mix_decode.d4.loss_cls: 0.1070  mix_decode.d4.loss_mask: 0.4617  mix_decode.d4.loss_dice: 0.5848  mix_decode.d5.loss_cls: 0.1186  mix_decode.d5.loss_mask: 0.4611  mix_decode.d5.loss_dice: 0.5821  mix_decode.d6.loss_cls: 0.1079  mix_decode.d6.loss_mask: 0.4618  mix_decode.d6.loss_dice: 0.5784  mix_decode.d7.loss_cls: 0.0937  mix_decode.d7.loss_mask: 0.4573  mix_decode.d7.loss_dice: 0.5836  mix_decode.d8.loss_cls: 0.0942  mix_decode.d8.loss_mask: 0.4538  mix_decode.d8.loss_dice: 0.5804
2025/03/27 13:41:15 - mmengine - INFO - Iter(train) [11100/20000]  base_lr: 4.8255e-05 lr: 4.8255e-05  eta: 2:10:14  time: 1.0726  data_time: 0.0220  memory: 10812  loss: 36.4437  decode.loss_cls: 0.1948  decode.loss_mask: 1.1688  decode.loss_dice: 1.2758  decode.d0.loss_cls: 0.2150  decode.d0.loss_mask: 1.1340  decode.d0.loss_dice: 1.2529  decode.d1.loss_cls: 0.2429  decode.d1.loss_mask: 1.0854  decode.d1.loss_dice: 1.1509  decode.d2.loss_cls: 0.2446  decode.d2.loss_mask: 1.0433  decode.d2.loss_dice: 1.2016  decode.d3.loss_cls: 0.2490  decode.d3.loss_mask: 1.0586  decode.d3.loss_dice: 1.1792  decode.d4.loss_cls: 0.2041  decode.d4.loss_mask: 1.1288  decode.d4.loss_dice: 1.2584  decode.d5.loss_cls: 0.2314  decode.d5.loss_mask: 1.1155  decode.d5.loss_dice: 1.2010  decode.d6.loss_cls: 0.2139  decode.d6.loss_mask: 1.1353  decode.d6.loss_dice: 1.2438  decode.d7.loss_cls: 0.2691  decode.d7.loss_mask: 1.1325  decode.d7.loss_dice: 1.2222  decode.d8.loss_cls: 0.2657  decode.d8.loss_mask: 1.1196  decode.d8.loss_dice: 1.2346  mix_decode.loss_cls: 0.0860  mix_decode.loss_mask: 0.3830  mix_decode.loss_dice: 0.6084  mix_decode.d0.loss_cls: 0.0935  mix_decode.d0.loss_mask: 0.3801  mix_decode.d0.loss_dice: 0.6223  mix_decode.d1.loss_cls: 0.1258  mix_decode.d1.loss_mask: 0.3794  mix_decode.d1.loss_dice: 0.5879  mix_decode.d2.loss_cls: 0.1276  mix_decode.d2.loss_mask: 0.3826  mix_decode.d2.loss_dice: 0.5807  mix_decode.d3.loss_cls: 0.1048  mix_decode.d3.loss_mask: 0.3818  mix_decode.d3.loss_dice: 0.5763  mix_decode.d4.loss_cls: 0.1024  mix_decode.d4.loss_mask: 0.3799  mix_decode.d4.loss_dice: 0.5974  mix_decode.d5.loss_cls: 0.0867  mix_decode.d5.loss_mask: 0.3856  mix_decode.d5.loss_dice: 0.5904  mix_decode.d6.loss_cls: 0.0882  mix_decode.d6.loss_mask: 0.3940  mix_decode.d6.loss_dice: 0.5970  mix_decode.d7.loss_cls: 0.0898  mix_decode.d7.loss_mask: 0.3856  mix_decode.d7.loss_dice: 0.5994  mix_decode.d8.loss_cls: 0.0723  mix_decode.d8.loss_mask: 0.3838  mix_decode.d8.loss_dice: 0.5983
2025/03/27 13:42:08 - mmengine - INFO - Iter(train) [11150/20000]  base_lr: 4.8011e-05 lr: 4.8011e-05  eta: 2:09:38  time: 1.0903  data_time: 0.0215  memory: 10805  loss: 37.4843  decode.loss_cls: 0.1746  decode.loss_mask: 1.2910  decode.loss_dice: 1.2864  decode.d0.loss_cls: 0.1864  decode.d0.loss_mask: 1.2722  decode.d0.loss_dice: 1.3067  decode.d1.loss_cls: 0.0986  decode.d1.loss_mask: 1.2835  decode.d1.loss_dice: 1.2898  decode.d2.loss_cls: 0.1241  decode.d2.loss_mask: 1.2654  decode.d2.loss_dice: 1.2823  decode.d3.loss_cls: 0.1400  decode.d3.loss_mask: 1.2628  decode.d3.loss_dice: 1.2592  decode.d4.loss_cls: 0.1507  decode.d4.loss_mask: 1.2654  decode.d4.loss_dice: 1.2745  decode.d5.loss_cls: 0.1384  decode.d5.loss_mask: 1.2813  decode.d5.loss_dice: 1.2627  decode.d6.loss_cls: 0.0903  decode.d6.loss_mask: 1.2923  decode.d6.loss_dice: 1.3064  decode.d7.loss_cls: 0.1619  decode.d7.loss_mask: 1.2929  decode.d7.loss_dice: 1.2996  decode.d8.loss_cls: 0.1278  decode.d8.loss_mask: 1.3067  decode.d8.loss_dice: 1.2883  mix_decode.loss_cls: 0.0903  mix_decode.loss_mask: 0.4129  mix_decode.loss_dice: 0.5481  mix_decode.d0.loss_cls: 0.0857  mix_decode.d0.loss_mask: 0.3929  mix_decode.d0.loss_dice: 0.5988  mix_decode.d1.loss_cls: 0.1491  mix_decode.d1.loss_mask: 0.3846  mix_decode.d1.loss_dice: 0.5268  mix_decode.d2.loss_cls: 0.1053  mix_decode.d2.loss_mask: 0.3888  mix_decode.d2.loss_dice: 0.5398  mix_decode.d3.loss_cls: 0.1055  mix_decode.d3.loss_mask: 0.3857  mix_decode.d3.loss_dice: 0.5239  mix_decode.d4.loss_cls: 0.1220  mix_decode.d4.loss_mask: 0.3875  mix_decode.d4.loss_dice: 0.5237  mix_decode.d5.loss_cls: 0.0940  mix_decode.d5.loss_mask: 0.3894  mix_decode.d5.loss_dice: 0.5289  mix_decode.d6.loss_cls: 0.1029  mix_decode.d6.loss_mask: 0.3948  mix_decode.d6.loss_dice: 0.5229  mix_decode.d7.loss_cls: 0.1033  mix_decode.d7.loss_mask: 0.4089  mix_decode.d7.loss_dice: 0.5466  mix_decode.d8.loss_cls: 0.1089  mix_decode.d8.loss_mask: 0.4053  mix_decode.d8.loss_dice: 0.5447
2025/03/27 13:43:02 - mmengine - INFO - Iter(train) [11200/20000]  base_lr: 4.7767e-05 lr: 4.7767e-05  eta: 2:09:01  time: 1.0771  data_time: 0.0221  memory: 10802  loss: 31.7342  decode.loss_cls: 0.1399  decode.loss_mask: 0.9920  decode.loss_dice: 1.0369  decode.d0.loss_cls: 0.2131  decode.d0.loss_mask: 0.9764  decode.d0.loss_dice: 1.0169  decode.d1.loss_cls: 0.1084  decode.d1.loss_mask: 0.9874  decode.d1.loss_dice: 1.0377  decode.d2.loss_cls: 0.1270  decode.d2.loss_mask: 0.9848  decode.d2.loss_dice: 1.0282  decode.d3.loss_cls: 0.1275  decode.d3.loss_mask: 0.9951  decode.d3.loss_dice: 1.0102  decode.d4.loss_cls: 0.1253  decode.d4.loss_mask: 1.0141  decode.d4.loss_dice: 1.0279  decode.d5.loss_cls: 0.1153  decode.d5.loss_mask: 1.0184  decode.d5.loss_dice: 1.0270  decode.d6.loss_cls: 0.0969  decode.d6.loss_mask: 1.0244  decode.d6.loss_dice: 1.0566  decode.d7.loss_cls: 0.1382  decode.d7.loss_mask: 1.0005  decode.d7.loss_dice: 1.0459  decode.d8.loss_cls: 0.0989  decode.d8.loss_mask: 1.0142  decode.d8.loss_dice: 1.0503  mix_decode.loss_cls: 0.0904  mix_decode.loss_mask: 0.4025  mix_decode.loss_dice: 0.5293  mix_decode.d0.loss_cls: 0.0617  mix_decode.d0.loss_mask: 0.3994  mix_decode.d0.loss_dice: 0.5593  mix_decode.d1.loss_cls: 0.0861  mix_decode.d1.loss_mask: 0.3948  mix_decode.d1.loss_dice: 0.5252  mix_decode.d2.loss_cls: 0.0936  mix_decode.d2.loss_mask: 0.3984  mix_decode.d2.loss_dice: 0.5157  mix_decode.d3.loss_cls: 0.0952  mix_decode.d3.loss_mask: 0.3916  mix_decode.d3.loss_dice: 0.5225  mix_decode.d4.loss_cls: 0.1040  mix_decode.d4.loss_mask: 0.3989  mix_decode.d4.loss_dice: 0.5215  mix_decode.d5.loss_cls: 0.0785  mix_decode.d5.loss_mask: 0.4006  mix_decode.d5.loss_dice: 0.5182  mix_decode.d6.loss_cls: 0.0839  mix_decode.d6.loss_mask: 0.3942  mix_decode.d6.loss_dice: 0.5165  mix_decode.d7.loss_cls: 0.0787  mix_decode.d7.loss_mask: 0.3963  mix_decode.d7.loss_dice: 0.5257  mix_decode.d8.loss_cls: 0.1006  mix_decode.d8.loss_mask: 0.3988  mix_decode.d8.loss_dice: 0.5170
2025/03/27 13:43:56 - mmengine - INFO - Iter(train) [11250/20000]  base_lr: 4.7523e-05 lr: 4.7523e-05  eta: 2:08:25  time: 1.0732  data_time: 0.0221  memory: 10805  loss: 31.6830  decode.loss_cls: 0.1077  decode.loss_mask: 1.0483  decode.loss_dice: 1.1140  decode.d0.loss_cls: 0.1557  decode.d0.loss_mask: 1.0599  decode.d0.loss_dice: 1.0995  decode.d1.loss_cls: 0.1396  decode.d1.loss_mask: 1.0608  decode.d1.loss_dice: 1.0961  decode.d2.loss_cls: 0.1661  decode.d2.loss_mask: 1.0397  decode.d2.loss_dice: 1.0808  decode.d3.loss_cls: 0.1117  decode.d3.loss_mask: 1.0364  decode.d3.loss_dice: 1.0955  decode.d4.loss_cls: 0.1070  decode.d4.loss_mask: 1.0405  decode.d4.loss_dice: 1.0972  decode.d5.loss_cls: 0.1089  decode.d5.loss_mask: 1.0365  decode.d5.loss_dice: 1.1040  decode.d6.loss_cls: 0.1174  decode.d6.loss_mask: 1.0274  decode.d6.loss_dice: 1.1021  decode.d7.loss_cls: 0.1144  decode.d7.loss_mask: 1.0361  decode.d7.loss_dice: 1.1056  decode.d8.loss_cls: 0.0856  decode.d8.loss_mask: 1.0495  decode.d8.loss_dice: 1.1269  mix_decode.loss_cls: 0.0856  mix_decode.loss_mask: 0.3591  mix_decode.loss_dice: 0.4573  mix_decode.d0.loss_cls: 0.1190  mix_decode.d0.loss_mask: 0.3284  mix_decode.d0.loss_dice: 0.4688  mix_decode.d1.loss_cls: 0.1126  mix_decode.d1.loss_mask: 0.3398  mix_decode.d1.loss_dice: 0.4390  mix_decode.d2.loss_cls: 0.1140  mix_decode.d2.loss_mask: 0.3381  mix_decode.d2.loss_dice: 0.4442  mix_decode.d3.loss_cls: 0.1029  mix_decode.d3.loss_mask: 0.3434  mix_decode.d3.loss_dice: 0.4375  mix_decode.d4.loss_cls: 0.0879  mix_decode.d4.loss_mask: 0.3564  mix_decode.d4.loss_dice: 0.4562  mix_decode.d5.loss_cls: 0.0953  mix_decode.d5.loss_mask: 0.3549  mix_decode.d5.loss_dice: 0.4739  mix_decode.d6.loss_cls: 0.0754  mix_decode.d6.loss_mask: 0.3554  mix_decode.d6.loss_dice: 0.4620  mix_decode.d7.loss_cls: 0.0863  mix_decode.d7.loss_mask: 0.3578  mix_decode.d7.loss_dice: 0.4622  mix_decode.d8.loss_cls: 0.0790  mix_decode.d8.loss_mask: 0.3552  mix_decode.d8.loss_dice: 0.4645
2025/03/27 13:44:50 - mmengine - INFO - Iter(train) [11300/20000]  base_lr: 4.7278e-05 lr: 4.7278e-05  eta: 2:07:49  time: 1.0792  data_time: 0.0219  memory: 10803  loss: 44.4587  decode.loss_cls: 0.3445  decode.loss_mask: 1.3896  decode.loss_dice: 1.4450  decode.d0.loss_cls: 0.3545  decode.d0.loss_mask: 1.4346  decode.d0.loss_dice: 1.5194  decode.d1.loss_cls: 0.3629  decode.d1.loss_mask: 1.3958  decode.d1.loss_dice: 1.4594  decode.d2.loss_cls: 0.3636  decode.d2.loss_mask: 1.3772  decode.d2.loss_dice: 1.4401  decode.d3.loss_cls: 0.4128  decode.d3.loss_mask: 1.3913  decode.d3.loss_dice: 1.4163  decode.d4.loss_cls: 0.3876  decode.d4.loss_mask: 1.3809  decode.d4.loss_dice: 1.4469  decode.d5.loss_cls: 0.3778  decode.d5.loss_mask: 1.4016  decode.d5.loss_dice: 1.4612  decode.d6.loss_cls: 0.4047  decode.d6.loss_mask: 1.3857  decode.d6.loss_dice: 1.4646  decode.d7.loss_cls: 0.4169  decode.d7.loss_mask: 1.3652  decode.d7.loss_dice: 1.4313  decode.d8.loss_cls: 0.3339  decode.d8.loss_mask: 1.4232  decode.d8.loss_dice: 1.4572  mix_decode.loss_cls: 0.1329  mix_decode.loss_mask: 0.4861  mix_decode.loss_dice: 0.5984  mix_decode.d0.loss_cls: 0.1495  mix_decode.d0.loss_mask: 0.4682  mix_decode.d0.loss_dice: 0.6412  mix_decode.d1.loss_cls: 0.1264  mix_decode.d1.loss_mask: 0.4669  mix_decode.d1.loss_dice: 0.6158  mix_decode.d2.loss_cls: 0.1349  mix_decode.d2.loss_mask: 0.4644  mix_decode.d2.loss_dice: 0.5951  mix_decode.d3.loss_cls: 0.1405  mix_decode.d3.loss_mask: 0.4636  mix_decode.d3.loss_dice: 0.5731  mix_decode.d4.loss_cls: 0.1482  mix_decode.d4.loss_mask: 0.4665  mix_decode.d4.loss_dice: 0.6082  mix_decode.d5.loss_cls: 0.1806  mix_decode.d5.loss_mask: 0.4679  mix_decode.d5.loss_dice: 0.5807  mix_decode.d6.loss_cls: 0.1539  mix_decode.d6.loss_mask: 0.4819  mix_decode.d6.loss_dice: 0.5942  mix_decode.d7.loss_cls: 0.1687  mix_decode.d7.loss_mask: 0.4721  mix_decode.d7.loss_dice: 0.5962  mix_decode.d8.loss_cls: 0.1373  mix_decode.d8.loss_mask: 0.4958  mix_decode.d8.loss_dice: 0.6039
2025/03/27 13:45:44 - mmengine - INFO - Iter(train) [11350/20000]  base_lr: 4.7033e-05 lr: 4.7033e-05  eta: 2:07:12  time: 1.0752  data_time: 0.0219  memory: 10803  loss: 40.1790  decode.loss_cls: 0.2210  decode.loss_mask: 1.1748  decode.loss_dice: 1.3611  decode.d0.loss_cls: 0.1760  decode.d0.loss_mask: 1.1679  decode.d0.loss_dice: 1.4351  decode.d1.loss_cls: 0.2468  decode.d1.loss_mask: 1.1477  decode.d1.loss_dice: 1.3414  decode.d2.loss_cls: 0.2543  decode.d2.loss_mask: 1.1761  decode.d2.loss_dice: 1.3308  decode.d3.loss_cls: 0.2326  decode.d3.loss_mask: 1.1523  decode.d3.loss_dice: 1.3209  decode.d4.loss_cls: 0.2514  decode.d4.loss_mask: 1.1313  decode.d4.loss_dice: 1.3089  decode.d5.loss_cls: 0.2547  decode.d5.loss_mask: 1.1533  decode.d5.loss_dice: 1.3604  decode.d6.loss_cls: 0.2364  decode.d6.loss_mask: 1.1501  decode.d6.loss_dice: 1.3579  decode.d7.loss_cls: 0.2407  decode.d7.loss_mask: 1.1558  decode.d7.loss_dice: 1.3626  decode.d8.loss_cls: 0.2354  decode.d8.loss_mask: 1.1528  decode.d8.loss_dice: 1.3484  mix_decode.loss_cls: 0.1192  mix_decode.loss_mask: 0.5121  mix_decode.loss_dice: 0.6525  mix_decode.d0.loss_cls: 0.1105  mix_decode.d0.loss_mask: 0.5061  mix_decode.d0.loss_dice: 0.6790  mix_decode.d1.loss_cls: 0.1229  mix_decode.d1.loss_mask: 0.5086  mix_decode.d1.loss_dice: 0.6639  mix_decode.d2.loss_cls: 0.1103  mix_decode.d2.loss_mask: 0.5156  mix_decode.d2.loss_dice: 0.6385  mix_decode.d3.loss_cls: 0.1049  mix_decode.d3.loss_mask: 0.5172  mix_decode.d3.loss_dice: 0.6433  mix_decode.d4.loss_cls: 0.1091  mix_decode.d4.loss_mask: 0.5107  mix_decode.d4.loss_dice: 0.6440  mix_decode.d5.loss_cls: 0.1049  mix_decode.d5.loss_mask: 0.5097  mix_decode.d5.loss_dice: 0.6396  mix_decode.d6.loss_cls: 0.1085  mix_decode.d6.loss_mask: 0.5163  mix_decode.d6.loss_dice: 0.6481  mix_decode.d7.loss_cls: 0.1129  mix_decode.d7.loss_mask: 0.5134  mix_decode.d7.loss_dice: 0.6515  mix_decode.d8.loss_cls: 0.1090  mix_decode.d8.loss_mask: 0.5115  mix_decode.d8.loss_dice: 0.6462
2025/03/27 13:46:38 - mmengine - INFO - Iter(train) [11400/20000]  base_lr: 4.6789e-05 lr: 4.6789e-05  eta: 2:06:35  time: 1.0808  data_time: 0.0226  memory: 10812  loss: 40.0741  decode.loss_cls: 0.1404  decode.loss_mask: 1.1761  decode.loss_dice: 1.4377  decode.d0.loss_cls: 0.2040  decode.d0.loss_mask: 1.1956  decode.d0.loss_dice: 1.4233  decode.d1.loss_cls: 0.2429  decode.d1.loss_mask: 1.1752  decode.d1.loss_dice: 1.3766  decode.d2.loss_cls: 0.1840  decode.d2.loss_mask: 1.1724  decode.d2.loss_dice: 1.3898  decode.d3.loss_cls: 0.2500  decode.d3.loss_mask: 1.1657  decode.d3.loss_dice: 1.3484  decode.d4.loss_cls: 0.1305  decode.d4.loss_mask: 1.2117  decode.d4.loss_dice: 1.4218  decode.d5.loss_cls: 0.2086  decode.d5.loss_mask: 1.2149  decode.d5.loss_dice: 1.3706  decode.d6.loss_cls: 0.2060  decode.d6.loss_mask: 1.1889  decode.d6.loss_dice: 1.3973  decode.d7.loss_cls: 0.0896  decode.d7.loss_mask: 1.1980  decode.d7.loss_dice: 1.4419  decode.d8.loss_cls: 0.1739  decode.d8.loss_mask: 1.1772  decode.d8.loss_dice: 1.4209  mix_decode.loss_cls: 0.0682  mix_decode.loss_mask: 0.5115  mix_decode.loss_dice: 0.6485  mix_decode.d0.loss_cls: 0.0432  mix_decode.d0.loss_mask: 0.5313  mix_decode.d0.loss_dice: 0.6750  mix_decode.d1.loss_cls: 0.1121  mix_decode.d1.loss_mask: 0.5414  mix_decode.d1.loss_dice: 0.6188  mix_decode.d2.loss_cls: 0.0906  mix_decode.d2.loss_mask: 0.5197  mix_decode.d2.loss_dice: 0.6143  mix_decode.d3.loss_cls: 0.1162  mix_decode.d3.loss_mask: 0.4962  mix_decode.d3.loss_dice: 0.6025  mix_decode.d4.loss_cls: 0.0785  mix_decode.d4.loss_mask: 0.5223  mix_decode.d4.loss_dice: 0.6295  mix_decode.d5.loss_cls: 0.0836  mix_decode.d5.loss_mask: 0.5200  mix_decode.d5.loss_dice: 0.6292  mix_decode.d6.loss_cls: 0.0820  mix_decode.d6.loss_mask: 0.5301  mix_decode.d6.loss_dice: 0.6188  mix_decode.d7.loss_cls: 0.0607  mix_decode.d7.loss_mask: 0.5168  mix_decode.d7.loss_dice: 0.6490  mix_decode.d8.loss_cls: 0.0755  mix_decode.d8.loss_mask: 0.5056  mix_decode.d8.loss_dice: 0.6491
2025/03/27 13:47:31 - mmengine - INFO - Iter(train) [11450/20000]  base_lr: 4.6544e-05 lr: 4.6544e-05  eta: 2:05:58  time: 1.0762  data_time: 0.0220  memory: 10807  loss: 45.2750  decode.loss_cls: 0.3148  decode.loss_mask: 1.2873  decode.loss_dice: 1.4136  decode.d0.loss_cls: 0.3220  decode.d0.loss_mask: 1.3226  decode.d0.loss_dice: 1.4629  decode.d1.loss_cls: 0.3539  decode.d1.loss_mask: 1.3101  decode.d1.loss_dice: 1.4167  decode.d2.loss_cls: 0.3938  decode.d2.loss_mask: 1.3160  decode.d2.loss_dice: 1.4026  decode.d3.loss_cls: 0.3519  decode.d3.loss_mask: 1.2977  decode.d3.loss_dice: 1.4189  decode.d4.loss_cls: 0.2994  decode.d4.loss_mask: 1.3232  decode.d4.loss_dice: 1.4275  decode.d5.loss_cls: 0.3116  decode.d5.loss_mask: 1.3077  decode.d5.loss_dice: 1.3921  decode.d6.loss_cls: 0.3453  decode.d6.loss_mask: 1.3103  decode.d6.loss_dice: 1.4102  decode.d7.loss_cls: 0.2497  decode.d7.loss_mask: 1.3652  decode.d7.loss_dice: 1.4708  decode.d8.loss_cls: 0.2954  decode.d8.loss_mask: 1.2936  decode.d8.loss_dice: 1.4493  mix_decode.loss_cls: 0.1740  mix_decode.loss_mask: 0.5983  mix_decode.loss_dice: 0.6918  mix_decode.d0.loss_cls: 0.1496  mix_decode.d0.loss_mask: 0.5659  mix_decode.d0.loss_dice: 0.7236  mix_decode.d1.loss_cls: 0.2514  mix_decode.d1.loss_mask: 0.5890  mix_decode.d1.loss_dice: 0.6727  mix_decode.d2.loss_cls: 0.2218  mix_decode.d2.loss_mask: 0.5856  mix_decode.d2.loss_dice: 0.6444  mix_decode.d3.loss_cls: 0.2092  mix_decode.d3.loss_mask: 0.5876  mix_decode.d3.loss_dice: 0.6472  mix_decode.d4.loss_cls: 0.2314  mix_decode.d4.loss_mask: 0.5902  mix_decode.d4.loss_dice: 0.6596  mix_decode.d5.loss_cls: 0.2202  mix_decode.d5.loss_mask: 0.5698  mix_decode.d5.loss_dice: 0.6651  mix_decode.d6.loss_cls: 0.2166  mix_decode.d6.loss_mask: 0.5944  mix_decode.d6.loss_dice: 0.6634  mix_decode.d7.loss_cls: 0.1878  mix_decode.d7.loss_mask: 0.5781  mix_decode.d7.loss_dice: 0.6865  mix_decode.d8.loss_cls: 0.1995  mix_decode.d8.loss_mask: 0.5773  mix_decode.d8.loss_dice: 0.6868
2025/03/27 13:48:25 - mmengine - INFO - Iter(train) [11500/20000]  base_lr: 4.6299e-05 lr: 4.6299e-05  eta: 2:05:21  time: 1.0723  data_time: 0.0217  memory: 10807  loss: 38.6756  decode.loss_cls: 0.2557  decode.loss_mask: 1.1435  decode.loss_dice: 1.3251  decode.d0.loss_cls: 0.3256  decode.d0.loss_mask: 1.1014  decode.d0.loss_dice: 1.4409  decode.d1.loss_cls: 0.3369  decode.d1.loss_mask: 1.1311  decode.d1.loss_dice: 1.3371  decode.d2.loss_cls: 0.3416  decode.d2.loss_mask: 1.1079  decode.d2.loss_dice: 1.3256  decode.d3.loss_cls: 0.3230  decode.d3.loss_mask: 1.1028  decode.d3.loss_dice: 1.3144  decode.d4.loss_cls: 0.3014  decode.d4.loss_mask: 1.0968  decode.d4.loss_dice: 1.3151  decode.d5.loss_cls: 0.3329  decode.d5.loss_mask: 1.1058  decode.d5.loss_dice: 1.3031  decode.d6.loss_cls: 0.3388  decode.d6.loss_mask: 1.0991  decode.d6.loss_dice: 1.3145  decode.d7.loss_cls: 0.2890  decode.d7.loss_mask: 1.1041  decode.d7.loss_dice: 1.3151  decode.d8.loss_cls: 0.2316  decode.d8.loss_mask: 1.1178  decode.d8.loss_dice: 1.3078  mix_decode.loss_cls: 0.1198  mix_decode.loss_mask: 0.4536  mix_decode.loss_dice: 0.5553  mix_decode.d0.loss_cls: 0.1025  mix_decode.d0.loss_mask: 0.4494  mix_decode.d0.loss_dice: 0.6050  mix_decode.d1.loss_cls: 0.1542  mix_decode.d1.loss_mask: 0.4229  mix_decode.d1.loss_dice: 0.5554  mix_decode.d2.loss_cls: 0.1225  mix_decode.d2.loss_mask: 0.4258  mix_decode.d2.loss_dice: 0.5523  mix_decode.d3.loss_cls: 0.0868  mix_decode.d3.loss_mask: 0.4592  mix_decode.d3.loss_dice: 0.5633  mix_decode.d4.loss_cls: 0.1124  mix_decode.d4.loss_mask: 0.4371  mix_decode.d4.loss_dice: 0.5591  mix_decode.d5.loss_cls: 0.1014  mix_decode.d5.loss_mask: 0.4570  mix_decode.d5.loss_dice: 0.5576  mix_decode.d6.loss_cls: 0.1179  mix_decode.d6.loss_mask: 0.4348  mix_decode.d6.loss_dice: 0.5613  mix_decode.d7.loss_cls: 0.1071  mix_decode.d7.loss_mask: 0.4394  mix_decode.d7.loss_dice: 0.5475  mix_decode.d8.loss_cls: 0.0991  mix_decode.d8.loss_mask: 0.4668  mix_decode.d8.loss_dice: 0.5632
2025/03/27 13:49:19 - mmengine - INFO - Iter(train) [11550/20000]  base_lr: 4.6054e-05 lr: 4.6054e-05  eta: 2:04:44  time: 1.0723  data_time: 0.0225  memory: 10812  loss: 39.7238  decode.loss_cls: 0.2745  decode.loss_mask: 1.2561  decode.loss_dice: 1.2897  decode.d0.loss_cls: 0.3359  decode.d0.loss_mask: 1.2728  decode.d0.loss_dice: 1.2856  decode.d1.loss_cls: 0.2449  decode.d1.loss_mask: 1.2175  decode.d1.loss_dice: 1.2444  decode.d2.loss_cls: 0.3157  decode.d2.loss_mask: 1.2200  decode.d2.loss_dice: 1.2188  decode.d3.loss_cls: 0.3183  decode.d3.loss_mask: 1.2229  decode.d3.loss_dice: 1.2214  decode.d4.loss_cls: 0.2227  decode.d4.loss_mask: 1.2912  decode.d4.loss_dice: 1.2685  decode.d5.loss_cls: 0.2519  decode.d5.loss_mask: 1.2869  decode.d5.loss_dice: 1.2754  decode.d6.loss_cls: 0.2704  decode.d6.loss_mask: 1.2502  decode.d6.loss_dice: 1.2767  decode.d7.loss_cls: 0.2869  decode.d7.loss_mask: 1.2195  decode.d7.loss_dice: 1.2719  decode.d8.loss_cls: 0.2457  decode.d8.loss_mask: 1.2422  decode.d8.loss_dice: 1.2783  mix_decode.loss_cls: 0.0908  mix_decode.loss_mask: 0.4693  mix_decode.loss_dice: 0.6148  mix_decode.d0.loss_cls: 0.0996  mix_decode.d0.loss_mask: 0.4705  mix_decode.d0.loss_dice: 0.6358  mix_decode.d1.loss_cls: 0.1223  mix_decode.d1.loss_mask: 0.4631  mix_decode.d1.loss_dice: 0.5984  mix_decode.d2.loss_cls: 0.0838  mix_decode.d2.loss_mask: 0.4677  mix_decode.d2.loss_dice: 0.6147  mix_decode.d3.loss_cls: 0.0988  mix_decode.d3.loss_mask: 0.4716  mix_decode.d3.loss_dice: 0.6106  mix_decode.d4.loss_cls: 0.0765  mix_decode.d4.loss_mask: 0.4743  mix_decode.d4.loss_dice: 0.6180  mix_decode.d5.loss_cls: 0.1055  mix_decode.d5.loss_mask: 0.4713  mix_decode.d5.loss_dice: 0.6168  mix_decode.d6.loss_cls: 0.0721  mix_decode.d6.loss_mask: 0.4733  mix_decode.d6.loss_dice: 0.6324  mix_decode.d7.loss_cls: 0.0662  mix_decode.d7.loss_mask: 0.4996  mix_decode.d7.loss_dice: 0.6417  mix_decode.d8.loss_cls: 0.0870  mix_decode.d8.loss_mask: 0.4757  mix_decode.d8.loss_dice: 0.6249
2025/03/27 13:50:13 - mmengine - INFO - Iter(train) [11600/20000]  base_lr: 4.5808e-05 lr: 4.5808e-05  eta: 2:04:06  time: 1.0765  data_time: 0.0219  memory: 10805  loss: 35.6066  decode.loss_cls: 0.2123  decode.loss_mask: 1.0612  decode.loss_dice: 1.1439  decode.d0.loss_cls: 0.2040  decode.d0.loss_mask: 1.0672  decode.d0.loss_dice: 1.2508  decode.d1.loss_cls: 0.2091  decode.d1.loss_mask: 1.0552  decode.d1.loss_dice: 1.1690  decode.d2.loss_cls: 0.1969  decode.d2.loss_mask: 1.0907  decode.d2.loss_dice: 1.1495  decode.d3.loss_cls: 0.2320  decode.d3.loss_mask: 1.0494  decode.d3.loss_dice: 1.1595  decode.d4.loss_cls: 0.2080  decode.d4.loss_mask: 1.0902  decode.d4.loss_dice: 1.1694  decode.d5.loss_cls: 0.1721  decode.d5.loss_mask: 1.0712  decode.d5.loss_dice: 1.1989  decode.d6.loss_cls: 0.1744  decode.d6.loss_mask: 1.0690  decode.d6.loss_dice: 1.2022  decode.d7.loss_cls: 0.2410  decode.d7.loss_mask: 0.9992  decode.d7.loss_dice: 1.1713  decode.d8.loss_cls: 0.1955  decode.d8.loss_mask: 1.0817  decode.d8.loss_dice: 1.1603  mix_decode.loss_cls: 0.0889  mix_decode.loss_mask: 0.4216  mix_decode.loss_dice: 0.6190  mix_decode.d0.loss_cls: 0.1060  mix_decode.d0.loss_mask: 0.3707  mix_decode.d0.loss_dice: 0.6318  mix_decode.d1.loss_cls: 0.2030  mix_decode.d1.loss_mask: 0.3508  mix_decode.d1.loss_dice: 0.5574  mix_decode.d2.loss_cls: 0.2301  mix_decode.d2.loss_mask: 0.3679  mix_decode.d2.loss_dice: 0.5539  mix_decode.d3.loss_cls: 0.2295  mix_decode.d3.loss_mask: 0.3467  mix_decode.d3.loss_dice: 0.5579  mix_decode.d4.loss_cls: 0.1694  mix_decode.d4.loss_mask: 0.3390  mix_decode.d4.loss_dice: 0.5659  mix_decode.d5.loss_cls: 0.1585  mix_decode.d5.loss_mask: 0.3697  mix_decode.d5.loss_dice: 0.5816  mix_decode.d6.loss_cls: 0.1528  mix_decode.d6.loss_mask: 0.3686  mix_decode.d6.loss_dice: 0.5822  mix_decode.d7.loss_cls: 0.1322  mix_decode.d7.loss_mask: 0.3712  mix_decode.d7.loss_dice: 0.5895  mix_decode.d8.loss_cls: 0.0960  mix_decode.d8.loss_mask: 0.4311  mix_decode.d8.loss_dice: 0.6085
2025/03/27 13:51:06 - mmengine - INFO - Iter(train) [11650/20000]  base_lr: 4.5563e-05 lr: 4.5563e-05  eta: 2:03:29  time: 1.0708  data_time: 0.0224  memory: 10813  loss: 37.4346  decode.loss_cls: 0.3610  decode.loss_mask: 1.1336  decode.loss_dice: 1.2472  decode.d0.loss_cls: 0.3539  decode.d0.loss_mask: 1.1632  decode.d0.loss_dice: 1.3439  decode.d1.loss_cls: 0.2926  decode.d1.loss_mask: 1.1366  decode.d1.loss_dice: 1.2651  decode.d2.loss_cls: 0.3053  decode.d2.loss_mask: 1.1911  decode.d2.loss_dice: 1.2918  decode.d3.loss_cls: 0.3668  decode.d3.loss_mask: 1.1375  decode.d3.loss_dice: 1.2687  decode.d4.loss_cls: 0.2690  decode.d4.loss_mask: 1.1785  decode.d4.loss_dice: 1.2844  decode.d5.loss_cls: 0.2765  decode.d5.loss_mask: 1.1632  decode.d5.loss_dice: 1.2786  decode.d6.loss_cls: 0.2346  decode.d6.loss_mask: 1.1572  decode.d6.loss_dice: 1.2380  decode.d7.loss_cls: 0.2789  decode.d7.loss_mask: 1.1680  decode.d7.loss_dice: 1.2180  decode.d8.loss_cls: 0.2858  decode.d8.loss_mask: 1.1305  decode.d8.loss_dice: 1.2916  mix_decode.loss_cls: 0.0476  mix_decode.loss_mask: 0.4226  mix_decode.loss_dice: 0.5530  mix_decode.d0.loss_cls: 0.0669  mix_decode.d0.loss_mask: 0.4053  mix_decode.d0.loss_dice: 0.5620  mix_decode.d1.loss_cls: 0.0520  mix_decode.d1.loss_mask: 0.4258  mix_decode.d1.loss_dice: 0.5451  mix_decode.d2.loss_cls: 0.0413  mix_decode.d2.loss_mask: 0.4303  mix_decode.d2.loss_dice: 0.5427  mix_decode.d3.loss_cls: 0.0305  mix_decode.d3.loss_mask: 0.4259  mix_decode.d3.loss_dice: 0.5533  mix_decode.d4.loss_cls: 0.0212  mix_decode.d4.loss_mask: 0.4233  mix_decode.d4.loss_dice: 0.5544  mix_decode.d5.loss_cls: 0.0381  mix_decode.d5.loss_mask: 0.4246  mix_decode.d5.loss_dice: 0.5430  mix_decode.d6.loss_cls: 0.0374  mix_decode.d6.loss_mask: 0.4151  mix_decode.d6.loss_dice: 0.5553  mix_decode.d7.loss_cls: 0.0405  mix_decode.d7.loss_mask: 0.4230  mix_decode.d7.loss_dice: 0.5416  mix_decode.d8.loss_cls: 0.0259  mix_decode.d8.loss_mask: 0.4216  mix_decode.d8.loss_dice: 0.5538
2025/03/27 13:52:00 - mmengine - INFO - Iter(train) [11700/20000]  base_lr: 4.5317e-05 lr: 4.5317e-05  eta: 2:02:51  time: 1.0699  data_time: 0.0226  memory: 10807  loss: 35.1628  decode.loss_cls: 0.0833  decode.loss_mask: 1.1464  decode.loss_dice: 1.2791  decode.d0.loss_cls: 0.2044  decode.d0.loss_mask: 1.1630  decode.d0.loss_dice: 1.2806  decode.d1.loss_cls: 0.1114  decode.d1.loss_mask: 1.1698  decode.d1.loss_dice: 1.2918  decode.d2.loss_cls: 0.1029  decode.d2.loss_mask: 1.1650  decode.d2.loss_dice: 1.2729  decode.d3.loss_cls: 0.1018  decode.d3.loss_mask: 1.1520  decode.d3.loss_dice: 1.2823  decode.d4.loss_cls: 0.1194  decode.d4.loss_mask: 1.1553  decode.d4.loss_dice: 1.2787  decode.d5.loss_cls: 0.1076  decode.d5.loss_mask: 1.1567  decode.d5.loss_dice: 1.2948  decode.d6.loss_cls: 0.0809  decode.d6.loss_mask: 1.1483  decode.d6.loss_dice: 1.2941  decode.d7.loss_cls: 0.0792  decode.d7.loss_mask: 1.1472  decode.d7.loss_dice: 1.2953  decode.d8.loss_cls: 0.0802  decode.d8.loss_mask: 1.1441  decode.d8.loss_dice: 1.2843  mix_decode.loss_cls: 0.0877  mix_decode.loss_mask: 0.3609  mix_decode.loss_dice: 0.5211  mix_decode.d0.loss_cls: 0.0475  mix_decode.d0.loss_mask: 0.3936  mix_decode.d0.loss_dice: 0.5678  mix_decode.d1.loss_cls: 0.1028  mix_decode.d1.loss_mask: 0.3513  mix_decode.d1.loss_dice: 0.5128  mix_decode.d2.loss_cls: 0.0876  mix_decode.d2.loss_mask: 0.3602  mix_decode.d2.loss_dice: 0.5054  mix_decode.d3.loss_cls: 0.0859  mix_decode.d3.loss_mask: 0.3594  mix_decode.d3.loss_dice: 0.5048  mix_decode.d4.loss_cls: 0.1044  mix_decode.d4.loss_mask: 0.3529  mix_decode.d4.loss_dice: 0.4966  mix_decode.d5.loss_cls: 0.0664  mix_decode.d5.loss_mask: 0.3605  mix_decode.d5.loss_dice: 0.5123  mix_decode.d6.loss_cls: 0.1038  mix_decode.d6.loss_mask: 0.3645  mix_decode.d6.loss_dice: 0.5135  mix_decode.d7.loss_cls: 0.1088  mix_decode.d7.loss_mask: 0.3624  mix_decode.d7.loss_dice: 0.5167  mix_decode.d8.loss_cls: 0.1019  mix_decode.d8.loss_mask: 0.3577  mix_decode.d8.loss_dice: 0.5188
2025/03/27 13:52:54 - mmengine - INFO - Iter(train) [11750/20000]  base_lr: 4.5071e-05 lr: 4.5071e-05  eta: 2:02:13  time: 1.0707  data_time: 0.0219  memory: 10808  loss: 27.2316  decode.loss_cls: 0.1833  decode.loss_mask: 0.7379  decode.loss_dice: 0.8746  decode.d0.loss_cls: 0.3447  decode.d0.loss_mask: 0.7495  decode.d0.loss_dice: 0.8892  decode.d1.loss_cls: 0.1837  decode.d1.loss_mask: 0.7282  decode.d1.loss_dice: 0.8694  decode.d2.loss_cls: 0.1911  decode.d2.loss_mask: 0.7402  decode.d2.loss_dice: 0.8879  decode.d3.loss_cls: 0.1910  decode.d3.loss_mask: 0.7341  decode.d3.loss_dice: 0.8628  decode.d4.loss_cls: 0.1946  decode.d4.loss_mask: 0.7380  decode.d4.loss_dice: 0.8961  decode.d5.loss_cls: 0.1992  decode.d5.loss_mask: 0.7364  decode.d5.loss_dice: 0.8749  decode.d6.loss_cls: 0.2049  decode.d6.loss_mask: 0.7677  decode.d6.loss_dice: 0.9052  decode.d7.loss_cls: 0.2339  decode.d7.loss_mask: 0.7316  decode.d7.loss_dice: 0.8528  decode.d8.loss_cls: 0.1979  decode.d8.loss_mask: 0.7508  decode.d8.loss_dice: 0.8959  mix_decode.loss_cls: 0.0613  mix_decode.loss_mask: 0.3253  mix_decode.loss_dice: 0.5104  mix_decode.d0.loss_cls: 0.0959  mix_decode.d0.loss_mask: 0.3221  mix_decode.d0.loss_dice: 0.5049  mix_decode.d1.loss_cls: 0.0594  mix_decode.d1.loss_mask: 0.3229  mix_decode.d1.loss_dice: 0.5008  mix_decode.d2.loss_cls: 0.0571  mix_decode.d2.loss_mask: 0.3203  mix_decode.d2.loss_dice: 0.5006  mix_decode.d3.loss_cls: 0.0399  mix_decode.d3.loss_mask: 0.3266  mix_decode.d3.loss_dice: 0.5167  mix_decode.d4.loss_cls: 0.0558  mix_decode.d4.loss_mask: 0.3283  mix_decode.d4.loss_dice: 0.5037  mix_decode.d5.loss_cls: 0.0424  mix_decode.d5.loss_mask: 0.3249  mix_decode.d5.loss_dice: 0.5165  mix_decode.d6.loss_cls: 0.0561  mix_decode.d6.loss_mask: 0.3251  mix_decode.d6.loss_dice: 0.5021  mix_decode.d7.loss_cls: 0.0595  mix_decode.d7.loss_mask: 0.3262  mix_decode.d7.loss_dice: 0.4943  mix_decode.d8.loss_cls: 0.0383  mix_decode.d8.loss_mask: 0.3310  mix_decode.d8.loss_dice: 0.5156
2025/03/27 13:53:47 - mmengine - INFO - Iter(train) [11800/20000]  base_lr: 4.4825e-05 lr: 4.4825e-05  eta: 2:01:35  time: 1.0739  data_time: 0.0218  memory: 10804  loss: 32.1073  decode.loss_cls: 0.0983  decode.loss_mask: 1.0710  decode.loss_dice: 1.2081  decode.d0.loss_cls: 0.1873  decode.d0.loss_mask: 1.0626  decode.d0.loss_dice: 1.2235  decode.d1.loss_cls: 0.0980  decode.d1.loss_mask: 1.0767  decode.d1.loss_dice: 1.2296  decode.d2.loss_cls: 0.0895  decode.d2.loss_mask: 1.0703  decode.d2.loss_dice: 1.1992  decode.d3.loss_cls: 0.0867  decode.d3.loss_mask: 1.0631  decode.d3.loss_dice: 1.2017  decode.d4.loss_cls: 0.1154  decode.d4.loss_mask: 1.0739  decode.d4.loss_dice: 1.1960  decode.d5.loss_cls: 0.1394  decode.d5.loss_mask: 1.0558  decode.d5.loss_dice: 1.2001  decode.d6.loss_cls: 0.1335  decode.d6.loss_mask: 1.0498  decode.d6.loss_dice: 1.1940  decode.d7.loss_cls: 0.1301  decode.d7.loss_mask: 1.0870  decode.d7.loss_dice: 1.2010  decode.d8.loss_cls: 0.1194  decode.d8.loss_mask: 1.0750  decode.d8.loss_dice: 1.1918  mix_decode.loss_cls: 0.0573  mix_decode.loss_mask: 0.3231  mix_decode.loss_dice: 0.4499  mix_decode.d0.loss_cls: 0.0956  mix_decode.d0.loss_mask: 0.3169  mix_decode.d0.loss_dice: 0.4419  mix_decode.d1.loss_cls: 0.0536  mix_decode.d1.loss_mask: 0.3098  mix_decode.d1.loss_dice: 0.4604  mix_decode.d2.loss_cls: 0.0563  mix_decode.d2.loss_mask: 0.3065  mix_decode.d2.loss_dice: 0.4396  mix_decode.d3.loss_cls: 0.0589  mix_decode.d3.loss_mask: 0.3080  mix_decode.d3.loss_dice: 0.4316  mix_decode.d4.loss_cls: 0.0392  mix_decode.d4.loss_mask: 0.3259  mix_decode.d4.loss_dice: 0.4522  mix_decode.d5.loss_cls: 0.0564  mix_decode.d5.loss_mask: 0.3067  mix_decode.d5.loss_dice: 0.4436  mix_decode.d6.loss_cls: 0.0576  mix_decode.d6.loss_mask: 0.3125  mix_decode.d6.loss_dice: 0.4318  mix_decode.d7.loss_cls: 0.0587  mix_decode.d7.loss_mask: 0.3137  mix_decode.d7.loss_dice: 0.4326  mix_decode.d8.loss_cls: 0.0523  mix_decode.d8.loss_mask: 0.3299  mix_decode.d8.loss_dice: 0.4576
2025/03/27 13:54:41 - mmengine - INFO - Iter(train) [11850/20000]  base_lr: 4.4579e-05 lr: 4.4579e-05  eta: 2:00:57  time: 1.0759  data_time: 0.0226  memory: 10802  loss: 32.0624  decode.loss_cls: 0.0729  decode.loss_mask: 1.0200  decode.loss_dice: 1.0737  decode.d0.loss_cls: 0.1795  decode.d0.loss_mask: 1.0850  decode.d0.loss_dice: 1.1532  decode.d1.loss_cls: 0.1024  decode.d1.loss_mask: 1.0564  decode.d1.loss_dice: 1.1332  decode.d2.loss_cls: 0.1018  decode.d2.loss_mask: 1.0341  decode.d2.loss_dice: 1.1151  decode.d3.loss_cls: 0.0769  decode.d3.loss_mask: 1.0381  decode.d3.loss_dice: 1.1001  decode.d4.loss_cls: 0.0912  decode.d4.loss_mask: 1.0415  decode.d4.loss_dice: 1.1175  decode.d5.loss_cls: 0.0974  decode.d5.loss_mask: 1.0378  decode.d5.loss_dice: 1.1053  decode.d6.loss_cls: 0.0885  decode.d6.loss_mask: 1.0351  decode.d6.loss_dice: 1.1050  decode.d7.loss_cls: 0.0874  decode.d7.loss_mask: 1.0412  decode.d7.loss_dice: 1.0884  decode.d8.loss_cls: 0.0928  decode.d8.loss_mask: 1.0255  decode.d8.loss_dice: 1.0941  mix_decode.loss_cls: 0.0810  mix_decode.loss_mask: 0.3450  mix_decode.loss_dice: 0.5265  mix_decode.d0.loss_cls: 0.0736  mix_decode.d0.loss_mask: 0.3336  mix_decode.d0.loss_dice: 0.5658  mix_decode.d1.loss_cls: 0.0984  mix_decode.d1.loss_mask: 0.3393  mix_decode.d1.loss_dice: 0.5242  mix_decode.d2.loss_cls: 0.0635  mix_decode.d2.loss_mask: 0.3411  mix_decode.d2.loss_dice: 0.5422  mix_decode.d3.loss_cls: 0.1059  mix_decode.d3.loss_mask: 0.3452  mix_decode.d3.loss_dice: 0.5210  mix_decode.d4.loss_cls: 0.0739  mix_decode.d4.loss_mask: 0.3470  mix_decode.d4.loss_dice: 0.5428  mix_decode.d5.loss_cls: 0.0520  mix_decode.d5.loss_mask: 0.3414  mix_decode.d5.loss_dice: 0.5315  mix_decode.d6.loss_cls: 0.0566  mix_decode.d6.loss_mask: 0.3498  mix_decode.d6.loss_dice: 0.5273  mix_decode.d7.loss_cls: 0.0935  mix_decode.d7.loss_mask: 0.3510  mix_decode.d7.loss_dice: 0.5212  mix_decode.d8.loss_cls: 0.1080  mix_decode.d8.loss_mask: 0.3448  mix_decode.d8.loss_dice: 0.5243
2025/03/27 13:55:34 - mmengine - INFO - Iter(train) [11900/20000]  base_lr: 4.4333e-05 lr: 4.4333e-05  eta: 2:00:19  time: 1.0704  data_time: 0.0216  memory: 10805  loss: 44.3414  decode.loss_cls: 0.4566  decode.loss_mask: 1.5218  decode.loss_dice: 1.4152  decode.d0.loss_cls: 0.4549  decode.d0.loss_mask: 1.4469  decode.d0.loss_dice: 1.5084  decode.d1.loss_cls: 0.3566  decode.d1.loss_mask: 1.5193  decode.d1.loss_dice: 1.4088  decode.d2.loss_cls: 0.5092  decode.d2.loss_mask: 1.4162  decode.d2.loss_dice: 1.4133  decode.d3.loss_cls: 0.4597  decode.d3.loss_mask: 1.3812  decode.d3.loss_dice: 1.3835  decode.d4.loss_cls: 0.5206  decode.d4.loss_mask: 1.4154  decode.d4.loss_dice: 1.3851  decode.d5.loss_cls: 0.3881  decode.d5.loss_mask: 1.5176  decode.d5.loss_dice: 1.4107  decode.d6.loss_cls: 0.4128  decode.d6.loss_mask: 1.5308  decode.d6.loss_dice: 1.3869  decode.d7.loss_cls: 0.4744  decode.d7.loss_mask: 1.4854  decode.d7.loss_dice: 1.3637  decode.d8.loss_cls: 0.4030  decode.d8.loss_mask: 1.5368  decode.d8.loss_dice: 1.4502  mix_decode.loss_cls: 0.0808  mix_decode.loss_mask: 0.4363  mix_decode.loss_dice: 0.5859  mix_decode.d0.loss_cls: 0.1148  mix_decode.d0.loss_mask: 0.4310  mix_decode.d0.loss_dice: 0.6094  mix_decode.d1.loss_cls: 0.1122  mix_decode.d1.loss_mask: 0.4147  mix_decode.d1.loss_dice: 0.5809  mix_decode.d2.loss_cls: 0.1019  mix_decode.d2.loss_mask: 0.4232  mix_decode.d2.loss_dice: 0.5798  mix_decode.d3.loss_cls: 0.0872  mix_decode.d3.loss_mask: 0.4113  mix_decode.d3.loss_dice: 0.5716  mix_decode.d4.loss_cls: 0.1072  mix_decode.d4.loss_mask: 0.4268  mix_decode.d4.loss_dice: 0.5606  mix_decode.d5.loss_cls: 0.0851  mix_decode.d5.loss_mask: 0.4298  mix_decode.d5.loss_dice: 0.5797  mix_decode.d6.loss_cls: 0.0691  mix_decode.d6.loss_mask: 0.4342  mix_decode.d6.loss_dice: 0.5799  mix_decode.d7.loss_cls: 0.0842  mix_decode.d7.loss_mask: 0.4353  mix_decode.d7.loss_dice: 0.5730  mix_decode.d8.loss_cls: 0.0825  mix_decode.d8.loss_mask: 0.4326  mix_decode.d8.loss_dice: 0.5876
2025/03/27 13:56:29 - mmengine - INFO - Iter(train) [11950/20000]  base_lr: 4.4087e-05 lr: 4.4087e-05  eta: 1:59:40  time: 1.0741  data_time: 0.0225  memory: 10816  loss: 42.2838  decode.loss_cls: 0.2882  decode.loss_mask: 1.2016  decode.loss_dice: 1.2788  decode.d0.loss_cls: 0.3079  decode.d0.loss_mask: 1.2093  decode.d0.loss_dice: 1.3556  decode.d1.loss_cls: 0.2809  decode.d1.loss_mask: 1.2251  decode.d1.loss_dice: 1.3018  decode.d2.loss_cls: 0.1476  decode.d2.loss_mask: 1.2821  decode.d2.loss_dice: 1.3641  decode.d3.loss_cls: 0.1894  decode.d3.loss_mask: 1.2215  decode.d3.loss_dice: 1.2919  decode.d4.loss_cls: 0.2506  decode.d4.loss_mask: 1.2059  decode.d4.loss_dice: 1.3166  decode.d5.loss_cls: 0.2196  decode.d5.loss_mask: 1.2587  decode.d5.loss_dice: 1.2874  decode.d6.loss_cls: 0.2207  decode.d6.loss_mask: 1.2502  decode.d6.loss_dice: 1.2869  decode.d7.loss_cls: 0.2126  decode.d7.loss_mask: 1.2402  decode.d7.loss_dice: 1.3354  decode.d8.loss_cls: 0.2086  decode.d8.loss_mask: 1.2172  decode.d8.loss_dice: 1.2747  mix_decode.loss_cls: 0.1496  mix_decode.loss_mask: 0.6051  mix_decode.loss_dice: 0.6996  mix_decode.d0.loss_cls: 0.1759  mix_decode.d0.loss_mask: 0.5977  mix_decode.d0.loss_dice: 0.7307  mix_decode.d1.loss_cls: 0.1530  mix_decode.d1.loss_mask: 0.6164  mix_decode.d1.loss_dice: 0.7199  mix_decode.d2.loss_cls: 0.1270  mix_decode.d2.loss_mask: 0.6230  mix_decode.d2.loss_dice: 0.7180  mix_decode.d3.loss_cls: 0.1623  mix_decode.d3.loss_mask: 0.5854  mix_decode.d3.loss_dice: 0.6911  mix_decode.d4.loss_cls: 0.1199  mix_decode.d4.loss_mask: 0.6012  mix_decode.d4.loss_dice: 0.7041  mix_decode.d5.loss_cls: 0.1194  mix_decode.d5.loss_mask: 0.6291  mix_decode.d5.loss_dice: 0.7047  mix_decode.d6.loss_cls: 0.1277  mix_decode.d6.loss_mask: 0.6237  mix_decode.d6.loss_dice: 0.7069  mix_decode.d7.loss_cls: 0.1231  mix_decode.d7.loss_mask: 0.5987  mix_decode.d7.loss_dice: 0.7045  mix_decode.d8.loss_cls: 0.1372  mix_decode.d8.loss_mask: 0.5926  mix_decode.d8.loss_dice: 0.7053
2025/03/27 13:57:22 - mmengine - INFO - Exp name: pr2vi_20250327_105544
2025/03/27 13:57:22 - mmengine - INFO - Iter(train) [12000/20000]  base_lr: 4.3840e-05 lr: 4.3840e-05  eta: 1:59:02  time: 1.0700  data_time: 0.0220  memory: 10801  loss: 38.5903  decode.loss_cls: 0.2056  decode.loss_mask: 1.2583  decode.loss_dice: 1.2897  decode.d0.loss_cls: 0.2661  decode.d0.loss_mask: 1.2786  decode.d0.loss_dice: 1.2886  decode.d1.loss_cls: 0.3156  decode.d1.loss_mask: 1.2520  decode.d1.loss_dice: 1.2352  decode.d2.loss_cls: 0.3185  decode.d2.loss_mask: 1.2529  decode.d2.loss_dice: 1.2607  decode.d3.loss_cls: 0.2541  decode.d3.loss_mask: 1.2443  decode.d3.loss_dice: 1.2922  decode.d4.loss_cls: 0.2626  decode.d4.loss_mask: 1.2322  decode.d4.loss_dice: 1.2785  decode.d5.loss_cls: 0.1690  decode.d5.loss_mask: 1.2646  decode.d5.loss_dice: 1.3251  decode.d6.loss_cls: 0.2255  decode.d6.loss_mask: 1.2289  decode.d6.loss_dice: 1.2873  decode.d7.loss_cls: 0.2155  decode.d7.loss_mask: 1.2396  decode.d7.loss_dice: 1.3098  decode.d8.loss_cls: 0.2204  decode.d8.loss_mask: 1.2684  decode.d8.loss_dice: 1.3029  mix_decode.loss_cls: 0.1036  mix_decode.loss_mask: 0.4069  mix_decode.loss_dice: 0.5731  mix_decode.d0.loss_cls: 0.0693  mix_decode.d0.loss_mask: 0.4031  mix_decode.d0.loss_dice: 0.6012  mix_decode.d1.loss_cls: 0.1185  mix_decode.d1.loss_mask: 0.3932  mix_decode.d1.loss_dice: 0.5560  mix_decode.d2.loss_cls: 0.0672  mix_decode.d2.loss_mask: 0.4141  mix_decode.d2.loss_dice: 0.5959  mix_decode.d3.loss_cls: 0.1199  mix_decode.d3.loss_mask: 0.3965  mix_decode.d3.loss_dice: 0.5578  mix_decode.d4.loss_cls: 0.1096  mix_decode.d4.loss_mask: 0.4089  mix_decode.d4.loss_dice: 0.5581  mix_decode.d5.loss_cls: 0.1232  mix_decode.d5.loss_mask: 0.3910  mix_decode.d5.loss_dice: 0.5556  mix_decode.d6.loss_cls: 0.1396  mix_decode.d6.loss_mask: 0.3839  mix_decode.d6.loss_dice: 0.5443  mix_decode.d7.loss_cls: 0.1388  mix_decode.d7.loss_mask: 0.3862  mix_decode.d7.loss_dice: 0.5595  mix_decode.d8.loss_cls: 0.1061  mix_decode.d8.loss_mask: 0.4085  mix_decode.d8.loss_dice: 0.5583
2025/03/27 13:57:22 - mmengine - INFO - Saving checkpoint at 12000 iterations
2025/03/27 13:57:28 - mmengine - INFO - Iter(val) [ 50/398]    eta: 0:00:29  time: 0.0856  data_time: 0.0018  memory: 3117  
2025/03/27 13:57:32 - mmengine - INFO - Iter(val) [100/398]    eta: 0:00:25  time: 0.0850  data_time: 0.0017  memory: 3117  
2025/03/27 13:57:36 - mmengine - INFO - Iter(val) [150/398]    eta: 0:00:21  time: 0.0849  data_time: 0.0017  memory: 3117  
2025/03/27 13:57:41 - mmengine - INFO - Iter(val) [200/398]    eta: 0:00:16  time: 0.0849  data_time: 0.0017  memory: 3117  
2025/03/27 13:57:45 - mmengine - INFO - Iter(val) [250/398]    eta: 0:00:12  time: 0.0850  data_time: 0.0017  memory: 3117  
2025/03/27 13:57:49 - mmengine - INFO - Iter(val) [300/398]    eta: 0:00:08  time: 0.0850  data_time: 0.0017  memory: 3117  
2025/03/27 13:57:53 - mmengine - INFO - Iter(val) [350/398]    eta: 0:00:04  time: 0.0852  data_time: 0.0017  memory: 3117  
2025/03/27 13:57:57 - mmengine - INFO - per class results:
2025/03/27 13:57:57 - mmengine - INFO - 
+--------------------+-------+-------+
|       Class        |  IoU  |  Acc  |
+--------------------+-------+-------+
| impervious_surface | 79.14 | 89.85 |
|      building      | 89.09 | 96.34 |
|   low_vegetation   | 65.17 | 76.92 |
|        tree        | 73.59 | 79.85 |
|        car         | 59.69 |  76.6 |
|      clutter       | 32.96 | 91.89 |
+--------------------+-------+-------+
2025/03/27 13:57:57 - mmengine - INFO - Iter(val) [398/398]    aAcc: 86.2400  mIoU: 66.6100  mAcc: 85.2400  data_time: 0.0018  time: 0.0851
2025/03/27 13:58:51 - mmengine - INFO - Iter(train) [12050/20000]  base_lr: 4.3594e-05 lr: 4.3594e-05  eta: 1:58:23  time: 1.0733  data_time: 0.0225  memory: 10810  loss: 36.6697  decode.loss_cls: 0.2082  decode.loss_mask: 1.0756  decode.loss_dice: 1.2178  decode.d0.loss_cls: 0.2157  decode.d0.loss_mask: 1.0767  decode.d0.loss_dice: 1.3089  decode.d1.loss_cls: 0.2280  decode.d1.loss_mask: 1.0637  decode.d1.loss_dice: 1.2032  decode.d2.loss_cls: 0.2360  decode.d2.loss_mask: 1.0719  decode.d2.loss_dice: 1.2096  decode.d3.loss_cls: 0.2455  decode.d3.loss_mask: 1.0784  decode.d3.loss_dice: 1.2271  decode.d4.loss_cls: 0.2189  decode.d4.loss_mask: 1.0560  decode.d4.loss_dice: 1.2243  decode.d5.loss_cls: 0.2689  decode.d5.loss_mask: 1.0558  decode.d5.loss_dice: 1.2169  decode.d6.loss_cls: 0.2388  decode.d6.loss_mask: 1.0423  decode.d6.loss_dice: 1.2262  decode.d7.loss_cls: 0.1939  decode.d7.loss_mask: 1.0638  decode.d7.loss_dice: 1.2425  decode.d8.loss_cls: 0.2230  decode.d8.loss_mask: 1.0713  decode.d8.loss_dice: 1.2225  mix_decode.loss_cls: 0.0859  mix_decode.loss_mask: 0.4566  mix_decode.loss_dice: 0.5892  mix_decode.d0.loss_cls: 0.0873  mix_decode.d0.loss_mask: 0.4544  mix_decode.d0.loss_dice: 0.5997  mix_decode.d1.loss_cls: 0.0924  mix_decode.d1.loss_mask: 0.4480  mix_decode.d1.loss_dice: 0.5769  mix_decode.d2.loss_cls: 0.1181  mix_decode.d2.loss_mask: 0.4408  mix_decode.d2.loss_dice: 0.5720  mix_decode.d3.loss_cls: 0.1124  mix_decode.d3.loss_mask: 0.4478  mix_decode.d3.loss_dice: 0.5885  mix_decode.d4.loss_cls: 0.0880  mix_decode.d4.loss_mask: 0.4508  mix_decode.d4.loss_dice: 0.5878  mix_decode.d5.loss_cls: 0.1052  mix_decode.d5.loss_mask: 0.4642  mix_decode.d5.loss_dice: 0.5837  mix_decode.d6.loss_cls: 0.1248  mix_decode.d6.loss_mask: 0.4554  mix_decode.d6.loss_dice: 0.5910  mix_decode.d7.loss_cls: 0.0883  mix_decode.d7.loss_mask: 0.4640  mix_decode.d7.loss_dice: 0.5929  mix_decode.d8.loss_cls: 0.1071  mix_decode.d8.loss_mask: 0.4669  mix_decode.d8.loss_dice: 0.5985
2025/03/27 13:59:45 - mmengine - INFO - Iter(train) [12100/20000]  base_lr: 4.3347e-05 lr: 4.3347e-05  eta: 1:57:44  time: 1.0707  data_time: 0.0219  memory: 10793  loss: 34.5575  decode.loss_cls: 0.1579  decode.loss_mask: 0.9778  decode.loss_dice: 1.2357  decode.d0.loss_cls: 0.1503  decode.d0.loss_mask: 1.0205  decode.d0.loss_dice: 1.3156  decode.d1.loss_cls: 0.1780  decode.d1.loss_mask: 0.9884  decode.d1.loss_dice: 1.2449  decode.d2.loss_cls: 0.1318  decode.d2.loss_mask: 0.9900  decode.d2.loss_dice: 1.2441  decode.d3.loss_cls: 0.1365  decode.d3.loss_mask: 0.9934  decode.d3.loss_dice: 1.2391  decode.d4.loss_cls: 0.1101  decode.d4.loss_mask: 0.9891  decode.d4.loss_dice: 1.2529  decode.d5.loss_cls: 0.1460  decode.d5.loss_mask: 0.9755  decode.d5.loss_dice: 1.2645  decode.d6.loss_cls: 0.1070  decode.d6.loss_mask: 0.9854  decode.d6.loss_dice: 1.2621  decode.d7.loss_cls: 0.1188  decode.d7.loss_mask: 0.9789  decode.d7.loss_dice: 1.2412  decode.d8.loss_cls: 0.1352  decode.d8.loss_mask: 0.9861  decode.d8.loss_dice: 1.2521  mix_decode.loss_cls: 0.1171  mix_decode.loss_mask: 0.3629  mix_decode.loss_dice: 0.6082  mix_decode.d0.loss_cls: 0.0864  mix_decode.d0.loss_mask: 0.3747  mix_decode.d0.loss_dice: 0.6510  mix_decode.d1.loss_cls: 0.1393  mix_decode.d1.loss_mask: 0.3671  mix_decode.d1.loss_dice: 0.6099  mix_decode.d2.loss_cls: 0.0702  mix_decode.d2.loss_mask: 0.3662  mix_decode.d2.loss_dice: 0.6194  mix_decode.d3.loss_cls: 0.0761  mix_decode.d3.loss_mask: 0.3646  mix_decode.d3.loss_dice: 0.6129  mix_decode.d4.loss_cls: 0.0787  mix_decode.d4.loss_mask: 0.3644  mix_decode.d4.loss_dice: 0.6192  mix_decode.d5.loss_cls: 0.0717  mix_decode.d5.loss_mask: 0.3628  mix_decode.d5.loss_dice: 0.6148  mix_decode.d6.loss_cls: 0.0851  mix_decode.d6.loss_mask: 0.3687  mix_decode.d6.loss_dice: 0.6152  mix_decode.d7.loss_cls: 0.0580  mix_decode.d7.loss_mask: 0.3691  mix_decode.d7.loss_dice: 0.6235  mix_decode.d8.loss_cls: 0.1112  mix_decode.d8.loss_mask: 0.3649  mix_decode.d8.loss_dice: 0.6153
2025/03/27 14:00:38 - mmengine - INFO - Iter(train) [12150/20000]  base_lr: 4.3100e-05 lr: 4.3100e-05  eta: 1:57:05  time: 1.0735  data_time: 0.0222  memory: 10805  loss: 38.9045  decode.loss_cls: 0.1542  decode.loss_mask: 1.1231  decode.loss_dice: 1.2826  decode.d0.loss_cls: 0.2066  decode.d0.loss_mask: 1.1101  decode.d0.loss_dice: 1.3100  decode.d1.loss_cls: 0.1350  decode.d1.loss_mask: 1.1177  decode.d1.loss_dice: 1.2960  decode.d2.loss_cls: 0.1100  decode.d2.loss_mask: 1.1141  decode.d2.loss_dice: 1.2815  decode.d3.loss_cls: 0.2042  decode.d3.loss_mask: 1.1254  decode.d3.loss_dice: 1.2515  decode.d4.loss_cls: 0.1726  decode.d4.loss_mask: 1.1133  decode.d4.loss_dice: 1.2457  decode.d5.loss_cls: 0.1595  decode.d5.loss_mask: 1.1026  decode.d5.loss_dice: 1.2717  decode.d6.loss_cls: 0.1275  decode.d6.loss_mask: 1.1301  decode.d6.loss_dice: 1.2803  decode.d7.loss_cls: 0.1253  decode.d7.loss_mask: 1.1406  decode.d7.loss_dice: 1.3013  decode.d8.loss_cls: 0.2056  decode.d8.loss_mask: 1.1054  decode.d8.loss_dice: 1.2673  mix_decode.loss_cls: 0.1905  mix_decode.loss_mask: 0.4444  mix_decode.loss_dice: 0.7026  mix_decode.d0.loss_cls: 0.1980  mix_decode.d0.loss_mask: 0.4423  mix_decode.d0.loss_dice: 0.7225  mix_decode.d1.loss_cls: 0.2575  mix_decode.d1.loss_mask: 0.4363  mix_decode.d1.loss_dice: 0.6723  mix_decode.d2.loss_cls: 0.2133  mix_decode.d2.loss_mask: 0.4402  mix_decode.d2.loss_dice: 0.6855  mix_decode.d3.loss_cls: 0.2237  mix_decode.d3.loss_mask: 0.4521  mix_decode.d3.loss_dice: 0.6761  mix_decode.d4.loss_cls: 0.1320  mix_decode.d4.loss_mask: 0.4509  mix_decode.d4.loss_dice: 0.6981  mix_decode.d5.loss_cls: 0.1789  mix_decode.d5.loss_mask: 0.4492  mix_decode.d5.loss_dice: 0.6829  mix_decode.d6.loss_cls: 0.2101  mix_decode.d6.loss_mask: 0.4458  mix_decode.d6.loss_dice: 0.6745  mix_decode.d7.loss_cls: 0.1592  mix_decode.d7.loss_mask: 0.4483  mix_decode.d7.loss_dice: 0.7164  mix_decode.d8.loss_cls: 0.1651  mix_decode.d8.loss_mask: 0.4431  mix_decode.d8.loss_dice: 0.7220
2025/03/27 14:01:32 - mmengine - INFO - Iter(train) [12200/20000]  base_lr: 4.2853e-05 lr: 4.2853e-05  eta: 1:56:26  time: 1.0895  data_time: 0.0218  memory: 10803  loss: 34.1479  decode.loss_cls: 0.1641  decode.loss_mask: 1.0092  decode.loss_dice: 1.1689  decode.d0.loss_cls: 0.2343  decode.d0.loss_mask: 1.0004  decode.d0.loss_dice: 1.1631  decode.d1.loss_cls: 0.2121  decode.d1.loss_mask: 0.9861  decode.d1.loss_dice: 1.1388  decode.d2.loss_cls: 0.1937  decode.d2.loss_mask: 0.9860  decode.d2.loss_dice: 1.1345  decode.d3.loss_cls: 0.1934  decode.d3.loss_mask: 0.9775  decode.d3.loss_dice: 1.1210  decode.d4.loss_cls: 0.2534  decode.d4.loss_mask: 0.9717  decode.d4.loss_dice: 1.0997  decode.d5.loss_cls: 0.3054  decode.d5.loss_mask: 0.9428  decode.d5.loss_dice: 1.0974  decode.d6.loss_cls: 0.2331  decode.d6.loss_mask: 0.9608  decode.d6.loss_dice: 1.1265  decode.d7.loss_cls: 0.2318  decode.d7.loss_mask: 0.9714  decode.d7.loss_dice: 1.1349  decode.d8.loss_cls: 0.1641  decode.d8.loss_mask: 0.9985  decode.d8.loss_dice: 1.1641  mix_decode.loss_cls: 0.0342  mix_decode.loss_mask: 0.4321  mix_decode.loss_dice: 0.5956  mix_decode.d0.loss_cls: 0.0761  mix_decode.d0.loss_mask: 0.4142  mix_decode.d0.loss_dice: 0.6143  mix_decode.d1.loss_cls: 0.0998  mix_decode.d1.loss_mask: 0.3993  mix_decode.d1.loss_dice: 0.6191  mix_decode.d2.loss_cls: 0.0461  mix_decode.d2.loss_mask: 0.4218  mix_decode.d2.loss_dice: 0.5966  mix_decode.d3.loss_cls: 0.0780  mix_decode.d3.loss_mask: 0.4039  mix_decode.d3.loss_dice: 0.5912  mix_decode.d4.loss_cls: 0.0750  mix_decode.d4.loss_mask: 0.4040  mix_decode.d4.loss_dice: 0.5932  mix_decode.d5.loss_cls: 0.0465  mix_decode.d5.loss_mask: 0.4202  mix_decode.d5.loss_dice: 0.5939  mix_decode.d6.loss_cls: 0.0375  mix_decode.d6.loss_mask: 0.4443  mix_decode.d6.loss_dice: 0.5943  mix_decode.d7.loss_cls: 0.0630  mix_decode.d7.loss_mask: 0.4193  mix_decode.d7.loss_dice: 0.6093  mix_decode.d8.loss_cls: 0.0733  mix_decode.d8.loss_mask: 0.4051  mix_decode.d8.loss_dice: 0.6080
2025/03/27 14:02:26 - mmengine - INFO - Iter(train) [12250/20000]  base_lr: 4.2605e-05 lr: 4.2605e-05  eta: 1:55:48  time: 1.1089  data_time: 0.0254  memory: 10812  loss: 35.5707  decode.loss_cls: 0.1533  decode.loss_mask: 1.0450  decode.loss_dice: 1.3142  decode.d0.loss_cls: 0.2648  decode.d0.loss_mask: 1.0962  decode.d0.loss_dice: 1.3834  decode.d1.loss_cls: 0.2909  decode.d1.loss_mask: 1.0252  decode.d1.loss_dice: 1.2579  decode.d2.loss_cls: 0.1784  decode.d2.loss_mask: 1.0286  decode.d2.loss_dice: 1.3012  decode.d3.loss_cls: 0.2879  decode.d3.loss_mask: 1.0600  decode.d3.loss_dice: 1.2729  decode.d4.loss_cls: 0.2455  decode.d4.loss_mask: 1.0695  decode.d4.loss_dice: 1.2723  decode.d5.loss_cls: 0.2348  decode.d5.loss_mask: 1.0171  decode.d5.loss_dice: 1.2727  decode.d6.loss_cls: 0.1903  decode.d6.loss_mask: 1.0505  decode.d6.loss_dice: 1.2828  decode.d7.loss_cls: 0.1985  decode.d7.loss_mask: 1.0567  decode.d7.loss_dice: 1.2969  decode.d8.loss_cls: 0.2201  decode.d8.loss_mask: 1.0777  decode.d8.loss_dice: 1.2820  mix_decode.loss_cls: 0.1028  mix_decode.loss_mask: 0.3770  mix_decode.loss_dice: 0.5196  mix_decode.d0.loss_cls: 0.0653  mix_decode.d0.loss_mask: 0.3820  mix_decode.d0.loss_dice: 0.5610  mix_decode.d1.loss_cls: 0.0869  mix_decode.d1.loss_mask: 0.3769  mix_decode.d1.loss_dice: 0.5374  mix_decode.d2.loss_cls: 0.1094  mix_decode.d2.loss_mask: 0.3724  mix_decode.d2.loss_dice: 0.5265  mix_decode.d3.loss_cls: 0.0962  mix_decode.d3.loss_mask: 0.3774  mix_decode.d3.loss_dice: 0.5206  mix_decode.d4.loss_cls: 0.0708  mix_decode.d4.loss_mask: 0.3703  mix_decode.d4.loss_dice: 0.5205  mix_decode.d5.loss_cls: 0.0705  mix_decode.d5.loss_mask: 0.3693  mix_decode.d5.loss_dice: 0.5105  mix_decode.d6.loss_cls: 0.0642  mix_decode.d6.loss_mask: 0.3730  mix_decode.d6.loss_dice: 0.5276  mix_decode.d7.loss_cls: 0.0701  mix_decode.d7.loss_mask: 0.3715  mix_decode.d7.loss_dice: 0.5304  mix_decode.d8.loss_cls: 0.0902  mix_decode.d8.loss_mask: 0.3746  mix_decode.d8.loss_dice: 0.5185
2025/03/27 14:03:20 - mmengine - INFO - Iter(train) [12300/20000]  base_lr: 4.2358e-05 lr: 4.2358e-05  eta: 1:55:09  time: 1.0736  data_time: 0.0220  memory: 10808  loss: 31.2102  decode.loss_cls: 0.0898  decode.loss_mask: 0.8910  decode.loss_dice: 1.0425  decode.d0.loss_cls: 0.1663  decode.d0.loss_mask: 0.8937  decode.d0.loss_dice: 1.0710  decode.d1.loss_cls: 0.1406  decode.d1.loss_mask: 0.8948  decode.d1.loss_dice: 1.0237  decode.d2.loss_cls: 0.0990  decode.d2.loss_mask: 0.8901  decode.d2.loss_dice: 1.0373  decode.d3.loss_cls: 0.0893  decode.d3.loss_mask: 0.8827  decode.d3.loss_dice: 1.0376  decode.d4.loss_cls: 0.0908  decode.d4.loss_mask: 0.8887  decode.d4.loss_dice: 1.0423  decode.d5.loss_cls: 0.0923  decode.d5.loss_mask: 0.8923  decode.d5.loss_dice: 1.0295  decode.d6.loss_cls: 0.0910  decode.d6.loss_mask: 0.8931  decode.d6.loss_dice: 1.0380  decode.d7.loss_cls: 0.0969  decode.d7.loss_mask: 0.8920  decode.d7.loss_dice: 1.0265  decode.d8.loss_cls: 0.0937  decode.d8.loss_mask: 0.8965  decode.d8.loss_dice: 1.0343  mix_decode.loss_cls: 0.1215  mix_decode.loss_mask: 0.4005  mix_decode.loss_dice: 0.5801  mix_decode.d0.loss_cls: 0.0995  mix_decode.d0.loss_mask: 0.3840  mix_decode.d0.loss_dice: 0.6118  mix_decode.d1.loss_cls: 0.1401  mix_decode.d1.loss_mask: 0.3975  mix_decode.d1.loss_dice: 0.5684  mix_decode.d2.loss_cls: 0.1245  mix_decode.d2.loss_mask: 0.3932  mix_decode.d2.loss_dice: 0.5636  mix_decode.d3.loss_cls: 0.1317  mix_decode.d3.loss_mask: 0.3932  mix_decode.d3.loss_dice: 0.5646  mix_decode.d4.loss_cls: 0.1078  mix_decode.d4.loss_mask: 0.3970  mix_decode.d4.loss_dice: 0.5803  mix_decode.d5.loss_cls: 0.0888  mix_decode.d5.loss_mask: 0.3963  mix_decode.d5.loss_dice: 0.5920  mix_decode.d6.loss_cls: 0.0873  mix_decode.d6.loss_mask: 0.3960  mix_decode.d6.loss_dice: 0.5713  mix_decode.d7.loss_cls: 0.0928  mix_decode.d7.loss_mask: 0.4005  mix_decode.d7.loss_dice: 0.5877  mix_decode.d8.loss_cls: 0.0895  mix_decode.d8.loss_mask: 0.4011  mix_decode.d8.loss_dice: 0.6008
2025/03/27 14:04:15 - mmengine - INFO - Iter(train) [12350/20000]  base_lr: 4.2110e-05 lr: 4.2110e-05  eta: 1:54:30  time: 1.0757  data_time: 0.0219  memory: 10806  loss: 39.6779  decode.loss_cls: 0.2433  decode.loss_mask: 1.4033  decode.loss_dice: 1.3009  decode.d0.loss_cls: 0.3657  decode.d0.loss_mask: 1.2277  decode.d0.loss_dice: 1.3913  decode.d1.loss_cls: 0.2556  decode.d1.loss_mask: 1.2810  decode.d1.loss_dice: 1.3064  decode.d2.loss_cls: 0.2205  decode.d2.loss_mask: 1.3310  decode.d2.loss_dice: 1.2663  decode.d3.loss_cls: 0.2309  decode.d3.loss_mask: 1.3428  decode.d3.loss_dice: 1.2775  decode.d4.loss_cls: 0.2901  decode.d4.loss_mask: 1.3048  decode.d4.loss_dice: 1.2787  decode.d5.loss_cls: 0.2814  decode.d5.loss_mask: 1.3041  decode.d5.loss_dice: 1.2779  decode.d6.loss_cls: 0.3295  decode.d6.loss_mask: 1.2953  decode.d6.loss_dice: 1.2817  decode.d7.loss_cls: 0.3292  decode.d7.loss_mask: 1.3310  decode.d7.loss_dice: 1.2747  decode.d8.loss_cls: 0.3123  decode.d8.loss_mask: 1.3597  decode.d8.loss_dice: 1.2687  mix_decode.loss_cls: 0.1648  mix_decode.loss_mask: 0.3698  mix_decode.loss_dice: 0.5296  mix_decode.d0.loss_cls: 0.1361  mix_decode.d0.loss_mask: 0.3425  mix_decode.d0.loss_dice: 0.6047  mix_decode.d1.loss_cls: 0.1260  mix_decode.d1.loss_mask: 0.3682  mix_decode.d1.loss_dice: 0.5631  mix_decode.d2.loss_cls: 0.1371  mix_decode.d2.loss_mask: 0.3719  mix_decode.d2.loss_dice: 0.5511  mix_decode.d3.loss_cls: 0.1468  mix_decode.d3.loss_mask: 0.3634  mix_decode.d3.loss_dice: 0.5553  mix_decode.d4.loss_cls: 0.1259  mix_decode.d4.loss_mask: 0.3626  mix_decode.d4.loss_dice: 0.5737  mix_decode.d5.loss_cls: 0.1170  mix_decode.d5.loss_mask: 0.3710  mix_decode.d5.loss_dice: 0.5784  mix_decode.d6.loss_cls: 0.1573  mix_decode.d6.loss_mask: 0.3548  mix_decode.d6.loss_dice: 0.5625  mix_decode.d7.loss_cls: 0.1461  mix_decode.d7.loss_mask: 0.3738  mix_decode.d7.loss_dice: 0.5587  mix_decode.d8.loss_cls: 0.1658  mix_decode.d8.loss_mask: 0.3778  mix_decode.d8.loss_dice: 0.5585
2025/03/27 14:05:09 - mmengine - INFO - Iter(train) [12400/20000]  base_lr: 4.1862e-05 lr: 4.1862e-05  eta: 1:53:50  time: 1.0744  data_time: 0.0219  memory: 10801  loss: 36.2375  decode.loss_cls: 0.1706  decode.loss_mask: 1.1606  decode.loss_dice: 1.1813  decode.d0.loss_cls: 0.2501  decode.d0.loss_mask: 1.2197  decode.d0.loss_dice: 1.2192  decode.d1.loss_cls: 0.2473  decode.d1.loss_mask: 1.1796  decode.d1.loss_dice: 1.1655  decode.d2.loss_cls: 0.2188  decode.d2.loss_mask: 1.1763  decode.d2.loss_dice: 1.1503  decode.d3.loss_cls: 0.1855  decode.d3.loss_mask: 1.1574  decode.d3.loss_dice: 1.1610  decode.d4.loss_cls: 0.1905  decode.d4.loss_mask: 1.1714  decode.d4.loss_dice: 1.1553  decode.d5.loss_cls: 0.1886  decode.d5.loss_mask: 1.1752  decode.d5.loss_dice: 1.1696  decode.d6.loss_cls: 0.1708  decode.d6.loss_mask: 1.1633  decode.d6.loss_dice: 1.1708  decode.d7.loss_cls: 0.1929  decode.d7.loss_mask: 1.1696  decode.d7.loss_dice: 1.1570  decode.d8.loss_cls: 0.1822  decode.d8.loss_mask: 1.1628  decode.d8.loss_dice: 1.1776  mix_decode.loss_cls: 0.0832  mix_decode.loss_mask: 0.4428  mix_decode.loss_dice: 0.5461  mix_decode.d0.loss_cls: 0.1018  mix_decode.d0.loss_mask: 0.4267  mix_decode.d0.loss_dice: 0.5706  mix_decode.d1.loss_cls: 0.1120  mix_decode.d1.loss_mask: 0.4438  mix_decode.d1.loss_dice: 0.5483  mix_decode.d2.loss_cls: 0.0802  mix_decode.d2.loss_mask: 0.4485  mix_decode.d2.loss_dice: 0.5507  mix_decode.d3.loss_cls: 0.0701  mix_decode.d3.loss_mask: 0.4474  mix_decode.d3.loss_dice: 0.5519  mix_decode.d4.loss_cls: 0.0857  mix_decode.d4.loss_mask: 0.4434  mix_decode.d4.loss_dice: 0.5536  mix_decode.d5.loss_cls: 0.0861  mix_decode.d5.loss_mask: 0.4397  mix_decode.d5.loss_dice: 0.5454  mix_decode.d6.loss_cls: 0.0823  mix_decode.d6.loss_mask: 0.4453  mix_decode.d6.loss_dice: 0.5505  mix_decode.d7.loss_cls: 0.0926  mix_decode.d7.loss_mask: 0.4432  mix_decode.d7.loss_dice: 0.5364  mix_decode.d8.loss_cls: 0.0738  mix_decode.d8.loss_mask: 0.4433  mix_decode.d8.loss_dice: 0.5514
2025/03/27 14:06:04 - mmengine - INFO - Iter(train) [12450/20000]  base_lr: 4.1615e-05 lr: 4.1615e-05  eta: 1:53:11  time: 1.0759  data_time: 0.0224  memory: 10807  loss: 37.9129  decode.loss_cls: 0.1103  decode.loss_mask: 1.1974  decode.loss_dice: 1.2815  decode.d0.loss_cls: 0.2016  decode.d0.loss_mask: 1.1978  decode.d0.loss_dice: 1.2989  decode.d1.loss_cls: 0.1154  decode.d1.loss_mask: 1.2019  decode.d1.loss_dice: 1.2768  decode.d2.loss_cls: 0.2010  decode.d2.loss_mask: 1.1893  decode.d2.loss_dice: 1.2595  decode.d3.loss_cls: 0.1337  decode.d3.loss_mask: 1.2221  decode.d3.loss_dice: 1.2571  decode.d4.loss_cls: 0.1353  decode.d4.loss_mask: 1.2278  decode.d4.loss_dice: 1.2792  decode.d5.loss_cls: 0.1245  decode.d5.loss_mask: 1.2142  decode.d5.loss_dice: 1.2784  decode.d6.loss_cls: 0.1561  decode.d6.loss_mask: 1.1932  decode.d6.loss_dice: 1.2712  decode.d7.loss_cls: 0.1301  decode.d7.loss_mask: 1.2124  decode.d7.loss_dice: 1.2513  decode.d8.loss_cls: 0.1648  decode.d8.loss_mask: 1.1847  decode.d8.loss_dice: 1.2487  mix_decode.loss_cls: 0.1401  mix_decode.loss_mask: 0.4314  mix_decode.loss_dice: 0.6216  mix_decode.d0.loss_cls: 0.1357  mix_decode.d0.loss_mask: 0.4123  mix_decode.d0.loss_dice: 0.6355  mix_decode.d1.loss_cls: 0.1411  mix_decode.d1.loss_mask: 0.4016  mix_decode.d1.loss_dice: 0.6045  mix_decode.d2.loss_cls: 0.1628  mix_decode.d2.loss_mask: 0.3955  mix_decode.d2.loss_dice: 0.5939  mix_decode.d3.loss_cls: 0.1520  mix_decode.d3.loss_mask: 0.3949  mix_decode.d3.loss_dice: 0.6017  mix_decode.d4.loss_cls: 0.1494  mix_decode.d4.loss_mask: 0.4049  mix_decode.d4.loss_dice: 0.5988  mix_decode.d5.loss_cls: 0.1548  mix_decode.d5.loss_mask: 0.3975  mix_decode.d5.loss_dice: 0.6078  mix_decode.d6.loss_cls: 0.1439  mix_decode.d6.loss_mask: 0.4296  mix_decode.d6.loss_dice: 0.6215  mix_decode.d7.loss_cls: 0.1814  mix_decode.d7.loss_mask: 0.4012  mix_decode.d7.loss_dice: 0.6034  mix_decode.d8.loss_cls: 0.1565  mix_decode.d8.loss_mask: 0.4044  mix_decode.d8.loss_dice: 0.6172
2025/03/27 14:06:59 - mmengine - INFO - Iter(train) [12500/20000]  base_lr: 4.1366e-05 lr: 4.1366e-05  eta: 1:52:32  time: 1.0944  data_time: 0.0245  memory: 10810  loss: 40.7289  decode.loss_cls: 0.3031  decode.loss_mask: 1.2661  decode.loss_dice: 1.4308  decode.d0.loss_cls: 0.3265  decode.d0.loss_mask: 1.2531  decode.d0.loss_dice: 1.4764  decode.d1.loss_cls: 0.4057  decode.d1.loss_mask: 1.2041  decode.d1.loss_dice: 1.3654  decode.d2.loss_cls: 0.3940  decode.d2.loss_mask: 1.2280  decode.d2.loss_dice: 1.4083  decode.d3.loss_cls: 0.3093  decode.d3.loss_mask: 1.2276  decode.d3.loss_dice: 1.4074  decode.d4.loss_cls: 0.2781  decode.d4.loss_mask: 1.2936  decode.d4.loss_dice: 1.4191  decode.d5.loss_cls: 0.3355  decode.d5.loss_mask: 1.2247  decode.d5.loss_dice: 1.3958  decode.d6.loss_cls: 0.4533  decode.d6.loss_mask: 1.2108  decode.d6.loss_dice: 1.3733  decode.d7.loss_cls: 0.3806  decode.d7.loss_mask: 1.2036  decode.d7.loss_dice: 1.3709  decode.d8.loss_cls: 0.3295  decode.d8.loss_mask: 1.2932  decode.d8.loss_dice: 1.3890  mix_decode.loss_cls: 0.1526  mix_decode.loss_mask: 0.3505  mix_decode.loss_dice: 0.5912  mix_decode.d0.loss_cls: 0.1138  mix_decode.d0.loss_mask: 0.3514  mix_decode.d0.loss_dice: 0.6152  mix_decode.d1.loss_cls: 0.1328  mix_decode.d1.loss_mask: 0.3517  mix_decode.d1.loss_dice: 0.5943  mix_decode.d2.loss_cls: 0.1218  mix_decode.d2.loss_mask: 0.3522  mix_decode.d2.loss_dice: 0.5969  mix_decode.d3.loss_cls: 0.1605  mix_decode.d3.loss_mask: 0.3535  mix_decode.d3.loss_dice: 0.5902  mix_decode.d4.loss_cls: 0.1289  mix_decode.d4.loss_mask: 0.3516  mix_decode.d4.loss_dice: 0.5855  mix_decode.d5.loss_cls: 0.0966  mix_decode.d5.loss_mask: 0.3583  mix_decode.d5.loss_dice: 0.6080  mix_decode.d6.loss_cls: 0.1407  mix_decode.d6.loss_mask: 0.3498  mix_decode.d6.loss_dice: 0.5824  mix_decode.d7.loss_cls: 0.0899  mix_decode.d7.loss_mask: 0.3608  mix_decode.d7.loss_dice: 0.6137  mix_decode.d8.loss_cls: 0.1410  mix_decode.d8.loss_mask: 0.3481  mix_decode.d8.loss_dice: 0.5883
2025/03/27 14:07:52 - mmengine - INFO - Iter(train) [12550/20000]  base_lr: 4.1118e-05 lr: 4.1118e-05  eta: 1:51:52  time: 1.0749  data_time: 0.0219  memory: 10803  loss: 40.4581  decode.loss_cls: 0.3840  decode.loss_mask: 1.3732  decode.loss_dice: 1.3329  decode.d0.loss_cls: 0.3453  decode.d0.loss_mask: 1.3473  decode.d0.loss_dice: 1.4141  decode.d1.loss_cls: 0.4142  decode.d1.loss_mask: 1.3626  decode.d1.loss_dice: 1.2915  decode.d2.loss_cls: 0.3907  decode.d2.loss_mask: 1.3401  decode.d2.loss_dice: 1.2897  decode.d3.loss_cls: 0.3678  decode.d3.loss_mask: 1.3383  decode.d3.loss_dice: 1.2840  decode.d4.loss_cls: 0.3764  decode.d4.loss_mask: 1.3626  decode.d4.loss_dice: 1.2968  decode.d5.loss_cls: 0.3581  decode.d5.loss_mask: 1.3659  decode.d5.loss_dice: 1.2974  decode.d6.loss_cls: 0.4135  decode.d6.loss_mask: 1.3417  decode.d6.loss_dice: 1.3128  decode.d7.loss_cls: 0.4114  decode.d7.loss_mask: 1.3611  decode.d7.loss_dice: 1.2984  decode.d8.loss_cls: 0.4012  decode.d8.loss_mask: 1.3333  decode.d8.loss_dice: 1.2844  mix_decode.loss_cls: 0.1034  mix_decode.loss_mask: 0.3879  mix_decode.loss_dice: 0.5126  mix_decode.d0.loss_cls: 0.1378  mix_decode.d0.loss_mask: 0.3677  mix_decode.d0.loss_dice: 0.5166  mix_decode.d1.loss_cls: 0.1264  mix_decode.d1.loss_mask: 0.3747  mix_decode.d1.loss_dice: 0.5054  mix_decode.d2.loss_cls: 0.1123  mix_decode.d2.loss_mask: 0.3768  mix_decode.d2.loss_dice: 0.5118  mix_decode.d3.loss_cls: 0.1061  mix_decode.d3.loss_mask: 0.3759  mix_decode.d3.loss_dice: 0.5044  mix_decode.d4.loss_cls: 0.1302  mix_decode.d4.loss_mask: 0.3718  mix_decode.d4.loss_dice: 0.4987  mix_decode.d5.loss_cls: 0.1177  mix_decode.d5.loss_mask: 0.3717  mix_decode.d5.loss_dice: 0.4993  mix_decode.d6.loss_cls: 0.1048  mix_decode.d6.loss_mask: 0.3731  mix_decode.d6.loss_dice: 0.4935  mix_decode.d7.loss_cls: 0.1024  mix_decode.d7.loss_mask: 0.3907  mix_decode.d7.loss_dice: 0.5034  mix_decode.d8.loss_cls: 0.1088  mix_decode.d8.loss_mask: 0.3704  mix_decode.d8.loss_dice: 0.5113
2025/03/27 14:08:46 - mmengine - INFO - Iter(train) [12600/20000]  base_lr: 4.0870e-05 lr: 4.0870e-05  eta: 1:51:13  time: 1.0771  data_time: 0.0224  memory: 10806  loss: 33.6325  decode.loss_cls: 0.1894  decode.loss_mask: 1.0319  decode.loss_dice: 1.0903  decode.d0.loss_cls: 0.2417  decode.d0.loss_mask: 1.0712  decode.d0.loss_dice: 1.1070  decode.d1.loss_cls: 0.1851  decode.d1.loss_mask: 1.0398  decode.d1.loss_dice: 1.1093  decode.d2.loss_cls: 0.2110  decode.d2.loss_mask: 1.0593  decode.d2.loss_dice: 1.0980  decode.d3.loss_cls: 0.1690  decode.d3.loss_mask: 1.0440  decode.d3.loss_dice: 1.1047  decode.d4.loss_cls: 0.1507  decode.d4.loss_mask: 1.0334  decode.d4.loss_dice: 1.0914  decode.d5.loss_cls: 0.1702  decode.d5.loss_mask: 1.0403  decode.d5.loss_dice: 1.0993  decode.d6.loss_cls: 0.1664  decode.d6.loss_mask: 1.0286  decode.d6.loss_dice: 1.0877  decode.d7.loss_cls: 0.1782  decode.d7.loss_mask: 1.0246  decode.d7.loss_dice: 1.0937  decode.d8.loss_cls: 0.1741  decode.d8.loss_mask: 1.0227  decode.d8.loss_dice: 1.0952  mix_decode.loss_cls: 0.0859  mix_decode.loss_mask: 0.4421  mix_decode.loss_dice: 0.4914  mix_decode.d0.loss_cls: 0.1346  mix_decode.d0.loss_mask: 0.4265  mix_decode.d0.loss_dice: 0.5197  mix_decode.d1.loss_cls: 0.1312  mix_decode.d1.loss_mask: 0.4354  mix_decode.d1.loss_dice: 0.4869  mix_decode.d2.loss_cls: 0.1040  mix_decode.d2.loss_mask: 0.4335  mix_decode.d2.loss_dice: 0.4957  mix_decode.d3.loss_cls: 0.1115  mix_decode.d3.loss_mask: 0.4419  mix_decode.d3.loss_dice: 0.4755  mix_decode.d4.loss_cls: 0.0964  mix_decode.d4.loss_mask: 0.4440  mix_decode.d4.loss_dice: 0.4925  mix_decode.d5.loss_cls: 0.1058  mix_decode.d5.loss_mask: 0.4371  mix_decode.d5.loss_dice: 0.4914  mix_decode.d6.loss_cls: 0.0888  mix_decode.d6.loss_mask: 0.4446  mix_decode.d6.loss_dice: 0.5040  mix_decode.d7.loss_cls: 0.1104  mix_decode.d7.loss_mask: 0.4440  mix_decode.d7.loss_dice: 0.5049  mix_decode.d8.loss_cls: 0.0926  mix_decode.d8.loss_mask: 0.4443  mix_decode.d8.loss_dice: 0.5078
2025/03/27 14:09:40 - mmengine - INFO - Iter(train) [12650/20000]  base_lr: 4.0621e-05 lr: 4.0621e-05  eta: 1:50:33  time: 1.0803  data_time: 0.0229  memory: 10797  loss: 41.3636  decode.loss_cls: 0.3331  decode.loss_mask: 1.3409  decode.loss_dice: 1.3737  decode.d0.loss_cls: 0.3254  decode.d0.loss_mask: 1.3180  decode.d0.loss_dice: 1.4096  decode.d1.loss_cls: 0.3237  decode.d1.loss_mask: 1.3088  decode.d1.loss_dice: 1.3624  decode.d2.loss_cls: 0.3195  decode.d2.loss_mask: 1.3180  decode.d2.loss_dice: 1.3488  decode.d3.loss_cls: 0.3162  decode.d3.loss_mask: 1.3226  decode.d3.loss_dice: 1.3457  decode.d4.loss_cls: 0.3131  decode.d4.loss_mask: 1.3106  decode.d4.loss_dice: 1.3735  decode.d5.loss_cls: 0.3508  decode.d5.loss_mask: 1.3118  decode.d5.loss_dice: 1.3380  decode.d6.loss_cls: 0.3663  decode.d6.loss_mask: 1.3097  decode.d6.loss_dice: 1.3185  decode.d7.loss_cls: 0.3264  decode.d7.loss_mask: 1.3433  decode.d7.loss_dice: 1.3476  decode.d8.loss_cls: 0.2897  decode.d8.loss_mask: 1.3339  decode.d8.loss_dice: 1.3668  mix_decode.loss_cls: 0.1103  mix_decode.loss_mask: 0.4679  mix_decode.loss_dice: 0.5490  mix_decode.d0.loss_cls: 0.0839  mix_decode.d0.loss_mask: 0.4743  mix_decode.d0.loss_dice: 0.6053  mix_decode.d1.loss_cls: 0.1043  mix_decode.d1.loss_mask: 0.4814  mix_decode.d1.loss_dice: 0.5691  mix_decode.d2.loss_cls: 0.0984  mix_decode.d2.loss_mask: 0.4764  mix_decode.d2.loss_dice: 0.5533  mix_decode.d3.loss_cls: 0.0858  mix_decode.d3.loss_mask: 0.4675  mix_decode.d3.loss_dice: 0.5622  mix_decode.d4.loss_cls: 0.0940  mix_decode.d4.loss_mask: 0.4683  mix_decode.d4.loss_dice: 0.5595  mix_decode.d5.loss_cls: 0.0901  mix_decode.d5.loss_mask: 0.4697  mix_decode.d5.loss_dice: 0.5650  mix_decode.d6.loss_cls: 0.0742  mix_decode.d6.loss_mask: 0.4724  mix_decode.d6.loss_dice: 0.5688  mix_decode.d7.loss_cls: 0.1020  mix_decode.d7.loss_mask: 0.4674  mix_decode.d7.loss_dice: 0.5527  mix_decode.d8.loss_cls: 0.0968  mix_decode.d8.loss_mask: 0.4641  mix_decode.d8.loss_dice: 0.5630
2025/03/27 14:10:35 - mmengine - INFO - Iter(train) [12700/20000]  base_lr: 4.0372e-05 lr: 4.0372e-05  eta: 1:49:53  time: 1.0785  data_time: 0.0227  memory: 10813  loss: 32.0289  decode.loss_cls: 0.1149  decode.loss_mask: 0.9984  decode.loss_dice: 1.0864  decode.d0.loss_cls: 0.2106  decode.d0.loss_mask: 1.0251  decode.d0.loss_dice: 1.0995  decode.d1.loss_cls: 0.1345  decode.d1.loss_mask: 1.0080  decode.d1.loss_dice: 1.0894  decode.d2.loss_cls: 0.1235  decode.d2.loss_mask: 1.0123  decode.d2.loss_dice: 1.0816  decode.d3.loss_cls: 0.1235  decode.d3.loss_mask: 1.0106  decode.d3.loss_dice: 1.0844  decode.d4.loss_cls: 0.1206  decode.d4.loss_mask: 1.0033  decode.d4.loss_dice: 1.1026  decode.d5.loss_cls: 0.1234  decode.d5.loss_mask: 0.9985  decode.d5.loss_dice: 1.0833  decode.d6.loss_cls: 0.1221  decode.d6.loss_mask: 0.9982  decode.d6.loss_dice: 1.0842  decode.d7.loss_cls: 0.1163  decode.d7.loss_mask: 1.0018  decode.d7.loss_dice: 1.0887  decode.d8.loss_cls: 0.1058  decode.d8.loss_mask: 0.9982  decode.d8.loss_dice: 1.0808  mix_decode.loss_cls: 0.0563  mix_decode.loss_mask: 0.4201  mix_decode.loss_dice: 0.5094  mix_decode.d0.loss_cls: 0.1115  mix_decode.d0.loss_mask: 0.3849  mix_decode.d0.loss_dice: 0.5205  mix_decode.d1.loss_cls: 0.0450  mix_decode.d1.loss_mask: 0.4148  mix_decode.d1.loss_dice: 0.5213  mix_decode.d2.loss_cls: 0.0692  mix_decode.d2.loss_mask: 0.3932  mix_decode.d2.loss_dice: 0.5156  mix_decode.d3.loss_cls: 0.0611  mix_decode.d3.loss_mask: 0.4006  mix_decode.d3.loss_dice: 0.4953  mix_decode.d4.loss_cls: 0.0640  mix_decode.d4.loss_mask: 0.3905  mix_decode.d4.loss_dice: 0.5094  mix_decode.d5.loss_cls: 0.0502  mix_decode.d5.loss_mask: 0.4229  mix_decode.d5.loss_dice: 0.5041  mix_decode.d6.loss_cls: 0.0422  mix_decode.d6.loss_mask: 0.4171  mix_decode.d6.loss_dice: 0.5136  mix_decode.d7.loss_cls: 0.0479  mix_decode.d7.loss_mask: 0.4196  mix_decode.d7.loss_dice: 0.5184  mix_decode.d8.loss_cls: 0.0710  mix_decode.d8.loss_mask: 0.3971  mix_decode.d8.loss_dice: 0.5117
2025/03/27 14:11:29 - mmengine - INFO - Iter(train) [12750/20000]  base_lr: 4.0123e-05 lr: 4.0123e-05  eta: 1:49:13  time: 1.0787  data_time: 0.0222  memory: 10811  loss: 34.7249  decode.loss_cls: 0.3038  decode.loss_mask: 0.9990  decode.loss_dice: 1.1182  decode.d0.loss_cls: 0.3055  decode.d0.loss_mask: 1.0509  decode.d0.loss_dice: 1.1659  decode.d1.loss_cls: 0.2893  decode.d1.loss_mask: 1.0310  decode.d1.loss_dice: 1.1510  decode.d2.loss_cls: 0.2159  decode.d2.loss_mask: 1.0251  decode.d2.loss_dice: 1.1663  decode.d3.loss_cls: 0.2629  decode.d3.loss_mask: 0.9942  decode.d3.loss_dice: 1.1128  decode.d4.loss_cls: 0.2709  decode.d4.loss_mask: 1.0178  decode.d4.loss_dice: 1.1153  decode.d5.loss_cls: 0.2441  decode.d5.loss_mask: 0.9980  decode.d5.loss_dice: 1.0999  decode.d6.loss_cls: 0.3024  decode.d6.loss_mask: 0.9949  decode.d6.loss_dice: 1.1172  decode.d7.loss_cls: 0.1621  decode.d7.loss_mask: 1.1550  decode.d7.loss_dice: 1.1603  decode.d8.loss_cls: 0.3429  decode.d8.loss_mask: 1.0200  decode.d8.loss_dice: 1.1292  mix_decode.loss_cls: 0.1679  mix_decode.loss_mask: 0.3638  mix_decode.loss_dice: 0.5289  mix_decode.d0.loss_cls: 0.1225  mix_decode.d0.loss_mask: 0.3626  mix_decode.d0.loss_dice: 0.5693  mix_decode.d1.loss_cls: 0.1412  mix_decode.d1.loss_mask: 0.4004  mix_decode.d1.loss_dice: 0.5107  mix_decode.d2.loss_cls: 0.1413  mix_decode.d2.loss_mask: 0.3918  mix_decode.d2.loss_dice: 0.4972  mix_decode.d3.loss_cls: 0.1002  mix_decode.d3.loss_mask: 0.3981  mix_decode.d3.loss_dice: 0.5291  mix_decode.d4.loss_cls: 0.1161  mix_decode.d4.loss_mask: 0.3965  mix_decode.d4.loss_dice: 0.5248  mix_decode.d5.loss_cls: 0.1055  mix_decode.d5.loss_mask: 0.3934  mix_decode.d5.loss_dice: 0.5179  mix_decode.d6.loss_cls: 0.1301  mix_decode.d6.loss_mask: 0.4000  mix_decode.d6.loss_dice: 0.5216  mix_decode.d7.loss_cls: 0.1186  mix_decode.d7.loss_mask: 0.3685  mix_decode.d7.loss_dice: 0.5418  mix_decode.d8.loss_cls: 0.1309  mix_decode.d8.loss_mask: 0.3872  mix_decode.d8.loss_dice: 0.5251
2025/03/27 14:12:23 - mmengine - INFO - Iter(train) [12800/20000]  base_lr: 3.9874e-05 lr: 3.9874e-05  eta: 1:48:32  time: 1.0786  data_time: 0.0221  memory: 10806  loss: 35.7150  decode.loss_cls: 0.1598  decode.loss_mask: 1.1583  decode.loss_dice: 1.1694  decode.d0.loss_cls: 0.2607  decode.d0.loss_mask: 1.1268  decode.d0.loss_dice: 1.1401  decode.d1.loss_cls: 0.2208  decode.d1.loss_mask: 1.1009  decode.d1.loss_dice: 1.1832  decode.d2.loss_cls: 0.1987  decode.d2.loss_mask: 1.1343  decode.d2.loss_dice: 1.1644  decode.d3.loss_cls: 0.2156  decode.d3.loss_mask: 1.1491  decode.d3.loss_dice: 1.1567  decode.d4.loss_cls: 0.2493  decode.d4.loss_mask: 1.1064  decode.d4.loss_dice: 1.1504  decode.d5.loss_cls: 0.2239  decode.d5.loss_mask: 1.1160  decode.d5.loss_dice: 1.1399  decode.d6.loss_cls: 0.1750  decode.d6.loss_mask: 1.1396  decode.d6.loss_dice: 1.1791  decode.d7.loss_cls: 0.2285  decode.d7.loss_mask: 1.1090  decode.d7.loss_dice: 1.1430  decode.d8.loss_cls: 0.1697  decode.d8.loss_mask: 1.1540  decode.d8.loss_dice: 1.1675  mix_decode.loss_cls: 0.0968  mix_decode.loss_mask: 0.4354  mix_decode.loss_dice: 0.5366  mix_decode.d0.loss_cls: 0.1024  mix_decode.d0.loss_mask: 0.4351  mix_decode.d0.loss_dice: 0.5599  mix_decode.d1.loss_cls: 0.0953  mix_decode.d1.loss_mask: 0.4315  mix_decode.d1.loss_dice: 0.5292  mix_decode.d2.loss_cls: 0.0935  mix_decode.d2.loss_mask: 0.4321  mix_decode.d2.loss_dice: 0.5372  mix_decode.d3.loss_cls: 0.1013  mix_decode.d3.loss_mask: 0.4300  mix_decode.d3.loss_dice: 0.5226  mix_decode.d4.loss_cls: 0.0893  mix_decode.d4.loss_mask: 0.4285  mix_decode.d4.loss_dice: 0.5422  mix_decode.d5.loss_cls: 0.0717  mix_decode.d5.loss_mask: 0.4323  mix_decode.d5.loss_dice: 0.5521  mix_decode.d6.loss_cls: 0.0771  mix_decode.d6.loss_mask: 0.4362  mix_decode.d6.loss_dice: 0.5432  mix_decode.d7.loss_cls: 0.1255  mix_decode.d7.loss_mask: 0.4457  mix_decode.d7.loss_dice: 0.5422  mix_decode.d8.loss_cls: 0.1186  mix_decode.d8.loss_mask: 0.4397  mix_decode.d8.loss_dice: 0.5415
2025/03/27 14:13:16 - mmengine - INFO - Iter(train) [12850/20000]  base_lr: 3.9625e-05 lr: 3.9625e-05  eta: 1:47:52  time: 1.0787  data_time: 0.0222  memory: 10815  loss: 33.3171  decode.loss_cls: 0.1298  decode.loss_mask: 1.1180  decode.loss_dice: 1.0510  decode.d0.loss_cls: 0.2663  decode.d0.loss_mask: 1.1202  decode.d0.loss_dice: 1.0226  decode.d1.loss_cls: 0.1691  decode.d1.loss_mask: 1.1145  decode.d1.loss_dice: 1.0082  decode.d2.loss_cls: 0.1418  decode.d2.loss_mask: 1.1265  decode.d2.loss_dice: 1.0146  decode.d3.loss_cls: 0.1362  decode.d3.loss_mask: 1.1158  decode.d3.loss_dice: 1.0099  decode.d4.loss_cls: 0.1147  decode.d4.loss_mask: 1.1155  decode.d4.loss_dice: 1.0212  decode.d5.loss_cls: 0.1311  decode.d5.loss_mask: 1.1255  decode.d5.loss_dice: 1.0568  decode.d6.loss_cls: 0.1251  decode.d6.loss_mask: 1.1233  decode.d6.loss_dice: 1.0380  decode.d7.loss_cls: 0.1477  decode.d7.loss_mask: 1.1225  decode.d7.loss_dice: 1.0082  decode.d8.loss_cls: 0.1340  decode.d8.loss_mask: 1.1265  decode.d8.loss_dice: 1.0128  mix_decode.loss_cls: 0.1078  mix_decode.loss_mask: 0.3956  mix_decode.loss_dice: 0.5329  mix_decode.d0.loss_cls: 0.1300  mix_decode.d0.loss_mask: 0.3922  mix_decode.d0.loss_dice: 0.5617  mix_decode.d1.loss_cls: 0.1557  mix_decode.d1.loss_mask: 0.3896  mix_decode.d1.loss_dice: 0.5082  mix_decode.d2.loss_cls: 0.0904  mix_decode.d2.loss_mask: 0.3983  mix_decode.d2.loss_dice: 0.5360  mix_decode.d3.loss_cls: 0.0920  mix_decode.d3.loss_mask: 0.3949  mix_decode.d3.loss_dice: 0.5215  mix_decode.d4.loss_cls: 0.1158  mix_decode.d4.loss_mask: 0.3929  mix_decode.d4.loss_dice: 0.5286  mix_decode.d5.loss_cls: 0.0938  mix_decode.d5.loss_mask: 0.3958  mix_decode.d5.loss_dice: 0.5371  mix_decode.d6.loss_cls: 0.0974  mix_decode.d6.loss_mask: 0.3981  mix_decode.d6.loss_dice: 0.5271  mix_decode.d7.loss_cls: 0.1003  mix_decode.d7.loss_mask: 0.4021  mix_decode.d7.loss_dice: 0.5314  mix_decode.d8.loss_cls: 0.1307  mix_decode.d8.loss_mask: 0.3976  mix_decode.d8.loss_dice: 0.5143
2025/03/27 14:14:11 - mmengine - INFO - Iter(train) [12900/20000]  base_lr: 3.9375e-05 lr: 3.9375e-05  eta: 1:47:12  time: 1.0917  data_time: 0.0225  memory: 10810  loss: 41.8708  decode.loss_cls: 0.5275  decode.loss_mask: 1.4350  decode.loss_dice: 1.1095  decode.d0.loss_cls: 0.6064  decode.d0.loss_mask: 1.2890  decode.d0.loss_dice: 1.1439  decode.d1.loss_cls: 0.5130  decode.d1.loss_mask: 1.4226  decode.d1.loss_dice: 1.0917  decode.d2.loss_cls: 0.5437  decode.d2.loss_mask: 1.2996  decode.d2.loss_dice: 1.0725  decode.d3.loss_cls: 0.6042  decode.d3.loss_mask: 1.2838  decode.d3.loss_dice: 1.0593  decode.d4.loss_cls: 0.5879  decode.d4.loss_mask: 1.2635  decode.d4.loss_dice: 1.0515  decode.d5.loss_cls: 0.5900  decode.d5.loss_mask: 1.2817  decode.d5.loss_dice: 1.0374  decode.d6.loss_cls: 0.5239  decode.d6.loss_mask: 1.2867  decode.d6.loss_dice: 1.0480  decode.d7.loss_cls: 0.5227  decode.d7.loss_mask: 1.4481  decode.d7.loss_dice: 1.1060  decode.d8.loss_cls: 0.4733  decode.d8.loss_mask: 1.4259  decode.d8.loss_dice: 1.0755  mix_decode.loss_cls: 0.2396  mix_decode.loss_mask: 0.4380  mix_decode.loss_dice: 0.5392  mix_decode.d0.loss_cls: 0.2723  mix_decode.d0.loss_mask: 0.4419  mix_decode.d0.loss_dice: 0.5661  mix_decode.d1.loss_cls: 0.2675  mix_decode.d1.loss_mask: 0.4502  mix_decode.d1.loss_dice: 0.5123  mix_decode.d2.loss_cls: 0.2458  mix_decode.d2.loss_mask: 0.4429  mix_decode.d2.loss_dice: 0.5014  mix_decode.d3.loss_cls: 0.2361  mix_decode.d3.loss_mask: 0.4502  mix_decode.d3.loss_dice: 0.5043  mix_decode.d4.loss_cls: 0.2006  mix_decode.d4.loss_mask: 0.4606  mix_decode.d4.loss_dice: 0.5249  mix_decode.d5.loss_cls: 0.2020  mix_decode.d5.loss_mask: 0.4582  mix_decode.d5.loss_dice: 0.5351  mix_decode.d6.loss_cls: 0.1995  mix_decode.d6.loss_mask: 0.4556  mix_decode.d6.loss_dice: 0.5436  mix_decode.d7.loss_cls: 0.2401  mix_decode.d7.loss_mask: 0.4532  mix_decode.d7.loss_dice: 0.5382  mix_decode.d8.loss_cls: 0.2367  mix_decode.d8.loss_mask: 0.4570  mix_decode.d8.loss_dice: 0.5338
2025/03/27 14:15:05 - mmengine - INFO - Iter(train) [12950/20000]  base_lr: 3.9126e-05 lr: 3.9126e-05  eta: 1:46:31  time: 1.0784  data_time: 0.0219  memory: 10805  loss: 36.3986  decode.loss_cls: 0.2007  decode.loss_mask: 1.0385  decode.loss_dice: 1.2629  decode.d0.loss_cls: 0.2236  decode.d0.loss_mask: 1.0319  decode.d0.loss_dice: 1.2935  decode.d1.loss_cls: 0.3083  decode.d1.loss_mask: 1.0133  decode.d1.loss_dice: 1.2115  decode.d2.loss_cls: 0.2976  decode.d2.loss_mask: 1.0291  decode.d2.loss_dice: 1.2230  decode.d3.loss_cls: 0.2440  decode.d3.loss_mask: 1.0205  decode.d3.loss_dice: 1.2259  decode.d4.loss_cls: 0.2517  decode.d4.loss_mask: 1.0152  decode.d4.loss_dice: 1.2057  decode.d5.loss_cls: 0.2049  decode.d5.loss_mask: 1.0179  decode.d5.loss_dice: 1.2379  decode.d6.loss_cls: 0.2186  decode.d6.loss_mask: 1.0177  decode.d6.loss_dice: 1.2463  decode.d7.loss_cls: 0.1815  decode.d7.loss_mask: 1.0462  decode.d7.loss_dice: 1.2718  decode.d8.loss_cls: 0.1640  decode.d8.loss_mask: 1.0423  decode.d8.loss_dice: 1.2834  mix_decode.loss_cls: 0.0879  mix_decode.loss_mask: 0.4342  mix_decode.loss_dice: 0.5757  mix_decode.d0.loss_cls: 0.1192  mix_decode.d0.loss_mask: 0.4411  mix_decode.d0.loss_dice: 0.6163  mix_decode.d1.loss_cls: 0.0856  mix_decode.d1.loss_mask: 0.4308  mix_decode.d1.loss_dice: 0.5900  mix_decode.d2.loss_cls: 0.1163  mix_decode.d2.loss_mask: 0.4321  mix_decode.d2.loss_dice: 0.5938  mix_decode.d3.loss_cls: 0.0985  mix_decode.d3.loss_mask: 0.4704  mix_decode.d3.loss_dice: 0.5850  mix_decode.d4.loss_cls: 0.1112  mix_decode.d4.loss_mask: 0.4833  mix_decode.d4.loss_dice: 0.5893  mix_decode.d5.loss_cls: 0.0993  mix_decode.d5.loss_mask: 0.4227  mix_decode.d5.loss_dice: 0.5669  mix_decode.d6.loss_cls: 0.1216  mix_decode.d6.loss_mask: 0.4212  mix_decode.d6.loss_dice: 0.5746  mix_decode.d7.loss_cls: 0.0929  mix_decode.d7.loss_mask: 0.4359  mix_decode.d7.loss_dice: 0.5970  mix_decode.d8.loss_cls: 0.1252  mix_decode.d8.loss_mask: 0.4651  mix_decode.d8.loss_dice: 0.5861
2025/03/27 14:15:59 - mmengine - INFO - Exp name: pr2vi_20250327_105544
2025/03/27 14:15:59 - mmengine - INFO - Iter(train) [13000/20000]  base_lr: 3.8876e-05 lr: 3.8876e-05  eta: 1:45:51  time: 1.0769  data_time: 0.0227  memory: 10807  loss: 32.9740  decode.loss_cls: 0.2054  decode.loss_mask: 0.9734  decode.loss_dice: 1.1627  decode.d0.loss_cls: 0.2226  decode.d0.loss_mask: 0.9996  decode.d0.loss_dice: 1.2456  decode.d1.loss_cls: 0.2750  decode.d1.loss_mask: 0.9591  decode.d1.loss_dice: 1.1321  decode.d2.loss_cls: 0.2177  decode.d2.loss_mask: 0.9744  decode.d2.loss_dice: 1.1624  decode.d3.loss_cls: 0.2041  decode.d3.loss_mask: 0.9891  decode.d3.loss_dice: 1.1673  decode.d4.loss_cls: 0.1765  decode.d4.loss_mask: 0.9806  decode.d4.loss_dice: 1.1823  decode.d5.loss_cls: 0.1484  decode.d5.loss_mask: 0.9886  decode.d5.loss_dice: 1.1632  decode.d6.loss_cls: 0.1869  decode.d6.loss_mask: 0.9636  decode.d6.loss_dice: 1.1636  decode.d7.loss_cls: 0.1834  decode.d7.loss_mask: 0.9628  decode.d7.loss_dice: 1.1748  decode.d8.loss_cls: 0.2171  decode.d8.loss_mask: 0.9590  decode.d8.loss_dice: 1.1558  mix_decode.loss_cls: 0.0422  mix_decode.loss_mask: 0.3890  mix_decode.loss_dice: 0.5114  mix_decode.d0.loss_cls: 0.0575  mix_decode.d0.loss_mask: 0.3860  mix_decode.d0.loss_dice: 0.5231  mix_decode.d1.loss_cls: 0.0437  mix_decode.d1.loss_mask: 0.3877  mix_decode.d1.loss_dice: 0.5218  mix_decode.d2.loss_cls: 0.0415  mix_decode.d2.loss_mask: 0.3878  mix_decode.d2.loss_dice: 0.5178  mix_decode.d3.loss_cls: 0.0396  mix_decode.d3.loss_mask: 0.3879  mix_decode.d3.loss_dice: 0.5099  mix_decode.d4.loss_cls: 0.0520  mix_decode.d4.loss_mask: 0.3833  mix_decode.d4.loss_dice: 0.5154  mix_decode.d5.loss_cls: 0.0484  mix_decode.d5.loss_mask: 0.3846  mix_decode.d5.loss_dice: 0.5093  mix_decode.d6.loss_cls: 0.0518  mix_decode.d6.loss_mask: 0.3818  mix_decode.d6.loss_dice: 0.5145  mix_decode.d7.loss_cls: 0.0478  mix_decode.d7.loss_mask: 0.3852  mix_decode.d7.loss_dice: 0.5169  mix_decode.d8.loss_cls: 0.0408  mix_decode.d8.loss_mask: 0.3868  mix_decode.d8.loss_dice: 0.5112
2025/03/27 14:16:53 - mmengine - INFO - Iter(train) [13050/20000]  base_lr: 3.8626e-05 lr: 3.8626e-05  eta: 1:45:10  time: 1.0756  data_time: 0.0217  memory: 10801  loss: 32.5675  decode.loss_cls: 0.1400  decode.loss_mask: 0.9466  decode.loss_dice: 1.1377  decode.d0.loss_cls: 0.2104  decode.d0.loss_mask: 0.9887  decode.d0.loss_dice: 1.1437  decode.d1.loss_cls: 0.1849  decode.d1.loss_mask: 0.9652  decode.d1.loss_dice: 1.1013  decode.d2.loss_cls: 0.1493  decode.d2.loss_mask: 0.9594  decode.d2.loss_dice: 1.1207  decode.d3.loss_cls: 0.1618  decode.d3.loss_mask: 0.9513  decode.d3.loss_dice: 1.1061  decode.d4.loss_cls: 0.1786  decode.d4.loss_mask: 0.9504  decode.d4.loss_dice: 1.1025  decode.d5.loss_cls: 0.1307  decode.d5.loss_mask: 0.9496  decode.d5.loss_dice: 1.1134  decode.d6.loss_cls: 0.1412  decode.d6.loss_mask: 0.9560  decode.d6.loss_dice: 1.1066  decode.d7.loss_cls: 0.1379  decode.d7.loss_mask: 0.9463  decode.d7.loss_dice: 1.1260  decode.d8.loss_cls: 0.1486  decode.d8.loss_mask: 0.9537  decode.d8.loss_dice: 1.1227  mix_decode.loss_cls: 0.0871  mix_decode.loss_mask: 0.3916  mix_decode.loss_dice: 0.5317  mix_decode.d0.loss_cls: 0.0838  mix_decode.d0.loss_mask: 0.4069  mix_decode.d0.loss_dice: 0.5508  mix_decode.d1.loss_cls: 0.0766  mix_decode.d1.loss_mask: 0.4450  mix_decode.d1.loss_dice: 0.5293  mix_decode.d2.loss_cls: 0.0799  mix_decode.d2.loss_mask: 0.4014  mix_decode.d2.loss_dice: 0.5279  mix_decode.d3.loss_cls: 0.0460  mix_decode.d3.loss_mask: 0.4329  mix_decode.d3.loss_dice: 0.5552  mix_decode.d4.loss_cls: 0.0470  mix_decode.d4.loss_mask: 0.4368  mix_decode.d4.loss_dice: 0.5475  mix_decode.d5.loss_cls: 0.0672  mix_decode.d5.loss_mask: 0.4339  mix_decode.d5.loss_dice: 0.5405  mix_decode.d6.loss_cls: 0.1044  mix_decode.d6.loss_mask: 0.4106  mix_decode.d6.loss_dice: 0.5149  mix_decode.d7.loss_cls: 0.0724  mix_decode.d7.loss_mask: 0.3930  mix_decode.d7.loss_dice: 0.5206  mix_decode.d8.loss_cls: 0.0744  mix_decode.d8.loss_mask: 0.3940  mix_decode.d8.loss_dice: 0.5329
2025/03/27 14:17:46 - mmengine - INFO - Iter(train) [13100/20000]  base_lr: 3.8376e-05 lr: 3.8376e-05  eta: 1:44:29  time: 1.0842  data_time: 0.0239  memory: 10810  loss: 43.1156  decode.loss_cls: 0.2608  decode.loss_mask: 1.3854  decode.loss_dice: 1.4125  decode.d0.loss_cls: 0.2965  decode.d0.loss_mask: 1.3805  decode.d0.loss_dice: 1.5196  decode.d1.loss_cls: 0.2963  decode.d1.loss_mask: 1.3813  decode.d1.loss_dice: 1.4291  decode.d2.loss_cls: 0.2754  decode.d2.loss_mask: 1.4080  decode.d2.loss_dice: 1.4109  decode.d3.loss_cls: 0.2519  decode.d3.loss_mask: 1.3888  decode.d3.loss_dice: 1.3929  decode.d4.loss_cls: 0.2814  decode.d4.loss_mask: 1.3949  decode.d4.loss_dice: 1.4103  decode.d5.loss_cls: 0.3041  decode.d5.loss_mask: 1.3883  decode.d5.loss_dice: 1.3988  decode.d6.loss_cls: 0.2656  decode.d6.loss_mask: 1.3967  decode.d6.loss_dice: 1.4085  decode.d7.loss_cls: 0.2418  decode.d7.loss_mask: 1.4237  decode.d7.loss_dice: 1.4324  decode.d8.loss_cls: 0.2558  decode.d8.loss_mask: 1.4016  decode.d8.loss_dice: 1.4077  mix_decode.loss_cls: 0.1263  mix_decode.loss_mask: 0.4744  mix_decode.loss_dice: 0.6225  mix_decode.d0.loss_cls: 0.1168  mix_decode.d0.loss_mask: 0.4554  mix_decode.d0.loss_dice: 0.6760  mix_decode.d1.loss_cls: 0.1745  mix_decode.d1.loss_mask: 0.4454  mix_decode.d1.loss_dice: 0.6167  mix_decode.d2.loss_cls: 0.1434  mix_decode.d2.loss_mask: 0.4665  mix_decode.d2.loss_dice: 0.6096  mix_decode.d3.loss_cls: 0.1198  mix_decode.d3.loss_mask: 0.4711  mix_decode.d3.loss_dice: 0.6159  mix_decode.d4.loss_cls: 0.1523  mix_decode.d4.loss_mask: 0.4489  mix_decode.d4.loss_dice: 0.6076  mix_decode.d5.loss_cls: 0.1419  mix_decode.d5.loss_mask: 0.4739  mix_decode.d5.loss_dice: 0.6013  mix_decode.d6.loss_cls: 0.1369  mix_decode.d6.loss_mask: 0.4707  mix_decode.d6.loss_dice: 0.6203  mix_decode.d7.loss_cls: 0.1361  mix_decode.d7.loss_mask: 0.4667  mix_decode.d7.loss_dice: 0.6063  mix_decode.d8.loss_cls: 0.1304  mix_decode.d8.loss_mask: 0.4712  mix_decode.d8.loss_dice: 0.6156
2025/03/27 14:18:41 - mmengine - INFO - Iter(train) [13150/20000]  base_lr: 3.8125e-05 lr: 3.8125e-05  eta: 1:43:48  time: 1.1225  data_time: 0.0266  memory: 10812  loss: 44.9478  decode.loss_cls: 0.5050  decode.loss_mask: 1.3530  decode.loss_dice: 1.4534  decode.d0.loss_cls: 0.3736  decode.d0.loss_mask: 1.3361  decode.d0.loss_dice: 1.5410  decode.d1.loss_cls: 0.3615  decode.d1.loss_mask: 1.3478  decode.d1.loss_dice: 1.4896  decode.d2.loss_cls: 0.4390  decode.d2.loss_mask: 1.3484  decode.d2.loss_dice: 1.4617  decode.d3.loss_cls: 0.4015  decode.d3.loss_mask: 1.3246  decode.d3.loss_dice: 1.4905  decode.d4.loss_cls: 0.4910  decode.d4.loss_mask: 1.3494  decode.d4.loss_dice: 1.4574  decode.d5.loss_cls: 0.4334  decode.d5.loss_mask: 1.2880  decode.d5.loss_dice: 1.4662  decode.d6.loss_cls: 0.5454  decode.d6.loss_mask: 1.2707  decode.d6.loss_dice: 1.4033  decode.d7.loss_cls: 0.4590  decode.d7.loss_mask: 1.3184  decode.d7.loss_dice: 1.5111  decode.d8.loss_cls: 0.5570  decode.d8.loss_mask: 1.2945  decode.d8.loss_dice: 1.4165  mix_decode.loss_cls: 0.1254  mix_decode.loss_mask: 0.5226  mix_decode.loss_dice: 0.6178  mix_decode.d0.loss_cls: 0.1324  mix_decode.d0.loss_mask: 0.4860  mix_decode.d0.loss_dice: 0.6719  mix_decode.d1.loss_cls: 0.1422  mix_decode.d1.loss_mask: 0.4866  mix_decode.d1.loss_dice: 0.6179  mix_decode.d2.loss_cls: 0.1281  mix_decode.d2.loss_mask: 0.4936  mix_decode.d2.loss_dice: 0.5920  mix_decode.d3.loss_cls: 0.1500  mix_decode.d3.loss_mask: 0.4895  mix_decode.d3.loss_dice: 0.5778  mix_decode.d4.loss_cls: 0.1413  mix_decode.d4.loss_mask: 0.4601  mix_decode.d4.loss_dice: 0.5882  mix_decode.d5.loss_cls: 0.1653  mix_decode.d5.loss_mask: 0.4872  mix_decode.d5.loss_dice: 0.6111  mix_decode.d6.loss_cls: 0.1388  mix_decode.d6.loss_mask: 0.4771  mix_decode.d6.loss_dice: 0.6258  mix_decode.d7.loss_cls: 0.1620  mix_decode.d7.loss_mask: 0.4623  mix_decode.d7.loss_dice: 0.6253  mix_decode.d8.loss_cls: 0.1475  mix_decode.d8.loss_mask: 0.5151  mix_decode.d8.loss_dice: 0.6185
2025/03/27 14:19:36 - mmengine - INFO - Iter(train) [13200/20000]  base_lr: 3.7875e-05 lr: 3.7875e-05  eta: 1:43:07  time: 1.0783  data_time: 0.0216  memory: 10808  loss: 33.2161  decode.loss_cls: 0.1198  decode.loss_mask: 1.0266  decode.loss_dice: 1.1713  decode.d0.loss_cls: 0.2610  decode.d0.loss_mask: 1.0237  decode.d0.loss_dice: 1.1458  decode.d1.loss_cls: 0.1837  decode.d1.loss_mask: 0.9996  decode.d1.loss_dice: 1.1360  decode.d2.loss_cls: 0.1132  decode.d2.loss_mask: 1.0118  decode.d2.loss_dice: 1.1371  decode.d3.loss_cls: 0.0852  decode.d3.loss_mask: 1.0442  decode.d3.loss_dice: 1.1540  decode.d4.loss_cls: 0.1817  decode.d4.loss_mask: 1.0064  decode.d4.loss_dice: 1.1183  decode.d5.loss_cls: 0.1721  decode.d5.loss_mask: 0.9995  decode.d5.loss_dice: 1.1226  decode.d6.loss_cls: 0.1133  decode.d6.loss_mask: 1.0065  decode.d6.loss_dice: 1.1588  decode.d7.loss_cls: 0.1522  decode.d7.loss_mask: 0.9799  decode.d7.loss_dice: 1.1314  decode.d8.loss_cls: 0.1369  decode.d8.loss_mask: 1.0059  decode.d8.loss_dice: 1.1286  mix_decode.loss_cls: 0.1485  mix_decode.loss_mask: 0.3338  mix_decode.loss_dice: 0.5399  mix_decode.d0.loss_cls: 0.1924  mix_decode.d0.loss_mask: 0.3146  mix_decode.d0.loss_dice: 0.5685  mix_decode.d1.loss_cls: 0.1763  mix_decode.d1.loss_mask: 0.3146  mix_decode.d1.loss_dice: 0.5241  mix_decode.d2.loss_cls: 0.1607  mix_decode.d2.loss_mask: 0.3243  mix_decode.d2.loss_dice: 0.5199  mix_decode.d3.loss_cls: 0.1459  mix_decode.d3.loss_mask: 0.3207  mix_decode.d3.loss_dice: 0.5223  mix_decode.d4.loss_cls: 0.1489  mix_decode.d4.loss_mask: 0.3256  mix_decode.d4.loss_dice: 0.5168  mix_decode.d5.loss_cls: 0.1220  mix_decode.d5.loss_mask: 0.3355  mix_decode.d5.loss_dice: 0.5552  mix_decode.d6.loss_cls: 0.1384  mix_decode.d6.loss_mask: 0.3352  mix_decode.d6.loss_dice: 0.5570  mix_decode.d7.loss_cls: 0.1463  mix_decode.d7.loss_mask: 0.3234  mix_decode.d7.loss_dice: 0.5469  mix_decode.d8.loss_cls: 0.1453  mix_decode.d8.loss_mask: 0.3399  mix_decode.d8.loss_dice: 0.5454
2025/03/27 14:20:30 - mmengine - INFO - Iter(train) [13250/20000]  base_lr: 3.7624e-05 lr: 3.7624e-05  eta: 1:42:27  time: 1.0877  data_time: 0.0227  memory: 10813  loss: 35.5102  decode.loss_cls: 0.1975  decode.loss_mask: 1.1849  decode.loss_dice: 1.0950  decode.d0.loss_cls: 0.3027  decode.d0.loss_mask: 1.1823  decode.d0.loss_dice: 1.0749  decode.d1.loss_cls: 0.2409  decode.d1.loss_mask: 1.1802  decode.d1.loss_dice: 1.0770  decode.d2.loss_cls: 0.2162  decode.d2.loss_mask: 1.1837  decode.d2.loss_dice: 1.0584  decode.d3.loss_cls: 0.2097  decode.d3.loss_mask: 1.1828  decode.d3.loss_dice: 1.0642  decode.d4.loss_cls: 0.2657  decode.d4.loss_mask: 1.1730  decode.d4.loss_dice: 1.0597  decode.d5.loss_cls: 0.2139  decode.d5.loss_mask: 1.1805  decode.d5.loss_dice: 1.1011  decode.d6.loss_cls: 0.2655  decode.d6.loss_mask: 1.1944  decode.d6.loss_dice: 1.0820  decode.d7.loss_cls: 0.2162  decode.d7.loss_mask: 1.1900  decode.d7.loss_dice: 1.0978  decode.d8.loss_cls: 0.2115  decode.d8.loss_mask: 1.1883  decode.d8.loss_dice: 1.1053  mix_decode.loss_cls: 0.0973  mix_decode.loss_mask: 0.3703  mix_decode.loss_dice: 0.5707  mix_decode.d0.loss_cls: 0.0933  mix_decode.d0.loss_mask: 0.3690  mix_decode.d0.loss_dice: 0.6148  mix_decode.d1.loss_cls: 0.1229  mix_decode.d1.loss_mask: 0.3653  mix_decode.d1.loss_dice: 0.5769  mix_decode.d2.loss_cls: 0.1271  mix_decode.d2.loss_mask: 0.3681  mix_decode.d2.loss_dice: 0.5618  mix_decode.d3.loss_cls: 0.1146  mix_decode.d3.loss_mask: 0.3740  mix_decode.d3.loss_dice: 0.5513  mix_decode.d4.loss_cls: 0.0672  mix_decode.d4.loss_mask: 0.3694  mix_decode.d4.loss_dice: 0.5973  mix_decode.d5.loss_cls: 0.0765  mix_decode.d5.loss_mask: 0.3751  mix_decode.d5.loss_dice: 0.5970  mix_decode.d6.loss_cls: 0.0930  mix_decode.d6.loss_mask: 0.3704  mix_decode.d6.loss_dice: 0.5857  mix_decode.d7.loss_cls: 0.0875  mix_decode.d7.loss_mask: 0.3679  mix_decode.d7.loss_dice: 0.5856  mix_decode.d8.loss_cls: 0.1280  mix_decode.d8.loss_mask: 0.3694  mix_decode.d8.loss_dice: 0.5673
2025/03/27 14:21:25 - mmengine - INFO - Iter(train) [13300/20000]  base_lr: 3.7373e-05 lr: 3.7373e-05  eta: 1:41:46  time: 1.0768  data_time: 0.0226  memory: 10809  loss: 35.5203  decode.loss_cls: 0.1871  decode.loss_mask: 1.1530  decode.loss_dice: 1.2360  decode.d0.loss_cls: 0.2564  decode.d0.loss_mask: 1.1188  decode.d0.loss_dice: 1.3039  decode.d1.loss_cls: 0.2136  decode.d1.loss_mask: 1.1454  decode.d1.loss_dice: 1.2587  decode.d2.loss_cls: 0.1503  decode.d2.loss_mask: 1.1191  decode.d2.loss_dice: 1.2397  decode.d3.loss_cls: 0.1417  decode.d3.loss_mask: 1.1346  decode.d3.loss_dice: 1.2318  decode.d4.loss_cls: 0.1323  decode.d4.loss_mask: 1.1143  decode.d4.loss_dice: 1.2420  decode.d5.loss_cls: 0.1675  decode.d5.loss_mask: 1.1356  decode.d5.loss_dice: 1.2893  decode.d6.loss_cls: 0.1560  decode.d6.loss_mask: 1.1745  decode.d6.loss_dice: 1.2566  decode.d7.loss_cls: 0.2079  decode.d7.loss_mask: 1.1448  decode.d7.loss_dice: 1.2396  decode.d8.loss_cls: 0.2649  decode.d8.loss_mask: 1.1146  decode.d8.loss_dice: 1.2072  mix_decode.loss_cls: 0.0825  mix_decode.loss_mask: 0.3756  mix_decode.loss_dice: 0.5208  mix_decode.d0.loss_cls: 0.1145  mix_decode.d0.loss_mask: 0.3612  mix_decode.d0.loss_dice: 0.5410  mix_decode.d1.loss_cls: 0.1269  mix_decode.d1.loss_mask: 0.3593  mix_decode.d1.loss_dice: 0.5006  mix_decode.d2.loss_cls: 0.1180  mix_decode.d2.loss_mask: 0.3632  mix_decode.d2.loss_dice: 0.4914  mix_decode.d3.loss_cls: 0.1211  mix_decode.d3.loss_mask: 0.3606  mix_decode.d3.loss_dice: 0.4977  mix_decode.d4.loss_cls: 0.0978  mix_decode.d4.loss_mask: 0.3598  mix_decode.d4.loss_dice: 0.5051  mix_decode.d5.loss_cls: 0.1115  mix_decode.d5.loss_mask: 0.3626  mix_decode.d5.loss_dice: 0.4999  mix_decode.d6.loss_cls: 0.0917  mix_decode.d6.loss_mask: 0.3677  mix_decode.d6.loss_dice: 0.5027  mix_decode.d7.loss_cls: 0.0882  mix_decode.d7.loss_mask: 0.3619  mix_decode.d7.loss_dice: 0.5073  mix_decode.d8.loss_cls: 0.0821  mix_decode.d8.loss_mask: 0.3792  mix_decode.d8.loss_dice: 0.5317
2025/03/27 14:22:19 - mmengine - INFO - Iter(train) [13350/20000]  base_lr: 3.7122e-05 lr: 3.7122e-05  eta: 1:41:04  time: 1.1212  data_time: 0.0262  memory: 10806  loss: 33.1879  decode.loss_cls: 0.2536  decode.loss_mask: 0.9740  decode.loss_dice: 1.1121  decode.d0.loss_cls: 0.3147  decode.d0.loss_mask: 1.0044  decode.d0.loss_dice: 1.2147  decode.d1.loss_cls: 0.3704  decode.d1.loss_mask: 1.0116  decode.d1.loss_dice: 1.0963  decode.d2.loss_cls: 0.2984  decode.d2.loss_mask: 1.0088  decode.d2.loss_dice: 1.1310  decode.d3.loss_cls: 0.3087  decode.d3.loss_mask: 0.9934  decode.d3.loss_dice: 1.1138  decode.d4.loss_cls: 0.2852  decode.d4.loss_mask: 0.9900  decode.d4.loss_dice: 1.1418  decode.d5.loss_cls: 0.2664  decode.d5.loss_mask: 1.0016  decode.d5.loss_dice: 1.1367  decode.d6.loss_cls: 0.2806  decode.d6.loss_mask: 0.9872  decode.d6.loss_dice: 1.1280  decode.d7.loss_cls: 0.2889  decode.d7.loss_mask: 0.9900  decode.d7.loss_dice: 1.1647  decode.d8.loss_cls: 0.2585  decode.d8.loss_mask: 0.9905  decode.d8.loss_dice: 1.1436  mix_decode.loss_cls: 0.0724  mix_decode.loss_mask: 0.3243  mix_decode.loss_dice: 0.4847  mix_decode.d0.loss_cls: 0.0914  mix_decode.d0.loss_mask: 0.3271  mix_decode.d0.loss_dice: 0.4956  mix_decode.d1.loss_cls: 0.1012  mix_decode.d1.loss_mask: 0.3235  mix_decode.d1.loss_dice: 0.4821  mix_decode.d2.loss_cls: 0.0857  mix_decode.d2.loss_mask: 0.3200  mix_decode.d2.loss_dice: 0.4755  mix_decode.d3.loss_cls: 0.0972  mix_decode.d3.loss_mask: 0.3154  mix_decode.d3.loss_dice: 0.4712  mix_decode.d4.loss_cls: 0.0836  mix_decode.d4.loss_mask: 0.3228  mix_decode.d4.loss_dice: 0.4859  mix_decode.d5.loss_cls: 0.1040  mix_decode.d5.loss_mask: 0.3234  mix_decode.d5.loss_dice: 0.4750  mix_decode.d6.loss_cls: 0.0562  mix_decode.d6.loss_mask: 0.3302  mix_decode.d6.loss_dice: 0.4894  mix_decode.d7.loss_cls: 0.0803  mix_decode.d7.loss_mask: 0.3294  mix_decode.d7.loss_dice: 0.4930  mix_decode.d8.loss_cls: 0.0961  mix_decode.d8.loss_mask: 0.3199  mix_decode.d8.loss_dice: 0.4722
2025/03/27 14:23:15 - mmengine - INFO - Iter(train) [13400/20000]  base_lr: 3.6871e-05 lr: 3.6871e-05  eta: 1:40:24  time: 1.1200  data_time: 0.0258  memory: 10807  loss: 37.1508  decode.loss_cls: 0.1909  decode.loss_mask: 1.2323  decode.loss_dice: 1.1688  decode.d0.loss_cls: 0.3069  decode.d0.loss_mask: 1.2305  decode.d0.loss_dice: 1.1742  decode.d1.loss_cls: 0.2451  decode.d1.loss_mask: 1.2481  decode.d1.loss_dice: 1.1520  decode.d2.loss_cls: 0.2360  decode.d2.loss_mask: 1.2125  decode.d2.loss_dice: 1.1266  decode.d3.loss_cls: 0.2002  decode.d3.loss_mask: 1.2370  decode.d3.loss_dice: 1.1541  decode.d4.loss_cls: 0.1799  decode.d4.loss_mask: 1.2567  decode.d4.loss_dice: 1.1535  decode.d5.loss_cls: 0.1810  decode.d5.loss_mask: 1.2611  decode.d5.loss_dice: 1.1801  decode.d6.loss_cls: 0.2042  decode.d6.loss_mask: 1.2442  decode.d6.loss_dice: 1.1416  decode.d7.loss_cls: 0.2041  decode.d7.loss_mask: 1.2136  decode.d7.loss_dice: 1.1361  decode.d8.loss_cls: 0.2215  decode.d8.loss_mask: 1.2025  decode.d8.loss_dice: 1.1174  mix_decode.loss_cls: 0.1121  mix_decode.loss_mask: 0.4798  mix_decode.loss_dice: 0.5498  mix_decode.d0.loss_cls: 0.0629  mix_decode.d0.loss_mask: 0.5039  mix_decode.d0.loss_dice: 0.5828  mix_decode.d1.loss_cls: 0.0660  mix_decode.d1.loss_mask: 0.4876  mix_decode.d1.loss_dice: 0.5507  mix_decode.d2.loss_cls: 0.0773  mix_decode.d2.loss_mask: 0.4897  mix_decode.d2.loss_dice: 0.5481  mix_decode.d3.loss_cls: 0.0679  mix_decode.d3.loss_mask: 0.4859  mix_decode.d3.loss_dice: 0.5515  mix_decode.d4.loss_cls: 0.0789  mix_decode.d4.loss_mask: 0.4818  mix_decode.d4.loss_dice: 0.5490  mix_decode.d5.loss_cls: 0.0843  mix_decode.d5.loss_mask: 0.4818  mix_decode.d5.loss_dice: 0.5429  mix_decode.d6.loss_cls: 0.0685  mix_decode.d6.loss_mask: 0.4863  mix_decode.d6.loss_dice: 0.5325  mix_decode.d7.loss_cls: 0.0697  mix_decode.d7.loss_mask: 0.4865  mix_decode.d7.loss_dice: 0.5419  mix_decode.d8.loss_cls: 0.0910  mix_decode.d8.loss_mask: 0.4843  mix_decode.d8.loss_dice: 0.5426
2025/03/27 14:24:11 - mmengine - INFO - Iter(train) [13450/20000]  base_lr: 3.6619e-05 lr: 3.6619e-05  eta: 1:39:43  time: 1.1210  data_time: 0.0255  memory: 10811  loss: 37.5981  decode.loss_cls: 0.2336  decode.loss_mask: 1.1461  decode.loss_dice: 1.1711  decode.d0.loss_cls: 0.2779  decode.d0.loss_mask: 1.0481  decode.d0.loss_dice: 1.2282  decode.d1.loss_cls: 0.2664  decode.d1.loss_mask: 1.1279  decode.d1.loss_dice: 1.1734  decode.d2.loss_cls: 0.1836  decode.d2.loss_mask: 1.1158  decode.d2.loss_dice: 1.1694  decode.d3.loss_cls: 0.1976  decode.d3.loss_mask: 1.0804  decode.d3.loss_dice: 1.1553  decode.d4.loss_cls: 0.2527  decode.d4.loss_mask: 1.1323  decode.d4.loss_dice: 1.1910  decode.d5.loss_cls: 0.2380  decode.d5.loss_mask: 1.0975  decode.d5.loss_dice: 1.1724  decode.d6.loss_cls: 0.1939  decode.d6.loss_mask: 1.1461  decode.d6.loss_dice: 1.1941  decode.d7.loss_cls: 0.2003  decode.d7.loss_mask: 1.1139  decode.d7.loss_dice: 1.1836  decode.d8.loss_cls: 0.1850  decode.d8.loss_mask: 1.1488  decode.d8.loss_dice: 1.1952  mix_decode.loss_cls: 0.1248  mix_decode.loss_mask: 0.5009  mix_decode.loss_dice: 0.6144  mix_decode.d0.loss_cls: 0.1942  mix_decode.d0.loss_mask: 0.4130  mix_decode.d0.loss_dice: 0.6406  mix_decode.d1.loss_cls: 0.1709  mix_decode.d1.loss_mask: 0.4872  mix_decode.d1.loss_dice: 0.6231  mix_decode.d2.loss_cls: 0.1554  mix_decode.d2.loss_mask: 0.4199  mix_decode.d2.loss_dice: 0.6213  mix_decode.d3.loss_cls: 0.1924  mix_decode.d3.loss_mask: 0.4164  mix_decode.d3.loss_dice: 0.5882  mix_decode.d4.loss_cls: 0.1677  mix_decode.d4.loss_mask: 0.4529  mix_decode.d4.loss_dice: 0.6238  mix_decode.d5.loss_cls: 0.1586  mix_decode.d5.loss_mask: 0.4536  mix_decode.d5.loss_dice: 0.6336  mix_decode.d6.loss_cls: 0.1319  mix_decode.d6.loss_mask: 0.4912  mix_decode.d6.loss_dice: 0.6368  mix_decode.d7.loss_cls: 0.1236  mix_decode.d7.loss_mask: 0.4870  mix_decode.d7.loss_dice: 0.6389  mix_decode.d8.loss_cls: 0.1343  mix_decode.d8.loss_mask: 0.4531  mix_decode.d8.loss_dice: 0.6291
2025/03/27 14:25:07 - mmengine - INFO - Iter(train) [13500/20000]  base_lr: 3.6368e-05 lr: 3.6368e-05  eta: 1:39:03  time: 1.1194  data_time: 0.0257  memory: 10808  loss: 39.1351  decode.loss_cls: 0.1776  decode.loss_mask: 1.2663  decode.loss_dice: 1.3883  decode.d0.loss_cls: 0.2654  decode.d0.loss_mask: 1.3274  decode.d0.loss_dice: 1.4019  decode.d1.loss_cls: 0.2414  decode.d1.loss_mask: 1.2159  decode.d1.loss_dice: 1.3607  decode.d2.loss_cls: 0.2345  decode.d2.loss_mask: 1.2502  decode.d2.loss_dice: 1.3434  decode.d3.loss_cls: 0.2341  decode.d3.loss_mask: 1.2472  decode.d3.loss_dice: 1.3527  decode.d4.loss_cls: 0.2425  decode.d4.loss_mask: 1.2416  decode.d4.loss_dice: 1.3432  decode.d5.loss_cls: 0.2137  decode.d5.loss_mask: 1.2520  decode.d5.loss_dice: 1.3651  decode.d6.loss_cls: 0.1519  decode.d6.loss_mask: 1.2567  decode.d6.loss_dice: 1.3820  decode.d7.loss_cls: 0.2267  decode.d7.loss_mask: 1.2546  decode.d7.loss_dice: 1.4063  decode.d8.loss_cls: 0.1845  decode.d8.loss_mask: 1.2688  decode.d8.loss_dice: 1.3840  mix_decode.loss_cls: 0.0918  mix_decode.loss_mask: 0.3795  mix_decode.loss_dice: 0.5718  mix_decode.d0.loss_cls: 0.1337  mix_decode.d0.loss_mask: 0.3741  mix_decode.d0.loss_dice: 0.6128  mix_decode.d1.loss_cls: 0.1325  mix_decode.d1.loss_mask: 0.3806  mix_decode.d1.loss_dice: 0.5725  mix_decode.d2.loss_cls: 0.1417  mix_decode.d2.loss_mask: 0.3775  mix_decode.d2.loss_dice: 0.5709  mix_decode.d3.loss_cls: 0.0846  mix_decode.d3.loss_mask: 0.3822  mix_decode.d3.loss_dice: 0.5708  mix_decode.d4.loss_cls: 0.0939  mix_decode.d4.loss_mask: 0.3842  mix_decode.d4.loss_dice: 0.5728  mix_decode.d5.loss_cls: 0.1224  mix_decode.d5.loss_mask: 0.3871  mix_decode.d5.loss_dice: 0.5586  mix_decode.d6.loss_cls: 0.0797  mix_decode.d6.loss_mask: 0.3988  mix_decode.d6.loss_dice: 0.5714  mix_decode.d7.loss_cls: 0.0817  mix_decode.d7.loss_mask: 0.3975  mix_decode.d7.loss_dice: 0.5640  mix_decode.d8.loss_cls: 0.1045  mix_decode.d8.loss_mask: 0.3802  mix_decode.d8.loss_dice: 0.5805
2025/03/27 14:26:03 - mmengine - INFO - Iter(train) [13550/20000]  base_lr: 3.6116e-05 lr: 3.6116e-05  eta: 1:38:21  time: 1.0765  data_time: 0.0217  memory: 10810  loss: 34.1188  decode.loss_cls: 0.2091  decode.loss_mask: 0.9497  decode.loss_dice: 1.3629  decode.d0.loss_cls: 0.1962  decode.d0.loss_mask: 0.9640  decode.d0.loss_dice: 1.4232  decode.d1.loss_cls: 0.2662  decode.d1.loss_mask: 0.9400  decode.d1.loss_dice: 1.3622  decode.d2.loss_cls: 0.1762  decode.d2.loss_mask: 0.9699  decode.d2.loss_dice: 1.3759  decode.d3.loss_cls: 0.1665  decode.d3.loss_mask: 0.9646  decode.d3.loss_dice: 1.3834  decode.d4.loss_cls: 0.1269  decode.d4.loss_mask: 0.9742  decode.d4.loss_dice: 1.3929  decode.d5.loss_cls: 0.2682  decode.d5.loss_mask: 0.9593  decode.d5.loss_dice: 1.3531  decode.d6.loss_cls: 0.2566  decode.d6.loss_mask: 0.9600  decode.d6.loss_dice: 1.3589  decode.d7.loss_cls: 0.2357  decode.d7.loss_mask: 0.9746  decode.d7.loss_dice: 1.3544  decode.d8.loss_cls: 0.2320  decode.d8.loss_mask: 0.9448  decode.d8.loss_dice: 1.3574  mix_decode.loss_cls: 0.0380  mix_decode.loss_mask: 0.3616  mix_decode.loss_dice: 0.4607  mix_decode.d0.loss_cls: 0.0549  mix_decode.d0.loss_mask: 0.3548  mix_decode.d0.loss_dice: 0.4780  mix_decode.d1.loss_cls: 0.0498  mix_decode.d1.loss_mask: 0.3585  mix_decode.d1.loss_dice: 0.4707  mix_decode.d2.loss_cls: 0.0287  mix_decode.d2.loss_mask: 0.3573  mix_decode.d2.loss_dice: 0.4625  mix_decode.d3.loss_cls: 0.0278  mix_decode.d3.loss_mask: 0.3577  mix_decode.d3.loss_dice: 0.4639  mix_decode.d4.loss_cls: 0.0459  mix_decode.d4.loss_mask: 0.3538  mix_decode.d4.loss_dice: 0.4675  mix_decode.d5.loss_cls: 0.0427  mix_decode.d5.loss_mask: 0.3559  mix_decode.d5.loss_dice: 0.4634  mix_decode.d6.loss_cls: 0.0434  mix_decode.d6.loss_mask: 0.3457  mix_decode.d6.loss_dice: 0.4514  mix_decode.d7.loss_cls: 0.0478  mix_decode.d7.loss_mask: 0.3652  mix_decode.d7.loss_dice: 0.4579  mix_decode.d8.loss_cls: 0.0409  mix_decode.d8.loss_mask: 0.3863  mix_decode.d8.loss_dice: 0.4673
2025/03/27 14:26:57 - mmengine - INFO - Iter(train) [13600/20000]  base_lr: 3.5864e-05 lr: 3.5864e-05  eta: 1:37:40  time: 1.0895  data_time: 0.0236  memory: 10811  loss: 33.8461  decode.loss_cls: 0.2812  decode.loss_mask: 1.0169  decode.loss_dice: 1.0725  decode.d0.loss_cls: 0.2728  decode.d0.loss_mask: 1.0356  decode.d0.loss_dice: 1.0656  decode.d1.loss_cls: 0.3037  decode.d1.loss_mask: 1.0183  decode.d1.loss_dice: 1.0300  decode.d2.loss_cls: 0.3225  decode.d2.loss_mask: 1.0063  decode.d2.loss_dice: 1.0461  decode.d3.loss_cls: 0.2650  decode.d3.loss_mask: 0.9949  decode.d3.loss_dice: 1.0074  decode.d4.loss_cls: 0.3094  decode.d4.loss_mask: 0.9934  decode.d4.loss_dice: 1.0378  decode.d5.loss_cls: 0.2284  decode.d5.loss_mask: 1.0373  decode.d5.loss_dice: 1.0715  decode.d6.loss_cls: 0.2638  decode.d6.loss_mask: 1.0555  decode.d6.loss_dice: 1.0676  decode.d7.loss_cls: 0.3037  decode.d7.loss_mask: 0.9431  decode.d7.loss_dice: 1.0294  decode.d8.loss_cls: 0.2277  decode.d8.loss_mask: 1.0049  decode.d8.loss_dice: 1.0686  mix_decode.loss_cls: 0.1898  mix_decode.loss_mask: 0.3610  mix_decode.loss_dice: 0.5034  mix_decode.d0.loss_cls: 0.1666  mix_decode.d0.loss_mask: 0.3570  mix_decode.d0.loss_dice: 0.5613  mix_decode.d1.loss_cls: 0.1568  mix_decode.d1.loss_mask: 0.3582  mix_decode.d1.loss_dice: 0.5290  mix_decode.d2.loss_cls: 0.1629  mix_decode.d2.loss_mask: 0.3594  mix_decode.d2.loss_dice: 0.4992  mix_decode.d3.loss_cls: 0.1610  mix_decode.d3.loss_mask: 0.3687  mix_decode.d3.loss_dice: 0.4976  mix_decode.d4.loss_cls: 0.1691  mix_decode.d4.loss_mask: 0.3630  mix_decode.d4.loss_dice: 0.5022  mix_decode.d5.loss_cls: 0.1516  mix_decode.d5.loss_mask: 0.3981  mix_decode.d5.loss_dice: 0.5176  mix_decode.d6.loss_cls: 0.1394  mix_decode.d6.loss_mask: 0.4079  mix_decode.d6.loss_dice: 0.5268  mix_decode.d7.loss_cls: 0.1514  mix_decode.d7.loss_mask: 0.3679  mix_decode.d7.loss_dice: 0.5120  mix_decode.d8.loss_cls: 0.1633  mix_decode.d8.loss_mask: 0.3547  mix_decode.d8.loss_dice: 0.5083
2025/03/27 14:27:51 - mmengine - INFO - Iter(train) [13650/20000]  base_lr: 3.5611e-05 lr: 3.5611e-05  eta: 1:36:58  time: 1.0788  data_time: 0.0222  memory: 10800  loss: 39.0760  decode.loss_cls: 0.3231  decode.loss_mask: 1.2156  decode.loss_dice: 1.3243  decode.d0.loss_cls: 0.3378  decode.d0.loss_mask: 1.3003  decode.d0.loss_dice: 1.3749  decode.d1.loss_cls: 0.3586  decode.d1.loss_mask: 1.2258  decode.d1.loss_dice: 1.2512  decode.d2.loss_cls: 0.3243  decode.d2.loss_mask: 1.2722  decode.d2.loss_dice: 1.3199  decode.d3.loss_cls: 0.2392  decode.d3.loss_mask: 1.2704  decode.d3.loss_dice: 1.3193  decode.d4.loss_cls: 0.2732  decode.d4.loss_mask: 1.2687  decode.d4.loss_dice: 1.2927  decode.d5.loss_cls: 0.2746  decode.d5.loss_mask: 1.2562  decode.d5.loss_dice: 1.2866  decode.d6.loss_cls: 0.2986  decode.d6.loss_mask: 1.2626  decode.d6.loss_dice: 1.3001  decode.d7.loss_cls: 0.2848  decode.d7.loss_mask: 1.2464  decode.d7.loss_dice: 1.2911  decode.d8.loss_cls: 0.3041  decode.d8.loss_mask: 1.2689  decode.d8.loss_dice: 1.3315  mix_decode.loss_cls: 0.0772  mix_decode.loss_mask: 0.4116  mix_decode.loss_dice: 0.5290  mix_decode.d0.loss_cls: 0.1505  mix_decode.d0.loss_mask: 0.3966  mix_decode.d0.loss_dice: 0.5401  mix_decode.d1.loss_cls: 0.0947  mix_decode.d1.loss_mask: 0.3940  mix_decode.d1.loss_dice: 0.5340  mix_decode.d2.loss_cls: 0.1116  mix_decode.d2.loss_mask: 0.3941  mix_decode.d2.loss_dice: 0.5214  mix_decode.d3.loss_cls: 0.0753  mix_decode.d3.loss_mask: 0.4110  mix_decode.d3.loss_dice: 0.5264  mix_decode.d4.loss_cls: 0.1036  mix_decode.d4.loss_mask: 0.3957  mix_decode.d4.loss_dice: 0.5104  mix_decode.d5.loss_cls: 0.1476  mix_decode.d5.loss_mask: 0.3973  mix_decode.d5.loss_dice: 0.5170  mix_decode.d6.loss_cls: 0.1300  mix_decode.d6.loss_mask: 0.4223  mix_decode.d6.loss_dice: 0.5101  mix_decode.d7.loss_cls: 0.1075  mix_decode.d7.loss_mask: 0.4247  mix_decode.d7.loss_dice: 0.5142  mix_decode.d8.loss_cls: 0.0843  mix_decode.d8.loss_mask: 0.4179  mix_decode.d8.loss_dice: 0.5288
2025/03/27 14:28:45 - mmengine - INFO - Iter(train) [13700/20000]  base_lr: 3.5359e-05 lr: 3.5359e-05  eta: 1:36:16  time: 1.0763  data_time: 0.0221  memory: 10806  loss: 36.6897  decode.loss_cls: 0.2098  decode.loss_mask: 1.0798  decode.loss_dice: 1.2293  decode.d0.loss_cls: 0.2683  decode.d0.loss_mask: 1.1317  decode.d0.loss_dice: 1.2432  decode.d1.loss_cls: 0.2199  decode.d1.loss_mask: 1.0958  decode.d1.loss_dice: 1.2360  decode.d2.loss_cls: 0.2022  decode.d2.loss_mask: 1.0992  decode.d2.loss_dice: 1.2258  decode.d3.loss_cls: 0.1893  decode.d3.loss_mask: 1.0734  decode.d3.loss_dice: 1.2325  decode.d4.loss_cls: 0.2160  decode.d4.loss_mask: 1.1080  decode.d4.loss_dice: 1.2496  decode.d5.loss_cls: 0.1985  decode.d5.loss_mask: 1.1053  decode.d5.loss_dice: 1.2592  decode.d6.loss_cls: 0.1788  decode.d6.loss_mask: 1.1183  decode.d6.loss_dice: 1.2695  decode.d7.loss_cls: 0.1933  decode.d7.loss_mask: 1.1094  decode.d7.loss_dice: 1.2358  decode.d8.loss_cls: 0.1812  decode.d8.loss_mask: 1.1109  decode.d8.loss_dice: 1.2541  mix_decode.loss_cls: 0.1811  mix_decode.loss_mask: 0.3941  mix_decode.loss_dice: 0.5540  mix_decode.d0.loss_cls: 0.1465  mix_decode.d0.loss_mask: 0.3978  mix_decode.d0.loss_dice: 0.5979  mix_decode.d1.loss_cls: 0.1647  mix_decode.d1.loss_mask: 0.3830  mix_decode.d1.loss_dice: 0.5618  mix_decode.d2.loss_cls: 0.1700  mix_decode.d2.loss_mask: 0.3963  mix_decode.d2.loss_dice: 0.5451  mix_decode.d3.loss_cls: 0.2015  mix_decode.d3.loss_mask: 0.3813  mix_decode.d3.loss_dice: 0.5408  mix_decode.d4.loss_cls: 0.1892  mix_decode.d4.loss_mask: 0.3813  mix_decode.d4.loss_dice: 0.5391  mix_decode.d5.loss_cls: 0.1591  mix_decode.d5.loss_mask: 0.3838  mix_decode.d5.loss_dice: 0.5431  mix_decode.d6.loss_cls: 0.2158  mix_decode.d6.loss_mask: 0.3727  mix_decode.d6.loss_dice: 0.5246  mix_decode.d7.loss_cls: 0.1931  mix_decode.d7.loss_mask: 0.3942  mix_decode.d7.loss_dice: 0.5382  mix_decode.d8.loss_cls: 0.1732  mix_decode.d8.loss_mask: 0.3810  mix_decode.d8.loss_dice: 0.5615
2025/03/27 14:29:39 - mmengine - INFO - Iter(train) [13750/20000]  base_lr: 3.5106e-05 lr: 3.5106e-05  eta: 1:35:34  time: 1.0784  data_time: 0.0219  memory: 10803  loss: 37.7847  decode.loss_cls: 0.1252  decode.loss_mask: 1.4360  decode.loss_dice: 1.1802  decode.d0.loss_cls: 0.2330  decode.d0.loss_mask: 1.4748  decode.d0.loss_dice: 1.1909  decode.d1.loss_cls: 0.1000  decode.d1.loss_mask: 1.4631  decode.d1.loss_dice: 1.1730  decode.d2.loss_cls: 0.1033  decode.d2.loss_mask: 1.4548  decode.d2.loss_dice: 1.1771  decode.d3.loss_cls: 0.1082  decode.d3.loss_mask: 1.4628  decode.d3.loss_dice: 1.1820  decode.d4.loss_cls: 0.1178  decode.d4.loss_mask: 1.4548  decode.d4.loss_dice: 1.1688  decode.d5.loss_cls: 0.1063  decode.d5.loss_mask: 1.4520  decode.d5.loss_dice: 1.1706  decode.d6.loss_cls: 0.1038  decode.d6.loss_mask: 1.4385  decode.d6.loss_dice: 1.1815  decode.d7.loss_cls: 0.1127  decode.d7.loss_mask: 1.4418  decode.d7.loss_dice: 1.1770  decode.d8.loss_cls: 0.0782  decode.d8.loss_mask: 1.4566  decode.d8.loss_dice: 1.2002  mix_decode.loss_cls: 0.1059  mix_decode.loss_mask: 0.3768  mix_decode.loss_dice: 0.5327  mix_decode.d0.loss_cls: 0.1417  mix_decode.d0.loss_mask: 0.3627  mix_decode.d0.loss_dice: 0.5440  mix_decode.d1.loss_cls: 0.1675  mix_decode.d1.loss_mask: 0.3618  mix_decode.d1.loss_dice: 0.5191  mix_decode.d2.loss_cls: 0.1568  mix_decode.d2.loss_mask: 0.3681  mix_decode.d2.loss_dice: 0.5237  mix_decode.d3.loss_cls: 0.1463  mix_decode.d3.loss_mask: 0.3745  mix_decode.d3.loss_dice: 0.5154  mix_decode.d4.loss_cls: 0.1403  mix_decode.d4.loss_mask: 0.3642  mix_decode.d4.loss_dice: 0.5133  mix_decode.d5.loss_cls: 0.1178  mix_decode.d5.loss_mask: 0.3726  mix_decode.d5.loss_dice: 0.5107  mix_decode.d6.loss_cls: 0.1407  mix_decode.d6.loss_mask: 0.3620  mix_decode.d6.loss_dice: 0.4969  mix_decode.d7.loss_cls: 0.1172  mix_decode.d7.loss_mask: 0.3808  mix_decode.d7.loss_dice: 0.5346  mix_decode.d8.loss_cls: 0.0927  mix_decode.d8.loss_mask: 0.3810  mix_decode.d8.loss_dice: 0.5378
2025/03/27 14:30:33 - mmengine - INFO - Iter(train) [13800/20000]  base_lr: 3.4853e-05 lr: 3.4853e-05  eta: 1:34:51  time: 1.0732  data_time: 0.0220  memory: 10814  loss: 35.5448  decode.loss_cls: 0.2718  decode.loss_mask: 1.0946  decode.loss_dice: 1.1040  decode.d0.loss_cls: 0.2944  decode.d0.loss_mask: 1.1352  decode.d0.loss_dice: 1.1691  decode.d1.loss_cls: 0.2839  decode.d1.loss_mask: 1.1162  decode.d1.loss_dice: 1.1268  decode.d2.loss_cls: 0.2657  decode.d2.loss_mask: 1.1004  decode.d2.loss_dice: 1.1115  decode.d3.loss_cls: 0.2626  decode.d3.loss_mask: 1.0905  decode.d3.loss_dice: 1.0980  decode.d4.loss_cls: 0.2746  decode.d4.loss_mask: 1.1042  decode.d4.loss_dice: 1.1044  decode.d5.loss_cls: 0.2855  decode.d5.loss_mask: 1.0954  decode.d5.loss_dice: 1.1056  decode.d6.loss_cls: 0.2586  decode.d6.loss_mask: 1.0825  decode.d6.loss_dice: 1.1127  decode.d7.loss_cls: 0.2823  decode.d7.loss_mask: 1.0627  decode.d7.loss_dice: 1.1400  decode.d8.loss_cls: 0.2818  decode.d8.loss_mask: 1.0644  decode.d8.loss_dice: 1.1229  mix_decode.loss_cls: 0.1595  mix_decode.loss_mask: 0.3967  mix_decode.loss_dice: 0.5235  mix_decode.d0.loss_cls: 0.1835  mix_decode.d0.loss_mask: 0.3595  mix_decode.d0.loss_dice: 0.5405  mix_decode.d1.loss_cls: 0.1990  mix_decode.d1.loss_mask: 0.3629  mix_decode.d1.loss_dice: 0.5016  mix_decode.d2.loss_cls: 0.1881  mix_decode.d2.loss_mask: 0.3715  mix_decode.d2.loss_dice: 0.5094  mix_decode.d3.loss_cls: 0.1547  mix_decode.d3.loss_mask: 0.3684  mix_decode.d3.loss_dice: 0.5030  mix_decode.d4.loss_cls: 0.1553  mix_decode.d4.loss_mask: 0.3772  mix_decode.d4.loss_dice: 0.5216  mix_decode.d5.loss_cls: 0.1466  mix_decode.d5.loss_mask: 0.3818  mix_decode.d5.loss_dice: 0.5187  mix_decode.d6.loss_cls: 0.1468  mix_decode.d6.loss_mask: 0.4028  mix_decode.d6.loss_dice: 0.5189  mix_decode.d7.loss_cls: 0.1693  mix_decode.d7.loss_mask: 0.3973  mix_decode.d7.loss_dice: 0.5028  mix_decode.d8.loss_cls: 0.1678  mix_decode.d8.loss_mask: 0.3981  mix_decode.d8.loss_dice: 0.5159
2025/03/27 14:31:27 - mmengine - INFO - Iter(train) [13850/20000]  base_lr: 3.4600e-05 lr: 3.4600e-05  eta: 1:34:09  time: 1.0750  data_time: 0.0222  memory: 10797  loss: 36.9512  decode.loss_cls: 0.1905  decode.loss_mask: 1.2836  decode.loss_dice: 1.2352  decode.d0.loss_cls: 0.2587  decode.d0.loss_mask: 1.3149  decode.d0.loss_dice: 1.3053  decode.d1.loss_cls: 0.2955  decode.d1.loss_mask: 1.2644  decode.d1.loss_dice: 1.1801  decode.d2.loss_cls: 0.2526  decode.d2.loss_mask: 1.2708  decode.d2.loss_dice: 1.2081  decode.d3.loss_cls: 0.2237  decode.d3.loss_mask: 1.2646  decode.d3.loss_dice: 1.2117  decode.d4.loss_cls: 0.2215  decode.d4.loss_mask: 1.2760  decode.d4.loss_dice: 1.2213  decode.d5.loss_cls: 0.1894  decode.d5.loss_mask: 1.2676  decode.d5.loss_dice: 1.2345  decode.d6.loss_cls: 0.2237  decode.d6.loss_mask: 1.2570  decode.d6.loss_dice: 1.2377  decode.d7.loss_cls: 0.1775  decode.d7.loss_mask: 1.2927  decode.d7.loss_dice: 1.2441  decode.d8.loss_cls: 0.1904  decode.d8.loss_mask: 1.2891  decode.d8.loss_dice: 1.2585  mix_decode.loss_cls: 0.0888  mix_decode.loss_mask: 0.4082  mix_decode.loss_dice: 0.4291  mix_decode.d0.loss_cls: 0.1553  mix_decode.d0.loss_mask: 0.4157  mix_decode.d0.loss_dice: 0.4625  mix_decode.d1.loss_cls: 0.1060  mix_decode.d1.loss_mask: 0.4331  mix_decode.d1.loss_dice: 0.4415  mix_decode.d2.loss_cls: 0.0826  mix_decode.d2.loss_mask: 0.4170  mix_decode.d2.loss_dice: 0.4356  mix_decode.d3.loss_cls: 0.0826  mix_decode.d3.loss_mask: 0.4369  mix_decode.d3.loss_dice: 0.4343  mix_decode.d4.loss_cls: 0.1020  mix_decode.d4.loss_mask: 0.4250  mix_decode.d4.loss_dice: 0.4425  mix_decode.d5.loss_cls: 0.0999  mix_decode.d5.loss_mask: 0.4314  mix_decode.d5.loss_dice: 0.4339  mix_decode.d6.loss_cls: 0.0983  mix_decode.d6.loss_mask: 0.4084  mix_decode.d6.loss_dice: 0.4378  mix_decode.d7.loss_cls: 0.0967  mix_decode.d7.loss_mask: 0.4151  mix_decode.d7.loss_dice: 0.4456  mix_decode.d8.loss_cls: 0.0837  mix_decode.d8.loss_mask: 0.4266  mix_decode.d8.loss_dice: 0.4346
2025/03/27 14:32:21 - mmengine - INFO - Iter(train) [13900/20000]  base_lr: 3.4347e-05 lr: 3.4347e-05  eta: 1:33:27  time: 1.1106  data_time: 0.0252  memory: 10806  loss: 30.6954  decode.loss_cls: 0.1774  decode.loss_mask: 0.8105  decode.loss_dice: 1.1025  decode.d0.loss_cls: 0.2202  decode.d0.loss_mask: 0.8307  decode.d0.loss_dice: 1.1317  decode.d1.loss_cls: 0.2079  decode.d1.loss_mask: 0.7928  decode.d1.loss_dice: 1.0819  decode.d2.loss_cls: 0.1853  decode.d2.loss_mask: 0.8213  decode.d2.loss_dice: 1.0837  decode.d3.loss_cls: 0.2193  decode.d3.loss_mask: 0.8436  decode.d3.loss_dice: 1.0864  decode.d4.loss_cls: 0.1904  decode.d4.loss_mask: 0.8420  decode.d4.loss_dice: 1.0987  decode.d5.loss_cls: 0.1937  decode.d5.loss_mask: 0.8021  decode.d5.loss_dice: 1.0662  decode.d6.loss_cls: 0.2127  decode.d6.loss_mask: 0.8093  decode.d6.loss_dice: 1.0899  decode.d7.loss_cls: 0.1847  decode.d7.loss_mask: 0.8023  decode.d7.loss_dice: 1.0989  decode.d8.loss_cls: 0.2272  decode.d8.loss_mask: 0.7806  decode.d8.loss_dice: 1.0639  mix_decode.loss_cls: 0.1068  mix_decode.loss_mask: 0.3198  mix_decode.loss_dice: 0.5315  mix_decode.d0.loss_cls: 0.1002  mix_decode.d0.loss_mask: 0.3320  mix_decode.d0.loss_dice: 0.5532  mix_decode.d1.loss_cls: 0.0798  mix_decode.d1.loss_mask: 0.3323  mix_decode.d1.loss_dice: 0.5529  mix_decode.d2.loss_cls: 0.0925  mix_decode.d2.loss_mask: 0.3253  mix_decode.d2.loss_dice: 0.5462  mix_decode.d3.loss_cls: 0.0975  mix_decode.d3.loss_mask: 0.3272  mix_decode.d3.loss_dice: 0.5382  mix_decode.d4.loss_cls: 0.0881  mix_decode.d4.loss_mask: 0.3237  mix_decode.d4.loss_dice: 0.5433  mix_decode.d5.loss_cls: 0.0958  mix_decode.d5.loss_mask: 0.3304  mix_decode.d5.loss_dice: 0.5345  mix_decode.d6.loss_cls: 0.0818  mix_decode.d6.loss_mask: 0.3286  mix_decode.d6.loss_dice: 0.5352  mix_decode.d7.loss_cls: 0.0969  mix_decode.d7.loss_mask: 0.3264  mix_decode.d7.loss_dice: 0.5412  mix_decode.d8.loss_cls: 0.1017  mix_decode.d8.loss_mask: 0.3284  mix_decode.d8.loss_dice: 0.5464
2025/03/27 14:33:15 - mmengine - INFO - Iter(train) [13950/20000]  base_lr: 3.4094e-05 lr: 3.4094e-05  eta: 1:32:44  time: 1.0739  data_time: 0.0216  memory: 10814  loss: 35.2384  decode.loss_cls: 0.2388  decode.loss_mask: 1.1718  decode.loss_dice: 1.1496  decode.d0.loss_cls: 0.3571  decode.d0.loss_mask: 1.2082  decode.d0.loss_dice: 1.1358  decode.d1.loss_cls: 0.2736  decode.d1.loss_mask: 1.1646  decode.d1.loss_dice: 1.1841  decode.d2.loss_cls: 0.2469  decode.d2.loss_mask: 1.1493  decode.d2.loss_dice: 1.1646  decode.d3.loss_cls: 0.1933  decode.d3.loss_mask: 1.2181  decode.d3.loss_dice: 1.1786  decode.d4.loss_cls: 0.1899  decode.d4.loss_mask: 1.2080  decode.d4.loss_dice: 1.1744  decode.d5.loss_cls: 0.2213  decode.d5.loss_mask: 1.1858  decode.d5.loss_dice: 1.1319  decode.d6.loss_cls: 0.1942  decode.d6.loss_mask: 1.2202  decode.d6.loss_dice: 1.1668  decode.d7.loss_cls: 0.2482  decode.d7.loss_mask: 1.1773  decode.d7.loss_dice: 1.1539  decode.d8.loss_cls: 0.2368  decode.d8.loss_mask: 1.1474  decode.d8.loss_dice: 1.1317  mix_decode.loss_cls: 0.1000  mix_decode.loss_mask: 0.3070  mix_decode.loss_dice: 0.5308  mix_decode.d0.loss_cls: 0.0945  mix_decode.d0.loss_mask: 0.3102  mix_decode.d0.loss_dice: 0.5596  mix_decode.d1.loss_cls: 0.1330  mix_decode.d1.loss_mask: 0.3037  mix_decode.d1.loss_dice: 0.5250  mix_decode.d2.loss_cls: 0.1342  mix_decode.d2.loss_mask: 0.3020  mix_decode.d2.loss_dice: 0.5201  mix_decode.d3.loss_cls: 0.0963  mix_decode.d3.loss_mask: 0.3096  mix_decode.d3.loss_dice: 0.5237  mix_decode.d4.loss_cls: 0.0941  mix_decode.d4.loss_mask: 0.3059  mix_decode.d4.loss_dice: 0.5253  mix_decode.d5.loss_cls: 0.0916  mix_decode.d5.loss_mask: 0.3183  mix_decode.d5.loss_dice: 0.5282  mix_decode.d6.loss_cls: 0.1189  mix_decode.d6.loss_mask: 0.3059  mix_decode.d6.loss_dice: 0.5103  mix_decode.d7.loss_cls: 0.1006  mix_decode.d7.loss_mask: 0.3135  mix_decode.d7.loss_dice: 0.5289  mix_decode.d8.loss_cls: 0.1000  mix_decode.d8.loss_mask: 0.3040  mix_decode.d8.loss_dice: 0.5211
2025/03/27 14:34:09 - mmengine - INFO - Exp name: pr2vi_20250327_105544
2025/03/27 14:34:09 - mmengine - INFO - Iter(train) [14000/20000]  base_lr: 3.3840e-05 lr: 3.3840e-05  eta: 1:32:02  time: 1.0841  data_time: 0.0230  memory: 10809  loss: 34.1408  decode.loss_cls: 0.1347  decode.loss_mask: 1.2053  decode.loss_dice: 1.0461  decode.d0.loss_cls: 0.2537  decode.d0.loss_mask: 1.2569  decode.d0.loss_dice: 1.0423  decode.d1.loss_cls: 0.1308  decode.d1.loss_mask: 1.2328  decode.d1.loss_dice: 1.0397  decode.d2.loss_cls: 0.1226  decode.d2.loss_mask: 1.2218  decode.d2.loss_dice: 1.0410  decode.d3.loss_cls: 0.1131  decode.d3.loss_mask: 1.2112  decode.d3.loss_dice: 1.0487  decode.d4.loss_cls: 0.1213  decode.d4.loss_mask: 1.2132  decode.d4.loss_dice: 1.0470  decode.d5.loss_cls: 0.1162  decode.d5.loss_mask: 1.2124  decode.d5.loss_dice: 1.0341  decode.d6.loss_cls: 0.1136  decode.d6.loss_mask: 1.2057  decode.d6.loss_dice: 1.0533  decode.d7.loss_cls: 0.0960  decode.d7.loss_mask: 1.2149  decode.d7.loss_dice: 1.0598  decode.d8.loss_cls: 0.1406  decode.d8.loss_mask: 1.2135  decode.d8.loss_dice: 1.0346  mix_decode.loss_cls: 0.1134  mix_decode.loss_mask: 0.3601  mix_decode.loss_dice: 0.5325  mix_decode.d0.loss_cls: 0.1470  mix_decode.d0.loss_mask: 0.3579  mix_decode.d0.loss_dice: 0.5982  mix_decode.d1.loss_cls: 0.1503  mix_decode.d1.loss_mask: 0.3428  mix_decode.d1.loss_dice: 0.5323  mix_decode.d2.loss_cls: 0.1404  mix_decode.d2.loss_mask: 0.3317  mix_decode.d2.loss_dice: 0.5113  mix_decode.d3.loss_cls: 0.1259  mix_decode.d3.loss_mask: 0.3374  mix_decode.d3.loss_dice: 0.5224  mix_decode.d4.loss_cls: 0.1494  mix_decode.d4.loss_mask: 0.3405  mix_decode.d4.loss_dice: 0.5316  mix_decode.d5.loss_cls: 0.1347  mix_decode.d5.loss_mask: 0.3408  mix_decode.d5.loss_dice: 0.5076  mix_decode.d6.loss_cls: 0.1417  mix_decode.d6.loss_mask: 0.3476  mix_decode.d6.loss_dice: 0.5209  mix_decode.d7.loss_cls: 0.1259  mix_decode.d7.loss_mask: 0.3607  mix_decode.d7.loss_dice: 0.5649  mix_decode.d8.loss_cls: 0.0770  mix_decode.d8.loss_mask: 0.3585  mix_decode.d8.loss_dice: 0.5582
2025/03/27 14:34:09 - mmengine - INFO - Saving checkpoint at 14000 iterations
2025/03/27 14:34:15 - mmengine - INFO - Iter(val) [ 50/398]    eta: 0:00:29  time: 0.0852  data_time: 0.0017  memory: 3119  
2025/03/27 14:34:19 - mmengine - INFO - Iter(val) [100/398]    eta: 0:00:25  time: 0.0853  data_time: 0.0017  memory: 3119  
2025/03/27 14:34:23 - mmengine - INFO - Iter(val) [150/398]    eta: 0:00:21  time: 0.0852  data_time: 0.0018  memory: 3119  
2025/03/27 14:34:28 - mmengine - INFO - Iter(val) [200/398]    eta: 0:00:16  time: 0.0850  data_time: 0.0017  memory: 3119  
2025/03/27 14:34:32 - mmengine - INFO - Iter(val) [250/398]    eta: 0:00:12  time: 0.0859  data_time: 0.0016  memory: 3119  
2025/03/27 14:34:36 - mmengine - INFO - Iter(val) [300/398]    eta: 0:00:08  time: 0.0852  data_time: 0.0017  memory: 3119  
2025/03/27 14:34:40 - mmengine - INFO - Iter(val) [350/398]    eta: 0:00:04  time: 0.0853  data_time: 0.0017  memory: 3119  
2025/03/27 14:34:44 - mmengine - INFO - per class results:
2025/03/27 14:34:44 - mmengine - INFO - 
+--------------------+-------+-------+
|       Class        |  IoU  |  Acc  |
+--------------------+-------+-------+
| impervious_surface | 80.28 | 89.35 |
|      building      | 89.45 | 95.91 |
|   low_vegetation   | 66.26 | 78.03 |
|        tree        |  74.4 | 81.94 |
|        car         | 61.93 | 80.46 |
|      clutter       | 33.59 | 93.32 |
+--------------------+-------+-------+
2025/03/27 14:34:44 - mmengine - INFO - Iter(val) [398/398]    aAcc: 86.7700  mIoU: 67.6500  mAcc: 86.5000  data_time: 0.0018  time: 0.0853
2025/03/27 14:34:44 - mmengine - INFO - The previous best checkpoint /data/xiaoxinghhh/code/my_mmcv/work_dirs/pr2vi/DA_spatial_64_fft_cut_off_0.3_pre3/4ddf0_seed0/best_mIoU_iter_8000.pth is removed
2025/03/27 14:34:45 - mmengine - INFO - The best checkpoint with 67.6500 mIoU at 14000 iter is saved to best_mIoU_iter_14000.pth.
2025/03/27 14:35:40 - mmengine - INFO - Iter(train) [14050/20000]  base_lr: 3.3586e-05 lr: 3.3586e-05  eta: 1:31:20  time: 1.0737  data_time: 0.0223  memory: 10810  loss: 35.2611  decode.loss_cls: 0.3317  decode.loss_mask: 0.8542  decode.loss_dice: 1.1122  decode.d0.loss_cls: 0.4108  decode.d0.loss_mask: 0.8843  decode.d0.loss_dice: 1.1804  decode.d1.loss_cls: 0.4092  decode.d1.loss_mask: 0.8776  decode.d1.loss_dice: 1.1344  decode.d2.loss_cls: 0.3510  decode.d2.loss_mask: 0.8696  decode.d2.loss_dice: 1.1117  decode.d3.loss_cls: 0.3423  decode.d3.loss_mask: 0.8920  decode.d3.loss_dice: 1.0899  decode.d4.loss_cls: 0.3633  decode.d4.loss_mask: 0.8663  decode.d4.loss_dice: 1.1040  decode.d5.loss_cls: 0.3391  decode.d5.loss_mask: 0.8676  decode.d5.loss_dice: 1.0973  decode.d6.loss_cls: 0.3577  decode.d6.loss_mask: 0.8662  decode.d6.loss_dice: 1.1007  decode.d7.loss_cls: 0.4155  decode.d7.loss_mask: 0.8410  decode.d7.loss_dice: 1.0857  decode.d8.loss_cls: 0.3122  decode.d8.loss_mask: 0.8823  decode.d8.loss_dice: 1.1380  mix_decode.loss_cls: 0.1441  mix_decode.loss_mask: 0.4761  mix_decode.loss_dice: 0.5854  mix_decode.d0.loss_cls: 0.1636  mix_decode.d0.loss_mask: 0.4502  mix_decode.d0.loss_dice: 0.5977  mix_decode.d1.loss_cls: 0.1312  mix_decode.d1.loss_mask: 0.4596  mix_decode.d1.loss_dice: 0.5947  mix_decode.d2.loss_cls: 0.1212  mix_decode.d2.loss_mask: 0.4520  mix_decode.d2.loss_dice: 0.5893  mix_decode.d3.loss_cls: 0.1314  mix_decode.d3.loss_mask: 0.4616  mix_decode.d3.loss_dice: 0.5831  mix_decode.d4.loss_cls: 0.0825  mix_decode.d4.loss_mask: 0.4700  mix_decode.d4.loss_dice: 0.6038  mix_decode.d5.loss_cls: 0.1061  mix_decode.d5.loss_mask: 0.4662  mix_decode.d5.loss_dice: 0.5831  mix_decode.d6.loss_cls: 0.1140  mix_decode.d6.loss_mask: 0.4670  mix_decode.d6.loss_dice: 0.5839  mix_decode.d7.loss_cls: 0.1038  mix_decode.d7.loss_mask: 0.4761  mix_decode.d7.loss_dice: 0.5987  mix_decode.d8.loss_cls: 0.0931  mix_decode.d8.loss_mask: 0.4790  mix_decode.d8.loss_dice: 0.6045
2025/03/27 14:36:34 - mmengine - INFO - Iter(train) [14100/20000]  base_lr: 3.3332e-05 lr: 3.3332e-05  eta: 1:30:37  time: 1.0740  data_time: 0.0220  memory: 10805  loss: 36.7447  decode.loss_cls: 0.1903  decode.loss_mask: 1.1429  decode.loss_dice: 1.1975  decode.d0.loss_cls: 0.2974  decode.d0.loss_mask: 1.1421  decode.d0.loss_dice: 1.2050  decode.d1.loss_cls: 0.2232  decode.d1.loss_mask: 1.1485  decode.d1.loss_dice: 1.1732  decode.d2.loss_cls: 0.2264  decode.d2.loss_mask: 1.1354  decode.d2.loss_dice: 1.1628  decode.d3.loss_cls: 0.2294  decode.d3.loss_mask: 1.1388  decode.d3.loss_dice: 1.1870  decode.d4.loss_cls: 0.1904  decode.d4.loss_mask: 1.1422  decode.d4.loss_dice: 1.1732  decode.d5.loss_cls: 0.1761  decode.d5.loss_mask: 1.1354  decode.d5.loss_dice: 1.1685  decode.d6.loss_cls: 0.1794  decode.d6.loss_mask: 1.1335  decode.d6.loss_dice: 1.1670  decode.d7.loss_cls: 0.1912  decode.d7.loss_mask: 1.1292  decode.d7.loss_dice: 1.1972  decode.d8.loss_cls: 0.2627  decode.d8.loss_mask: 1.1399  decode.d8.loss_dice: 1.1603  mix_decode.loss_cls: 0.1762  mix_decode.loss_mask: 0.3879  mix_decode.loss_dice: 0.5854  mix_decode.d0.loss_cls: 0.1552  mix_decode.d0.loss_mask: 0.3973  mix_decode.d0.loss_dice: 0.6125  mix_decode.d1.loss_cls: 0.1379  mix_decode.d1.loss_mask: 0.3905  mix_decode.d1.loss_dice: 0.5993  mix_decode.d2.loss_cls: 0.1740  mix_decode.d2.loss_mask: 0.3870  mix_decode.d2.loss_dice: 0.5672  mix_decode.d3.loss_cls: 0.1962  mix_decode.d3.loss_mask: 0.3844  mix_decode.d3.loss_dice: 0.5682  mix_decode.d4.loss_cls: 0.1790  mix_decode.d4.loss_mask: 0.3788  mix_decode.d4.loss_dice: 0.5591  mix_decode.d5.loss_cls: 0.1523  mix_decode.d5.loss_mask: 0.3850  mix_decode.d5.loss_dice: 0.5689  mix_decode.d6.loss_cls: 0.1754  mix_decode.d6.loss_mask: 0.3865  mix_decode.d6.loss_dice: 0.5806  mix_decode.d7.loss_cls: 0.1953  mix_decode.d7.loss_mask: 0.3939  mix_decode.d7.loss_dice: 0.5828  mix_decode.d8.loss_cls: 0.1622  mix_decode.d8.loss_mask: 0.3909  mix_decode.d8.loss_dice: 0.5887
2025/03/27 14:37:28 - mmengine - INFO - Iter(train) [14150/20000]  base_lr: 3.3078e-05 lr: 3.3078e-05  eta: 1:29:54  time: 1.0744  data_time: 0.0224  memory: 10805  loss: 38.7029  decode.loss_cls: 0.2886  decode.loss_mask: 1.1367  decode.loss_dice: 1.2461  decode.d0.loss_cls: 0.2434  decode.d0.loss_mask: 1.1912  decode.d0.loss_dice: 1.3025  decode.d1.loss_cls: 0.2541  decode.d1.loss_mask: 1.1488  decode.d1.loss_dice: 1.2559  decode.d2.loss_cls: 0.1738  decode.d2.loss_mask: 1.1170  decode.d2.loss_dice: 1.2941  decode.d3.loss_cls: 0.2039  decode.d3.loss_mask: 1.1487  decode.d3.loss_dice: 1.2744  decode.d4.loss_cls: 0.2387  decode.d4.loss_mask: 1.1398  decode.d4.loss_dice: 1.2403  decode.d5.loss_cls: 0.2495  decode.d5.loss_mask: 1.1486  decode.d5.loss_dice: 1.2381  decode.d6.loss_cls: 0.2158  decode.d6.loss_mask: 1.1550  decode.d6.loss_dice: 1.2827  decode.d7.loss_cls: 0.1930  decode.d7.loss_mask: 1.1684  decode.d7.loss_dice: 1.2591  decode.d8.loss_cls: 0.1888  decode.d8.loss_mask: 1.1891  decode.d8.loss_dice: 1.2858  mix_decode.loss_cls: 0.1602  mix_decode.loss_mask: 0.3749  mix_decode.loss_dice: 0.6801  mix_decode.d0.loss_cls: 0.1031  mix_decode.d0.loss_mask: 0.3728  mix_decode.d0.loss_dice: 0.7384  mix_decode.d1.loss_cls: 0.1843  mix_decode.d1.loss_mask: 0.3642  mix_decode.d1.loss_dice: 0.6633  mix_decode.d2.loss_cls: 0.1802  mix_decode.d2.loss_mask: 0.3657  mix_decode.d2.loss_dice: 0.6740  mix_decode.d3.loss_cls: 0.1821  mix_decode.d3.loss_mask: 0.3541  mix_decode.d3.loss_dice: 0.6711  mix_decode.d4.loss_cls: 0.1753  mix_decode.d4.loss_mask: 0.3874  mix_decode.d4.loss_dice: 0.6836  mix_decode.d5.loss_cls: 0.1545  mix_decode.d5.loss_mask: 0.3781  mix_decode.d5.loss_dice: 0.7025  mix_decode.d6.loss_cls: 0.1466  mix_decode.d6.loss_mask: 0.3676  mix_decode.d6.loss_dice: 0.6931  mix_decode.d7.loss_cls: 0.1736  mix_decode.d7.loss_mask: 0.3693  mix_decode.d7.loss_dice: 0.6691  mix_decode.d8.loss_cls: 0.1605  mix_decode.d8.loss_mask: 0.4029  mix_decode.d8.loss_dice: 0.6985
2025/03/27 14:38:21 - mmengine - INFO - Iter(train) [14200/20000]  base_lr: 3.2823e-05 lr: 3.2823e-05  eta: 1:29:11  time: 1.0754  data_time: 0.0223  memory: 10803  loss: 31.6928  decode.loss_cls: 0.2672  decode.loss_mask: 0.8541  decode.loss_dice: 1.0202  decode.d0.loss_cls: 0.3434  decode.d0.loss_mask: 0.9168  decode.d0.loss_dice: 1.0319  decode.d1.loss_cls: 0.2252  decode.d1.loss_mask: 0.9102  decode.d1.loss_dice: 1.0192  decode.d2.loss_cls: 0.2386  decode.d2.loss_mask: 0.9209  decode.d2.loss_dice: 1.0324  decode.d3.loss_cls: 0.2410  decode.d3.loss_mask: 0.8558  decode.d3.loss_dice: 1.0189  decode.d4.loss_cls: 0.2701  decode.d4.loss_mask: 0.8943  decode.d4.loss_dice: 1.0341  decode.d5.loss_cls: 0.2210  decode.d5.loss_mask: 0.8973  decode.d5.loss_dice: 1.0299  decode.d6.loss_cls: 0.2169  decode.d6.loss_mask: 0.9017  decode.d6.loss_dice: 1.0236  decode.d7.loss_cls: 0.2429  decode.d7.loss_mask: 0.8820  decode.d7.loss_dice: 1.0508  decode.d8.loss_cls: 0.1231  decode.d8.loss_mask: 0.9208  decode.d8.loss_dice: 1.0446  mix_decode.loss_cls: 0.1167  mix_decode.loss_mask: 0.3644  mix_decode.loss_dice: 0.5185  mix_decode.d0.loss_cls: 0.0989  mix_decode.d0.loss_mask: 0.3617  mix_decode.d0.loss_dice: 0.5621  mix_decode.d1.loss_cls: 0.1649  mix_decode.d1.loss_mask: 0.3667  mix_decode.d1.loss_dice: 0.5275  mix_decode.d2.loss_cls: 0.0889  mix_decode.d2.loss_mask: 0.3643  mix_decode.d2.loss_dice: 0.5382  mix_decode.d3.loss_cls: 0.1064  mix_decode.d3.loss_mask: 0.3532  mix_decode.d3.loss_dice: 0.5093  mix_decode.d4.loss_cls: 0.0916  mix_decode.d4.loss_mask: 0.3503  mix_decode.d4.loss_dice: 0.5369  mix_decode.d5.loss_cls: 0.1372  mix_decode.d5.loss_mask: 0.3536  mix_decode.d5.loss_dice: 0.5081  mix_decode.d6.loss_cls: 0.1352  mix_decode.d6.loss_mask: 0.3599  mix_decode.d6.loss_dice: 0.5215  mix_decode.d7.loss_cls: 0.1306  mix_decode.d7.loss_mask: 0.3602  mix_decode.d7.loss_dice: 0.5099  mix_decode.d8.loss_cls: 0.1163  mix_decode.d8.loss_mask: 0.3590  mix_decode.d8.loss_dice: 0.5318
2025/03/27 14:39:16 - mmengine - INFO - Iter(train) [14250/20000]  base_lr: 3.2568e-05 lr: 3.2568e-05  eta: 1:28:29  time: 1.1197  data_time: 0.0264  memory: 10806  loss: 32.7793  decode.loss_cls: 0.1811  decode.loss_mask: 1.0501  decode.loss_dice: 1.0995  decode.d0.loss_cls: 0.3152  decode.d0.loss_mask: 1.0532  decode.d0.loss_dice: 1.1028  decode.d1.loss_cls: 0.2447  decode.d1.loss_mask: 1.0409  decode.d1.loss_dice: 1.0467  decode.d2.loss_cls: 0.1968  decode.d2.loss_mask: 1.0516  decode.d2.loss_dice: 1.0895  decode.d3.loss_cls: 0.1919  decode.d3.loss_mask: 1.0572  decode.d3.loss_dice: 1.1201  decode.d4.loss_cls: 0.2395  decode.d4.loss_mask: 1.0756  decode.d4.loss_dice: 1.1109  decode.d5.loss_cls: 0.1518  decode.d5.loss_mask: 1.0796  decode.d5.loss_dice: 1.1120  decode.d6.loss_cls: 0.1456  decode.d6.loss_mask: 1.0696  decode.d6.loss_dice: 1.0918  decode.d7.loss_cls: 0.2282  decode.d7.loss_mask: 1.0488  decode.d7.loss_dice: 1.0511  decode.d8.loss_cls: 0.1493  decode.d8.loss_mask: 1.0775  decode.d8.loss_dice: 1.1021  mix_decode.loss_cls: 0.0792  mix_decode.loss_mask: 0.3605  mix_decode.loss_dice: 0.4775  mix_decode.d0.loss_cls: 0.0788  mix_decode.d0.loss_mask: 0.3777  mix_decode.d0.loss_dice: 0.5220  mix_decode.d1.loss_cls: 0.0901  mix_decode.d1.loss_mask: 0.3618  mix_decode.d1.loss_dice: 0.4868  mix_decode.d2.loss_cls: 0.0921  mix_decode.d2.loss_mask: 0.3601  mix_decode.d2.loss_dice: 0.4710  mix_decode.d3.loss_cls: 0.0880  mix_decode.d3.loss_mask: 0.3552  mix_decode.d3.loss_dice: 0.4716  mix_decode.d4.loss_cls: 0.0677  mix_decode.d4.loss_mask: 0.3611  mix_decode.d4.loss_dice: 0.4762  mix_decode.d5.loss_cls: 0.0774  mix_decode.d5.loss_mask: 0.3586  mix_decode.d5.loss_dice: 0.4713  mix_decode.d6.loss_cls: 0.0655  mix_decode.d6.loss_mask: 0.3661  mix_decode.d6.loss_dice: 0.4778  mix_decode.d7.loss_cls: 0.0529  mix_decode.d7.loss_mask: 0.3690  mix_decode.d7.loss_dice: 0.4793  mix_decode.d8.loss_cls: 0.0607  mix_decode.d8.loss_mask: 0.3642  mix_decode.d8.loss_dice: 0.4845
2025/03/27 14:40:11 - mmengine - INFO - Iter(train) [14300/20000]  base_lr: 3.2313e-05 lr: 3.2313e-05  eta: 1:27:46  time: 1.0756  data_time: 0.0222  memory: 10805  loss: 36.0676  decode.loss_cls: 0.3139  decode.loss_mask: 0.9832  decode.loss_dice: 1.0358  decode.d0.loss_cls: 0.3918  decode.d0.loss_mask: 0.9923  decode.d0.loss_dice: 1.1340  decode.d1.loss_cls: 0.3414  decode.d1.loss_mask: 1.0119  decode.d1.loss_dice: 1.0488  decode.d2.loss_cls: 0.3393  decode.d2.loss_mask: 0.9938  decode.d2.loss_dice: 1.0127  decode.d3.loss_cls: 0.3614  decode.d3.loss_mask: 0.9573  decode.d3.loss_dice: 1.0069  decode.d4.loss_cls: 0.2921  decode.d4.loss_mask: 0.9871  decode.d4.loss_dice: 1.0524  decode.d5.loss_cls: 0.3550  decode.d5.loss_mask: 0.9662  decode.d5.loss_dice: 1.0295  decode.d6.loss_cls: 0.3291  decode.d6.loss_mask: 0.9809  decode.d6.loss_dice: 1.0789  decode.d7.loss_cls: 0.3428  decode.d7.loss_mask: 0.9726  decode.d7.loss_dice: 1.0419  decode.d8.loss_cls: 0.3186  decode.d8.loss_mask: 0.9756  decode.d8.loss_dice: 1.0421  mix_decode.loss_cls: 0.1062  mix_decode.loss_mask: 0.4964  mix_decode.loss_dice: 0.6301  mix_decode.d0.loss_cls: 0.1561  mix_decode.d0.loss_mask: 0.4871  mix_decode.d0.loss_dice: 0.6658  mix_decode.d1.loss_cls: 0.1530  mix_decode.d1.loss_mask: 0.5027  mix_decode.d1.loss_dice: 0.6100  mix_decode.d2.loss_cls: 0.1531  mix_decode.d2.loss_mask: 0.4824  mix_decode.d2.loss_dice: 0.5939  mix_decode.d3.loss_cls: 0.1495  mix_decode.d3.loss_mask: 0.4768  mix_decode.d3.loss_dice: 0.5805  mix_decode.d4.loss_cls: 0.1411  mix_decode.d4.loss_mask: 0.4804  mix_decode.d4.loss_dice: 0.5969  mix_decode.d5.loss_cls: 0.1334  mix_decode.d5.loss_mask: 0.4751  mix_decode.d5.loss_dice: 0.5943  mix_decode.d6.loss_cls: 0.1405  mix_decode.d6.loss_mask: 0.4732  mix_decode.d6.loss_dice: 0.6084  mix_decode.d7.loss_cls: 0.1499  mix_decode.d7.loss_mask: 0.4933  mix_decode.d7.loss_dice: 0.6094  mix_decode.d8.loss_cls: 0.0944  mix_decode.d8.loss_mask: 0.5041  mix_decode.d8.loss_dice: 0.6401
2025/03/27 14:41:05 - mmengine - INFO - Iter(train) [14350/20000]  base_lr: 3.2058e-05 lr: 3.2058e-05  eta: 1:27:03  time: 1.0751  data_time: 0.0222  memory: 10811  loss: 38.0817  decode.loss_cls: 0.2824  decode.loss_mask: 1.2300  decode.loss_dice: 1.2817  decode.d0.loss_cls: 0.2795  decode.d0.loss_mask: 1.3014  decode.d0.loss_dice: 1.3741  decode.d1.loss_cls: 0.2077  decode.d1.loss_mask: 1.2494  decode.d1.loss_dice: 1.3106  decode.d2.loss_cls: 0.2336  decode.d2.loss_mask: 1.2526  decode.d2.loss_dice: 1.2905  decode.d3.loss_cls: 0.2786  decode.d3.loss_mask: 1.2461  decode.d3.loss_dice: 1.2603  decode.d4.loss_cls: 0.3130  decode.d4.loss_mask: 1.2581  decode.d4.loss_dice: 1.3056  decode.d5.loss_cls: 0.3489  decode.d5.loss_mask: 1.2662  decode.d5.loss_dice: 1.2706  decode.d6.loss_cls: 0.1907  decode.d6.loss_mask: 1.2545  decode.d6.loss_dice: 1.2931  decode.d7.loss_cls: 0.2806  decode.d7.loss_mask: 1.2540  decode.d7.loss_dice: 1.2909  decode.d8.loss_cls: 0.2783  decode.d8.loss_mask: 1.2311  decode.d8.loss_dice: 1.2451  mix_decode.loss_cls: 0.1223  mix_decode.loss_mask: 0.3557  mix_decode.loss_dice: 0.5013  mix_decode.d0.loss_cls: 0.1292  mix_decode.d0.loss_mask: 0.3277  mix_decode.d0.loss_dice: 0.5861  mix_decode.d1.loss_cls: 0.1610  mix_decode.d1.loss_mask: 0.3475  mix_decode.d1.loss_dice: 0.5212  mix_decode.d2.loss_cls: 0.1517  mix_decode.d2.loss_mask: 0.3400  mix_decode.d2.loss_dice: 0.4935  mix_decode.d3.loss_cls: 0.1425  mix_decode.d3.loss_mask: 0.3473  mix_decode.d3.loss_dice: 0.4907  mix_decode.d4.loss_cls: 0.1374  mix_decode.d4.loss_mask: 0.3418  mix_decode.d4.loss_dice: 0.4887  mix_decode.d5.loss_cls: 0.1873  mix_decode.d5.loss_mask: 0.3341  mix_decode.d5.loss_dice: 0.4718  mix_decode.d6.loss_cls: 0.1345  mix_decode.d6.loss_mask: 0.3388  mix_decode.d6.loss_dice: 0.5125  mix_decode.d7.loss_cls: 0.1091  mix_decode.d7.loss_mask: 0.3505  mix_decode.d7.loss_dice: 0.5177  mix_decode.d8.loss_cls: 0.1241  mix_decode.d8.loss_mask: 0.3526  mix_decode.d8.loss_dice: 0.5037
2025/03/27 14:41:59 - mmengine - INFO - Iter(train) [14400/20000]  base_lr: 3.1803e-05 lr: 3.1803e-05  eta: 1:26:20  time: 1.1040  data_time: 0.0244  memory: 10804  loss: 34.7024  decode.loss_cls: 0.1877  decode.loss_mask: 0.9704  decode.loss_dice: 1.2558  decode.d0.loss_cls: 0.2046  decode.d0.loss_mask: 1.0080  decode.d0.loss_dice: 1.3419  decode.d1.loss_cls: 0.2212  decode.d1.loss_mask: 1.0059  decode.d1.loss_dice: 1.2336  decode.d2.loss_cls: 0.1926  decode.d2.loss_mask: 0.9806  decode.d2.loss_dice: 1.2129  decode.d3.loss_cls: 0.1967  decode.d3.loss_mask: 0.9915  decode.d3.loss_dice: 1.2092  decode.d4.loss_cls: 0.2231  decode.d4.loss_mask: 0.9718  decode.d4.loss_dice: 1.2117  decode.d5.loss_cls: 0.2085  decode.d5.loss_mask: 0.9974  decode.d5.loss_dice: 1.1981  decode.d6.loss_cls: 0.2462  decode.d6.loss_mask: 0.9850  decode.d6.loss_dice: 1.2140  decode.d7.loss_cls: 0.2180  decode.d7.loss_mask: 0.9961  decode.d7.loss_dice: 1.2536  decode.d8.loss_cls: 0.1821  decode.d8.loss_mask: 0.9709  decode.d8.loss_dice: 1.2123  mix_decode.loss_cls: 0.1185  mix_decode.loss_mask: 0.3544  mix_decode.loss_dice: 0.5894  mix_decode.d0.loss_cls: 0.0959  mix_decode.d0.loss_mask: 0.3419  mix_decode.d0.loss_dice: 0.6164  mix_decode.d1.loss_cls: 0.1522  mix_decode.d1.loss_mask: 0.3155  mix_decode.d1.loss_dice: 0.5517  mix_decode.d2.loss_cls: 0.1358  mix_decode.d2.loss_mask: 0.3322  mix_decode.d2.loss_dice: 0.5579  mix_decode.d3.loss_cls: 0.1614  mix_decode.d3.loss_mask: 0.3200  mix_decode.d3.loss_dice: 0.5583  mix_decode.d4.loss_cls: 0.1239  mix_decode.d4.loss_mask: 0.3186  mix_decode.d4.loss_dice: 0.5631  mix_decode.d5.loss_cls: 0.1631  mix_decode.d5.loss_mask: 0.3171  mix_decode.d5.loss_dice: 0.5477  mix_decode.d6.loss_cls: 0.1414  mix_decode.d6.loss_mask: 0.3135  mix_decode.d6.loss_dice: 0.5521  mix_decode.d7.loss_cls: 0.1377  mix_decode.d7.loss_mask: 0.3577  mix_decode.d7.loss_dice: 0.5941  mix_decode.d8.loss_cls: 0.1485  mix_decode.d8.loss_mask: 0.3386  mix_decode.d8.loss_dice: 0.5825
2025/03/27 14:42:53 - mmengine - INFO - Iter(train) [14450/20000]  base_lr: 3.1547e-05 lr: 3.1547e-05  eta: 1:25:36  time: 1.1069  data_time: 0.0238  memory: 10805  loss: 35.9582  decode.loss_cls: 0.1577  decode.loss_mask: 1.0133  decode.loss_dice: 1.3511  decode.d0.loss_cls: 0.2228  decode.d0.loss_mask: 0.9174  decode.d0.loss_dice: 1.3241  decode.d1.loss_cls: 0.2526  decode.d1.loss_mask: 0.9933  decode.d1.loss_dice: 1.2960  decode.d2.loss_cls: 0.2824  decode.d2.loss_mask: 0.9992  decode.d2.loss_dice: 1.2790  decode.d3.loss_cls: 0.2241  decode.d3.loss_mask: 1.0579  decode.d3.loss_dice: 1.3393  decode.d4.loss_cls: 0.2072  decode.d4.loss_mask: 1.0302  decode.d4.loss_dice: 1.3015  decode.d5.loss_cls: 0.2005  decode.d5.loss_mask: 1.0022  decode.d5.loss_dice: 1.2899  decode.d6.loss_cls: 0.2002  decode.d6.loss_mask: 1.0239  decode.d6.loss_dice: 1.3089  decode.d7.loss_cls: 0.1783  decode.d7.loss_mask: 1.0368  decode.d7.loss_dice: 1.3409  decode.d8.loss_cls: 0.1952  decode.d8.loss_mask: 1.0293  decode.d8.loss_dice: 1.3341  mix_decode.loss_cls: 0.0898  mix_decode.loss_mask: 0.3150  mix_decode.loss_dice: 0.6416  mix_decode.d0.loss_cls: 0.0652  mix_decode.d0.loss_mask: 0.3218  mix_decode.d0.loss_dice: 0.6840  mix_decode.d1.loss_cls: 0.1188  mix_decode.d1.loss_mask: 0.3167  mix_decode.d1.loss_dice: 0.6279  mix_decode.d2.loss_cls: 0.0961  mix_decode.d2.loss_mask: 0.3259  mix_decode.d2.loss_dice: 0.6332  mix_decode.d3.loss_cls: 0.1644  mix_decode.d3.loss_mask: 0.3231  mix_decode.d3.loss_dice: 0.6170  mix_decode.d4.loss_cls: 0.0958  mix_decode.d4.loss_mask: 0.3268  mix_decode.d4.loss_dice: 0.6421  mix_decode.d5.loss_cls: 0.0818  mix_decode.d5.loss_mask: 0.3282  mix_decode.d5.loss_dice: 0.6316  mix_decode.d6.loss_cls: 0.0786  mix_decode.d6.loss_mask: 0.3251  mix_decode.d6.loss_dice: 0.6177  mix_decode.d7.loss_cls: 0.0970  mix_decode.d7.loss_mask: 0.3236  mix_decode.d7.loss_dice: 0.6243  mix_decode.d8.loss_cls: 0.1130  mix_decode.d8.loss_mask: 0.3173  mix_decode.d8.loss_dice: 0.6257
2025/03/27 14:43:47 - mmengine - INFO - Iter(train) [14500/20000]  base_lr: 3.1291e-05 lr: 3.1291e-05  eta: 1:24:53  time: 1.0768  data_time: 0.0221  memory: 10797  loss: 34.3802  decode.loss_cls: 0.1164  decode.loss_mask: 0.9974  decode.loss_dice: 1.2288  decode.d0.loss_cls: 0.1744  decode.d0.loss_mask: 1.0325  decode.d0.loss_dice: 1.2856  decode.d1.loss_cls: 0.1375  decode.d1.loss_mask: 1.0250  decode.d1.loss_dice: 1.2454  decode.d2.loss_cls: 0.0933  decode.d2.loss_mask: 1.0229  decode.d2.loss_dice: 1.2489  decode.d3.loss_cls: 0.1184  decode.d3.loss_mask: 1.0093  decode.d3.loss_dice: 1.1856  decode.d4.loss_cls: 0.1208  decode.d4.loss_mask: 1.0157  decode.d4.loss_dice: 1.2172  decode.d5.loss_cls: 0.1128  decode.d5.loss_mask: 1.0167  decode.d5.loss_dice: 1.2191  decode.d6.loss_cls: 0.1078  decode.d6.loss_mask: 1.0055  decode.d6.loss_dice: 1.1970  decode.d7.loss_cls: 0.1216  decode.d7.loss_mask: 1.0058  decode.d7.loss_dice: 1.2182  decode.d8.loss_cls: 0.1214  decode.d8.loss_mask: 1.0149  decode.d8.loss_dice: 1.2284  mix_decode.loss_cls: 0.1330  mix_decode.loss_mask: 0.3880  mix_decode.loss_dice: 0.5636  mix_decode.d0.loss_cls: 0.0980  mix_decode.d0.loss_mask: 0.3955  mix_decode.d0.loss_dice: 0.6200  mix_decode.d1.loss_cls: 0.1472  mix_decode.d1.loss_mask: 0.3902  mix_decode.d1.loss_dice: 0.5746  mix_decode.d2.loss_cls: 0.0853  mix_decode.d2.loss_mask: 0.3923  mix_decode.d2.loss_dice: 0.5846  mix_decode.d3.loss_cls: 0.1229  mix_decode.d3.loss_mask: 0.3927  mix_decode.d3.loss_dice: 0.5664  mix_decode.d4.loss_cls: 0.1042  mix_decode.d4.loss_mask: 0.3874  mix_decode.d4.loss_dice: 0.5634  mix_decode.d5.loss_cls: 0.1073  mix_decode.d5.loss_mask: 0.3874  mix_decode.d5.loss_dice: 0.5599  mix_decode.d6.loss_cls: 0.0915  mix_decode.d6.loss_mask: 0.3865  mix_decode.d6.loss_dice: 0.5665  mix_decode.d7.loss_cls: 0.0991  mix_decode.d7.loss_mask: 0.3895  mix_decode.d7.loss_dice: 0.5762  mix_decode.d8.loss_cls: 0.1120  mix_decode.d8.loss_mask: 0.3901  mix_decode.d8.loss_dice: 0.5608
2025/03/27 14:44:41 - mmengine - INFO - Iter(train) [14550/20000]  base_lr: 3.1035e-05 lr: 3.1035e-05  eta: 1:24:10  time: 1.0814  data_time: 0.0229  memory: 10807  loss: 36.2820  decode.loss_cls: 0.2431  decode.loss_mask: 1.1922  decode.loss_dice: 1.3151  decode.d0.loss_cls: 0.2862  decode.d0.loss_mask: 1.1805  decode.d0.loss_dice: 1.3258  decode.d1.loss_cls: 0.2267  decode.d1.loss_mask: 1.1552  decode.d1.loss_dice: 1.3009  decode.d2.loss_cls: 0.1898  decode.d2.loss_mask: 1.1765  decode.d2.loss_dice: 1.3116  decode.d3.loss_cls: 0.1680  decode.d3.loss_mask: 1.1871  decode.d3.loss_dice: 1.3383  decode.d4.loss_cls: 0.2556  decode.d4.loss_mask: 1.2004  decode.d4.loss_dice: 1.2957  decode.d5.loss_cls: 0.2315  decode.d5.loss_mask: 1.1610  decode.d5.loss_dice: 1.3250  decode.d6.loss_cls: 0.2460  decode.d6.loss_mask: 1.1544  decode.d6.loss_dice: 1.3147  decode.d7.loss_cls: 0.2765  decode.d7.loss_mask: 1.1468  decode.d7.loss_dice: 1.2919  decode.d8.loss_cls: 0.2536  decode.d8.loss_mask: 1.1474  decode.d8.loss_dice: 1.2900  mix_decode.loss_cls: 0.0463  mix_decode.loss_mask: 0.3879  mix_decode.loss_dice: 0.4674  mix_decode.d0.loss_cls: 0.0862  mix_decode.d0.loss_mask: 0.3766  mix_decode.d0.loss_dice: 0.4783  mix_decode.d1.loss_cls: 0.0792  mix_decode.d1.loss_mask: 0.3774  mix_decode.d1.loss_dice: 0.4520  mix_decode.d2.loss_cls: 0.0835  mix_decode.d2.loss_mask: 0.4016  mix_decode.d2.loss_dice: 0.4446  mix_decode.d3.loss_cls: 0.0654  mix_decode.d3.loss_mask: 0.3932  mix_decode.d3.loss_dice: 0.4527  mix_decode.d4.loss_cls: 0.0659  mix_decode.d4.loss_mask: 0.3944  mix_decode.d4.loss_dice: 0.4614  mix_decode.d5.loss_cls: 0.0653  mix_decode.d5.loss_mask: 0.3764  mix_decode.d5.loss_dice: 0.4544  mix_decode.d6.loss_cls: 0.0626  mix_decode.d6.loss_mask: 0.3892  mix_decode.d6.loss_dice: 0.4455  mix_decode.d7.loss_cls: 0.0682  mix_decode.d7.loss_mask: 0.3704  mix_decode.d7.loss_dice: 0.4439  mix_decode.d8.loss_cls: 0.0640  mix_decode.d8.loss_mask: 0.3892  mix_decode.d8.loss_dice: 0.4514
2025/03/27 14:45:35 - mmengine - INFO - Iter(train) [14600/20000]  base_lr: 3.0778e-05 lr: 3.0778e-05  eta: 1:23:26  time: 1.0743  data_time: 0.0220  memory: 10806  loss: 37.2906  decode.loss_cls: 0.2085  decode.loss_mask: 1.1264  decode.loss_dice: 1.2270  decode.d0.loss_cls: 0.2270  decode.d0.loss_mask: 1.1393  decode.d0.loss_dice: 1.2593  decode.d1.loss_cls: 0.2463  decode.d1.loss_mask: 1.0937  decode.d1.loss_dice: 1.2051  decode.d2.loss_cls: 0.2834  decode.d2.loss_mask: 1.1018  decode.d2.loss_dice: 1.1929  decode.d3.loss_cls: 0.3032  decode.d3.loss_mask: 1.0832  decode.d3.loss_dice: 1.1713  decode.d4.loss_cls: 0.2208  decode.d4.loss_mask: 1.0981  decode.d4.loss_dice: 1.2134  decode.d5.loss_cls: 0.3009  decode.d5.loss_mask: 1.0928  decode.d5.loss_dice: 1.1824  decode.d6.loss_cls: 0.1899  decode.d6.loss_mask: 1.1325  decode.d6.loss_dice: 1.2074  decode.d7.loss_cls: 0.1871  decode.d7.loss_mask: 1.1199  decode.d7.loss_dice: 1.2182  decode.d8.loss_cls: 0.2418  decode.d8.loss_mask: 1.0919  decode.d8.loss_dice: 1.1864  mix_decode.loss_cls: 0.1059  mix_decode.loss_mask: 0.5301  mix_decode.loss_dice: 0.5450  mix_decode.d0.loss_cls: 0.1654  mix_decode.d0.loss_mask: 0.5063  mix_decode.d0.loss_dice: 0.5691  mix_decode.d1.loss_cls: 0.0960  mix_decode.d1.loss_mask: 0.5161  mix_decode.d1.loss_dice: 0.5448  mix_decode.d2.loss_cls: 0.0964  mix_decode.d2.loss_mask: 0.5191  mix_decode.d2.loss_dice: 0.5566  mix_decode.d3.loss_cls: 0.1213  mix_decode.d3.loss_mask: 0.5119  mix_decode.d3.loss_dice: 0.5218  mix_decode.d4.loss_cls: 0.1109  mix_decode.d4.loss_mask: 0.5190  mix_decode.d4.loss_dice: 0.5425  mix_decode.d5.loss_cls: 0.1058  mix_decode.d5.loss_mask: 0.5127  mix_decode.d5.loss_dice: 0.5314  mix_decode.d6.loss_cls: 0.0735  mix_decode.d6.loss_mask: 0.5467  mix_decode.d6.loss_dice: 0.5354  mix_decode.d7.loss_cls: 0.0829  mix_decode.d7.loss_mask: 0.5372  mix_decode.d7.loss_dice: 0.5405  mix_decode.d8.loss_cls: 0.0791  mix_decode.d8.loss_mask: 0.5597  mix_decode.d8.loss_dice: 0.5558
2025/03/27 14:46:29 - mmengine - INFO - Iter(train) [14650/20000]  base_lr: 3.0522e-05 lr: 3.0522e-05  eta: 1:22:42  time: 1.0710  data_time: 0.0216  memory: 10805  loss: 33.2804  decode.loss_cls: 0.1743  decode.loss_mask: 1.0673  decode.loss_dice: 1.1885  decode.d0.loss_cls: 0.1971  decode.d0.loss_mask: 1.0397  decode.d0.loss_dice: 1.1739  decode.d1.loss_cls: 0.1697  decode.d1.loss_mask: 1.0482  decode.d1.loss_dice: 1.1778  decode.d2.loss_cls: 0.1732  decode.d2.loss_mask: 1.0401  decode.d2.loss_dice: 1.1604  decode.d3.loss_cls: 0.1693  decode.d3.loss_mask: 1.0178  decode.d3.loss_dice: 1.1338  decode.d4.loss_cls: 0.1811  decode.d4.loss_mask: 1.0376  decode.d4.loss_dice: 1.1623  decode.d5.loss_cls: 0.1696  decode.d5.loss_mask: 1.0557  decode.d5.loss_dice: 1.1661  decode.d6.loss_cls: 0.1949  decode.d6.loss_mask: 1.0335  decode.d6.loss_dice: 1.1522  decode.d7.loss_cls: 0.2032  decode.d7.loss_mask: 1.0195  decode.d7.loss_dice: 1.1465  decode.d8.loss_cls: 0.1946  decode.d8.loss_mask: 1.0378  decode.d8.loss_dice: 1.1450  mix_decode.loss_cls: 0.0816  mix_decode.loss_mask: 0.3814  mix_decode.loss_dice: 0.4793  mix_decode.d0.loss_cls: 0.1012  mix_decode.d0.loss_mask: 0.3857  mix_decode.d0.loss_dice: 0.4919  mix_decode.d1.loss_cls: 0.0710  mix_decode.d1.loss_mask: 0.3851  mix_decode.d1.loss_dice: 0.4837  mix_decode.d2.loss_cls: 0.0685  mix_decode.d2.loss_mask: 0.3791  mix_decode.d2.loss_dice: 0.4774  mix_decode.d3.loss_cls: 0.0811  mix_decode.d3.loss_mask: 0.3786  mix_decode.d3.loss_dice: 0.4655  mix_decode.d4.loss_cls: 0.0783  mix_decode.d4.loss_mask: 0.3837  mix_decode.d4.loss_dice: 0.4778  mix_decode.d5.loss_cls: 0.0877  mix_decode.d5.loss_mask: 0.3813  mix_decode.d5.loss_dice: 0.4756  mix_decode.d6.loss_cls: 0.0886  mix_decode.d6.loss_mask: 0.3877  mix_decode.d6.loss_dice: 0.4843  mix_decode.d7.loss_cls: 0.0938  mix_decode.d7.loss_mask: 0.3795  mix_decode.d7.loss_dice: 0.4739  mix_decode.d8.loss_cls: 0.0829  mix_decode.d8.loss_mask: 0.3865  mix_decode.d8.loss_dice: 0.4769
2025/03/27 14:47:23 - mmengine - INFO - Iter(train) [14700/20000]  base_lr: 3.0265e-05 lr: 3.0265e-05  eta: 1:21:59  time: 1.0744  data_time: 0.0221  memory: 10807  loss: 33.5627  decode.loss_cls: 0.1132  decode.loss_mask: 0.9912  decode.loss_dice: 1.2100  decode.d0.loss_cls: 0.1913  decode.d0.loss_mask: 0.9993  decode.d0.loss_dice: 1.2445  decode.d1.loss_cls: 0.1163  decode.d1.loss_mask: 1.0169  decode.d1.loss_dice: 1.2270  decode.d2.loss_cls: 0.1137  decode.d2.loss_mask: 1.0056  decode.d2.loss_dice: 1.2295  decode.d3.loss_cls: 0.1128  decode.d3.loss_mask: 1.0009  decode.d3.loss_dice: 1.2160  decode.d4.loss_cls: 0.1137  decode.d4.loss_mask: 1.0250  decode.d4.loss_dice: 1.2189  decode.d5.loss_cls: 0.1257  decode.d5.loss_mask: 1.0080  decode.d5.loss_dice: 1.2309  decode.d6.loss_cls: 0.1371  decode.d6.loss_mask: 0.9827  decode.d6.loss_dice: 1.2096  decode.d7.loss_cls: 0.1509  decode.d7.loss_mask: 1.0099  decode.d7.loss_dice: 1.2321  decode.d8.loss_cls: 0.1040  decode.d8.loss_mask: 1.0062  decode.d8.loss_dice: 1.2281  mix_decode.loss_cls: 0.0772  mix_decode.loss_mask: 0.4355  mix_decode.loss_dice: 0.4972  mix_decode.d0.loss_cls: 0.0777  mix_decode.d0.loss_mask: 0.4294  mix_decode.d0.loss_dice: 0.5313  mix_decode.d1.loss_cls: 0.0894  mix_decode.d1.loss_mask: 0.4311  mix_decode.d1.loss_dice: 0.4859  mix_decode.d2.loss_cls: 0.0607  mix_decode.d2.loss_mask: 0.4281  mix_decode.d2.loss_dice: 0.4971  mix_decode.d3.loss_cls: 0.0791  mix_decode.d3.loss_mask: 0.4273  mix_decode.d3.loss_dice: 0.4957  mix_decode.d4.loss_cls: 0.0488  mix_decode.d4.loss_mask: 0.4178  mix_decode.d4.loss_dice: 0.5044  mix_decode.d5.loss_cls: 0.0807  mix_decode.d5.loss_mask: 0.4186  mix_decode.d5.loss_dice: 0.4846  mix_decode.d6.loss_cls: 0.0581  mix_decode.d6.loss_mask: 0.4194  mix_decode.d6.loss_dice: 0.5032  mix_decode.d7.loss_cls: 0.0631  mix_decode.d7.loss_mask: 0.4263  mix_decode.d7.loss_dice: 0.5080  mix_decode.d8.loss_cls: 0.0629  mix_decode.d8.loss_mask: 0.4410  mix_decode.d8.loss_dice: 0.5124
2025/03/27 14:48:17 - mmengine - INFO - Iter(train) [14750/20000]  base_lr: 3.0008e-05 lr: 3.0008e-05  eta: 1:21:15  time: 1.0762  data_time: 0.0218  memory: 10812  loss: 31.2705  decode.loss_cls: 0.1884  decode.loss_mask: 0.8777  decode.loss_dice: 1.0571  decode.d0.loss_cls: 0.2467  decode.d0.loss_mask: 0.8966  decode.d0.loss_dice: 1.0755  decode.d1.loss_cls: 0.2359  decode.d1.loss_mask: 0.8556  decode.d1.loss_dice: 1.0031  decode.d2.loss_cls: 0.2195  decode.d2.loss_mask: 0.8713  decode.d2.loss_dice: 1.0311  decode.d3.loss_cls: 0.2114  decode.d3.loss_mask: 0.8633  decode.d3.loss_dice: 1.0248  decode.d4.loss_cls: 0.1730  decode.d4.loss_mask: 0.8768  decode.d4.loss_dice: 1.0628  decode.d5.loss_cls: 0.2448  decode.d5.loss_mask: 0.8706  decode.d5.loss_dice: 1.0420  decode.d6.loss_cls: 0.1415  decode.d6.loss_mask: 0.8864  decode.d6.loss_dice: 1.0861  decode.d7.loss_cls: 0.1676  decode.d7.loss_mask: 0.8914  decode.d7.loss_dice: 1.0573  decode.d8.loss_cls: 0.1591  decode.d8.loss_mask: 0.8736  decode.d8.loss_dice: 1.0771  mix_decode.loss_cls: 0.1139  mix_decode.loss_mask: 0.3212  mix_decode.loss_dice: 0.5617  mix_decode.d0.loss_cls: 0.1058  mix_decode.d0.loss_mask: 0.3210  mix_decode.d0.loss_dice: 0.6098  mix_decode.d1.loss_cls: 0.1250  mix_decode.d1.loss_mask: 0.3158  mix_decode.d1.loss_dice: 0.5634  mix_decode.d2.loss_cls: 0.1538  mix_decode.d2.loss_mask: 0.3188  mix_decode.d2.loss_dice: 0.5519  mix_decode.d3.loss_cls: 0.1432  mix_decode.d3.loss_mask: 0.3061  mix_decode.d3.loss_dice: 0.5322  mix_decode.d4.loss_cls: 0.1416  mix_decode.d4.loss_mask: 0.3049  mix_decode.d4.loss_dice: 0.5510  mix_decode.d5.loss_cls: 0.1412  mix_decode.d5.loss_mask: 0.3206  mix_decode.d5.loss_dice: 0.5486  mix_decode.d6.loss_cls: 0.1190  mix_decode.d6.loss_mask: 0.3094  mix_decode.d6.loss_dice: 0.5463  mix_decode.d7.loss_cls: 0.1218  mix_decode.d7.loss_mask: 0.3139  mix_decode.d7.loss_dice: 0.5539  mix_decode.d8.loss_cls: 0.1173  mix_decode.d8.loss_mask: 0.3178  mix_decode.d8.loss_dice: 0.5518
2025/03/27 14:49:11 - mmengine - INFO - Iter(train) [14800/20000]  base_lr: 2.9751e-05 lr: 2.9751e-05  eta: 1:20:31  time: 1.0789  data_time: 0.0218  memory: 10816  loss: 40.6045  decode.loss_cls: 0.2136  decode.loss_mask: 1.3488  decode.loss_dice: 1.3227  decode.d0.loss_cls: 0.3094  decode.d0.loss_mask: 1.3301  decode.d0.loss_dice: 1.3795  decode.d1.loss_cls: 0.3127  decode.d1.loss_mask: 1.3521  decode.d1.loss_dice: 1.3067  decode.d2.loss_cls: 0.3631  decode.d2.loss_mask: 1.3328  decode.d2.loss_dice: 1.2846  decode.d3.loss_cls: 0.2499  decode.d3.loss_mask: 1.3324  decode.d3.loss_dice: 1.3433  decode.d4.loss_cls: 0.2588  decode.d4.loss_mask: 1.3226  decode.d4.loss_dice: 1.3488  decode.d5.loss_cls: 0.2461  decode.d5.loss_mask: 1.3261  decode.d5.loss_dice: 1.3177  decode.d6.loss_cls: 0.2806  decode.d6.loss_mask: 1.3304  decode.d6.loss_dice: 1.3241  decode.d7.loss_cls: 0.2601  decode.d7.loss_mask: 1.3147  decode.d7.loss_dice: 1.3248  decode.d8.loss_cls: 0.2187  decode.d8.loss_mask: 1.3198  decode.d8.loss_dice: 1.3261  mix_decode.loss_cls: 0.1633  mix_decode.loss_mask: 0.4040  mix_decode.loss_dice: 0.5568  mix_decode.d0.loss_cls: 0.1404  mix_decode.d0.loss_mask: 0.3913  mix_decode.d0.loss_dice: 0.6089  mix_decode.d1.loss_cls: 0.2019  mix_decode.d1.loss_mask: 0.4040  mix_decode.d1.loss_dice: 0.5696  mix_decode.d2.loss_cls: 0.1780  mix_decode.d2.loss_mask: 0.3875  mix_decode.d2.loss_dice: 0.5522  mix_decode.d3.loss_cls: 0.1591  mix_decode.d3.loss_mask: 0.3974  mix_decode.d3.loss_dice: 0.5702  mix_decode.d4.loss_cls: 0.1828  mix_decode.d4.loss_mask: 0.4007  mix_decode.d4.loss_dice: 0.5576  mix_decode.d5.loss_cls: 0.1502  mix_decode.d5.loss_mask: 0.3985  mix_decode.d5.loss_dice: 0.5560  mix_decode.d6.loss_cls: 0.1261  mix_decode.d6.loss_mask: 0.4023  mix_decode.d6.loss_dice: 0.5745  mix_decode.d7.loss_cls: 0.1874  mix_decode.d7.loss_mask: 0.3912  mix_decode.d7.loss_dice: 0.5702  mix_decode.d8.loss_cls: 0.1553  mix_decode.d8.loss_mask: 0.3943  mix_decode.d8.loss_dice: 0.5717
2025/03/27 14:50:05 - mmengine - INFO - Iter(train) [14850/20000]  base_lr: 2.9493e-05 lr: 2.9493e-05  eta: 1:19:47  time: 1.0760  data_time: 0.0220  memory: 10802  loss: 37.3000  decode.loss_cls: 0.2550  decode.loss_mask: 1.1017  decode.loss_dice: 1.3579  decode.d0.loss_cls: 0.1794  decode.d0.loss_mask: 1.1205  decode.d0.loss_dice: 1.4103  decode.d1.loss_cls: 0.3013  decode.d1.loss_mask: 1.1005  decode.d1.loss_dice: 1.3244  decode.d2.loss_cls: 0.2457  decode.d2.loss_mask: 1.0910  decode.d2.loss_dice: 1.3420  decode.d3.loss_cls: 0.2445  decode.d3.loss_mask: 1.0995  decode.d3.loss_dice: 1.3404  decode.d4.loss_cls: 0.2720  decode.d4.loss_mask: 1.0832  decode.d4.loss_dice: 1.3389  decode.d5.loss_cls: 0.2468  decode.d5.loss_mask: 1.0960  decode.d5.loss_dice: 1.3316  decode.d6.loss_cls: 0.2296  decode.d6.loss_mask: 1.0880  decode.d6.loss_dice: 1.3333  decode.d7.loss_cls: 0.2735  decode.d7.loss_mask: 1.0969  decode.d7.loss_dice: 1.3243  decode.d8.loss_cls: 0.2598  decode.d8.loss_mask: 1.1018  decode.d8.loss_dice: 1.3275  mix_decode.loss_cls: 0.0454  mix_decode.loss_mask: 0.4624  mix_decode.loss_dice: 0.5328  mix_decode.d0.loss_cls: 0.0561  mix_decode.d0.loss_mask: 0.4531  mix_decode.d0.loss_dice: 0.5588  mix_decode.d1.loss_cls: 0.0319  mix_decode.d1.loss_mask: 0.4528  mix_decode.d1.loss_dice: 0.5510  mix_decode.d2.loss_cls: 0.0302  mix_decode.d2.loss_mask: 0.4554  mix_decode.d2.loss_dice: 0.5576  mix_decode.d3.loss_cls: 0.0703  mix_decode.d3.loss_mask: 0.4381  mix_decode.d3.loss_dice: 0.5250  mix_decode.d4.loss_cls: 0.0677  mix_decode.d4.loss_mask: 0.4361  mix_decode.d4.loss_dice: 0.5321  mix_decode.d5.loss_cls: 0.0461  mix_decode.d5.loss_mask: 0.4515  mix_decode.d5.loss_dice: 0.5374  mix_decode.d6.loss_cls: 0.0311  mix_decode.d6.loss_mask: 0.4595  mix_decode.d6.loss_dice: 0.5417  mix_decode.d7.loss_cls: 0.0531  mix_decode.d7.loss_mask: 0.4470  mix_decode.d7.loss_dice: 0.5261  mix_decode.d8.loss_cls: 0.0624  mix_decode.d8.loss_mask: 0.4412  mix_decode.d8.loss_dice: 0.5289
2025/03/27 14:50:59 - mmengine - INFO - Iter(train) [14900/20000]  base_lr: 2.9235e-05 lr: 2.9235e-05  eta: 1:19:03  time: 1.0712  data_time: 0.0224  memory: 10808  loss: 40.3635  decode.loss_cls: 0.2690  decode.loss_mask: 1.2343  decode.loss_dice: 1.3420  decode.d0.loss_cls: 0.3323  decode.d0.loss_mask: 1.2171  decode.d0.loss_dice: 1.4097  decode.d1.loss_cls: 0.3338  decode.d1.loss_mask: 1.2138  decode.d1.loss_dice: 1.3132  decode.d2.loss_cls: 0.3523  decode.d2.loss_mask: 1.1824  decode.d2.loss_dice: 1.3179  decode.d3.loss_cls: 0.3427  decode.d3.loss_mask: 1.1440  decode.d3.loss_dice: 1.2708  decode.d4.loss_cls: 0.2404  decode.d4.loss_mask: 1.2135  decode.d4.loss_dice: 1.2952  decode.d5.loss_cls: 0.3231  decode.d5.loss_mask: 1.1976  decode.d5.loss_dice: 1.2959  decode.d6.loss_cls: 0.3200  decode.d6.loss_mask: 1.1662  decode.d6.loss_dice: 1.3226  decode.d7.loss_cls: 0.2197  decode.d7.loss_mask: 1.2365  decode.d7.loss_dice: 1.3482  decode.d8.loss_cls: 0.3472  decode.d8.loss_mask: 1.1904  decode.d8.loss_dice: 1.3116  mix_decode.loss_cls: 0.1905  mix_decode.loss_mask: 0.4561  mix_decode.loss_dice: 0.5649  mix_decode.d0.loss_cls: 0.1899  mix_decode.d0.loss_mask: 0.4532  mix_decode.d0.loss_dice: 0.6369  mix_decode.d1.loss_cls: 0.1998  mix_decode.d1.loss_mask: 0.4258  mix_decode.d1.loss_dice: 0.6074  mix_decode.d2.loss_cls: 0.2172  mix_decode.d2.loss_mask: 0.4280  mix_decode.d2.loss_dice: 0.5752  mix_decode.d3.loss_cls: 0.1758  mix_decode.d3.loss_mask: 0.4355  mix_decode.d3.loss_dice: 0.5806  mix_decode.d4.loss_cls: 0.1586  mix_decode.d4.loss_mask: 0.4238  mix_decode.d4.loss_dice: 0.5859  mix_decode.d5.loss_cls: 0.2119  mix_decode.d5.loss_mask: 0.4231  mix_decode.d5.loss_dice: 0.5620  mix_decode.d6.loss_cls: 0.1709  mix_decode.d6.loss_mask: 0.4387  mix_decode.d6.loss_dice: 0.5704  mix_decode.d7.loss_cls: 0.1645  mix_decode.d7.loss_mask: 0.4450  mix_decode.d7.loss_dice: 0.5624  mix_decode.d8.loss_cls: 0.1911  mix_decode.d8.loss_mask: 0.4518  mix_decode.d8.loss_dice: 0.5632
2025/03/27 14:51:53 - mmengine - INFO - Iter(train) [14950/20000]  base_lr: 2.8977e-05 lr: 2.8977e-05  eta: 1:18:19  time: 1.0737  data_time: 0.0218  memory: 10805  loss: 32.0726  decode.loss_cls: 0.0781  decode.loss_mask: 0.8693  decode.loss_dice: 1.2952  decode.d0.loss_cls: 0.1360  decode.d0.loss_mask: 0.8939  decode.d0.loss_dice: 1.3202  decode.d1.loss_cls: 0.1488  decode.d1.loss_mask: 0.8844  decode.d1.loss_dice: 1.2772  decode.d2.loss_cls: 0.1346  decode.d2.loss_mask: 0.8794  decode.d2.loss_dice: 1.2540  decode.d3.loss_cls: 0.1311  decode.d3.loss_mask: 0.8770  decode.d3.loss_dice: 1.2806  decode.d4.loss_cls: 0.1174  decode.d4.loss_mask: 0.8835  decode.d4.loss_dice: 1.2932  decode.d5.loss_cls: 0.1189  decode.d5.loss_mask: 0.8727  decode.d5.loss_dice: 1.2656  decode.d6.loss_cls: 0.0878  decode.d6.loss_mask: 0.8862  decode.d6.loss_dice: 1.3273  decode.d7.loss_cls: 0.1257  decode.d7.loss_mask: 0.8770  decode.d7.loss_dice: 1.2910  decode.d8.loss_cls: 0.0880  decode.d8.loss_mask: 0.8790  decode.d8.loss_dice: 1.3131  mix_decode.loss_cls: 0.0392  mix_decode.loss_mask: 0.3982  mix_decode.loss_dice: 0.4781  mix_decode.d0.loss_cls: 0.0588  mix_decode.d0.loss_mask: 0.3962  mix_decode.d0.loss_dice: 0.5027  mix_decode.d1.loss_cls: 0.0405  mix_decode.d1.loss_mask: 0.3968  mix_decode.d1.loss_dice: 0.4849  mix_decode.d2.loss_cls: 0.0590  mix_decode.d2.loss_mask: 0.3911  mix_decode.d2.loss_dice: 0.4798  mix_decode.d3.loss_cls: 0.0413  mix_decode.d3.loss_mask: 0.3888  mix_decode.d3.loss_dice: 0.4645  mix_decode.d4.loss_cls: 0.0369  mix_decode.d4.loss_mask: 0.3894  mix_decode.d4.loss_dice: 0.4799  mix_decode.d5.loss_cls: 0.0352  mix_decode.d5.loss_mask: 0.3883  mix_decode.d5.loss_dice: 0.4776  mix_decode.d6.loss_cls: 0.0450  mix_decode.d6.loss_mask: 0.3907  mix_decode.d6.loss_dice: 0.4776  mix_decode.d7.loss_cls: 0.0510  mix_decode.d7.loss_mask: 0.3945  mix_decode.d7.loss_dice: 0.4808  mix_decode.d8.loss_cls: 0.0356  mix_decode.d8.loss_mask: 0.3989  mix_decode.d8.loss_dice: 0.4851
2025/03/27 14:52:46 - mmengine - INFO - Exp name: pr2vi_20250327_105544
2025/03/27 14:52:46 - mmengine - INFO - Iter(train) [15000/20000]  base_lr: 2.8719e-05 lr: 2.8719e-05  eta: 1:17:35  time: 1.0842  data_time: 0.0228  memory: 10806  loss: 38.6434  decode.loss_cls: 0.2164  decode.loss_mask: 1.2087  decode.loss_dice: 1.2896  decode.d0.loss_cls: 0.2609  decode.d0.loss_mask: 1.2621  decode.d0.loss_dice: 1.3128  decode.d1.loss_cls: 0.2420  decode.d1.loss_mask: 1.2801  decode.d1.loss_dice: 1.3285  decode.d2.loss_cls: 0.2320  decode.d2.loss_mask: 1.2452  decode.d2.loss_dice: 1.3362  decode.d3.loss_cls: 0.2663  decode.d3.loss_mask: 1.2222  decode.d3.loss_dice: 1.2997  decode.d4.loss_cls: 0.1826  decode.d4.loss_mask: 1.2149  decode.d4.loss_dice: 1.2575  decode.d5.loss_cls: 0.2571  decode.d5.loss_mask: 1.1990  decode.d5.loss_dice: 1.2723  decode.d6.loss_cls: 0.2170  decode.d6.loss_mask: 1.2201  decode.d6.loss_dice: 1.2904  decode.d7.loss_cls: 0.2180  decode.d7.loss_mask: 1.2013  decode.d7.loss_dice: 1.2769  decode.d8.loss_cls: 0.2477  decode.d8.loss_mask: 1.2143  decode.d8.loss_dice: 1.2944  mix_decode.loss_cls: 0.1231  mix_decode.loss_mask: 0.4129  mix_decode.loss_dice: 0.5653  mix_decode.d0.loss_cls: 0.0984  mix_decode.d0.loss_mask: 0.4265  mix_decode.d0.loss_dice: 0.6022  mix_decode.d1.loss_cls: 0.2084  mix_decode.d1.loss_mask: 0.3831  mix_decode.d1.loss_dice: 0.5574  mix_decode.d2.loss_cls: 0.1138  mix_decode.d2.loss_mask: 0.4312  mix_decode.d2.loss_dice: 0.5818  mix_decode.d3.loss_cls: 0.1172  mix_decode.d3.loss_mask: 0.4050  mix_decode.d3.loss_dice: 0.5574  mix_decode.d4.loss_cls: 0.1094  mix_decode.d4.loss_mask: 0.4180  mix_decode.d4.loss_dice: 0.5694  mix_decode.d5.loss_cls: 0.1121  mix_decode.d5.loss_mask: 0.4245  mix_decode.d5.loss_dice: 0.5698  mix_decode.d6.loss_cls: 0.1217  mix_decode.d6.loss_mask: 0.4009  mix_decode.d6.loss_dice: 0.5605  mix_decode.d7.loss_cls: 0.1216  mix_decode.d7.loss_mask: 0.4145  mix_decode.d7.loss_dice: 0.5525  mix_decode.d8.loss_cls: 0.1303  mix_decode.d8.loss_mask: 0.4230  mix_decode.d8.loss_dice: 0.5655
2025/03/27 14:53:40 - mmengine - INFO - Iter(train) [15050/20000]  base_lr: 2.8460e-05 lr: 2.8460e-05  eta: 1:16:51  time: 1.0765  data_time: 0.0219  memory: 10806  loss: 36.1870  decode.loss_cls: 0.3176  decode.loss_mask: 0.9249  decode.loss_dice: 1.3049  decode.d0.loss_cls: 0.2808  decode.d0.loss_mask: 0.9232  decode.d0.loss_dice: 1.4505  decode.d1.loss_cls: 0.3717  decode.d1.loss_mask: 0.9268  decode.d1.loss_dice: 1.2602  decode.d2.loss_cls: 0.3264  decode.d2.loss_mask: 0.9352  decode.d2.loss_dice: 1.2617  decode.d3.loss_cls: 0.2864  decode.d3.loss_mask: 0.9598  decode.d3.loss_dice: 1.2494  decode.d4.loss_cls: 0.3477  decode.d4.loss_mask: 0.9459  decode.d4.loss_dice: 1.2521  decode.d5.loss_cls: 0.3572  decode.d5.loss_mask: 0.9040  decode.d5.loss_dice: 1.2031  decode.d6.loss_cls: 0.3411  decode.d6.loss_mask: 0.9360  decode.d6.loss_dice: 1.2721  decode.d7.loss_cls: 0.3443  decode.d7.loss_mask: 0.9283  decode.d7.loss_dice: 1.2906  decode.d8.loss_cls: 0.2740  decode.d8.loss_mask: 0.9412  decode.d8.loss_dice: 1.2738  mix_decode.loss_cls: 0.1186  mix_decode.loss_mask: 0.3839  mix_decode.loss_dice: 0.5782  mix_decode.d0.loss_cls: 0.1101  mix_decode.d0.loss_mask: 0.3743  mix_decode.d0.loss_dice: 0.6241  mix_decode.d1.loss_cls: 0.1287  mix_decode.d1.loss_mask: 0.3717  mix_decode.d1.loss_dice: 0.5630  mix_decode.d2.loss_cls: 0.1460  mix_decode.d2.loss_mask: 0.3582  mix_decode.d2.loss_dice: 0.5682  mix_decode.d3.loss_cls: 0.1284  mix_decode.d3.loss_mask: 0.3817  mix_decode.d3.loss_dice: 0.5584  mix_decode.d4.loss_cls: 0.1204  mix_decode.d4.loss_mask: 0.3826  mix_decode.d4.loss_dice: 0.5569  mix_decode.d5.loss_cls: 0.1464  mix_decode.d5.loss_mask: 0.3898  mix_decode.d5.loss_dice: 0.5629  mix_decode.d6.loss_cls: 0.1298  mix_decode.d6.loss_mask: 0.3874  mix_decode.d6.loss_dice: 0.5763  mix_decode.d7.loss_cls: 0.1445  mix_decode.d7.loss_mask: 0.3790  mix_decode.d7.loss_dice: 0.5443  mix_decode.d8.loss_cls: 0.1365  mix_decode.d8.loss_mask: 0.3831  mix_decode.d8.loss_dice: 0.5629
2025/03/27 14:54:34 - mmengine - INFO - Iter(train) [15100/20000]  base_lr: 2.8201e-05 lr: 2.8201e-05  eta: 1:16:07  time: 1.0926  data_time: 0.0249  memory: 10801  loss: 34.6517  decode.loss_cls: 0.2532  decode.loss_mask: 0.9668  decode.loss_dice: 1.2416  decode.d0.loss_cls: 0.2863  decode.d0.loss_mask: 0.9972  decode.d0.loss_dice: 1.3333  decode.d1.loss_cls: 0.1812  decode.d1.loss_mask: 1.0187  decode.d1.loss_dice: 1.3092  decode.d2.loss_cls: 0.1904  decode.d2.loss_mask: 1.0100  decode.d2.loss_dice: 1.2775  decode.d3.loss_cls: 0.2608  decode.d3.loss_mask: 0.9685  decode.d3.loss_dice: 1.2231  decode.d4.loss_cls: 0.2596  decode.d4.loss_mask: 1.0247  decode.d4.loss_dice: 1.2601  decode.d5.loss_cls: 0.2408  decode.d5.loss_mask: 1.0165  decode.d5.loss_dice: 1.2619  decode.d6.loss_cls: 0.2447  decode.d6.loss_mask: 1.0046  decode.d6.loss_dice: 1.2301  decode.d7.loss_cls: 0.2093  decode.d7.loss_mask: 0.9817  decode.d7.loss_dice: 1.2427  decode.d8.loss_cls: 0.2011  decode.d8.loss_mask: 0.9849  decode.d8.loss_dice: 1.2679  mix_decode.loss_cls: 0.0613  mix_decode.loss_mask: 0.3814  mix_decode.loss_dice: 0.5352  mix_decode.d0.loss_cls: 0.1344  mix_decode.d0.loss_mask: 0.3735  mix_decode.d0.loss_dice: 0.5441  mix_decode.d1.loss_cls: 0.0854  mix_decode.d1.loss_mask: 0.3682  mix_decode.d1.loss_dice: 0.5237  mix_decode.d2.loss_cls: 0.0679  mix_decode.d2.loss_mask: 0.3628  mix_decode.d2.loss_dice: 0.5145  mix_decode.d3.loss_cls: 0.0734  mix_decode.d3.loss_mask: 0.3790  mix_decode.d3.loss_dice: 0.5113  mix_decode.d4.loss_cls: 0.0635  mix_decode.d4.loss_mask: 0.3659  mix_decode.d4.loss_dice: 0.5057  mix_decode.d5.loss_cls: 0.0675  mix_decode.d5.loss_mask: 0.3702  mix_decode.d5.loss_dice: 0.5106  mix_decode.d6.loss_cls: 0.0665  mix_decode.d6.loss_mask: 0.3785  mix_decode.d6.loss_dice: 0.5353  mix_decode.d7.loss_cls: 0.0629  mix_decode.d7.loss_mask: 0.3724  mix_decode.d7.loss_dice: 0.5225  mix_decode.d8.loss_cls: 0.0580  mix_decode.d8.loss_mask: 0.3764  mix_decode.d8.loss_dice: 0.5312
2025/03/27 14:55:28 - mmengine - INFO - Iter(train) [15150/20000]  base_lr: 2.7942e-05 lr: 2.7942e-05  eta: 1:15:23  time: 1.0735  data_time: 0.0221  memory: 10803  loss: 38.6811  decode.loss_cls: 0.2710  decode.loss_mask: 1.1549  decode.loss_dice: 1.2173  decode.d0.loss_cls: 0.3390  decode.d0.loss_mask: 1.1614  decode.d0.loss_dice: 1.2805  decode.d1.loss_cls: 0.2429  decode.d1.loss_mask: 1.1086  decode.d1.loss_dice: 1.1914  decode.d2.loss_cls: 0.2712  decode.d2.loss_mask: 1.1267  decode.d2.loss_dice: 1.2090  decode.d3.loss_cls: 0.2827  decode.d3.loss_mask: 1.1333  decode.d3.loss_dice: 1.2116  decode.d4.loss_cls: 0.2585  decode.d4.loss_mask: 1.1636  decode.d4.loss_dice: 1.2195  decode.d5.loss_cls: 0.2583  decode.d5.loss_mask: 1.1607  decode.d5.loss_dice: 1.1968  decode.d6.loss_cls: 0.2668  decode.d6.loss_mask: 1.1621  decode.d6.loss_dice: 1.2025  decode.d7.loss_cls: 0.2647  decode.d7.loss_mask: 1.1599  decode.d7.loss_dice: 1.1877  decode.d8.loss_cls: 0.3053  decode.d8.loss_mask: 1.1448  decode.d8.loss_dice: 1.2040  mix_decode.loss_cls: 0.1558  mix_decode.loss_mask: 0.4671  mix_decode.loss_dice: 0.6061  mix_decode.d0.loss_cls: 0.1348  mix_decode.d0.loss_mask: 0.4535  mix_decode.d0.loss_dice: 0.6833  mix_decode.d1.loss_cls: 0.1698  mix_decode.d1.loss_mask: 0.4380  mix_decode.d1.loss_dice: 0.6058  mix_decode.d2.loss_cls: 0.1177  mix_decode.d2.loss_mask: 0.4473  mix_decode.d2.loss_dice: 0.6293  mix_decode.d3.loss_cls: 0.1673  mix_decode.d3.loss_mask: 0.4535  mix_decode.d3.loss_dice: 0.6118  mix_decode.d4.loss_cls: 0.1792  mix_decode.d4.loss_mask: 0.4404  mix_decode.d4.loss_dice: 0.5936  mix_decode.d5.loss_cls: 0.1921  mix_decode.d5.loss_mask: 0.4585  mix_decode.d5.loss_dice: 0.5805  mix_decode.d6.loss_cls: 0.1489  mix_decode.d6.loss_mask: 0.4634  mix_decode.d6.loss_dice: 0.6293  mix_decode.d7.loss_cls: 0.1224  mix_decode.d7.loss_mask: 0.5058  mix_decode.d7.loss_dice: 0.6500  mix_decode.d8.loss_cls: 0.1352  mix_decode.d8.loss_mask: 0.4606  mix_decode.d8.loss_dice: 0.6236
2025/03/27 14:56:22 - mmengine - INFO - Iter(train) [15200/20000]  base_lr: 2.7683e-05 lr: 2.7683e-05  eta: 1:14:38  time: 1.0776  data_time: 0.0223  memory: 10804  loss: 39.9826  decode.loss_cls: 0.1611  decode.loss_mask: 1.2842  decode.loss_dice: 1.3815  decode.d0.loss_cls: 0.1865  decode.d0.loss_mask: 1.3205  decode.d0.loss_dice: 1.3702  decode.d1.loss_cls: 0.1733  decode.d1.loss_mask: 1.2418  decode.d1.loss_dice: 1.3663  decode.d2.loss_cls: 0.2242  decode.d2.loss_mask: 1.2709  decode.d2.loss_dice: 1.3505  decode.d3.loss_cls: 0.2713  decode.d3.loss_mask: 1.2497  decode.d3.loss_dice: 1.3266  decode.d4.loss_cls: 0.1847  decode.d4.loss_mask: 1.2746  decode.d4.loss_dice: 1.3425  decode.d5.loss_cls: 0.1742  decode.d5.loss_mask: 1.2492  decode.d5.loss_dice: 1.3493  decode.d6.loss_cls: 0.2393  decode.d6.loss_mask: 1.2421  decode.d6.loss_dice: 1.3349  decode.d7.loss_cls: 0.1658  decode.d7.loss_mask: 1.2695  decode.d7.loss_dice: 1.3612  decode.d8.loss_cls: 0.2266  decode.d8.loss_mask: 1.2406  decode.d8.loss_dice: 1.3229  mix_decode.loss_cls: 0.1088  mix_decode.loss_mask: 0.4895  mix_decode.loss_dice: 0.5966  mix_decode.d0.loss_cls: 0.1216  mix_decode.d0.loss_mask: 0.4670  mix_decode.d0.loss_dice: 0.6294  mix_decode.d1.loss_cls: 0.0879  mix_decode.d1.loss_mask: 0.4794  mix_decode.d1.loss_dice: 0.6114  mix_decode.d2.loss_cls: 0.1051  mix_decode.d2.loss_mask: 0.4704  mix_decode.d2.loss_dice: 0.6048  mix_decode.d3.loss_cls: 0.1070  mix_decode.d3.loss_mask: 0.4735  mix_decode.d3.loss_dice: 0.6099  mix_decode.d4.loss_cls: 0.0842  mix_decode.d4.loss_mask: 0.4684  mix_decode.d4.loss_dice: 0.6110  mix_decode.d5.loss_cls: 0.0923  mix_decode.d5.loss_mask: 0.4846  mix_decode.d5.loss_dice: 0.6024  mix_decode.d6.loss_cls: 0.0890  mix_decode.d6.loss_mask: 0.4759  mix_decode.d6.loss_dice: 0.6139  mix_decode.d7.loss_cls: 0.1001  mix_decode.d7.loss_mask: 0.4648  mix_decode.d7.loss_dice: 0.6036  mix_decode.d8.loss_cls: 0.0786  mix_decode.d8.loss_mask: 0.4895  mix_decode.d8.loss_dice: 0.6056
2025/03/27 14:57:16 - mmengine - INFO - Iter(train) [15250/20000]  base_lr: 2.7423e-05 lr: 2.7423e-05  eta: 1:13:54  time: 1.0739  data_time: 0.0221  memory: 10810  loss: 34.1804  decode.loss_cls: 0.2077  decode.loss_mask: 0.9900  decode.loss_dice: 1.1612  decode.d0.loss_cls: 0.2642  decode.d0.loss_mask: 1.0269  decode.d0.loss_dice: 1.2747  decode.d1.loss_cls: 0.2686  decode.d1.loss_mask: 0.9928  decode.d1.loss_dice: 1.1699  decode.d2.loss_cls: 0.2599  decode.d2.loss_mask: 0.9821  decode.d2.loss_dice: 1.1518  decode.d3.loss_cls: 0.2710  decode.d3.loss_mask: 0.9716  decode.d3.loss_dice: 1.1550  decode.d4.loss_cls: 0.2618  decode.d4.loss_mask: 0.9812  decode.d4.loss_dice: 1.1478  decode.d5.loss_cls: 0.2441  decode.d5.loss_mask: 0.9848  decode.d5.loss_dice: 1.1898  decode.d6.loss_cls: 0.2278  decode.d6.loss_mask: 0.9960  decode.d6.loss_dice: 1.1882  decode.d7.loss_cls: 0.2047  decode.d7.loss_mask: 0.9835  decode.d7.loss_dice: 1.1569  decode.d8.loss_cls: 0.2172  decode.d8.loss_mask: 0.9738  decode.d8.loss_dice: 1.1802  mix_decode.loss_cls: 0.0909  mix_decode.loss_mask: 0.3535  mix_decode.loss_dice: 0.5457  mix_decode.d0.loss_cls: 0.0861  mix_decode.d0.loss_mask: 0.3483  mix_decode.d0.loss_dice: 0.6103  mix_decode.d1.loss_cls: 0.1863  mix_decode.d1.loss_mask: 0.3426  mix_decode.d1.loss_dice: 0.5531  mix_decode.d2.loss_cls: 0.1228  mix_decode.d2.loss_mask: 0.3514  mix_decode.d2.loss_dice: 0.5440  mix_decode.d3.loss_cls: 0.1405  mix_decode.d3.loss_mask: 0.3523  mix_decode.d3.loss_dice: 0.5444  mix_decode.d4.loss_cls: 0.1106  mix_decode.d4.loss_mask: 0.3498  mix_decode.d4.loss_dice: 0.5480  mix_decode.d5.loss_cls: 0.1242  mix_decode.d5.loss_mask: 0.3394  mix_decode.d5.loss_dice: 0.5234  mix_decode.d6.loss_cls: 0.0933  mix_decode.d6.loss_mask: 0.3463  mix_decode.d6.loss_dice: 0.5458  mix_decode.d7.loss_cls: 0.0837  mix_decode.d7.loss_mask: 0.3481  mix_decode.d7.loss_dice: 0.5360  mix_decode.d8.loss_cls: 0.0836  mix_decode.d8.loss_mask: 0.3494  mix_decode.d8.loss_dice: 0.5413
2025/03/27 14:58:10 - mmengine - INFO - Iter(train) [15300/20000]  base_lr: 2.7163e-05 lr: 2.7163e-05  eta: 1:13:09  time: 1.0760  data_time: 0.0230  memory: 10802  loss: 33.5824  decode.loss_cls: 0.1659  decode.loss_mask: 0.9211  decode.loss_dice: 1.2269  decode.d0.loss_cls: 0.2762  decode.d0.loss_mask: 0.9531  decode.d0.loss_dice: 1.2397  decode.d1.loss_cls: 0.1593  decode.d1.loss_mask: 0.9440  decode.d1.loss_dice: 1.2305  decode.d2.loss_cls: 0.1921  decode.d2.loss_mask: 0.9220  decode.d2.loss_dice: 1.1951  decode.d3.loss_cls: 0.1872  decode.d3.loss_mask: 0.9134  decode.d3.loss_dice: 1.1843  decode.d4.loss_cls: 0.1835  decode.d4.loss_mask: 0.9233  decode.d4.loss_dice: 1.2168  decode.d5.loss_cls: 0.1284  decode.d5.loss_mask: 0.9410  decode.d5.loss_dice: 1.2310  decode.d6.loss_cls: 0.1264  decode.d6.loss_mask: 0.9194  decode.d6.loss_dice: 1.2294  decode.d7.loss_cls: 0.0924  decode.d7.loss_mask: 0.9710  decode.d7.loss_dice: 1.2486  decode.d8.loss_cls: 0.0912  decode.d8.loss_mask: 0.9721  decode.d8.loss_dice: 1.2583  mix_decode.loss_cls: 0.1081  mix_decode.loss_mask: 0.4264  mix_decode.loss_dice: 0.5164  mix_decode.d0.loss_cls: 0.1427  mix_decode.d0.loss_mask: 0.3970  mix_decode.d0.loss_dice: 0.5319  mix_decode.d1.loss_cls: 0.1073  mix_decode.d1.loss_mask: 0.3976  mix_decode.d1.loss_dice: 0.5139  mix_decode.d2.loss_cls: 0.1129  mix_decode.d2.loss_mask: 0.4012  mix_decode.d2.loss_dice: 0.5107  mix_decode.d3.loss_cls: 0.1170  mix_decode.d3.loss_mask: 0.3988  mix_decode.d3.loss_dice: 0.4932  mix_decode.d4.loss_cls: 0.1204  mix_decode.d4.loss_mask: 0.4014  mix_decode.d4.loss_dice: 0.4971  mix_decode.d5.loss_cls: 0.1309  mix_decode.d5.loss_mask: 0.3998  mix_decode.d5.loss_dice: 0.5106  mix_decode.d6.loss_cls: 0.1345  mix_decode.d6.loss_mask: 0.4083  mix_decode.d6.loss_dice: 0.4945  mix_decode.d7.loss_cls: 0.1179  mix_decode.d7.loss_mask: 0.4014  mix_decode.d7.loss_dice: 0.5128  mix_decode.d8.loss_cls: 0.0934  mix_decode.d8.loss_mask: 0.4291  mix_decode.d8.loss_dice: 0.5117
2025/03/27 14:59:05 - mmengine - INFO - Iter(train) [15350/20000]  base_lr: 2.6903e-05 lr: 2.6903e-05  eta: 1:12:25  time: 1.0708  data_time: 0.0218  memory: 10810  loss: 31.9732  decode.loss_cls: 0.2003  decode.loss_mask: 0.9350  decode.loss_dice: 1.1317  decode.d0.loss_cls: 0.3058  decode.d0.loss_mask: 0.9080  decode.d0.loss_dice: 1.2430  decode.d1.loss_cls: 0.2767  decode.d1.loss_mask: 0.9148  decode.d1.loss_dice: 1.1418  decode.d2.loss_cls: 0.2637  decode.d2.loss_mask: 0.9194  decode.d2.loss_dice: 1.1202  decode.d3.loss_cls: 0.2333  decode.d3.loss_mask: 0.9295  decode.d3.loss_dice: 1.1322  decode.d4.loss_cls: 0.2033  decode.d4.loss_mask: 0.9417  decode.d4.loss_dice: 1.1350  decode.d5.loss_cls: 0.2015  decode.d5.loss_mask: 0.9472  decode.d5.loss_dice: 1.1347  decode.d6.loss_cls: 0.2245  decode.d6.loss_mask: 0.9484  decode.d6.loss_dice: 1.1332  decode.d7.loss_cls: 0.2342  decode.d7.loss_mask: 0.9385  decode.d7.loss_dice: 1.1366  decode.d8.loss_cls: 0.2141  decode.d8.loss_mask: 0.9400  decode.d8.loss_dice: 1.1260  mix_decode.loss_cls: 0.0647  mix_decode.loss_mask: 0.2804  mix_decode.loss_dice: 0.5525  mix_decode.d0.loss_cls: 0.0617  mix_decode.d0.loss_mask: 0.2587  mix_decode.d0.loss_dice: 0.5938  mix_decode.d1.loss_cls: 0.0712  mix_decode.d1.loss_mask: 0.2724  mix_decode.d1.loss_dice: 0.5624  mix_decode.d2.loss_cls: 0.0662  mix_decode.d2.loss_mask: 0.2717  mix_decode.d2.loss_dice: 0.5391  mix_decode.d3.loss_cls: 0.0689  mix_decode.d3.loss_mask: 0.2714  mix_decode.d3.loss_dice: 0.5381  mix_decode.d4.loss_cls: 0.0638  mix_decode.d4.loss_mask: 0.2704  mix_decode.d4.loss_dice: 0.5428  mix_decode.d5.loss_cls: 0.0539  mix_decode.d5.loss_mask: 0.2717  mix_decode.d5.loss_dice: 0.5411  mix_decode.d6.loss_cls: 0.0687  mix_decode.d6.loss_mask: 0.2666  mix_decode.d6.loss_dice: 0.5469  mix_decode.d7.loss_cls: 0.0658  mix_decode.d7.loss_mask: 0.2701  mix_decode.d7.loss_dice: 0.5365  mix_decode.d8.loss_cls: 0.0664  mix_decode.d8.loss_mask: 0.2737  mix_decode.d8.loss_dice: 0.5472
2025/03/27 14:59:58 - mmengine - INFO - Iter(train) [15400/20000]  base_lr: 2.6642e-05 lr: 2.6642e-05  eta: 1:11:41  time: 1.0700  data_time: 0.0221  memory: 10808  loss: 35.7907  decode.loss_cls: 0.2851  decode.loss_mask: 1.0550  decode.loss_dice: 1.1502  decode.d0.loss_cls: 0.2410  decode.d0.loss_mask: 1.1121  decode.d0.loss_dice: 1.2782  decode.d1.loss_cls: 0.2463  decode.d1.loss_mask: 1.0822  decode.d1.loss_dice: 1.1760  decode.d2.loss_cls: 0.2846  decode.d2.loss_mask: 1.0672  decode.d2.loss_dice: 1.1437  decode.d3.loss_cls: 0.2866  decode.d3.loss_mask: 1.0782  decode.d3.loss_dice: 1.1556  decode.d4.loss_cls: 0.2454  decode.d4.loss_mask: 1.0694  decode.d4.loss_dice: 1.1291  decode.d5.loss_cls: 0.2422  decode.d5.loss_mask: 1.0666  decode.d5.loss_dice: 1.1645  decode.d6.loss_cls: 0.2273  decode.d6.loss_mask: 1.0693  decode.d6.loss_dice: 1.1992  decode.d7.loss_cls: 0.2284  decode.d7.loss_mask: 1.0647  decode.d7.loss_dice: 1.1903  decode.d8.loss_cls: 0.2269  decode.d8.loss_mask: 1.0916  decode.d8.loss_dice: 1.1664  mix_decode.loss_cls: 0.1696  mix_decode.loss_mask: 0.3935  mix_decode.loss_dice: 0.5069  mix_decode.d0.loss_cls: 0.1109  mix_decode.d0.loss_mask: 0.4116  mix_decode.d0.loss_dice: 0.6157  mix_decode.d1.loss_cls: 0.1241  mix_decode.d1.loss_mask: 0.3968  mix_decode.d1.loss_dice: 0.5444  mix_decode.d2.loss_cls: 0.1370  mix_decode.d2.loss_mask: 0.3900  mix_decode.d2.loss_dice: 0.5188  mix_decode.d3.loss_cls: 0.1750  mix_decode.d3.loss_mask: 0.3888  mix_decode.d3.loss_dice: 0.4990  mix_decode.d4.loss_cls: 0.1837  mix_decode.d4.loss_mask: 0.3814  mix_decode.d4.loss_dice: 0.5118  mix_decode.d5.loss_cls: 0.1840  mix_decode.d5.loss_mask: 0.3826  mix_decode.d5.loss_dice: 0.5048  mix_decode.d6.loss_cls: 0.1762  mix_decode.d6.loss_mask: 0.3884  mix_decode.d6.loss_dice: 0.5247  mix_decode.d7.loss_cls: 0.1844  mix_decode.d7.loss_mask: 0.3959  mix_decode.d7.loss_dice: 0.5051  mix_decode.d8.loss_cls: 0.1745  mix_decode.d8.loss_mask: 0.3910  mix_decode.d8.loss_dice: 0.4966
2025/03/27 15:00:52 - mmengine - INFO - Iter(train) [15450/20000]  base_lr: 2.6382e-05 lr: 2.6382e-05  eta: 1:10:56  time: 1.0754  data_time: 0.0221  memory: 10813  loss: 36.1205  decode.loss_cls: 0.2837  decode.loss_mask: 1.0119  decode.loss_dice: 1.1181  decode.d0.loss_cls: 0.3088  decode.d0.loss_mask: 1.0483  decode.d0.loss_dice: 1.2373  decode.d1.loss_cls: 0.3105  decode.d1.loss_mask: 1.0210  decode.d1.loss_dice: 1.1426  decode.d2.loss_cls: 0.3572  decode.d2.loss_mask: 1.0326  decode.d2.loss_dice: 1.0933  decode.d3.loss_cls: 0.3699  decode.d3.loss_mask: 1.0183  decode.d3.loss_dice: 1.0981  decode.d4.loss_cls: 0.3756  decode.d4.loss_mask: 1.0294  decode.d4.loss_dice: 1.1251  decode.d5.loss_cls: 0.3520  decode.d5.loss_mask: 1.0253  decode.d5.loss_dice: 1.1350  decode.d6.loss_cls: 0.3007  decode.d6.loss_mask: 1.0212  decode.d6.loss_dice: 1.1359  decode.d7.loss_cls: 0.2730  decode.d7.loss_mask: 1.0086  decode.d7.loss_dice: 1.1047  decode.d8.loss_cls: 0.3043  decode.d8.loss_mask: 1.0195  decode.d8.loss_dice: 1.1326  mix_decode.loss_cls: 0.1964  mix_decode.loss_mask: 0.3695  mix_decode.loss_dice: 0.5510  mix_decode.d0.loss_cls: 0.1503  mix_decode.d0.loss_mask: 0.3753  mix_decode.d0.loss_dice: 0.6021  mix_decode.d1.loss_cls: 0.2277  mix_decode.d1.loss_mask: 0.3540  mix_decode.d1.loss_dice: 0.5429  mix_decode.d2.loss_cls: 0.2460  mix_decode.d2.loss_mask: 0.3587  mix_decode.d2.loss_dice: 0.5597  mix_decode.d3.loss_cls: 0.2273  mix_decode.d3.loss_mask: 0.3642  mix_decode.d3.loss_dice: 0.5497  mix_decode.d4.loss_cls: 0.2493  mix_decode.d4.loss_mask: 0.3646  mix_decode.d4.loss_dice: 0.5497  mix_decode.d5.loss_cls: 0.2150  mix_decode.d5.loss_mask: 0.3636  mix_decode.d5.loss_dice: 0.5570  mix_decode.d6.loss_cls: 0.1931  mix_decode.d6.loss_mask: 0.3594  mix_decode.d6.loss_dice: 0.5492  mix_decode.d7.loss_cls: 0.2147  mix_decode.d7.loss_mask: 0.3593  mix_decode.d7.loss_dice: 0.5586  mix_decode.d8.loss_cls: 0.2021  mix_decode.d8.loss_mask: 0.3616  mix_decode.d8.loss_dice: 0.5542
2025/03/27 15:01:46 - mmengine - INFO - Iter(train) [15500/20000]  base_lr: 2.6121e-05 lr: 2.6121e-05  eta: 1:10:11  time: 1.0744  data_time: 0.0229  memory: 10803  loss: 34.4016  decode.loss_cls: 0.1815  decode.loss_mask: 1.1960  decode.loss_dice: 1.0747  decode.d0.loss_cls: 0.2955  decode.d0.loss_mask: 1.2589  decode.d0.loss_dice: 1.0978  decode.d1.loss_cls: 0.2233  decode.d1.loss_mask: 1.2352  decode.d1.loss_dice: 1.0833  decode.d2.loss_cls: 0.2086  decode.d2.loss_mask: 1.2108  decode.d2.loss_dice: 1.0691  decode.d3.loss_cls: 0.2167  decode.d3.loss_mask: 1.1994  decode.d3.loss_dice: 1.0677  decode.d4.loss_cls: 0.2457  decode.d4.loss_mask: 1.2028  decode.d4.loss_dice: 1.0783  decode.d5.loss_cls: 0.1691  decode.d5.loss_mask: 1.2019  decode.d5.loss_dice: 1.0800  decode.d6.loss_cls: 0.2490  decode.d6.loss_mask: 1.2111  decode.d6.loss_dice: 1.0741  decode.d7.loss_cls: 0.2028  decode.d7.loss_mask: 1.1918  decode.d7.loss_dice: 1.0702  decode.d8.loss_cls: 0.1550  decode.d8.loss_mask: 1.2209  decode.d8.loss_dice: 1.1070  mix_decode.loss_cls: 0.0611  mix_decode.loss_mask: 0.3681  mix_decode.loss_dice: 0.5008  mix_decode.d0.loss_cls: 0.0656  mix_decode.d0.loss_mask: 0.3796  mix_decode.d0.loss_dice: 0.5214  mix_decode.d1.loss_cls: 0.0934  mix_decode.d1.loss_mask: 0.3655  mix_decode.d1.loss_dice: 0.4740  mix_decode.d2.loss_cls: 0.0969  mix_decode.d2.loss_mask: 0.3696  mix_decode.d2.loss_dice: 0.4766  mix_decode.d3.loss_cls: 0.0778  mix_decode.d3.loss_mask: 0.3695  mix_decode.d3.loss_dice: 0.4816  mix_decode.d4.loss_cls: 0.0753  mix_decode.d4.loss_mask: 0.3688  mix_decode.d4.loss_dice: 0.4774  mix_decode.d5.loss_cls: 0.0852  mix_decode.d5.loss_mask: 0.3681  mix_decode.d5.loss_dice: 0.4824  mix_decode.d6.loss_cls: 0.0520  mix_decode.d6.loss_mask: 0.3709  mix_decode.d6.loss_dice: 0.4911  mix_decode.d7.loss_cls: 0.0564  mix_decode.d7.loss_mask: 0.3724  mix_decode.d7.loss_dice: 0.4946  mix_decode.d8.loss_cls: 0.0632  mix_decode.d8.loss_mask: 0.3706  mix_decode.d8.loss_dice: 0.4935
2025/03/27 15:02:40 - mmengine - INFO - Iter(train) [15550/20000]  base_lr: 2.5859e-05 lr: 2.5859e-05  eta: 1:09:26  time: 1.0812  data_time: 0.0226  memory: 10802  loss: 37.8881  decode.loss_cls: 0.3302  decode.loss_mask: 1.1506  decode.loss_dice: 1.2758  decode.d0.loss_cls: 0.2617  decode.d0.loss_mask: 1.1785  decode.d0.loss_dice: 1.3466  decode.d1.loss_cls: 0.3037  decode.d1.loss_mask: 1.1461  decode.d1.loss_dice: 1.2753  decode.d2.loss_cls: 0.3105  decode.d2.loss_mask: 1.1579  decode.d2.loss_dice: 1.2666  decode.d3.loss_cls: 0.3424  decode.d3.loss_mask: 1.1576  decode.d3.loss_dice: 1.2678  decode.d4.loss_cls: 0.2840  decode.d4.loss_mask: 1.1617  decode.d4.loss_dice: 1.2981  decode.d5.loss_cls: 0.3330  decode.d5.loss_mask: 1.1561  decode.d5.loss_dice: 1.2964  decode.d6.loss_cls: 0.2849  decode.d6.loss_mask: 1.1267  decode.d6.loss_dice: 1.2940  decode.d7.loss_cls: 0.3713  decode.d7.loss_mask: 1.1257  decode.d7.loss_dice: 1.2758  decode.d8.loss_cls: 0.3725  decode.d8.loss_mask: 1.1528  decode.d8.loss_dice: 1.2556  mix_decode.loss_cls: 0.0865  mix_decode.loss_mask: 0.4630  mix_decode.loss_dice: 0.4855  mix_decode.d0.loss_cls: 0.0891  mix_decode.d0.loss_mask: 0.4778  mix_decode.d0.loss_dice: 0.5138  mix_decode.d1.loss_cls: 0.0882  mix_decode.d1.loss_mask: 0.4765  mix_decode.d1.loss_dice: 0.4870  mix_decode.d2.loss_cls: 0.0655  mix_decode.d2.loss_mask: 0.4765  mix_decode.d2.loss_dice: 0.4825  mix_decode.d3.loss_cls: 0.0780  mix_decode.d3.loss_mask: 0.4720  mix_decode.d3.loss_dice: 0.4730  mix_decode.d4.loss_cls: 0.0736  mix_decode.d4.loss_mask: 0.4661  mix_decode.d4.loss_dice: 0.4832  mix_decode.d5.loss_cls: 0.0700  mix_decode.d5.loss_mask: 0.4709  mix_decode.d5.loss_dice: 0.4847  mix_decode.d6.loss_cls: 0.0668  mix_decode.d6.loss_mask: 0.4692  mix_decode.d6.loss_dice: 0.4821  mix_decode.d7.loss_cls: 0.0778  mix_decode.d7.loss_mask: 0.4643  mix_decode.d7.loss_dice: 0.4825  mix_decode.d8.loss_cls: 0.0821  mix_decode.d8.loss_mask: 0.4606  mix_decode.d8.loss_dice: 0.4792
2025/03/27 15:03:34 - mmengine - INFO - Iter(train) [15600/20000]  base_lr: 2.5598e-05 lr: 2.5598e-05  eta: 1:08:42  time: 1.0779  data_time: 0.0222  memory: 10798  loss: 32.7629  decode.loss_cls: 0.3527  decode.loss_mask: 0.8498  decode.loss_dice: 1.1711  decode.d0.loss_cls: 0.3647  decode.d0.loss_mask: 0.8418  decode.d0.loss_dice: 1.2399  decode.d1.loss_cls: 0.3712  decode.d1.loss_mask: 0.8455  decode.d1.loss_dice: 1.1842  decode.d2.loss_cls: 0.4095  decode.d2.loss_mask: 0.8643  decode.d2.loss_dice: 1.1525  decode.d3.loss_cls: 0.3791  decode.d3.loss_mask: 0.8399  decode.d3.loss_dice: 1.1225  decode.d4.loss_cls: 0.3896  decode.d4.loss_mask: 0.8241  decode.d4.loss_dice: 1.1335  decode.d5.loss_cls: 0.3501  decode.d5.loss_mask: 0.8363  decode.d5.loss_dice: 1.1264  decode.d6.loss_cls: 0.3537  decode.d6.loss_mask: 0.8453  decode.d6.loss_dice: 1.1534  decode.d7.loss_cls: 0.3798  decode.d7.loss_mask: 0.8323  decode.d7.loss_dice: 1.1384  decode.d8.loss_cls: 0.3854  decode.d8.loss_mask: 0.8411  decode.d8.loss_dice: 1.1856  mix_decode.loss_cls: 0.0704  mix_decode.loss_mask: 0.3450  mix_decode.loss_dice: 0.4753  mix_decode.d0.loss_cls: 0.0882  mix_decode.d0.loss_mask: 0.3306  mix_decode.d0.loss_dice: 0.5423  mix_decode.d1.loss_cls: 0.1038  mix_decode.d1.loss_mask: 0.3342  mix_decode.d1.loss_dice: 0.4733  mix_decode.d2.loss_cls: 0.1136  mix_decode.d2.loss_mask: 0.3301  mix_decode.d2.loss_dice: 0.4502  mix_decode.d3.loss_cls: 0.0890  mix_decode.d3.loss_mask: 0.3364  mix_decode.d3.loss_dice: 0.4593  mix_decode.d4.loss_cls: 0.1023  mix_decode.d4.loss_mask: 0.3278  mix_decode.d4.loss_dice: 0.4521  mix_decode.d5.loss_cls: 0.0979  mix_decode.d5.loss_mask: 0.3336  mix_decode.d5.loss_dice: 0.4526  mix_decode.d6.loss_cls: 0.0741  mix_decode.d6.loss_mask: 0.3390  mix_decode.d6.loss_dice: 0.4717  mix_decode.d7.loss_cls: 0.0840  mix_decode.d7.loss_mask: 0.3410  mix_decode.d7.loss_dice: 0.4757  mix_decode.d8.loss_cls: 0.0989  mix_decode.d8.loss_mask: 0.3365  mix_decode.d8.loss_dice: 0.4703
2025/03/27 15:04:28 - mmengine - INFO - Iter(train) [15650/20000]  base_lr: 2.5336e-05 lr: 2.5336e-05  eta: 1:07:57  time: 1.0704  data_time: 0.0217  memory: 10806  loss: 37.2017  decode.loss_cls: 0.2570  decode.loss_mask: 1.1606  decode.loss_dice: 1.2338  decode.d0.loss_cls: 0.2347  decode.d0.loss_mask: 1.2172  decode.d0.loss_dice: 1.2823  decode.d1.loss_cls: 0.2469  decode.d1.loss_mask: 1.1578  decode.d1.loss_dice: 1.2466  decode.d2.loss_cls: 0.2653  decode.d2.loss_mask: 1.1531  decode.d2.loss_dice: 1.2254  decode.d3.loss_cls: 0.2507  decode.d3.loss_mask: 1.1520  decode.d3.loss_dice: 1.2303  decode.d4.loss_cls: 0.2382  decode.d4.loss_mask: 1.1408  decode.d4.loss_dice: 1.2525  decode.d5.loss_cls: 0.2609  decode.d5.loss_mask: 1.1665  decode.d5.loss_dice: 1.2398  decode.d6.loss_cls: 0.2500  decode.d6.loss_mask: 1.1692  decode.d6.loss_dice: 1.2476  decode.d7.loss_cls: 0.2310  decode.d7.loss_mask: 1.1978  decode.d7.loss_dice: 1.2505  decode.d8.loss_cls: 0.2505  decode.d8.loss_mask: 1.1428  decode.d8.loss_dice: 1.2439  mix_decode.loss_cls: 0.0779  mix_decode.loss_mask: 0.4317  mix_decode.loss_dice: 0.5484  mix_decode.d0.loss_cls: 0.1223  mix_decode.d0.loss_mask: 0.4311  mix_decode.d0.loss_dice: 0.5991  mix_decode.d1.loss_cls: 0.1003  mix_decode.d1.loss_mask: 0.4326  mix_decode.d1.loss_dice: 0.5545  mix_decode.d2.loss_cls: 0.0776  mix_decode.d2.loss_mask: 0.4379  mix_decode.d2.loss_dice: 0.5360  mix_decode.d3.loss_cls: 0.0711  mix_decode.d3.loss_mask: 0.4341  mix_decode.d3.loss_dice: 0.5299  mix_decode.d4.loss_cls: 0.0751  mix_decode.d4.loss_mask: 0.4278  mix_decode.d4.loss_dice: 0.5408  mix_decode.d5.loss_cls: 0.0704  mix_decode.d5.loss_mask: 0.4320  mix_decode.d5.loss_dice: 0.5368  mix_decode.d6.loss_cls: 0.0857  mix_decode.d6.loss_mask: 0.4316  mix_decode.d6.loss_dice: 0.5275  mix_decode.d7.loss_cls: 0.0838  mix_decode.d7.loss_mask: 0.4273  mix_decode.d7.loss_dice: 0.5355  mix_decode.d8.loss_cls: 0.0604  mix_decode.d8.loss_mask: 0.4478  mix_decode.d8.loss_dice: 0.5388
2025/03/27 15:05:21 - mmengine - INFO - Iter(train) [15700/20000]  base_lr: 2.5073e-05 lr: 2.5073e-05  eta: 1:07:12  time: 1.0724  data_time: 0.0222  memory: 10809  loss: 34.0151  decode.loss_cls: 0.2718  decode.loss_mask: 1.0636  decode.loss_dice: 1.1075  decode.d0.loss_cls: 0.2590  decode.d0.loss_mask: 1.1181  decode.d0.loss_dice: 1.1930  decode.d1.loss_cls: 0.2335  decode.d1.loss_mask: 1.0984  decode.d1.loss_dice: 1.1327  decode.d2.loss_cls: 0.2223  decode.d2.loss_mask: 1.0995  decode.d2.loss_dice: 1.1352  decode.d3.loss_cls: 0.2079  decode.d3.loss_mask: 1.1026  decode.d3.loss_dice: 1.1164  decode.d4.loss_cls: 0.2796  decode.d4.loss_mask: 1.0946  decode.d4.loss_dice: 1.1498  decode.d5.loss_cls: 0.2583  decode.d5.loss_mask: 1.0814  decode.d5.loss_dice: 1.1323  decode.d6.loss_cls: 0.2884  decode.d6.loss_mask: 1.0792  decode.d6.loss_dice: 1.1253  decode.d7.loss_cls: 0.2509  decode.d7.loss_mask: 1.0885  decode.d7.loss_dice: 1.1138  decode.d8.loss_cls: 0.2772  decode.d8.loss_mask: 1.0879  decode.d8.loss_dice: 1.1302  mix_decode.loss_cls: 0.0954  mix_decode.loss_mask: 0.3215  mix_decode.loss_dice: 0.4751  mix_decode.d0.loss_cls: 0.1438  mix_decode.d0.loss_mask: 0.3358  mix_decode.d0.loss_dice: 0.5146  mix_decode.d1.loss_cls: 0.1205  mix_decode.d1.loss_mask: 0.3273  mix_decode.d1.loss_dice: 0.4850  mix_decode.d2.loss_cls: 0.1217  mix_decode.d2.loss_mask: 0.3324  mix_decode.d2.loss_dice: 0.4900  mix_decode.d3.loss_cls: 0.1058  mix_decode.d3.loss_mask: 0.3198  mix_decode.d3.loss_dice: 0.4724  mix_decode.d4.loss_cls: 0.0754  mix_decode.d4.loss_mask: 0.3398  mix_decode.d4.loss_dice: 0.4984  mix_decode.d5.loss_cls: 0.1087  mix_decode.d5.loss_mask: 0.3357  mix_decode.d5.loss_dice: 0.4832  mix_decode.d6.loss_cls: 0.0908  mix_decode.d6.loss_mask: 0.3357  mix_decode.d6.loss_dice: 0.4889  mix_decode.d7.loss_cls: 0.0731  mix_decode.d7.loss_mask: 0.3420  mix_decode.d7.loss_dice: 0.4899  mix_decode.d8.loss_cls: 0.0943  mix_decode.d8.loss_mask: 0.3154  mix_decode.d8.loss_dice: 0.4838
2025/03/27 15:06:15 - mmengine - INFO - Iter(train) [15750/20000]  base_lr: 2.4811e-05 lr: 2.4811e-05  eta: 1:06:27  time: 1.0803  data_time: 0.0231  memory: 10810  loss: 31.8225  decode.loss_cls: 0.0761  decode.loss_mask: 1.0479  decode.loss_dice: 1.1079  decode.d0.loss_cls: 0.2218  decode.d0.loss_mask: 1.0183  decode.d0.loss_dice: 1.0639  decode.d1.loss_cls: 0.1429  decode.d1.loss_mask: 0.9984  decode.d1.loss_dice: 1.0387  decode.d2.loss_cls: 0.1309  decode.d2.loss_mask: 1.0183  decode.d2.loss_dice: 1.0499  decode.d3.loss_cls: 0.1166  decode.d3.loss_mask: 1.0095  decode.d3.loss_dice: 1.0512  decode.d4.loss_cls: 0.0944  decode.d4.loss_mask: 1.0122  decode.d4.loss_dice: 1.0569  decode.d5.loss_cls: 0.1881  decode.d5.loss_mask: 1.0048  decode.d5.loss_dice: 1.0277  decode.d6.loss_cls: 0.1093  decode.d6.loss_mask: 1.0293  decode.d6.loss_dice: 1.0655  decode.d7.loss_cls: 0.0785  decode.d7.loss_mask: 1.0319  decode.d7.loss_dice: 1.0779  decode.d8.loss_cls: 0.1321  decode.d8.loss_mask: 1.0176  decode.d8.loss_dice: 1.0530  mix_decode.loss_cls: 0.1005  mix_decode.loss_mask: 0.3849  mix_decode.loss_dice: 0.4823  mix_decode.d0.loss_cls: 0.0849  mix_decode.d0.loss_mask: 0.3864  mix_decode.d0.loss_dice: 0.5397  mix_decode.d1.loss_cls: 0.1189  mix_decode.d1.loss_mask: 0.3997  mix_decode.d1.loss_dice: 0.4886  mix_decode.d2.loss_cls: 0.1160  mix_decode.d2.loss_mask: 0.3850  mix_decode.d2.loss_dice: 0.4849  mix_decode.d3.loss_cls: 0.0697  mix_decode.d3.loss_mask: 0.4009  mix_decode.d3.loss_dice: 0.4896  mix_decode.d4.loss_cls: 0.0832  mix_decode.d4.loss_mask: 0.3880  mix_decode.d4.loss_dice: 0.5133  mix_decode.d5.loss_cls: 0.0685  mix_decode.d5.loss_mask: 0.3998  mix_decode.d5.loss_dice: 0.4839  mix_decode.d6.loss_cls: 0.0756  mix_decode.d6.loss_mask: 0.3850  mix_decode.d6.loss_dice: 0.4895  mix_decode.d7.loss_cls: 0.1009  mix_decode.d7.loss_mask: 0.3853  mix_decode.d7.loss_dice: 0.4945  mix_decode.d8.loss_cls: 0.0467  mix_decode.d8.loss_mask: 0.4027  mix_decode.d8.loss_dice: 0.5021
2025/03/27 15:07:09 - mmengine - INFO - Iter(train) [15800/20000]  base_lr: 2.4548e-05 lr: 2.4548e-05  eta: 1:05:42  time: 1.0724  data_time: 0.0224  memory: 10808  loss: 28.5991  decode.loss_cls: 0.1054  decode.loss_mask: 0.8687  decode.loss_dice: 0.9217  decode.d0.loss_cls: 0.1925  decode.d0.loss_mask: 0.8759  decode.d0.loss_dice: 0.9170  decode.d1.loss_cls: 0.1471  decode.d1.loss_mask: 0.8729  decode.d1.loss_dice: 0.9391  decode.d2.loss_cls: 0.1587  decode.d2.loss_mask: 0.8670  decode.d2.loss_dice: 0.9201  decode.d3.loss_cls: 0.1177  decode.d3.loss_mask: 0.8709  decode.d3.loss_dice: 0.9292  decode.d4.loss_cls: 0.1192  decode.d4.loss_mask: 0.8637  decode.d4.loss_dice: 0.9282  decode.d5.loss_cls: 0.1234  decode.d5.loss_mask: 0.8664  decode.d5.loss_dice: 0.9264  decode.d6.loss_cls: 0.1092  decode.d6.loss_mask: 0.8682  decode.d6.loss_dice: 0.9375  decode.d7.loss_cls: 0.1201  decode.d7.loss_mask: 0.8691  decode.d7.loss_dice: 0.9339  decode.d8.loss_cls: 0.1234  decode.d8.loss_mask: 0.8609  decode.d8.loss_dice: 0.9220  mix_decode.loss_cls: 0.1016  mix_decode.loss_mask: 0.3388  mix_decode.loss_dice: 0.4853  mix_decode.d0.loss_cls: 0.0891  mix_decode.d0.loss_mask: 0.3427  mix_decode.d0.loss_dice: 0.5257  mix_decode.d1.loss_cls: 0.1142  mix_decode.d1.loss_mask: 0.3389  mix_decode.d1.loss_dice: 0.4922  mix_decode.d2.loss_cls: 0.0753  mix_decode.d2.loss_mask: 0.3413  mix_decode.d2.loss_dice: 0.5094  mix_decode.d3.loss_cls: 0.1085  mix_decode.d3.loss_mask: 0.3389  mix_decode.d3.loss_dice: 0.4837  mix_decode.d4.loss_cls: 0.1029  mix_decode.d4.loss_mask: 0.3422  mix_decode.d4.loss_dice: 0.4828  mix_decode.d5.loss_cls: 0.1099  mix_decode.d5.loss_mask: 0.3428  mix_decode.d5.loss_dice: 0.4857  mix_decode.d6.loss_cls: 0.0811  mix_decode.d6.loss_mask: 0.3369  mix_decode.d6.loss_dice: 0.4897  mix_decode.d7.loss_cls: 0.1049  mix_decode.d7.loss_mask: 0.3353  mix_decode.d7.loss_dice: 0.4983  mix_decode.d8.loss_cls: 0.0994  mix_decode.d8.loss_mask: 0.3377  mix_decode.d8.loss_dice: 0.4885
2025/03/27 15:08:02 - mmengine - INFO - Iter(train) [15850/20000]  base_lr: 2.4285e-05 lr: 2.4285e-05  eta: 1:04:56  time: 1.0704  data_time: 0.0219  memory: 10808  loss: 33.8430  decode.loss_cls: 0.3039  decode.loss_mask: 0.9890  decode.loss_dice: 1.0530  decode.d0.loss_cls: 0.3447  decode.d0.loss_mask: 1.0150  decode.d0.loss_dice: 1.1071  decode.d1.loss_cls: 0.2446  decode.d1.loss_mask: 1.0161  decode.d1.loss_dice: 1.1204  decode.d2.loss_cls: 0.2913  decode.d2.loss_mask: 1.0306  decode.d2.loss_dice: 1.1214  decode.d3.loss_cls: 0.2858  decode.d3.loss_mask: 1.0170  decode.d3.loss_dice: 1.1035  decode.d4.loss_cls: 0.2769  decode.d4.loss_mask: 1.0268  decode.d4.loss_dice: 1.0470  decode.d5.loss_cls: 0.2605  decode.d5.loss_mask: 1.0256  decode.d5.loss_dice: 1.0650  decode.d6.loss_cls: 0.2671  decode.d6.loss_mask: 1.0287  decode.d6.loss_dice: 1.1235  decode.d7.loss_cls: 0.2950  decode.d7.loss_mask: 0.9924  decode.d7.loss_dice: 1.0644  decode.d8.loss_cls: 0.2672  decode.d8.loss_mask: 1.0066  decode.d8.loss_dice: 1.0603  mix_decode.loss_cls: 0.0492  mix_decode.loss_mask: 0.4103  mix_decode.loss_dice: 0.5281  mix_decode.d0.loss_cls: 0.0558  mix_decode.d0.loss_mask: 0.4056  mix_decode.d0.loss_dice: 0.5703  mix_decode.d1.loss_cls: 0.0766  mix_decode.d1.loss_mask: 0.4020  mix_decode.d1.loss_dice: 0.5432  mix_decode.d2.loss_cls: 0.0775  mix_decode.d2.loss_mask: 0.4070  mix_decode.d2.loss_dice: 0.5368  mix_decode.d3.loss_cls: 0.0608  mix_decode.d3.loss_mask: 0.4031  mix_decode.d3.loss_dice: 0.5334  mix_decode.d4.loss_cls: 0.0448  mix_decode.d4.loss_mask: 0.4031  mix_decode.d4.loss_dice: 0.5359  mix_decode.d5.loss_cls: 0.0483  mix_decode.d5.loss_mask: 0.4044  mix_decode.d5.loss_dice: 0.5350  mix_decode.d6.loss_cls: 0.0393  mix_decode.d6.loss_mask: 0.4079  mix_decode.d6.loss_dice: 0.5407  mix_decode.d7.loss_cls: 0.0589  mix_decode.d7.loss_mask: 0.4000  mix_decode.d7.loss_dice: 0.5317  mix_decode.d8.loss_cls: 0.0437  mix_decode.d8.loss_mask: 0.4029  mix_decode.d8.loss_dice: 0.5361
2025/03/27 15:08:56 - mmengine - INFO - Iter(train) [15900/20000]  base_lr: 2.4021e-05 lr: 2.4021e-05  eta: 1:04:11  time: 1.0721  data_time: 0.0217  memory: 10809  loss: 30.6632  decode.loss_cls: 0.1717  decode.loss_mask: 0.8814  decode.loss_dice: 1.1542  decode.d0.loss_cls: 0.2237  decode.d0.loss_mask: 0.9183  decode.d0.loss_dice: 1.1836  decode.d1.loss_cls: 0.2599  decode.d1.loss_mask: 0.7890  decode.d1.loss_dice: 1.1409  decode.d2.loss_cls: 0.2094  decode.d2.loss_mask: 0.7787  decode.d2.loss_dice: 1.1362  decode.d3.loss_cls: 0.2530  decode.d3.loss_mask: 0.7742  decode.d3.loss_dice: 1.1088  decode.d4.loss_cls: 0.2160  decode.d4.loss_mask: 0.8646  decode.d4.loss_dice: 1.1228  decode.d5.loss_cls: 0.2612  decode.d5.loss_mask: 0.7855  decode.d5.loss_dice: 1.1186  decode.d6.loss_cls: 0.2644  decode.d6.loss_mask: 0.7871  decode.d6.loss_dice: 1.1141  decode.d7.loss_cls: 0.2243  decode.d7.loss_mask: 0.7924  decode.d7.loss_dice: 1.1267  decode.d8.loss_cls: 0.2149  decode.d8.loss_mask: 0.8691  decode.d8.loss_dice: 1.1251  mix_decode.loss_cls: 0.0363  mix_decode.loss_mask: 0.3637  mix_decode.loss_dice: 0.4639  mix_decode.d0.loss_cls: 0.0685  mix_decode.d0.loss_mask: 0.3626  mix_decode.d0.loss_dice: 0.4749  mix_decode.d1.loss_cls: 0.0563  mix_decode.d1.loss_mask: 0.3583  mix_decode.d1.loss_dice: 0.4667  mix_decode.d2.loss_cls: 0.0586  mix_decode.d2.loss_mask: 0.3602  mix_decode.d2.loss_dice: 0.4625  mix_decode.d3.loss_cls: 0.0569  mix_decode.d3.loss_mask: 0.3588  mix_decode.d3.loss_dice: 0.4584  mix_decode.d4.loss_cls: 0.0588  mix_decode.d4.loss_mask: 0.3558  mix_decode.d4.loss_dice: 0.4639  mix_decode.d5.loss_cls: 0.0552  mix_decode.d5.loss_mask: 0.3594  mix_decode.d5.loss_dice: 0.4640  mix_decode.d6.loss_cls: 0.0566  mix_decode.d6.loss_mask: 0.3611  mix_decode.d6.loss_dice: 0.4594  mix_decode.d7.loss_cls: 0.0606  mix_decode.d7.loss_mask: 0.3590  mix_decode.d7.loss_dice: 0.4619  mix_decode.d8.loss_cls: 0.0475  mix_decode.d8.loss_mask: 0.3609  mix_decode.d8.loss_dice: 0.4628
2025/03/27 15:09:50 - mmengine - INFO - Iter(train) [15950/20000]  base_lr: 2.3758e-05 lr: 2.3758e-05  eta: 1:03:26  time: 1.0699  data_time: 0.0220  memory: 10808  loss: 35.5454  decode.loss_cls: 0.2445  decode.loss_mask: 1.0741  decode.loss_dice: 1.1890  decode.d0.loss_cls: 0.3210  decode.d0.loss_mask: 1.1286  decode.d0.loss_dice: 1.2891  decode.d1.loss_cls: 0.2673  decode.d1.loss_mask: 1.1580  decode.d1.loss_dice: 1.2499  decode.d2.loss_cls: 0.2423  decode.d2.loss_mask: 1.1298  decode.d2.loss_dice: 1.2234  decode.d3.loss_cls: 0.2282  decode.d3.loss_mask: 1.1015  decode.d3.loss_dice: 1.2118  decode.d4.loss_cls: 0.2921  decode.d4.loss_mask: 1.0975  decode.d4.loss_dice: 1.2040  decode.d5.loss_cls: 0.3193  decode.d5.loss_mask: 1.1363  decode.d5.loss_dice: 1.2134  decode.d6.loss_cls: 0.2582  decode.d6.loss_mask: 1.1104  decode.d6.loss_dice: 1.1929  decode.d7.loss_cls: 0.2693  decode.d7.loss_mask: 1.1392  decode.d7.loss_dice: 1.2499  decode.d8.loss_cls: 0.2706  decode.d8.loss_mask: 1.0924  decode.d8.loss_dice: 1.2077  mix_decode.loss_cls: 0.1312  mix_decode.loss_mask: 0.3225  mix_decode.loss_dice: 0.4676  mix_decode.d0.loss_cls: 0.1361  mix_decode.d0.loss_mask: 0.3479  mix_decode.d0.loss_dice: 0.5544  mix_decode.d1.loss_cls: 0.1848  mix_decode.d1.loss_mask: 0.3176  mix_decode.d1.loss_dice: 0.4430  mix_decode.d2.loss_cls: 0.1602  mix_decode.d2.loss_mask: 0.3370  mix_decode.d2.loss_dice: 0.4502  mix_decode.d3.loss_cls: 0.1149  mix_decode.d3.loss_mask: 0.3194  mix_decode.d3.loss_dice: 0.4716  mix_decode.d4.loss_cls: 0.1358  mix_decode.d4.loss_mask: 0.3386  mix_decode.d4.loss_dice: 0.4748  mix_decode.d5.loss_cls: 0.1341  mix_decode.d5.loss_mask: 0.3211  mix_decode.d5.loss_dice: 0.4615  mix_decode.d6.loss_cls: 0.1532  mix_decode.d6.loss_mask: 0.3355  mix_decode.d6.loss_dice: 0.4588  mix_decode.d7.loss_cls: 0.1373  mix_decode.d7.loss_mask: 0.3364  mix_decode.d7.loss_dice: 0.4603  mix_decode.d8.loss_cls: 0.1412  mix_decode.d8.loss_mask: 0.3221  mix_decode.d8.loss_dice: 0.4647
2025/03/27 15:10:43 - mmengine - INFO - Exp name: pr2vi_20250327_105544
2025/03/27 15:10:43 - mmengine - INFO - Iter(train) [16000/20000]  base_lr: 2.3493e-05 lr: 2.3493e-05  eta: 1:02:41  time: 1.0700  data_time: 0.0221  memory: 10806  loss: 36.7303  decode.loss_cls: 0.2583  decode.loss_mask: 1.1315  decode.loss_dice: 1.2287  decode.d0.loss_cls: 0.2839  decode.d0.loss_mask: 1.2078  decode.d0.loss_dice: 1.2510  decode.d1.loss_cls: 0.2569  decode.d1.loss_mask: 1.1380  decode.d1.loss_dice: 1.2298  decode.d2.loss_cls: 0.1869  decode.d2.loss_mask: 1.1384  decode.d2.loss_dice: 1.2479  decode.d3.loss_cls: 0.1602  decode.d3.loss_mask: 1.2134  decode.d3.loss_dice: 1.2697  decode.d4.loss_cls: 0.2658  decode.d4.loss_mask: 1.1221  decode.d4.loss_dice: 1.2155  decode.d5.loss_cls: 0.2172  decode.d5.loss_mask: 1.1268  decode.d5.loss_dice: 1.2497  decode.d6.loss_cls: 0.2739  decode.d6.loss_mask: 1.0943  decode.d6.loss_dice: 1.1944  decode.d7.loss_cls: 0.2645  decode.d7.loss_mask: 1.1421  decode.d7.loss_dice: 1.2078  decode.d8.loss_cls: 0.2933  decode.d8.loss_mask: 1.0941  decode.d8.loss_dice: 1.1663  mix_decode.loss_cls: 0.0895  mix_decode.loss_mask: 0.4737  mix_decode.loss_dice: 0.5261  mix_decode.d0.loss_cls: 0.0617  mix_decode.d0.loss_mask: 0.4520  mix_decode.d0.loss_dice: 0.5695  mix_decode.d1.loss_cls: 0.0526  mix_decode.d1.loss_mask: 0.4489  mix_decode.d1.loss_dice: 0.5351  mix_decode.d2.loss_cls: 0.0736  mix_decode.d2.loss_mask: 0.4535  mix_decode.d2.loss_dice: 0.5275  mix_decode.d3.loss_cls: 0.0750  mix_decode.d3.loss_mask: 0.4584  mix_decode.d3.loss_dice: 0.5110  mix_decode.d4.loss_cls: 0.0613  mix_decode.d4.loss_mask: 0.4484  mix_decode.d4.loss_dice: 0.5291  mix_decode.d5.loss_cls: 0.0793  mix_decode.d5.loss_mask: 0.4412  mix_decode.d5.loss_dice: 0.5206  mix_decode.d6.loss_cls: 0.0953  mix_decode.d6.loss_mask: 0.4610  mix_decode.d6.loss_dice: 0.5182  mix_decode.d7.loss_cls: 0.0713  mix_decode.d7.loss_mask: 0.4509  mix_decode.d7.loss_dice: 0.5259  mix_decode.d8.loss_cls: 0.0978  mix_decode.d8.loss_mask: 0.4626  mix_decode.d8.loss_dice: 0.5293
2025/03/27 15:10:43 - mmengine - INFO - Saving checkpoint at 16000 iterations
2025/03/27 15:10:49 - mmengine - INFO - Iter(val) [ 50/398]    eta: 0:00:29  time: 0.0850  data_time: 0.0016  memory: 3119  
2025/03/27 15:10:53 - mmengine - INFO - Iter(val) [100/398]    eta: 0:00:25  time: 0.0851  data_time: 0.0016  memory: 3119  
2025/03/27 15:10:57 - mmengine - INFO - Iter(val) [150/398]    eta: 0:00:21  time: 0.0849  data_time: 0.0016  memory: 3119  
2025/03/27 15:11:01 - mmengine - INFO - Iter(val) [200/398]    eta: 0:00:16  time: 0.0850  data_time: 0.0017  memory: 3119  
2025/03/27 15:11:06 - mmengine - INFO - Iter(val) [250/398]    eta: 0:00:12  time: 0.0850  data_time: 0.0017  memory: 3119  
2025/03/27 15:11:10 - mmengine - INFO - Iter(val) [300/398]    eta: 0:00:08  time: 0.0850  data_time: 0.0017  memory: 3119  
2025/03/27 15:11:14 - mmengine - INFO - Iter(val) [350/398]    eta: 0:00:04  time: 0.0850  data_time: 0.0017  memory: 3119  
2025/03/27 15:11:18 - mmengine - INFO - per class results:
2025/03/27 15:11:18 - mmengine - INFO - 
+--------------------+-------+-------+
|       Class        |  IoU  |  Acc  |
+--------------------+-------+-------+
| impervious_surface | 79.43 | 89.19 |
|      building      | 88.59 | 96.74 |
|   low_vegetation   |  64.9 | 76.41 |
|        tree        |  73.8 | 80.27 |
|        car         | 61.34 | 80.45 |
|      clutter       | 32.13 | 92.32 |
+--------------------+-------+-------+
2025/03/27 15:11:18 - mmengine - INFO - Iter(val) [398/398]    aAcc: 86.2000  mIoU: 66.7000  mAcc: 85.9000  data_time: 0.0018  time: 0.0851
2025/03/27 15:12:12 - mmengine - INFO - Iter(train) [16050/20000]  base_lr: 2.3229e-05 lr: 2.3229e-05  eta: 1:01:55  time: 1.0758  data_time: 0.0235  memory: 10807  loss: 34.0127  decode.loss_cls: 0.1822  decode.loss_mask: 0.9426  decode.loss_dice: 1.1657  decode.d0.loss_cls: 0.2600  decode.d0.loss_mask: 0.9782  decode.d0.loss_dice: 1.2662  decode.d1.loss_cls: 0.2506  decode.d1.loss_mask: 0.9511  decode.d1.loss_dice: 1.1744  decode.d2.loss_cls: 0.2266  decode.d2.loss_mask: 0.9544  decode.d2.loss_dice: 1.1713  decode.d3.loss_cls: 0.2254  decode.d3.loss_mask: 0.9404  decode.d3.loss_dice: 1.1599  decode.d4.loss_cls: 0.2296  decode.d4.loss_mask: 0.9586  decode.d4.loss_dice: 1.1675  decode.d5.loss_cls: 0.2738  decode.d5.loss_mask: 0.9460  decode.d5.loss_dice: 1.1670  decode.d6.loss_cls: 0.2787  decode.d6.loss_mask: 0.9548  decode.d6.loss_dice: 1.1602  decode.d7.loss_cls: 0.2227  decode.d7.loss_mask: 0.9584  decode.d7.loss_dice: 1.1664  decode.d8.loss_cls: 0.1808  decode.d8.loss_mask: 0.9561  decode.d8.loss_dice: 1.1707  mix_decode.loss_cls: 0.0641  mix_decode.loss_mask: 0.4247  mix_decode.loss_dice: 0.5436  mix_decode.d0.loss_cls: 0.1134  mix_decode.d0.loss_mask: 0.4120  mix_decode.d0.loss_dice: 0.5643  mix_decode.d1.loss_cls: 0.0764  mix_decode.d1.loss_mask: 0.4370  mix_decode.d1.loss_dice: 0.5507  mix_decode.d2.loss_cls: 0.0756  mix_decode.d2.loss_mask: 0.4230  mix_decode.d2.loss_dice: 0.5337  mix_decode.d3.loss_cls: 0.0757  mix_decode.d3.loss_mask: 0.4217  mix_decode.d3.loss_dice: 0.5188  mix_decode.d4.loss_cls: 0.0732  mix_decode.d4.loss_mask: 0.4237  mix_decode.d4.loss_dice: 0.5410  mix_decode.d5.loss_cls: 0.0647  mix_decode.d5.loss_mask: 0.4226  mix_decode.d5.loss_dice: 0.5222  mix_decode.d6.loss_cls: 0.0655  mix_decode.d6.loss_mask: 0.4130  mix_decode.d6.loss_dice: 0.5408  mix_decode.d7.loss_cls: 0.0689  mix_decode.d7.loss_mask: 0.4192  mix_decode.d7.loss_dice: 0.5437  mix_decode.d8.loss_cls: 0.0799  mix_decode.d8.loss_mask: 0.4268  mix_decode.d8.loss_dice: 0.5325
2025/03/27 15:13:06 - mmengine - INFO - Iter(train) [16100/20000]  base_lr: 2.2964e-05 lr: 2.2964e-05  eta: 1:01:10  time: 1.0726  data_time: 0.0223  memory: 10798  loss: 40.9907  decode.loss_cls: 0.4047  decode.loss_mask: 1.2286  decode.loss_dice: 1.3127  decode.d0.loss_cls: 0.4899  decode.d0.loss_mask: 1.2201  decode.d0.loss_dice: 1.3830  decode.d1.loss_cls: 0.5126  decode.d1.loss_mask: 1.1634  decode.d1.loss_dice: 1.2497  decode.d2.loss_cls: 0.4599  decode.d2.loss_mask: 1.2166  decode.d2.loss_dice: 1.2591  decode.d3.loss_cls: 0.4316  decode.d3.loss_mask: 1.2371  decode.d3.loss_dice: 1.2402  decode.d4.loss_cls: 0.4825  decode.d4.loss_mask: 1.1366  decode.d4.loss_dice: 1.2050  decode.d5.loss_cls: 0.4177  decode.d5.loss_mask: 1.2051  decode.d5.loss_dice: 1.2298  decode.d6.loss_cls: 0.3884  decode.d6.loss_mask: 1.2193  decode.d6.loss_dice: 1.3169  decode.d7.loss_cls: 0.3780  decode.d7.loss_mask: 1.2374  decode.d7.loss_dice: 1.2951  decode.d8.loss_cls: 0.3463  decode.d8.loss_mask: 1.2364  decode.d8.loss_dice: 1.3010  mix_decode.loss_cls: 0.2041  mix_decode.loss_mask: 0.4086  mix_decode.loss_dice: 0.5759  mix_decode.d0.loss_cls: 0.1923  mix_decode.d0.loss_mask: 0.3858  mix_decode.d0.loss_dice: 0.6442  mix_decode.d1.loss_cls: 0.2199  mix_decode.d1.loss_mask: 0.3674  mix_decode.d1.loss_dice: 0.5678  mix_decode.d2.loss_cls: 0.2262  mix_decode.d2.loss_mask: 0.3915  mix_decode.d2.loss_dice: 0.5616  mix_decode.d3.loss_cls: 0.2150  mix_decode.d3.loss_mask: 0.3819  mix_decode.d3.loss_dice: 0.5705  mix_decode.d4.loss_cls: 0.1716  mix_decode.d4.loss_mask: 0.4024  mix_decode.d4.loss_dice: 0.5830  mix_decode.d5.loss_cls: 0.1847  mix_decode.d5.loss_mask: 0.4075  mix_decode.d5.loss_dice: 0.5744  mix_decode.d6.loss_cls: 0.1908  mix_decode.d6.loss_mask: 0.4119  mix_decode.d6.loss_dice: 0.5751  mix_decode.d7.loss_cls: 0.2149  mix_decode.d7.loss_mask: 0.4019  mix_decode.d7.loss_dice: 0.5808  mix_decode.d8.loss_cls: 0.1448  mix_decode.d8.loss_mask: 0.4254  mix_decode.d8.loss_dice: 0.6041
2025/03/27 15:14:00 - mmengine - INFO - Iter(train) [16150/20000]  base_lr: 2.2699e-05 lr: 2.2699e-05  eta: 1:00:24  time: 1.0907  data_time: 0.0242  memory: 10803  loss: 35.9027  decode.loss_cls: 0.1779  decode.loss_mask: 1.2292  decode.loss_dice: 1.1484  decode.d0.loss_cls: 0.2445  decode.d0.loss_mask: 1.2166  decode.d0.loss_dice: 1.2027  decode.d1.loss_cls: 0.1820  decode.d1.loss_mask: 1.1930  decode.d1.loss_dice: 1.1423  decode.d2.loss_cls: 0.1917  decode.d2.loss_mask: 1.1945  decode.d2.loss_dice: 1.1252  decode.d3.loss_cls: 0.2025  decode.d3.loss_mask: 1.2101  decode.d3.loss_dice: 1.1118  decode.d4.loss_cls: 0.2467  decode.d4.loss_mask: 1.2190  decode.d4.loss_dice: 1.1388  decode.d5.loss_cls: 0.2392  decode.d5.loss_mask: 1.2106  decode.d5.loss_dice: 1.1217  decode.d6.loss_cls: 0.1613  decode.d6.loss_mask: 1.2215  decode.d6.loss_dice: 1.1747  decode.d7.loss_cls: 0.1726  decode.d7.loss_mask: 1.2500  decode.d7.loss_dice: 1.1392  decode.d8.loss_cls: 0.2058  decode.d8.loss_mask: 1.2315  decode.d8.loss_dice: 1.1447  mix_decode.loss_cls: 0.0850  mix_decode.loss_mask: 0.4350  mix_decode.loss_dice: 0.4743  mix_decode.d0.loss_cls: 0.0837  mix_decode.d0.loss_mask: 0.4551  mix_decode.d0.loss_dice: 0.5317  mix_decode.d1.loss_cls: 0.0821  mix_decode.d1.loss_mask: 0.4470  mix_decode.d1.loss_dice: 0.4993  mix_decode.d2.loss_cls: 0.0733  mix_decode.d2.loss_mask: 0.4487  mix_decode.d2.loss_dice: 0.4831  mix_decode.d3.loss_cls: 0.0768  mix_decode.d3.loss_mask: 0.4745  mix_decode.d3.loss_dice: 0.5011  mix_decode.d4.loss_cls: 0.0814  mix_decode.d4.loss_mask: 0.4364  mix_decode.d4.loss_dice: 0.4946  mix_decode.d5.loss_cls: 0.0803  mix_decode.d5.loss_mask: 0.4423  mix_decode.d5.loss_dice: 0.4998  mix_decode.d6.loss_cls: 0.0840  mix_decode.d6.loss_mask: 0.4357  mix_decode.d6.loss_dice: 0.4829  mix_decode.d7.loss_cls: 0.0850  mix_decode.d7.loss_mask: 0.4583  mix_decode.d7.loss_dice: 0.4935  mix_decode.d8.loss_cls: 0.0780  mix_decode.d8.loss_mask: 0.4486  mix_decode.d8.loss_dice: 0.5016
2025/03/27 15:14:54 - mmengine - INFO - Iter(train) [16200/20000]  base_lr: 2.2434e-05 lr: 2.2434e-05  eta: 0:59:39  time: 1.0703  data_time: 0.0221  memory: 10803  loss: 32.2703  decode.loss_cls: 0.2887  decode.loss_mask: 0.9550  decode.loss_dice: 0.9901  decode.d0.loss_cls: 0.3338  decode.d0.loss_mask: 0.9362  decode.d0.loss_dice: 1.0915  decode.d1.loss_cls: 0.3036  decode.d1.loss_mask: 0.8968  decode.d1.loss_dice: 0.9527  decode.d2.loss_cls: 0.2800  decode.d2.loss_mask: 0.8989  decode.d2.loss_dice: 0.9453  decode.d3.loss_cls: 0.2917  decode.d3.loss_mask: 0.9050  decode.d3.loss_dice: 0.9438  decode.d4.loss_cls: 0.3025  decode.d4.loss_mask: 0.9051  decode.d4.loss_dice: 0.9632  decode.d5.loss_cls: 0.3215  decode.d5.loss_mask: 0.9061  decode.d5.loss_dice: 0.9505  decode.d6.loss_cls: 0.3146  decode.d6.loss_mask: 0.9001  decode.d6.loss_dice: 0.9607  decode.d7.loss_cls: 0.3273  decode.d7.loss_mask: 0.8974  decode.d7.loss_dice: 0.9391  decode.d8.loss_cls: 0.3099  decode.d8.loss_mask: 0.9173  decode.d8.loss_dice: 0.9780  mix_decode.loss_cls: 0.1351  mix_decode.loss_mask: 0.4217  mix_decode.loss_dice: 0.4658  mix_decode.d0.loss_cls: 0.1391  mix_decode.d0.loss_mask: 0.4218  mix_decode.d0.loss_dice: 0.5167  mix_decode.d1.loss_cls: 0.1896  mix_decode.d1.loss_mask: 0.3942  mix_decode.d1.loss_dice: 0.4772  mix_decode.d2.loss_cls: 0.1631  mix_decode.d2.loss_mask: 0.4084  mix_decode.d2.loss_dice: 0.4626  mix_decode.d3.loss_cls: 0.1658  mix_decode.d3.loss_mask: 0.3982  mix_decode.d3.loss_dice: 0.4415  mix_decode.d4.loss_cls: 0.1303  mix_decode.d4.loss_mask: 0.4214  mix_decode.d4.loss_dice: 0.4733  mix_decode.d5.loss_cls: 0.1409  mix_decode.d5.loss_mask: 0.4129  mix_decode.d5.loss_dice: 0.4676  mix_decode.d6.loss_cls: 0.1559  mix_decode.d6.loss_mask: 0.4160  mix_decode.d6.loss_dice: 0.4807  mix_decode.d7.loss_cls: 0.1369  mix_decode.d7.loss_mask: 0.4045  mix_decode.d7.loss_dice: 0.4736  mix_decode.d8.loss_cls: 0.1163  mix_decode.d8.loss_mask: 0.4646  mix_decode.d8.loss_dice: 0.4680
2025/03/27 15:15:48 - mmengine - INFO - Iter(train) [16250/20000]  base_lr: 2.2168e-05 lr: 2.2168e-05  eta: 0:58:53  time: 1.0868  data_time: 0.0237  memory: 10806  loss: 35.2245  decode.loss_cls: 0.1078  decode.loss_mask: 1.1904  decode.loss_dice: 1.1911  decode.d0.loss_cls: 0.1441  decode.d0.loss_mask: 1.1993  decode.d0.loss_dice: 1.2389  decode.d1.loss_cls: 0.1069  decode.d1.loss_mask: 1.2144  decode.d1.loss_dice: 1.2285  decode.d2.loss_cls: 0.0949  decode.d2.loss_mask: 1.1873  decode.d2.loss_dice: 1.2033  decode.d3.loss_cls: 0.1192  decode.d3.loss_mask: 1.1892  decode.d3.loss_dice: 1.1840  decode.d4.loss_cls: 0.0791  decode.d4.loss_mask: 1.1849  decode.d4.loss_dice: 1.2146  decode.d5.loss_cls: 0.1217  decode.d5.loss_mask: 1.1903  decode.d5.loss_dice: 1.2038  decode.d6.loss_cls: 0.1288  decode.d6.loss_mask: 1.1791  decode.d6.loss_dice: 1.2083  decode.d7.loss_cls: 0.1573  decode.d7.loss_mask: 1.1728  decode.d7.loss_dice: 1.1783  decode.d8.loss_cls: 0.0817  decode.d8.loss_mask: 1.1813  decode.d8.loss_dice: 1.2052  mix_decode.loss_cls: 0.1027  mix_decode.loss_mask: 0.3116  mix_decode.loss_dice: 0.5864  mix_decode.d0.loss_cls: 0.1018  mix_decode.d0.loss_mask: 0.3004  mix_decode.d0.loss_dice: 0.6368  mix_decode.d1.loss_cls: 0.1160  mix_decode.d1.loss_mask: 0.3055  mix_decode.d1.loss_dice: 0.5939  mix_decode.d2.loss_cls: 0.0955  mix_decode.d2.loss_mask: 0.3086  mix_decode.d2.loss_dice: 0.5983  mix_decode.d3.loss_cls: 0.1074  mix_decode.d3.loss_mask: 0.3099  mix_decode.d3.loss_dice: 0.5902  mix_decode.d4.loss_cls: 0.1193  mix_decode.d4.loss_mask: 0.3074  mix_decode.d4.loss_dice: 0.6018  mix_decode.d5.loss_cls: 0.0900  mix_decode.d5.loss_mask: 0.3079  mix_decode.d5.loss_dice: 0.6086  mix_decode.d6.loss_cls: 0.0787  mix_decode.d6.loss_mask: 0.3073  mix_decode.d6.loss_dice: 0.6153  mix_decode.d7.loss_cls: 0.0986  mix_decode.d7.loss_mask: 0.3111  mix_decode.d7.loss_dice: 0.6074  mix_decode.d8.loss_cls: 0.0909  mix_decode.d8.loss_mask: 0.3136  mix_decode.d8.loss_dice: 0.6151
2025/03/27 15:16:42 - mmengine - INFO - Iter(train) [16300/20000]  base_lr: 2.1902e-05 lr: 2.1902e-05  eta: 0:58:08  time: 1.0770  data_time: 0.0222  memory: 10807  loss: 38.6002  decode.loss_cls: 0.1890  decode.loss_mask: 1.1944  decode.loss_dice: 1.2872  decode.d0.loss_cls: 0.2005  decode.d0.loss_mask: 1.2167  decode.d0.loss_dice: 1.3101  decode.d1.loss_cls: 0.1126  decode.d1.loss_mask: 1.2071  decode.d1.loss_dice: 1.3107  decode.d2.loss_cls: 0.1202  decode.d2.loss_mask: 1.2001  decode.d2.loss_dice: 1.2955  decode.d3.loss_cls: 0.1681  decode.d3.loss_mask: 1.2127  decode.d3.loss_dice: 1.3073  decode.d4.loss_cls: 0.1813  decode.d4.loss_mask: 1.2218  decode.d4.loss_dice: 1.2992  decode.d5.loss_cls: 0.2332  decode.d5.loss_mask: 1.1868  decode.d5.loss_dice: 1.3104  decode.d6.loss_cls: 0.2087  decode.d6.loss_mask: 1.1917  decode.d6.loss_dice: 1.3358  decode.d7.loss_cls: 0.2324  decode.d7.loss_mask: 1.1634  decode.d7.loss_dice: 1.3187  decode.d8.loss_cls: 0.1388  decode.d8.loss_mask: 1.2162  decode.d8.loss_dice: 1.3299  mix_decode.loss_cls: 0.1270  mix_decode.loss_mask: 0.4854  mix_decode.loss_dice: 0.5601  mix_decode.d0.loss_cls: 0.0975  mix_decode.d0.loss_mask: 0.5072  mix_decode.d0.loss_dice: 0.6093  mix_decode.d1.loss_cls: 0.0814  mix_decode.d1.loss_mask: 0.5005  mix_decode.d1.loss_dice: 0.5846  mix_decode.d2.loss_cls: 0.0973  mix_decode.d2.loss_mask: 0.4961  mix_decode.d2.loss_dice: 0.5824  mix_decode.d3.loss_cls: 0.0932  mix_decode.d3.loss_mask: 0.4884  mix_decode.d3.loss_dice: 0.5715  mix_decode.d4.loss_cls: 0.1001  mix_decode.d4.loss_mask: 0.4894  mix_decode.d4.loss_dice: 0.5631  mix_decode.d5.loss_cls: 0.1070  mix_decode.d5.loss_mask: 0.4843  mix_decode.d5.loss_dice: 0.5750  mix_decode.d6.loss_cls: 0.1223  mix_decode.d6.loss_mask: 0.4745  mix_decode.d6.loss_dice: 0.5597  mix_decode.d7.loss_cls: 0.1159  mix_decode.d7.loss_mask: 0.4813  mix_decode.d7.loss_dice: 0.5667  mix_decode.d8.loss_cls: 0.1013  mix_decode.d8.loss_mask: 0.5008  mix_decode.d8.loss_dice: 0.5768
2025/03/27 15:17:36 - mmengine - INFO - Iter(train) [16350/20000]  base_lr: 2.1635e-05 lr: 2.1635e-05  eta: 0:57:22  time: 1.0765  data_time: 0.0219  memory: 10809  loss: 38.9710  decode.loss_cls: 0.2359  decode.loss_mask: 1.1195  decode.loss_dice: 1.3061  decode.d0.loss_cls: 0.2878  decode.d0.loss_mask: 1.1115  decode.d0.loss_dice: 1.3463  decode.d1.loss_cls: 0.3165  decode.d1.loss_mask: 1.0940  decode.d1.loss_dice: 1.2926  decode.d2.loss_cls: 0.3281  decode.d2.loss_mask: 1.0918  decode.d2.loss_dice: 1.2887  decode.d3.loss_cls: 0.3032  decode.d3.loss_mask: 1.1038  decode.d3.loss_dice: 1.2625  decode.d4.loss_cls: 0.2861  decode.d4.loss_mask: 1.1020  decode.d4.loss_dice: 1.2828  decode.d5.loss_cls: 0.3482  decode.d5.loss_mask: 1.0880  decode.d5.loss_dice: 1.2632  decode.d6.loss_cls: 0.2701  decode.d6.loss_mask: 1.0940  decode.d6.loss_dice: 1.3054  decode.d7.loss_cls: 0.3514  decode.d7.loss_mask: 1.0869  decode.d7.loss_dice: 1.2665  decode.d8.loss_cls: 0.3289  decode.d8.loss_mask: 1.0931  decode.d8.loss_dice: 1.2796  mix_decode.loss_cls: 0.1428  mix_decode.loss_mask: 0.4164  mix_decode.loss_dice: 0.6437  mix_decode.d0.loss_cls: 0.1288  mix_decode.d0.loss_mask: 0.4182  mix_decode.d0.loss_dice: 0.7064  mix_decode.d1.loss_cls: 0.1111  mix_decode.d1.loss_mask: 0.4209  mix_decode.d1.loss_dice: 0.6822  mix_decode.d2.loss_cls: 0.0975  mix_decode.d2.loss_mask: 0.4233  mix_decode.d2.loss_dice: 0.6792  mix_decode.d3.loss_cls: 0.1442  mix_decode.d3.loss_mask: 0.4246  mix_decode.d3.loss_dice: 0.6373  mix_decode.d4.loss_cls: 0.1436  mix_decode.d4.loss_mask: 0.4016  mix_decode.d4.loss_dice: 0.6505  mix_decode.d5.loss_cls: 0.1112  mix_decode.d5.loss_mask: 0.4248  mix_decode.d5.loss_dice: 0.6510  mix_decode.d6.loss_cls: 0.1093  mix_decode.d6.loss_mask: 0.4262  mix_decode.d6.loss_dice: 0.6485  mix_decode.d7.loss_cls: 0.1077  mix_decode.d7.loss_mask: 0.4180  mix_decode.d7.loss_dice: 0.6499  mix_decode.d8.loss_cls: 0.1556  mix_decode.d8.loss_mask: 0.4155  mix_decode.d8.loss_dice: 0.6467
2025/03/27 15:18:30 - mmengine - INFO - Iter(train) [16400/20000]  base_lr: 2.1368e-05 lr: 2.1368e-05  eta: 0:56:37  time: 1.0799  data_time: 0.0223  memory: 10804  loss: 36.0448  decode.loss_cls: 0.2117  decode.loss_mask: 1.1159  decode.loss_dice: 1.3014  decode.d0.loss_cls: 0.3197  decode.d0.loss_mask: 1.1119  decode.d0.loss_dice: 1.3509  decode.d1.loss_cls: 0.1979  decode.d1.loss_mask: 1.1194  decode.d1.loss_dice: 1.3593  decode.d2.loss_cls: 0.2353  decode.d2.loss_mask: 1.1155  decode.d2.loss_dice: 1.3193  decode.d3.loss_cls: 0.2000  decode.d3.loss_mask: 1.1383  decode.d3.loss_dice: 1.3454  decode.d4.loss_cls: 0.2005  decode.d4.loss_mask: 1.1281  decode.d4.loss_dice: 1.3307  decode.d5.loss_cls: 0.2006  decode.d5.loss_mask: 1.1215  decode.d5.loss_dice: 1.3240  decode.d6.loss_cls: 0.2179  decode.d6.loss_mask: 1.1201  decode.d6.loss_dice: 1.3302  decode.d7.loss_cls: 0.2062  decode.d7.loss_mask: 1.1172  decode.d7.loss_dice: 1.3075  decode.d8.loss_cls: 0.2128  decode.d8.loss_mask: 1.1197  decode.d8.loss_dice: 1.3020  mix_decode.loss_cls: 0.0646  mix_decode.loss_mask: 0.3371  mix_decode.loss_dice: 0.5248  mix_decode.d0.loss_cls: 0.0750  mix_decode.d0.loss_mask: 0.3480  mix_decode.d0.loss_dice: 0.5730  mix_decode.d1.loss_cls: 0.0694  mix_decode.d1.loss_mask: 0.3365  mix_decode.d1.loss_dice: 0.5318  mix_decode.d2.loss_cls: 0.1013  mix_decode.d2.loss_mask: 0.3270  mix_decode.d2.loss_dice: 0.5159  mix_decode.d3.loss_cls: 0.0585  mix_decode.d3.loss_mask: 0.3298  mix_decode.d3.loss_dice: 0.5136  mix_decode.d4.loss_cls: 0.0669  mix_decode.d4.loss_mask: 0.3285  mix_decode.d4.loss_dice: 0.5374  mix_decode.d5.loss_cls: 0.0719  mix_decode.d5.loss_mask: 0.3331  mix_decode.d5.loss_dice: 0.5290  mix_decode.d6.loss_cls: 0.0647  mix_decode.d6.loss_mask: 0.3354  mix_decode.d6.loss_dice: 0.5257  mix_decode.d7.loss_cls: 0.0639  mix_decode.d7.loss_mask: 0.3373  mix_decode.d7.loss_dice: 0.5371  mix_decode.d8.loss_cls: 0.0617  mix_decode.d8.loss_mask: 0.3356  mix_decode.d8.loss_dice: 0.5294
2025/03/27 15:19:24 - mmengine - INFO - Iter(train) [16450/20000]  base_lr: 2.1101e-05 lr: 2.1101e-05  eta: 0:55:51  time: 1.0784  data_time: 0.0226  memory: 10803  loss: 37.7278  decode.loss_cls: 0.3119  decode.loss_mask: 1.1985  decode.loss_dice: 1.2817  decode.d0.loss_cls: 0.3353  decode.d0.loss_mask: 1.2107  decode.d0.loss_dice: 1.2659  decode.d1.loss_cls: 0.3152  decode.d1.loss_mask: 1.1890  decode.d1.loss_dice: 1.2235  decode.d2.loss_cls: 0.3465  decode.d2.loss_mask: 1.1388  decode.d2.loss_dice: 1.2170  decode.d3.loss_cls: 0.3347  decode.d3.loss_mask: 1.1624  decode.d3.loss_dice: 1.2305  decode.d4.loss_cls: 0.3056  decode.d4.loss_mask: 1.1494  decode.d4.loss_dice: 1.2478  decode.d5.loss_cls: 0.3667  decode.d5.loss_mask: 1.1327  decode.d5.loss_dice: 1.2199  decode.d6.loss_cls: 0.2960  decode.d6.loss_mask: 1.2238  decode.d6.loss_dice: 1.2967  decode.d7.loss_cls: 0.3245  decode.d7.loss_mask: 1.1651  decode.d7.loss_dice: 1.2403  decode.d8.loss_cls: 0.3572  decode.d8.loss_mask: 1.1588  decode.d8.loss_dice: 1.2440  mix_decode.loss_cls: 0.1065  mix_decode.loss_mask: 0.3932  mix_decode.loss_dice: 0.5440  mix_decode.d0.loss_cls: 0.0838  mix_decode.d0.loss_mask: 0.3816  mix_decode.d0.loss_dice: 0.5990  mix_decode.d1.loss_cls: 0.1315  mix_decode.d1.loss_mask: 0.3720  mix_decode.d1.loss_dice: 0.5576  mix_decode.d2.loss_cls: 0.0982  mix_decode.d2.loss_mask: 0.3773  mix_decode.d2.loss_dice: 0.5475  mix_decode.d3.loss_cls: 0.0860  mix_decode.d3.loss_mask: 0.3774  mix_decode.d3.loss_dice: 0.5476  mix_decode.d4.loss_cls: 0.0759  mix_decode.d4.loss_mask: 0.3654  mix_decode.d4.loss_dice: 0.5474  mix_decode.d5.loss_cls: 0.0770  mix_decode.d5.loss_mask: 0.3770  mix_decode.d5.loss_dice: 0.5457  mix_decode.d6.loss_cls: 0.0753  mix_decode.d6.loss_mask: 0.3836  mix_decode.d6.loss_dice: 0.5501  mix_decode.d7.loss_cls: 0.0829  mix_decode.d7.loss_mask: 0.3904  mix_decode.d7.loss_dice: 0.5462  mix_decode.d8.loss_cls: 0.0748  mix_decode.d8.loss_mask: 0.3898  mix_decode.d8.loss_dice: 0.5529
2025/03/27 15:20:19 - mmengine - INFO - Iter(train) [16500/20000]  base_lr: 2.0833e-05 lr: 2.0833e-05  eta: 0:55:05  time: 1.1249  data_time: 0.0270  memory: 10808  loss: 38.9132  decode.loss_cls: 0.3440  decode.loss_mask: 1.0948  decode.loss_dice: 1.3921  decode.d0.loss_cls: 0.3682  decode.d0.loss_mask: 1.0748  decode.d0.loss_dice: 1.4384  decode.d1.loss_cls: 0.4567  decode.d1.loss_mask: 0.9980  decode.d1.loss_dice: 1.2980  decode.d2.loss_cls: 0.4898  decode.d2.loss_mask: 1.0006  decode.d2.loss_dice: 1.2951  decode.d3.loss_cls: 0.4237  decode.d3.loss_mask: 1.0162  decode.d3.loss_dice: 1.3225  decode.d4.loss_cls: 0.3536  decode.d4.loss_mask: 1.0440  decode.d4.loss_dice: 1.3443  decode.d5.loss_cls: 0.4324  decode.d5.loss_mask: 1.0411  decode.d5.loss_dice: 1.3001  decode.d6.loss_cls: 0.4176  decode.d6.loss_mask: 1.0518  decode.d6.loss_dice: 1.3195  decode.d7.loss_cls: 0.4018  decode.d7.loss_mask: 1.0368  decode.d7.loss_dice: 1.3508  decode.d8.loss_cls: 0.3391  decode.d8.loss_mask: 1.0379  decode.d8.loss_dice: 1.3505  mix_decode.loss_cls: 0.1764  mix_decode.loss_mask: 0.3847  mix_decode.loss_dice: 0.5580  mix_decode.d0.loss_cls: 0.1440  mix_decode.d0.loss_mask: 0.3850  mix_decode.d0.loss_dice: 0.6324  mix_decode.d1.loss_cls: 0.1506  mix_decode.d1.loss_mask: 0.3786  mix_decode.d1.loss_dice: 0.5670  mix_decode.d2.loss_cls: 0.1341  mix_decode.d2.loss_mask: 0.3889  mix_decode.d2.loss_dice: 0.5647  mix_decode.d3.loss_cls: 0.1707  mix_decode.d3.loss_mask: 0.3931  mix_decode.d3.loss_dice: 0.5490  mix_decode.d4.loss_cls: 0.1122  mix_decode.d4.loss_mask: 0.4072  mix_decode.d4.loss_dice: 0.5819  mix_decode.d5.loss_cls: 0.1262  mix_decode.d5.loss_mask: 0.4010  mix_decode.d5.loss_dice: 0.5613  mix_decode.d6.loss_cls: 0.1551  mix_decode.d6.loss_mask: 0.3959  mix_decode.d6.loss_dice: 0.5455  mix_decode.d7.loss_cls: 0.1841  mix_decode.d7.loss_mask: 0.3892  mix_decode.d7.loss_dice: 0.5436  mix_decode.d8.loss_cls: 0.1320  mix_decode.d8.loss_mask: 0.3969  mix_decode.d8.loss_dice: 0.5697
2025/03/27 15:21:13 - mmengine - INFO - Iter(train) [16550/20000]  base_lr: 2.0565e-05 lr: 2.0565e-05  eta: 0:54:20  time: 1.0807  data_time: 0.0223  memory: 10809  loss: 37.9256  decode.loss_cls: 0.2659  decode.loss_mask: 1.2065  decode.loss_dice: 1.1381  decode.d0.loss_cls: 0.2561  decode.d0.loss_mask: 1.2257  decode.d0.loss_dice: 1.2259  decode.d1.loss_cls: 0.2349  decode.d1.loss_mask: 1.2195  decode.d1.loss_dice: 1.1981  decode.d2.loss_cls: 0.2105  decode.d2.loss_mask: 1.2289  decode.d2.loss_dice: 1.2102  decode.d3.loss_cls: 0.2666  decode.d3.loss_mask: 1.1964  decode.d3.loss_dice: 1.1921  decode.d4.loss_cls: 0.2841  decode.d4.loss_mask: 1.2356  decode.d4.loss_dice: 1.1199  decode.d5.loss_cls: 0.3018  decode.d5.loss_mask: 1.1736  decode.d5.loss_dice: 1.1734  decode.d6.loss_cls: 0.2329  decode.d6.loss_mask: 1.2273  decode.d6.loss_dice: 1.1532  decode.d7.loss_cls: 0.2679  decode.d7.loss_mask: 1.2532  decode.d7.loss_dice: 1.1815  decode.d8.loss_cls: 0.1239  decode.d8.loss_mask: 1.3544  decode.d8.loss_dice: 1.2474  mix_decode.loss_cls: 0.0879  mix_decode.loss_mask: 0.4906  mix_decode.loss_dice: 0.5390  mix_decode.d0.loss_cls: 0.1108  mix_decode.d0.loss_mask: 0.4759  mix_decode.d0.loss_dice: 0.5619  mix_decode.d1.loss_cls: 0.0821  mix_decode.d1.loss_mask: 0.4988  mix_decode.d1.loss_dice: 0.5465  mix_decode.d2.loss_cls: 0.1118  mix_decode.d2.loss_mask: 0.4992  mix_decode.d2.loss_dice: 0.5489  mix_decode.d3.loss_cls: 0.0779  mix_decode.d3.loss_mask: 0.5112  mix_decode.d3.loss_dice: 0.5583  mix_decode.d4.loss_cls: 0.0687  mix_decode.d4.loss_mask: 0.5027  mix_decode.d4.loss_dice: 0.5527  mix_decode.d5.loss_cls: 0.0934  mix_decode.d5.loss_mask: 0.5010  mix_decode.d5.loss_dice: 0.5466  mix_decode.d6.loss_cls: 0.0950  mix_decode.d6.loss_mask: 0.4848  mix_decode.d6.loss_dice: 0.5299  mix_decode.d7.loss_cls: 0.0941  mix_decode.d7.loss_mask: 0.4954  mix_decode.d7.loss_dice: 0.5320  mix_decode.d8.loss_cls: 0.0902  mix_decode.d8.loss_mask: 0.4845  mix_decode.d8.loss_dice: 0.5483
2025/03/27 15:22:09 - mmengine - INFO - Iter(train) [16600/20000]  base_lr: 2.0297e-05 lr: 2.0297e-05  eta: 0:53:34  time: 1.0787  data_time: 0.0219  memory: 10804  loss: 32.2989  decode.loss_cls: 0.1046  decode.loss_mask: 0.9139  decode.loss_dice: 1.0532  decode.d0.loss_cls: 0.1928  decode.d0.loss_mask: 0.9647  decode.d0.loss_dice: 1.0844  decode.d1.loss_cls: 0.1810  decode.d1.loss_mask: 0.9314  decode.d1.loss_dice: 1.0464  decode.d2.loss_cls: 0.1100  decode.d2.loss_mask: 0.9577  decode.d2.loss_dice: 1.0520  decode.d3.loss_cls: 0.1616  decode.d3.loss_mask: 0.9193  decode.d3.loss_dice: 1.0392  decode.d4.loss_cls: 0.1013  decode.d4.loss_mask: 0.9654  decode.d4.loss_dice: 1.0765  decode.d5.loss_cls: 0.1758  decode.d5.loss_mask: 0.9057  decode.d5.loss_dice: 1.0336  decode.d6.loss_cls: 0.1630  decode.d6.loss_mask: 0.9009  decode.d6.loss_dice: 1.0141  decode.d7.loss_cls: 0.1909  decode.d7.loss_mask: 0.9074  decode.d7.loss_dice: 1.0262  decode.d8.loss_cls: 0.1520  decode.d8.loss_mask: 0.9083  decode.d8.loss_dice: 1.0480  mix_decode.loss_cls: 0.0560  mix_decode.loss_mask: 0.4302  mix_decode.loss_dice: 0.6086  mix_decode.d0.loss_cls: 0.0476  mix_decode.d0.loss_mask: 0.4236  mix_decode.d0.loss_dice: 0.6398  mix_decode.d1.loss_cls: 0.0636  mix_decode.d1.loss_mask: 0.4256  mix_decode.d1.loss_dice: 0.6026  mix_decode.d2.loss_cls: 0.0905  mix_decode.d2.loss_mask: 0.4169  mix_decode.d2.loss_dice: 0.5900  mix_decode.d3.loss_cls: 0.1042  mix_decode.d3.loss_mask: 0.4216  mix_decode.d3.loss_dice: 0.5812  mix_decode.d4.loss_cls: 0.1106  mix_decode.d4.loss_mask: 0.4134  mix_decode.d4.loss_dice: 0.5889  mix_decode.d5.loss_cls: 0.0897  mix_decode.d5.loss_mask: 0.4150  mix_decode.d5.loss_dice: 0.5915  mix_decode.d6.loss_cls: 0.0799  mix_decode.d6.loss_mask: 0.4203  mix_decode.d6.loss_dice: 0.6110  mix_decode.d7.loss_cls: 0.0749  mix_decode.d7.loss_mask: 0.4203  mix_decode.d7.loss_dice: 0.5965  mix_decode.d8.loss_cls: 0.0591  mix_decode.d8.loss_mask: 0.4293  mix_decode.d8.loss_dice: 0.6151
2025/03/27 15:23:03 - mmengine - INFO - Iter(train) [16650/20000]  base_lr: 2.0028e-05 lr: 2.0028e-05  eta: 0:52:48  time: 1.0757  data_time: 0.0222  memory: 10810  loss: 27.7019  decode.loss_cls: 0.2237  decode.loss_mask: 0.8720  decode.loss_dice: 0.8522  decode.d0.loss_cls: 0.2964  decode.d0.loss_mask: 0.8916  decode.d0.loss_dice: 0.8988  decode.d1.loss_cls: 0.2452  decode.d1.loss_mask: 0.8696  decode.d1.loss_dice: 0.8651  decode.d2.loss_cls: 0.2417  decode.d2.loss_mask: 0.8721  decode.d2.loss_dice: 0.8443  decode.d3.loss_cls: 0.2334  decode.d3.loss_mask: 0.9086  decode.d3.loss_dice: 0.8489  decode.d4.loss_cls: 0.2222  decode.d4.loss_mask: 0.8818  decode.d4.loss_dice: 0.8568  decode.d5.loss_cls: 0.2208  decode.d5.loss_mask: 0.8824  decode.d5.loss_dice: 0.8737  decode.d6.loss_cls: 0.2456  decode.d6.loss_mask: 0.8585  decode.d6.loss_dice: 0.8381  decode.d7.loss_cls: 0.2318  decode.d7.loss_mask: 0.8792  decode.d7.loss_dice: 0.8505  decode.d8.loss_cls: 0.1851  decode.d8.loss_mask: 0.8705  decode.d8.loss_dice: 0.8529  mix_decode.loss_cls: 0.0458  mix_decode.loss_mask: 0.3160  mix_decode.loss_dice: 0.4242  mix_decode.d0.loss_cls: 0.0708  mix_decode.d0.loss_mask: 0.3129  mix_decode.d0.loss_dice: 0.4562  mix_decode.d1.loss_cls: 0.0769  mix_decode.d1.loss_mask: 0.3116  mix_decode.d1.loss_dice: 0.4191  mix_decode.d2.loss_cls: 0.0700  mix_decode.d2.loss_mask: 0.3154  mix_decode.d2.loss_dice: 0.4170  mix_decode.d3.loss_cls: 0.0752  mix_decode.d3.loss_mask: 0.3122  mix_decode.d3.loss_dice: 0.4170  mix_decode.d4.loss_cls: 0.0852  mix_decode.d4.loss_mask: 0.3103  mix_decode.d4.loss_dice: 0.4162  mix_decode.d5.loss_cls: 0.0617  mix_decode.d5.loss_mask: 0.3151  mix_decode.d5.loss_dice: 0.4203  mix_decode.d6.loss_cls: 0.0371  mix_decode.d6.loss_mask: 0.3115  mix_decode.d6.loss_dice: 0.4315  mix_decode.d7.loss_cls: 0.0408  mix_decode.d7.loss_mask: 0.3137  mix_decode.d7.loss_dice: 0.4164  mix_decode.d8.loss_cls: 0.0405  mix_decode.d8.loss_mask: 0.3157  mix_decode.d8.loss_dice: 0.4319
2025/03/27 15:23:57 - mmengine - INFO - Iter(train) [16700/20000]  base_lr: 1.9759e-05 lr: 1.9759e-05  eta: 0:52:02  time: 1.0754  data_time: 0.0218  memory: 10814  loss: 34.3349  decode.loss_cls: 0.2055  decode.loss_mask: 0.9606  decode.loss_dice: 1.3232  decode.d0.loss_cls: 0.2790  decode.d0.loss_mask: 0.9944  decode.d0.loss_dice: 1.3090  decode.d1.loss_cls: 0.2703  decode.d1.loss_mask: 0.9414  decode.d1.loss_dice: 1.2316  decode.d2.loss_cls: 0.2417  decode.d2.loss_mask: 0.9620  decode.d2.loss_dice: 1.2877  decode.d3.loss_cls: 0.2920  decode.d3.loss_mask: 0.9391  decode.d3.loss_dice: 1.2493  decode.d4.loss_cls: 0.2349  decode.d4.loss_mask: 0.9389  decode.d4.loss_dice: 1.2960  decode.d5.loss_cls: 0.3121  decode.d5.loss_mask: 0.9524  decode.d5.loss_dice: 1.2486  decode.d6.loss_cls: 0.2058  decode.d6.loss_mask: 0.9572  decode.d6.loss_dice: 1.3249  decode.d7.loss_cls: 0.1878  decode.d7.loss_mask: 0.9543  decode.d7.loss_dice: 1.3312  decode.d8.loss_cls: 0.2286  decode.d8.loss_mask: 0.9677  decode.d8.loss_dice: 1.2973  mix_decode.loss_cls: 0.1450  mix_decode.loss_mask: 0.3706  mix_decode.loss_dice: 0.4415  mix_decode.d0.loss_cls: 0.1892  mix_decode.d0.loss_mask: 0.3570  mix_decode.d0.loss_dice: 0.4526  mix_decode.d1.loss_cls: 0.1363  mix_decode.d1.loss_mask: 0.3482  mix_decode.d1.loss_dice: 0.4309  mix_decode.d2.loss_cls: 0.1407  mix_decode.d2.loss_mask: 0.3519  mix_decode.d2.loss_dice: 0.4261  mix_decode.d3.loss_cls: 0.1484  mix_decode.d3.loss_mask: 0.3489  mix_decode.d3.loss_dice: 0.4275  mix_decode.d4.loss_cls: 0.1177  mix_decode.d4.loss_mask: 0.3511  mix_decode.d4.loss_dice: 0.4422  mix_decode.d5.loss_cls: 0.1494  mix_decode.d5.loss_mask: 0.3532  mix_decode.d5.loss_dice: 0.4429  mix_decode.d6.loss_cls: 0.1613  mix_decode.d6.loss_mask: 0.3545  mix_decode.d6.loss_dice: 0.4353  mix_decode.d7.loss_cls: 0.1397  mix_decode.d7.loss_mask: 0.3750  mix_decode.d7.loss_dice: 0.4470  mix_decode.d8.loss_cls: 0.1340  mix_decode.d8.loss_mask: 0.3527  mix_decode.d8.loss_dice: 0.4396
2025/03/27 15:24:51 - mmengine - INFO - Iter(train) [16750/20000]  base_lr: 1.9489e-05 lr: 1.9489e-05  eta: 0:51:16  time: 1.0704  data_time: 0.0218  memory: 10809  loss: 36.2284  decode.loss_cls: 0.3229  decode.loss_mask: 0.9934  decode.loss_dice: 1.1849  decode.d0.loss_cls: 0.4173  decode.d0.loss_mask: 0.9697  decode.d0.loss_dice: 1.2186  decode.d1.loss_cls: 0.3636  decode.d1.loss_mask: 0.9928  decode.d1.loss_dice: 1.1923  decode.d2.loss_cls: 0.3449  decode.d2.loss_mask: 1.0023  decode.d2.loss_dice: 1.1577  decode.d3.loss_cls: 0.4199  decode.d3.loss_mask: 1.0320  decode.d3.loss_dice: 1.2147  decode.d4.loss_cls: 0.3933  decode.d4.loss_mask: 1.0178  decode.d4.loss_dice: 1.2212  decode.d5.loss_cls: 0.4153  decode.d5.loss_mask: 1.0163  decode.d5.loss_dice: 1.2281  decode.d6.loss_cls: 0.3776  decode.d6.loss_mask: 1.0294  decode.d6.loss_dice: 1.2277  decode.d7.loss_cls: 0.3173  decode.d7.loss_mask: 0.9732  decode.d7.loss_dice: 1.2054  decode.d8.loss_cls: 0.4124  decode.d8.loss_mask: 1.0181  decode.d8.loss_dice: 1.2120  mix_decode.loss_cls: 0.1367  mix_decode.loss_mask: 0.3910  mix_decode.loss_dice: 0.4933  mix_decode.d0.loss_cls: 0.1906  mix_decode.d0.loss_mask: 0.3691  mix_decode.d0.loss_dice: 0.5300  mix_decode.d1.loss_cls: 0.1290  mix_decode.d1.loss_mask: 0.3755  mix_decode.d1.loss_dice: 0.5025  mix_decode.d2.loss_cls: 0.1541  mix_decode.d2.loss_mask: 0.3828  mix_decode.d2.loss_dice: 0.4869  mix_decode.d3.loss_cls: 0.1994  mix_decode.d3.loss_mask: 0.3745  mix_decode.d3.loss_dice: 0.4840  mix_decode.d4.loss_cls: 0.1823  mix_decode.d4.loss_mask: 0.3821  mix_decode.d4.loss_dice: 0.4866  mix_decode.d5.loss_cls: 0.1676  mix_decode.d5.loss_mask: 0.3739  mix_decode.d5.loss_dice: 0.4829  mix_decode.d6.loss_cls: 0.1278  mix_decode.d6.loss_mask: 0.3732  mix_decode.d6.loss_dice: 0.5134  mix_decode.d7.loss_cls: 0.1565  mix_decode.d7.loss_mask: 0.3811  mix_decode.d7.loss_dice: 0.5057  mix_decode.d8.loss_cls: 0.1217  mix_decode.d8.loss_mask: 0.3824  mix_decode.d8.loss_dice: 0.5000
2025/03/27 15:25:45 - mmengine - INFO - Iter(train) [16800/20000]  base_lr: 1.9219e-05 lr: 1.9219e-05  eta: 0:50:30  time: 1.0760  data_time: 0.0226  memory: 10808  loss: 30.7961  decode.loss_cls: 0.0925  decode.loss_mask: 0.9198  decode.loss_dice: 1.0498  decode.d0.loss_cls: 0.1907  decode.d0.loss_mask: 0.9120  decode.d0.loss_dice: 1.1013  decode.d1.loss_cls: 0.1540  decode.d1.loss_mask: 0.9028  decode.d1.loss_dice: 1.0366  decode.d2.loss_cls: 0.1444  decode.d2.loss_mask: 0.9254  decode.d2.loss_dice: 1.0433  decode.d3.loss_cls: 0.1298  decode.d3.loss_mask: 0.9224  decode.d3.loss_dice: 1.0645  decode.d4.loss_cls: 0.1487  decode.d4.loss_mask: 0.9160  decode.d4.loss_dice: 1.0240  decode.d5.loss_cls: 0.0897  decode.d5.loss_mask: 0.9321  decode.d5.loss_dice: 1.0513  decode.d6.loss_cls: 0.0843  decode.d6.loss_mask: 0.9331  decode.d6.loss_dice: 1.0982  decode.d7.loss_cls: 0.1335  decode.d7.loss_mask: 0.9254  decode.d7.loss_dice: 1.0465  decode.d8.loss_cls: 0.0823  decode.d8.loss_mask: 0.9219  decode.d8.loss_dice: 1.0646  mix_decode.loss_cls: 0.0669  mix_decode.loss_mask: 0.4033  mix_decode.loss_dice: 0.4882  mix_decode.d0.loss_cls: 0.0638  mix_decode.d0.loss_mask: 0.3875  mix_decode.d0.loss_dice: 0.5598  mix_decode.d1.loss_cls: 0.1024  mix_decode.d1.loss_mask: 0.3951  mix_decode.d1.loss_dice: 0.4928  mix_decode.d2.loss_cls: 0.1025  mix_decode.d2.loss_mask: 0.3940  mix_decode.d2.loss_dice: 0.4848  mix_decode.d3.loss_cls: 0.0841  mix_decode.d3.loss_mask: 0.4039  mix_decode.d3.loss_dice: 0.4864  mix_decode.d4.loss_cls: 0.0838  mix_decode.d4.loss_mask: 0.3949  mix_decode.d4.loss_dice: 0.4930  mix_decode.d5.loss_cls: 0.0881  mix_decode.d5.loss_mask: 0.4062  mix_decode.d5.loss_dice: 0.4825  mix_decode.d6.loss_cls: 0.0763  mix_decode.d6.loss_mask: 0.3997  mix_decode.d6.loss_dice: 0.4987  mix_decode.d7.loss_cls: 0.0619  mix_decode.d7.loss_mask: 0.3958  mix_decode.d7.loss_dice: 0.4928  mix_decode.d8.loss_cls: 0.0643  mix_decode.d8.loss_mask: 0.4046  mix_decode.d8.loss_dice: 0.4973
2025/03/27 15:26:39 - mmengine - INFO - Iter(train) [16850/20000]  base_lr: 1.8948e-05 lr: 1.8948e-05  eta: 0:49:44  time: 1.0848  data_time: 0.0236  memory: 10808  loss: 33.5612  decode.loss_cls: 0.1023  decode.loss_mask: 1.0837  decode.loss_dice: 1.1272  decode.d0.loss_cls: 0.2271  decode.d0.loss_mask: 1.0882  decode.d0.loss_dice: 1.1473  decode.d1.loss_cls: 0.1793  decode.d1.loss_mask: 1.0813  decode.d1.loss_dice: 1.1397  decode.d2.loss_cls: 0.1053  decode.d2.loss_mask: 1.0970  decode.d2.loss_dice: 1.1456  decode.d3.loss_cls: 0.1043  decode.d3.loss_mask: 1.0845  decode.d3.loss_dice: 1.1456  decode.d4.loss_cls: 0.1140  decode.d4.loss_mask: 1.0851  decode.d4.loss_dice: 1.1274  decode.d5.loss_cls: 0.1279  decode.d5.loss_mask: 1.0814  decode.d5.loss_dice: 1.1285  decode.d6.loss_cls: 0.1217  decode.d6.loss_mask: 1.0837  decode.d6.loss_dice: 1.1321  decode.d7.loss_cls: 0.1528  decode.d7.loss_mask: 1.0794  decode.d7.loss_dice: 1.1416  decode.d8.loss_cls: 0.1256  decode.d8.loss_mask: 1.0756  decode.d8.loss_dice: 1.1095  mix_decode.loss_cls: 0.0764  mix_decode.loss_mask: 0.4027  mix_decode.loss_dice: 0.5316  mix_decode.d0.loss_cls: 0.0775  mix_decode.d0.loss_mask: 0.3761  mix_decode.d0.loss_dice: 0.5796  mix_decode.d1.loss_cls: 0.0896  mix_decode.d1.loss_mask: 0.3674  mix_decode.d1.loss_dice: 0.5443  mix_decode.d2.loss_cls: 0.1012  mix_decode.d2.loss_mask: 0.3693  mix_decode.d2.loss_dice: 0.5237  mix_decode.d3.loss_cls: 0.0997  mix_decode.d3.loss_mask: 0.3637  mix_decode.d3.loss_dice: 0.5181  mix_decode.d4.loss_cls: 0.0773  mix_decode.d4.loss_mask: 0.3707  mix_decode.d4.loss_dice: 0.5392  mix_decode.d5.loss_cls: 0.0819  mix_decode.d5.loss_mask: 0.3655  mix_decode.d5.loss_dice: 0.5307  mix_decode.d6.loss_cls: 0.0958  mix_decode.d6.loss_mask: 0.3756  mix_decode.d6.loss_dice: 0.5343  mix_decode.d7.loss_cls: 0.0871  mix_decode.d7.loss_mask: 0.3731  mix_decode.d7.loss_dice: 0.5434  mix_decode.d8.loss_cls: 0.0815  mix_decode.d8.loss_mask: 0.3943  mix_decode.d8.loss_dice: 0.5453
2025/03/27 15:27:33 - mmengine - INFO - Iter(train) [16900/20000]  base_lr: 1.8677e-05 lr: 1.8677e-05  eta: 0:48:58  time: 1.0757  data_time: 0.0222  memory: 10806  loss: 37.9187  decode.loss_cls: 0.1650  decode.loss_mask: 1.1323  decode.loss_dice: 1.2591  decode.d0.loss_cls: 0.2262  decode.d0.loss_mask: 1.1732  decode.d0.loss_dice: 1.3202  decode.d1.loss_cls: 0.2080  decode.d1.loss_mask: 1.1729  decode.d1.loss_dice: 1.2568  decode.d2.loss_cls: 0.1488  decode.d2.loss_mask: 1.1419  decode.d2.loss_dice: 1.2874  decode.d3.loss_cls: 0.2754  decode.d3.loss_mask: 1.1324  decode.d3.loss_dice: 1.2563  decode.d4.loss_cls: 0.1944  decode.d4.loss_mask: 1.1276  decode.d4.loss_dice: 1.2400  decode.d5.loss_cls: 0.2118  decode.d5.loss_mask: 1.1264  decode.d5.loss_dice: 1.2571  decode.d6.loss_cls: 0.1977  decode.d6.loss_mask: 1.1337  decode.d6.loss_dice: 1.2631  decode.d7.loss_cls: 0.1805  decode.d7.loss_mask: 1.1352  decode.d7.loss_dice: 1.2650  decode.d8.loss_cls: 0.1856  decode.d8.loss_mask: 1.1324  decode.d8.loss_dice: 1.2829  mix_decode.loss_cls: 0.1910  mix_decode.loss_mask: 0.4100  mix_decode.loss_dice: 0.5682  mix_decode.d0.loss_cls: 0.1348  mix_decode.d0.loss_mask: 0.4318  mix_decode.d0.loss_dice: 0.6462  mix_decode.d1.loss_cls: 0.1541  mix_decode.d1.loss_mask: 0.4448  mix_decode.d1.loss_dice: 0.5982  mix_decode.d2.loss_cls: 0.1695  mix_decode.d2.loss_mask: 0.4300  mix_decode.d2.loss_dice: 0.5882  mix_decode.d3.loss_cls: 0.1685  mix_decode.d3.loss_mask: 0.4291  mix_decode.d3.loss_dice: 0.5757  mix_decode.d4.loss_cls: 0.1797  mix_decode.d4.loss_mask: 0.4160  mix_decode.d4.loss_dice: 0.5849  mix_decode.d5.loss_cls: 0.1607  mix_decode.d5.loss_mask: 0.4327  mix_decode.d5.loss_dice: 0.5764  mix_decode.d6.loss_cls: 0.1771  mix_decode.d6.loss_mask: 0.4367  mix_decode.d6.loss_dice: 0.5706  mix_decode.d7.loss_cls: 0.1561  mix_decode.d7.loss_mask: 0.4371  mix_decode.d7.loss_dice: 0.5757  mix_decode.d8.loss_cls: 0.1516  mix_decode.d8.loss_mask: 0.4425  mix_decode.d8.loss_dice: 0.5911
2025/03/27 15:28:26 - mmengine - INFO - Iter(train) [16950/20000]  base_lr: 1.8406e-05 lr: 1.8406e-05  eta: 0:48:12  time: 1.0743  data_time: 0.0225  memory: 10799  loss: 36.4761  decode.loss_cls: 0.3543  decode.loss_mask: 1.2572  decode.loss_dice: 1.1526  decode.d0.loss_cls: 0.3890  decode.d0.loss_mask: 1.3135  decode.d0.loss_dice: 1.2254  decode.d1.loss_cls: 0.2741  decode.d1.loss_mask: 1.3216  decode.d1.loss_dice: 1.2207  decode.d2.loss_cls: 0.2923  decode.d2.loss_mask: 1.2760  decode.d2.loss_dice: 1.2096  decode.d3.loss_cls: 0.3322  decode.d3.loss_mask: 1.2828  decode.d3.loss_dice: 1.2259  decode.d4.loss_cls: 0.3036  decode.d4.loss_mask: 1.2962  decode.d4.loss_dice: 1.1761  decode.d5.loss_cls: 0.3095  decode.d5.loss_mask: 1.3296  decode.d5.loss_dice: 1.1702  decode.d6.loss_cls: 0.2782  decode.d6.loss_mask: 1.3403  decode.d6.loss_dice: 1.2110  decode.d7.loss_cls: 0.3365  decode.d7.loss_mask: 1.2616  decode.d7.loss_dice: 1.1542  decode.d8.loss_cls: 0.2787  decode.d8.loss_mask: 1.2723  decode.d8.loss_dice: 1.1818  mix_decode.loss_cls: 0.0257  mix_decode.loss_mask: 0.3323  mix_decode.loss_dice: 0.4709  mix_decode.d0.loss_cls: 0.0524  mix_decode.d0.loss_mask: 0.3441  mix_decode.d0.loss_dice: 0.5140  mix_decode.d1.loss_cls: 0.0586  mix_decode.d1.loss_mask: 0.3319  mix_decode.d1.loss_dice: 0.4771  mix_decode.d2.loss_cls: 0.0507  mix_decode.d2.loss_mask: 0.3257  mix_decode.d2.loss_dice: 0.4443  mix_decode.d3.loss_cls: 0.0790  mix_decode.d3.loss_mask: 0.3254  mix_decode.d3.loss_dice: 0.4279  mix_decode.d4.loss_cls: 0.0599  mix_decode.d4.loss_mask: 0.3266  mix_decode.d4.loss_dice: 0.4561  mix_decode.d5.loss_cls: 0.0807  mix_decode.d5.loss_mask: 0.3285  mix_decode.d5.loss_dice: 0.4452  mix_decode.d6.loss_cls: 0.0503  mix_decode.d6.loss_mask: 0.3239  mix_decode.d6.loss_dice: 0.4585  mix_decode.d7.loss_cls: 0.0641  mix_decode.d7.loss_mask: 0.3216  mix_decode.d7.loss_dice: 0.4436  mix_decode.d8.loss_cls: 0.0294  mix_decode.d8.loss_mask: 0.3247  mix_decode.d8.loss_dice: 0.4760
2025/03/27 15:29:20 - mmengine - INFO - Exp name: pr2vi_20250327_105544
2025/03/27 15:29:20 - mmengine - INFO - Iter(train) [17000/20000]  base_lr: 1.8134e-05 lr: 1.8134e-05  eta: 0:47:25  time: 1.0755  data_time: 0.0219  memory: 10804  loss: 33.4258  decode.loss_cls: 0.2592  decode.loss_mask: 0.9926  decode.loss_dice: 1.1512  decode.d0.loss_cls: 0.2699  decode.d0.loss_mask: 0.9737  decode.d0.loss_dice: 1.2176  decode.d1.loss_cls: 0.3063  decode.d1.loss_mask: 1.0178  decode.d1.loss_dice: 1.1968  decode.d2.loss_cls: 0.2533  decode.d2.loss_mask: 0.9918  decode.d2.loss_dice: 1.1495  decode.d3.loss_cls: 0.2287  decode.d3.loss_mask: 0.9829  decode.d3.loss_dice: 1.1519  decode.d4.loss_cls: 0.2466  decode.d4.loss_mask: 0.9782  decode.d4.loss_dice: 1.1296  decode.d5.loss_cls: 0.2530  decode.d5.loss_mask: 0.9797  decode.d5.loss_dice: 1.1555  decode.d6.loss_cls: 0.2223  decode.d6.loss_mask: 0.9964  decode.d6.loss_dice: 1.1646  decode.d7.loss_cls: 0.2479  decode.d7.loss_mask: 0.9964  decode.d7.loss_dice: 1.2165  decode.d8.loss_cls: 0.2505  decode.d8.loss_mask: 0.9692  decode.d8.loss_dice: 1.1695  mix_decode.loss_cls: 0.0828  mix_decode.loss_mask: 0.3607  mix_decode.loss_dice: 0.4934  mix_decode.d0.loss_cls: 0.0744  mix_decode.d0.loss_mask: 0.3773  mix_decode.d0.loss_dice: 0.5321  mix_decode.d1.loss_cls: 0.0671  mix_decode.d1.loss_mask: 0.3595  mix_decode.d1.loss_dice: 0.4929  mix_decode.d2.loss_cls: 0.0847  mix_decode.d2.loss_mask: 0.3543  mix_decode.d2.loss_dice: 0.4884  mix_decode.d3.loss_cls: 0.0783  mix_decode.d3.loss_mask: 0.3607  mix_decode.d3.loss_dice: 0.4953  mix_decode.d4.loss_cls: 0.0883  mix_decode.d4.loss_mask: 0.3540  mix_decode.d4.loss_dice: 0.4823  mix_decode.d5.loss_cls: 0.0721  mix_decode.d5.loss_mask: 0.3605  mix_decode.d5.loss_dice: 0.4929  mix_decode.d6.loss_cls: 0.0643  mix_decode.d6.loss_mask: 0.3592  mix_decode.d6.loss_dice: 0.4896  mix_decode.d7.loss_cls: 0.0717  mix_decode.d7.loss_mask: 0.3581  mix_decode.d7.loss_dice: 0.4923  mix_decode.d8.loss_cls: 0.0704  mix_decode.d8.loss_mask: 0.3543  mix_decode.d8.loss_dice: 0.4949
2025/03/27 15:30:14 - mmengine - INFO - Iter(train) [17050/20000]  base_lr: 1.7862e-05 lr: 1.7862e-05  eta: 0:46:39  time: 1.0716  data_time: 0.0224  memory: 10808  loss: 34.8563  decode.loss_cls: 0.1470  decode.loss_mask: 1.1006  decode.loss_dice: 1.2003  decode.d0.loss_cls: 0.2643  decode.d0.loss_mask: 1.1031  decode.d0.loss_dice: 1.2149  decode.d1.loss_cls: 0.2640  decode.d1.loss_mask: 1.0890  decode.d1.loss_dice: 1.2011  decode.d2.loss_cls: 0.2076  decode.d2.loss_mask: 1.0965  decode.d2.loss_dice: 1.1619  decode.d3.loss_cls: 0.1253  decode.d3.loss_mask: 1.1023  decode.d3.loss_dice: 1.1967  decode.d4.loss_cls: 0.1671  decode.d4.loss_mask: 1.0986  decode.d4.loss_dice: 1.1955  decode.d5.loss_cls: 0.1514  decode.d5.loss_mask: 1.1094  decode.d5.loss_dice: 1.1970  decode.d6.loss_cls: 0.1664  decode.d6.loss_mask: 1.1080  decode.d6.loss_dice: 1.2161  decode.d7.loss_cls: 0.1737  decode.d7.loss_mask: 1.1136  decode.d7.loss_dice: 1.1897  decode.d8.loss_cls: 0.1579  decode.d8.loss_mask: 1.1043  decode.d8.loss_dice: 1.1914  mix_decode.loss_cls: 0.0875  mix_decode.loss_mask: 0.3836  mix_decode.loss_dice: 0.5136  mix_decode.d0.loss_cls: 0.1270  mix_decode.d0.loss_mask: 0.3796  mix_decode.d0.loss_dice: 0.5453  mix_decode.d1.loss_cls: 0.0923  mix_decode.d1.loss_mask: 0.3927  mix_decode.d1.loss_dice: 0.5143  mix_decode.d2.loss_cls: 0.0993  mix_decode.d2.loss_mask: 0.3939  mix_decode.d2.loss_dice: 0.5160  mix_decode.d3.loss_cls: 0.0946  mix_decode.d3.loss_mask: 0.3940  mix_decode.d3.loss_dice: 0.5111  mix_decode.d4.loss_cls: 0.0858  mix_decode.d4.loss_mask: 0.3999  mix_decode.d4.loss_dice: 0.5376  mix_decode.d5.loss_cls: 0.0860  mix_decode.d5.loss_mask: 0.3946  mix_decode.d5.loss_dice: 0.5198  mix_decode.d6.loss_cls: 0.0819  mix_decode.d6.loss_mask: 0.3845  mix_decode.d6.loss_dice: 0.5216  mix_decode.d7.loss_cls: 0.0882  mix_decode.d7.loss_mask: 0.3810  mix_decode.d7.loss_dice: 0.5205  mix_decode.d8.loss_cls: 0.0887  mix_decode.d8.loss_mask: 0.3855  mix_decode.d8.loss_dice: 0.5216
2025/03/27 15:31:08 - mmengine - INFO - Iter(train) [17100/20000]  base_lr: 1.7589e-05 lr: 1.7589e-05  eta: 0:45:53  time: 1.0787  data_time: 0.0223  memory: 10809  loss: 38.6024  decode.loss_cls: 0.2223  decode.loss_mask: 1.2432  decode.loss_dice: 1.2905  decode.d0.loss_cls: 0.1327  decode.d0.loss_mask: 1.2644  decode.d0.loss_dice: 1.3787  decode.d1.loss_cls: 0.1677  decode.d1.loss_mask: 1.2393  decode.d1.loss_dice: 1.3245  decode.d2.loss_cls: 0.1538  decode.d2.loss_mask: 1.2263  decode.d2.loss_dice: 1.3233  decode.d3.loss_cls: 0.1018  decode.d3.loss_mask: 1.3009  decode.d3.loss_dice: 1.3747  decode.d4.loss_cls: 0.1864  decode.d4.loss_mask: 1.2340  decode.d4.loss_dice: 1.3367  decode.d5.loss_cls: 0.1787  decode.d5.loss_mask: 1.2316  decode.d5.loss_dice: 1.3331  decode.d6.loss_cls: 0.2114  decode.d6.loss_mask: 1.2308  decode.d6.loss_dice: 1.3145  decode.d7.loss_cls: 0.1650  decode.d7.loss_mask: 1.2566  decode.d7.loss_dice: 1.3140  decode.d8.loss_cls: 0.2152  decode.d8.loss_mask: 1.2281  decode.d8.loss_dice: 1.2912  mix_decode.loss_cls: 0.0437  mix_decode.loss_mask: 0.4971  mix_decode.loss_dice: 0.5635  mix_decode.d0.loss_cls: 0.0754  mix_decode.d0.loss_mask: 0.4919  mix_decode.d0.loss_dice: 0.5977  mix_decode.d1.loss_cls: 0.0555  mix_decode.d1.loss_mask: 0.4988  mix_decode.d1.loss_dice: 0.5709  mix_decode.d2.loss_cls: 0.0341  mix_decode.d2.loss_mask: 0.5053  mix_decode.d2.loss_dice: 0.5625  mix_decode.d3.loss_cls: 0.0530  mix_decode.d3.loss_mask: 0.5043  mix_decode.d3.loss_dice: 0.5497  mix_decode.d4.loss_cls: 0.0646  mix_decode.d4.loss_mask: 0.4961  mix_decode.d4.loss_dice: 0.5588  mix_decode.d5.loss_cls: 0.0457  mix_decode.d5.loss_mask: 0.4960  mix_decode.d5.loss_dice: 0.5544  mix_decode.d6.loss_cls: 0.0500  mix_decode.d6.loss_mask: 0.4995  mix_decode.d6.loss_dice: 0.5640  mix_decode.d7.loss_cls: 0.0294  mix_decode.d7.loss_mask: 0.5049  mix_decode.d7.loss_dice: 0.5568  mix_decode.d8.loss_cls: 0.0470  mix_decode.d8.loss_mask: 0.5021  mix_decode.d8.loss_dice: 0.5585
2025/03/27 15:32:02 - mmengine - INFO - Iter(train) [17150/20000]  base_lr: 1.7316e-05 lr: 1.7316e-05  eta: 0:45:06  time: 1.0822  data_time: 0.0227  memory: 10802  loss: 28.8326  decode.loss_cls: 0.0482  decode.loss_mask: 1.0018  decode.loss_dice: 0.9955  decode.d0.loss_cls: 0.1748  decode.d0.loss_mask: 1.0213  decode.d0.loss_dice: 0.9896  decode.d1.loss_cls: 0.0676  decode.d1.loss_mask: 1.0147  decode.d1.loss_dice: 1.0063  decode.d2.loss_cls: 0.0539  decode.d2.loss_mask: 1.0160  decode.d2.loss_dice: 1.0015  decode.d3.loss_cls: 0.0546  decode.d3.loss_mask: 1.0144  decode.d3.loss_dice: 1.0031  decode.d4.loss_cls: 0.0524  decode.d4.loss_mask: 1.0146  decode.d4.loss_dice: 0.9978  decode.d5.loss_cls: 0.0524  decode.d5.loss_mask: 1.0147  decode.d5.loss_dice: 1.0037  decode.d6.loss_cls: 0.0516  decode.d6.loss_mask: 1.0121  decode.d6.loss_dice: 1.0015  decode.d7.loss_cls: 0.0493  decode.d7.loss_mask: 1.0085  decode.d7.loss_dice: 0.9862  decode.d8.loss_cls: 0.0505  decode.d8.loss_mask: 1.0075  decode.d8.loss_dice: 0.9939  mix_decode.loss_cls: 0.0629  mix_decode.loss_mask: 0.2902  mix_decode.loss_dice: 0.4409  mix_decode.d0.loss_cls: 0.0632  mix_decode.d0.loss_mask: 0.2986  mix_decode.d0.loss_dice: 0.4910  mix_decode.d1.loss_cls: 0.0765  mix_decode.d1.loss_mask: 0.2894  mix_decode.d1.loss_dice: 0.4494  mix_decode.d2.loss_cls: 0.0838  mix_decode.d2.loss_mask: 0.2914  mix_decode.d2.loss_dice: 0.4374  mix_decode.d3.loss_cls: 0.0702  mix_decode.d3.loss_mask: 0.2868  mix_decode.d3.loss_dice: 0.4361  mix_decode.d4.loss_cls: 0.0907  mix_decode.d4.loss_mask: 0.2893  mix_decode.d4.loss_dice: 0.4365  mix_decode.d5.loss_cls: 0.0846  mix_decode.d5.loss_mask: 0.2889  mix_decode.d5.loss_dice: 0.4265  mix_decode.d6.loss_cls: 0.0777  mix_decode.d6.loss_mask: 0.2894  mix_decode.d6.loss_dice: 0.4313  mix_decode.d7.loss_cls: 0.0560  mix_decode.d7.loss_mask: 0.2907  mix_decode.d7.loss_dice: 0.4420  mix_decode.d8.loss_cls: 0.0808  mix_decode.d8.loss_mask: 0.2877  mix_decode.d8.loss_dice: 0.4331
2025/03/27 15:32:56 - mmengine - INFO - Iter(train) [17200/20000]  base_lr: 1.7043e-05 lr: 1.7043e-05  eta: 0:44:20  time: 1.0781  data_time: 0.0225  memory: 10809  loss: 35.9171  decode.loss_cls: 0.1895  decode.loss_mask: 1.1548  decode.loss_dice: 1.2518  decode.d0.loss_cls: 0.2653  decode.d0.loss_mask: 1.1724  decode.d0.loss_dice: 1.2828  decode.d1.loss_cls: 0.2703  decode.d1.loss_mask: 1.1153  decode.d1.loss_dice: 1.2463  decode.d2.loss_cls: 0.2609  decode.d2.loss_mask: 1.1395  decode.d2.loss_dice: 1.2819  decode.d3.loss_cls: 0.2189  decode.d3.loss_mask: 1.1591  decode.d3.loss_dice: 1.3032  decode.d4.loss_cls: 0.3200  decode.d4.loss_mask: 1.1306  decode.d4.loss_dice: 1.2274  decode.d5.loss_cls: 0.2533  decode.d5.loss_mask: 1.1463  decode.d5.loss_dice: 1.2917  decode.d6.loss_cls: 0.2282  decode.d6.loss_mask: 1.1177  decode.d6.loss_dice: 1.2578  decode.d7.loss_cls: 0.2213  decode.d7.loss_mask: 1.1409  decode.d7.loss_dice: 1.2681  decode.d8.loss_cls: 0.1688  decode.d8.loss_mask: 1.2120  decode.d8.loss_dice: 1.3003  mix_decode.loss_cls: 0.0981  mix_decode.loss_mask: 0.3331  mix_decode.loss_dice: 0.5049  mix_decode.d0.loss_cls: 0.0715  mix_decode.d0.loss_mask: 0.3465  mix_decode.d0.loss_dice: 0.5625  mix_decode.d1.loss_cls: 0.1025  mix_decode.d1.loss_mask: 0.3302  mix_decode.d1.loss_dice: 0.5035  mix_decode.d2.loss_cls: 0.1240  mix_decode.d2.loss_mask: 0.3332  mix_decode.d2.loss_dice: 0.5057  mix_decode.d3.loss_cls: 0.0910  mix_decode.d3.loss_mask: 0.3299  mix_decode.d3.loss_dice: 0.4840  mix_decode.d4.loss_cls: 0.1083  mix_decode.d4.loss_mask: 0.3284  mix_decode.d4.loss_dice: 0.4981  mix_decode.d5.loss_cls: 0.0703  mix_decode.d5.loss_mask: 0.3301  mix_decode.d5.loss_dice: 0.5108  mix_decode.d6.loss_cls: 0.0503  mix_decode.d6.loss_mask: 0.3430  mix_decode.d6.loss_dice: 0.5111  mix_decode.d7.loss_cls: 0.0930  mix_decode.d7.loss_mask: 0.3296  mix_decode.d7.loss_dice: 0.4951  mix_decode.d8.loss_cls: 0.0722  mix_decode.d8.loss_mask: 0.3430  mix_decode.d8.loss_dice: 0.5168
2025/03/27 15:33:50 - mmengine - INFO - Iter(train) [17250/20000]  base_lr: 1.6768e-05 lr: 1.6768e-05  eta: 0:43:33  time: 1.0849  data_time: 0.0230  memory: 10809  loss: 33.1782  decode.loss_cls: 0.1140  decode.loss_mask: 1.0943  decode.loss_dice: 1.1154  decode.d0.loss_cls: 0.1850  decode.d0.loss_mask: 1.1589  decode.d0.loss_dice: 1.2311  decode.d1.loss_cls: 0.1953  decode.d1.loss_mask: 1.1024  decode.d1.loss_dice: 1.1107  decode.d2.loss_cls: 0.1525  decode.d2.loss_mask: 1.0920  decode.d2.loss_dice: 1.1341  decode.d3.loss_cls: 0.1383  decode.d3.loss_mask: 1.0895  decode.d3.loss_dice: 1.1242  decode.d4.loss_cls: 0.1389  decode.d4.loss_mask: 1.0966  decode.d4.loss_dice: 1.1142  decode.d5.loss_cls: 0.1429  decode.d5.loss_mask: 1.1009  decode.d5.loss_dice: 1.1069  decode.d6.loss_cls: 0.1454  decode.d6.loss_mask: 1.0929  decode.d6.loss_dice: 1.1070  decode.d7.loss_cls: 0.1315  decode.d7.loss_mask: 1.0934  decode.d7.loss_dice: 1.1119  decode.d8.loss_cls: 0.1173  decode.d8.loss_mask: 1.0942  decode.d8.loss_dice: 1.1023  mix_decode.loss_cls: 0.0822  mix_decode.loss_mask: 0.3487  mix_decode.loss_dice: 0.4845  mix_decode.d0.loss_cls: 0.1158  mix_decode.d0.loss_mask: 0.3459  mix_decode.d0.loss_dice: 0.5287  mix_decode.d1.loss_cls: 0.1266  mix_decode.d1.loss_mask: 0.3576  mix_decode.d1.loss_dice: 0.5121  mix_decode.d2.loss_cls: 0.0906  mix_decode.d2.loss_mask: 0.3564  mix_decode.d2.loss_dice: 0.5004  mix_decode.d3.loss_cls: 0.0994  mix_decode.d3.loss_mask: 0.3566  mix_decode.d3.loss_dice: 0.4896  mix_decode.d4.loss_cls: 0.0968  mix_decode.d4.loss_mask: 0.3473  mix_decode.d4.loss_dice: 0.4927  mix_decode.d5.loss_cls: 0.1080  mix_decode.d5.loss_mask: 0.3480  mix_decode.d5.loss_dice: 0.4836  mix_decode.d6.loss_cls: 0.0887  mix_decode.d6.loss_mask: 0.3487  mix_decode.d6.loss_dice: 0.4913  mix_decode.d7.loss_cls: 0.0854  mix_decode.d7.loss_mask: 0.3482  mix_decode.d7.loss_dice: 0.4779  mix_decode.d8.loss_cls: 0.0899  mix_decode.d8.loss_mask: 0.3486  mix_decode.d8.loss_dice: 0.4940
2025/03/27 15:34:44 - mmengine - INFO - Iter(train) [17300/20000]  base_lr: 1.6494e-05 lr: 1.6494e-05  eta: 0:42:47  time: 1.0761  data_time: 0.0220  memory: 10803  loss: 35.4193  decode.loss_cls: 0.2428  decode.loss_mask: 1.0944  decode.loss_dice: 1.1470  decode.d0.loss_cls: 0.2403  decode.d0.loss_mask: 1.1311  decode.d0.loss_dice: 1.2238  decode.d1.loss_cls: 0.2247  decode.d1.loss_mask: 1.1053  decode.d1.loss_dice: 1.1554  decode.d2.loss_cls: 0.2274  decode.d2.loss_mask: 1.0867  decode.d2.loss_dice: 1.1748  decode.d3.loss_cls: 0.2336  decode.d3.loss_mask: 1.0961  decode.d3.loss_dice: 1.1347  decode.d4.loss_cls: 0.1864  decode.d4.loss_mask: 1.1280  decode.d4.loss_dice: 1.1491  decode.d5.loss_cls: 0.2232  decode.d5.loss_mask: 1.1210  decode.d5.loss_dice: 1.1277  decode.d6.loss_cls: 0.2246  decode.d6.loss_mask: 1.0829  decode.d6.loss_dice: 1.1403  decode.d7.loss_cls: 0.2381  decode.d7.loss_mask: 1.0966  decode.d7.loss_dice: 1.1382  decode.d8.loss_cls: 0.2273  decode.d8.loss_mask: 1.0815  decode.d8.loss_dice: 1.1293  mix_decode.loss_cls: 0.0883  mix_decode.loss_mask: 0.4468  mix_decode.loss_dice: 0.5201  mix_decode.d0.loss_cls: 0.1352  mix_decode.d0.loss_mask: 0.4449  mix_decode.d0.loss_dice: 0.5433  mix_decode.d1.loss_cls: 0.0866  mix_decode.d1.loss_mask: 0.4495  mix_decode.d1.loss_dice: 0.5282  mix_decode.d2.loss_cls: 0.0727  mix_decode.d2.loss_mask: 0.4483  mix_decode.d2.loss_dice: 0.5322  mix_decode.d3.loss_cls: 0.0769  mix_decode.d3.loss_mask: 0.4442  mix_decode.d3.loss_dice: 0.5284  mix_decode.d4.loss_cls: 0.0704  mix_decode.d4.loss_mask: 0.4408  mix_decode.d4.loss_dice: 0.5274  mix_decode.d5.loss_cls: 0.1057  mix_decode.d5.loss_mask: 0.4361  mix_decode.d5.loss_dice: 0.5185  mix_decode.d6.loss_cls: 0.0897  mix_decode.d6.loss_mask: 0.4361  mix_decode.d6.loss_dice: 0.5246  mix_decode.d7.loss_cls: 0.0821  mix_decode.d7.loss_mask: 0.4483  mix_decode.d7.loss_dice: 0.5312  mix_decode.d8.loss_cls: 0.0910  mix_decode.d8.loss_mask: 0.4331  mix_decode.d8.loss_dice: 0.5260
2025/03/27 15:35:38 - mmengine - INFO - Iter(train) [17350/20000]  base_lr: 1.6219e-05 lr: 1.6219e-05  eta: 0:42:00  time: 1.0826  data_time: 0.0231  memory: 10807  loss: 33.2902  decode.loss_cls: 0.1425  decode.loss_mask: 1.0992  decode.loss_dice: 1.0858  decode.d0.loss_cls: 0.2076  decode.d0.loss_mask: 1.1040  decode.d0.loss_dice: 1.1336  decode.d1.loss_cls: 0.1986  decode.d1.loss_mask: 1.0692  decode.d1.loss_dice: 1.0839  decode.d2.loss_cls: 0.1853  decode.d2.loss_mask: 1.0649  decode.d2.loss_dice: 1.0739  decode.d3.loss_cls: 0.1748  decode.d3.loss_mask: 1.0598  decode.d3.loss_dice: 1.0699  decode.d4.loss_cls: 0.1434  decode.d4.loss_mask: 1.0760  decode.d4.loss_dice: 1.0700  decode.d5.loss_cls: 0.1389  decode.d5.loss_mask: 1.0977  decode.d5.loss_dice: 1.0991  decode.d6.loss_cls: 0.1526  decode.d6.loss_mask: 1.0886  decode.d6.loss_dice: 1.0849  decode.d7.loss_cls: 0.1322  decode.d7.loss_mask: 1.0882  decode.d7.loss_dice: 1.0690  decode.d8.loss_cls: 0.1479  decode.d8.loss_mask: 1.1045  decode.d8.loss_dice: 1.1092  mix_decode.loss_cls: 0.0624  mix_decode.loss_mask: 0.4172  mix_decode.loss_dice: 0.5077  mix_decode.d0.loss_cls: 0.0742  mix_decode.d0.loss_mask: 0.3977  mix_decode.d0.loss_dice: 0.5422  mix_decode.d1.loss_cls: 0.0728  mix_decode.d1.loss_mask: 0.4059  mix_decode.d1.loss_dice: 0.5252  mix_decode.d2.loss_cls: 0.0496  mix_decode.d2.loss_mask: 0.4117  mix_decode.d2.loss_dice: 0.5179  mix_decode.d3.loss_cls: 0.0435  mix_decode.d3.loss_mask: 0.4097  mix_decode.d3.loss_dice: 0.5189  mix_decode.d4.loss_cls: 0.0555  mix_decode.d4.loss_mask: 0.4060  mix_decode.d4.loss_dice: 0.5207  mix_decode.d5.loss_cls: 0.0891  mix_decode.d5.loss_mask: 0.4093  mix_decode.d5.loss_dice: 0.5102  mix_decode.d6.loss_cls: 0.0846  mix_decode.d6.loss_mask: 0.4009  mix_decode.d6.loss_dice: 0.5153  mix_decode.d7.loss_cls: 0.0636  mix_decode.d7.loss_mask: 0.4077  mix_decode.d7.loss_dice: 0.5156  mix_decode.d8.loss_cls: 0.0678  mix_decode.d8.loss_mask: 0.4122  mix_decode.d8.loss_dice: 0.5199
2025/03/27 15:36:32 - mmengine - INFO - Iter(train) [17400/20000]  base_lr: 1.5943e-05 lr: 1.5943e-05  eta: 0:41:14  time: 1.0739  data_time: 0.0220  memory: 10810  loss: 38.9695  decode.loss_cls: 0.3002  decode.loss_mask: 1.1440  decode.loss_dice: 1.3613  decode.d0.loss_cls: 0.3147  decode.d0.loss_mask: 1.1424  decode.d0.loss_dice: 1.4335  decode.d1.loss_cls: 0.3441  decode.d1.loss_mask: 1.1216  decode.d1.loss_dice: 1.3526  decode.d2.loss_cls: 0.3320  decode.d2.loss_mask: 1.1212  decode.d2.loss_dice: 1.3246  decode.d3.loss_cls: 0.2891  decode.d3.loss_mask: 1.1159  decode.d3.loss_dice: 1.3114  decode.d4.loss_cls: 0.2716  decode.d4.loss_mask: 1.1430  decode.d4.loss_dice: 1.3482  decode.d5.loss_cls: 0.3253  decode.d5.loss_mask: 1.1460  decode.d5.loss_dice: 1.3614  decode.d6.loss_cls: 0.3465  decode.d6.loss_mask: 1.1203  decode.d6.loss_dice: 1.3380  decode.d7.loss_cls: 0.3123  decode.d7.loss_mask: 1.1390  decode.d7.loss_dice: 1.3658  decode.d8.loss_cls: 0.3122  decode.d8.loss_mask: 1.1508  decode.d8.loss_dice: 1.3592  mix_decode.loss_cls: 0.1445  mix_decode.loss_mask: 0.3589  mix_decode.loss_dice: 0.5783  mix_decode.d0.loss_cls: 0.1129  mix_decode.d0.loss_mask: 0.3824  mix_decode.d0.loss_dice: 0.6601  mix_decode.d1.loss_cls: 0.1706  mix_decode.d1.loss_mask: 0.3687  mix_decode.d1.loss_dice: 0.5760  mix_decode.d2.loss_cls: 0.1583  mix_decode.d2.loss_mask: 0.3720  mix_decode.d2.loss_dice: 0.5621  mix_decode.d3.loss_cls: 0.1386  mix_decode.d3.loss_mask: 0.3728  mix_decode.d3.loss_dice: 0.5558  mix_decode.d4.loss_cls: 0.1352  mix_decode.d4.loss_mask: 0.3676  mix_decode.d4.loss_dice: 0.5816  mix_decode.d5.loss_cls: 0.1547  mix_decode.d5.loss_mask: 0.3665  mix_decode.d5.loss_dice: 0.5532  mix_decode.d6.loss_cls: 0.1205  mix_decode.d6.loss_mask: 0.3698  mix_decode.d6.loss_dice: 0.5756  mix_decode.d7.loss_cls: 0.1350  mix_decode.d7.loss_mask: 0.3714  mix_decode.d7.loss_dice: 0.5844  mix_decode.d8.loss_cls: 0.1487  mix_decode.d8.loss_mask: 0.3681  mix_decode.d8.loss_dice: 0.5768
2025/03/27 15:37:26 - mmengine - INFO - Iter(train) [17450/20000]  base_lr: 1.5667e-05 lr: 1.5667e-05  eta: 0:40:27  time: 1.0771  data_time: 0.0222  memory: 10814  loss: 31.0955  decode.loss_cls: 0.0944  decode.loss_mask: 0.9434  decode.loss_dice: 1.0875  decode.d0.loss_cls: 0.1266  decode.d0.loss_mask: 0.9628  decode.d0.loss_dice: 1.1266  decode.d1.loss_cls: 0.1420  decode.d1.loss_mask: 0.9435  decode.d1.loss_dice: 1.0800  decode.d2.loss_cls: 0.1015  decode.d2.loss_mask: 0.9463  decode.d2.loss_dice: 1.0876  decode.d3.loss_cls: 0.1021  decode.d3.loss_mask: 0.9425  decode.d3.loss_dice: 1.0844  decode.d4.loss_cls: 0.0892  decode.d4.loss_mask: 0.9456  decode.d4.loss_dice: 1.0913  decode.d5.loss_cls: 0.1040  decode.d5.loss_mask: 0.9512  decode.d5.loss_dice: 1.0771  decode.d6.loss_cls: 0.0838  decode.d6.loss_mask: 0.9343  decode.d6.loss_dice: 1.0817  decode.d7.loss_cls: 0.0692  decode.d7.loss_mask: 0.9404  decode.d7.loss_dice: 1.0924  decode.d8.loss_cls: 0.0772  decode.d8.loss_mask: 0.9438  decode.d8.loss_dice: 1.1017  mix_decode.loss_cls: 0.0860  mix_decode.loss_mask: 0.3621  mix_decode.loss_dice: 0.5235  mix_decode.d0.loss_cls: 0.0747  mix_decode.d0.loss_mask: 0.3736  mix_decode.d0.loss_dice: 0.5743  mix_decode.d1.loss_cls: 0.1374  mix_decode.d1.loss_mask: 0.3491  mix_decode.d1.loss_dice: 0.5133  mix_decode.d2.loss_cls: 0.0917  mix_decode.d2.loss_mask: 0.3557  mix_decode.d2.loss_dice: 0.5088  mix_decode.d3.loss_cls: 0.0923  mix_decode.d3.loss_mask: 0.3506  mix_decode.d3.loss_dice: 0.5117  mix_decode.d4.loss_cls: 0.1252  mix_decode.d4.loss_mask: 0.3524  mix_decode.d4.loss_dice: 0.5135  mix_decode.d5.loss_cls: 0.0960  mix_decode.d5.loss_mask: 0.3550  mix_decode.d5.loss_dice: 0.5158  mix_decode.d6.loss_cls: 0.0747  mix_decode.d6.loss_mask: 0.3566  mix_decode.d6.loss_dice: 0.5253  mix_decode.d7.loss_cls: 0.0781  mix_decode.d7.loss_mask: 0.3523  mix_decode.d7.loss_dice: 0.5252  mix_decode.d8.loss_cls: 0.0620  mix_decode.d8.loss_mask: 0.3628  mix_decode.d8.loss_dice: 0.5418
2025/03/27 15:38:20 - mmengine - INFO - Iter(train) [17500/20000]  base_lr: 1.5390e-05 lr: 1.5390e-05  eta: 0:39:40  time: 1.0810  data_time: 0.0228  memory: 10803  loss: 38.0618  decode.loss_cls: 0.2163  decode.loss_mask: 1.2051  decode.loss_dice: 1.3067  decode.d0.loss_cls: 0.1410  decode.d0.loss_mask: 1.2394  decode.d0.loss_dice: 1.3843  decode.d1.loss_cls: 0.2077  decode.d1.loss_mask: 1.2232  decode.d1.loss_dice: 1.3194  decode.d2.loss_cls: 0.2380  decode.d2.loss_mask: 1.2413  decode.d2.loss_dice: 1.3104  decode.d3.loss_cls: 0.2597  decode.d3.loss_mask: 1.1911  decode.d3.loss_dice: 1.2960  decode.d4.loss_cls: 0.2520  decode.d4.loss_mask: 1.1993  decode.d4.loss_dice: 1.2955  decode.d5.loss_cls: 0.2323  decode.d5.loss_mask: 1.1935  decode.d5.loss_dice: 1.2864  decode.d6.loss_cls: 0.2942  decode.d6.loss_mask: 1.2139  decode.d6.loss_dice: 1.2518  decode.d7.loss_cls: 0.2921  decode.d7.loss_mask: 1.2084  decode.d7.loss_dice: 1.2677  decode.d8.loss_cls: 0.2617  decode.d8.loss_mask: 1.2207  decode.d8.loss_dice: 1.2937  mix_decode.loss_cls: 0.0831  mix_decode.loss_mask: 0.4620  mix_decode.loss_dice: 0.5114  mix_decode.d0.loss_cls: 0.0871  mix_decode.d0.loss_mask: 0.4471  mix_decode.d0.loss_dice: 0.5491  mix_decode.d1.loss_cls: 0.0840  mix_decode.d1.loss_mask: 0.4415  mix_decode.d1.loss_dice: 0.5310  mix_decode.d2.loss_cls: 0.0698  mix_decode.d2.loss_mask: 0.4432  mix_decode.d2.loss_dice: 0.5333  mix_decode.d3.loss_cls: 0.0717  mix_decode.d3.loss_mask: 0.4496  mix_decode.d3.loss_dice: 0.5220  mix_decode.d4.loss_cls: 0.0886  mix_decode.d4.loss_mask: 0.4423  mix_decode.d4.loss_dice: 0.5190  mix_decode.d5.loss_cls: 0.0954  mix_decode.d5.loss_mask: 0.4486  mix_decode.d5.loss_dice: 0.5142  mix_decode.d6.loss_cls: 0.0917  mix_decode.d6.loss_mask: 0.4494  mix_decode.d6.loss_dice: 0.5075  mix_decode.d7.loss_cls: 0.0767  mix_decode.d7.loss_mask: 0.4472  mix_decode.d7.loss_dice: 0.5174  mix_decode.d8.loss_cls: 0.0707  mix_decode.d8.loss_mask: 0.4511  mix_decode.d8.loss_dice: 0.5136
2025/03/27 15:39:14 - mmengine - INFO - Iter(train) [17550/20000]  base_lr: 1.5113e-05 lr: 1.5113e-05  eta: 0:38:54  time: 1.0742  data_time: 0.0222  memory: 10803  loss: 31.5053  decode.loss_cls: 0.1936  decode.loss_mask: 0.8472  decode.loss_dice: 1.1470  decode.d0.loss_cls: 0.2058  decode.d0.loss_mask: 0.8692  decode.d0.loss_dice: 1.2626  decode.d1.loss_cls: 0.2133  decode.d1.loss_mask: 0.8436  decode.d1.loss_dice: 1.1767  decode.d2.loss_cls: 0.1859  decode.d2.loss_mask: 0.8510  decode.d2.loss_dice: 1.1967  decode.d3.loss_cls: 0.2142  decode.d3.loss_mask: 0.8346  decode.d3.loss_dice: 1.2098  decode.d4.loss_cls: 0.1705  decode.d4.loss_mask: 0.8421  decode.d4.loss_dice: 1.1941  decode.d5.loss_cls: 0.1389  decode.d5.loss_mask: 0.8567  decode.d5.loss_dice: 1.1983  decode.d6.loss_cls: 0.2109  decode.d6.loss_mask: 0.8377  decode.d6.loss_dice: 1.1582  decode.d7.loss_cls: 0.1439  decode.d7.loss_mask: 0.8511  decode.d7.loss_dice: 1.2182  decode.d8.loss_cls: 0.2136  decode.d8.loss_mask: 0.8431  decode.d8.loss_dice: 1.1760  mix_decode.loss_cls: 0.1271  mix_decode.loss_mask: 0.3003  mix_decode.loss_dice: 0.4965  mix_decode.d0.loss_cls: 0.1174  mix_decode.d0.loss_mask: 0.3066  mix_decode.d0.loss_dice: 0.5584  mix_decode.d1.loss_cls: 0.1041  mix_decode.d1.loss_mask: 0.2989  mix_decode.d1.loss_dice: 0.5170  mix_decode.d2.loss_cls: 0.1006  mix_decode.d2.loss_mask: 0.3023  mix_decode.d2.loss_dice: 0.5068  mix_decode.d3.loss_cls: 0.1189  mix_decode.d3.loss_mask: 0.2986  mix_decode.d3.loss_dice: 0.4966  mix_decode.d4.loss_cls: 0.1088  mix_decode.d4.loss_mask: 0.3021  mix_decode.d4.loss_dice: 0.5017  mix_decode.d5.loss_cls: 0.0979  mix_decode.d5.loss_mask: 0.3040  mix_decode.d5.loss_dice: 0.5045  mix_decode.d6.loss_cls: 0.1047  mix_decode.d6.loss_mask: 0.3010  mix_decode.d6.loss_dice: 0.5049  mix_decode.d7.loss_cls: 0.1273  mix_decode.d7.loss_mask: 0.2992  mix_decode.d7.loss_dice: 0.4836  mix_decode.d8.loss_cls: 0.1183  mix_decode.d8.loss_mask: 0.2990  mix_decode.d8.loss_dice: 0.4940
2025/03/27 15:40:08 - mmengine - INFO - Iter(train) [17600/20000]  base_lr: 1.4835e-05 lr: 1.4835e-05  eta: 0:38:07  time: 1.0759  data_time: 0.0223  memory: 10807  loss: 39.3243  decode.loss_cls: 0.2259  decode.loss_mask: 1.2652  decode.loss_dice: 1.2353  decode.d0.loss_cls: 0.2656  decode.d0.loss_mask: 1.3063  decode.d0.loss_dice: 1.3572  decode.d1.loss_cls: 0.2736  decode.d1.loss_mask: 1.2911  decode.d1.loss_dice: 1.2741  decode.d2.loss_cls: 0.3149  decode.d2.loss_mask: 1.2887  decode.d2.loss_dice: 1.2223  decode.d3.loss_cls: 0.2426  decode.d3.loss_mask: 1.2743  decode.d3.loss_dice: 1.2400  decode.d4.loss_cls: 0.2468  decode.d4.loss_mask: 1.2852  decode.d4.loss_dice: 1.2145  decode.d5.loss_cls: 0.2550  decode.d5.loss_mask: 1.2853  decode.d5.loss_dice: 1.2594  decode.d6.loss_cls: 0.2900  decode.d6.loss_mask: 1.2801  decode.d6.loss_dice: 1.2538  decode.d7.loss_cls: 0.2588  decode.d7.loss_mask: 1.2639  decode.d7.loss_dice: 1.2467  decode.d8.loss_cls: 0.2621  decode.d8.loss_mask: 1.2671  decode.d8.loss_dice: 1.2307  mix_decode.loss_cls: 0.1037  mix_decode.loss_mask: 0.4612  mix_decode.loss_dice: 0.5743  mix_decode.d0.loss_cls: 0.0858  mix_decode.d0.loss_mask: 0.4582  mix_decode.d0.loss_dice: 0.6328  mix_decode.d1.loss_cls: 0.1202  mix_decode.d1.loss_mask: 0.4490  mix_decode.d1.loss_dice: 0.5759  mix_decode.d2.loss_cls: 0.1113  mix_decode.d2.loss_mask: 0.4491  mix_decode.d2.loss_dice: 0.5538  mix_decode.d3.loss_cls: 0.1100  mix_decode.d3.loss_mask: 0.4566  mix_decode.d3.loss_dice: 0.5663  mix_decode.d4.loss_cls: 0.1323  mix_decode.d4.loss_mask: 0.4505  mix_decode.d4.loss_dice: 0.5701  mix_decode.d5.loss_cls: 0.1129  mix_decode.d5.loss_mask: 0.4503  mix_decode.d5.loss_dice: 0.5471  mix_decode.d6.loss_cls: 0.1005  mix_decode.d6.loss_mask: 0.4545  mix_decode.d6.loss_dice: 0.5648  mix_decode.d7.loss_cls: 0.1117  mix_decode.d7.loss_mask: 0.4514  mix_decode.d7.loss_dice: 0.5646  mix_decode.d8.loss_cls: 0.0931  mix_decode.d8.loss_mask: 0.4642  mix_decode.d8.loss_dice: 0.5719
2025/03/27 15:41:02 - mmengine - INFO - Iter(train) [17650/20000]  base_lr: 1.4556e-05 lr: 1.4556e-05  eta: 0:37:20  time: 1.0775  data_time: 0.0220  memory: 10818  loss: 31.2570  decode.loss_cls: 0.2262  decode.loss_mask: 0.8946  decode.loss_dice: 1.0656  decode.d0.loss_cls: 0.2495  decode.d0.loss_mask: 0.9322  decode.d0.loss_dice: 1.1392  decode.d1.loss_cls: 0.1956  decode.d1.loss_mask: 0.9003  decode.d1.loss_dice: 1.0724  decode.d2.loss_cls: 0.2331  decode.d2.loss_mask: 0.9017  decode.d2.loss_dice: 1.0382  decode.d3.loss_cls: 0.2395  decode.d3.loss_mask: 0.9084  decode.d3.loss_dice: 1.0404  decode.d4.loss_cls: 0.2504  decode.d4.loss_mask: 0.8930  decode.d4.loss_dice: 1.0577  decode.d5.loss_cls: 0.2011  decode.d5.loss_mask: 0.8858  decode.d5.loss_dice: 1.0781  decode.d6.loss_cls: 0.1944  decode.d6.loss_mask: 0.8999  decode.d6.loss_dice: 1.0554  decode.d7.loss_cls: 0.2349  decode.d7.loss_mask: 0.8994  decode.d7.loss_dice: 1.0619  decode.d8.loss_cls: 0.2185  decode.d8.loss_mask: 0.8924  decode.d8.loss_dice: 1.0623  mix_decode.loss_cls: 0.1227  mix_decode.loss_mask: 0.2640  mix_decode.loss_dice: 0.5105  mix_decode.d0.loss_cls: 0.0936  mix_decode.d0.loss_mask: 0.2845  mix_decode.d0.loss_dice: 0.6095  mix_decode.d1.loss_cls: 0.1559  mix_decode.d1.loss_mask: 0.2652  mix_decode.d1.loss_dice: 0.5283  mix_decode.d2.loss_cls: 0.1522  mix_decode.d2.loss_mask: 0.2751  mix_decode.d2.loss_dice: 0.5308  mix_decode.d3.loss_cls: 0.1322  mix_decode.d3.loss_mask: 0.2779  mix_decode.d3.loss_dice: 0.5171  mix_decode.d4.loss_cls: 0.1412  mix_decode.d4.loss_mask: 0.2692  mix_decode.d4.loss_dice: 0.5205  mix_decode.d5.loss_cls: 0.1394  mix_decode.d5.loss_mask: 0.2692  mix_decode.d5.loss_dice: 0.5072  mix_decode.d6.loss_cls: 0.1764  mix_decode.d6.loss_mask: 0.2723  mix_decode.d6.loss_dice: 0.5132  mix_decode.d7.loss_cls: 0.0974  mix_decode.d7.loss_mask: 0.2735  mix_decode.d7.loss_dice: 0.5447  mix_decode.d8.loss_cls: 0.1173  mix_decode.d8.loss_mask: 0.2714  mix_decode.d8.loss_dice: 0.5026
2025/03/27 15:41:56 - mmengine - INFO - Iter(train) [17700/20000]  base_lr: 1.4277e-05 lr: 1.4277e-05  eta: 0:36:33  time: 1.1079  data_time: 0.0258  memory: 10800  loss: 30.8697  decode.loss_cls: 0.1940  decode.loss_mask: 0.9662  decode.loss_dice: 1.0092  decode.d0.loss_cls: 0.1424  decode.d0.loss_mask: 1.0031  decode.d0.loss_dice: 1.1177  decode.d1.loss_cls: 0.1333  decode.d1.loss_mask: 0.9598  decode.d1.loss_dice: 1.0820  decode.d2.loss_cls: 0.1653  decode.d2.loss_mask: 0.9747  decode.d2.loss_dice: 1.0522  decode.d3.loss_cls: 0.1599  decode.d3.loss_mask: 0.9699  decode.d3.loss_dice: 1.0562  decode.d4.loss_cls: 0.1459  decode.d4.loss_mask: 0.9786  decode.d4.loss_dice: 1.0410  decode.d5.loss_cls: 0.1432  decode.d5.loss_mask: 0.9592  decode.d5.loss_dice: 1.0281  decode.d6.loss_cls: 0.1611  decode.d6.loss_mask: 0.9543  decode.d6.loss_dice: 1.0569  decode.d7.loss_cls: 0.1123  decode.d7.loss_mask: 0.9636  decode.d7.loss_dice: 1.0640  decode.d8.loss_cls: 0.1191  decode.d8.loss_mask: 0.9705  decode.d8.loss_dice: 1.0632  mix_decode.loss_cls: 0.0415  mix_decode.loss_mask: 0.3784  mix_decode.loss_dice: 0.4768  mix_decode.d0.loss_cls: 0.0758  mix_decode.d0.loss_mask: 0.3812  mix_decode.d0.loss_dice: 0.4967  mix_decode.d1.loss_cls: 0.0757  mix_decode.d1.loss_mask: 0.3738  mix_decode.d1.loss_dice: 0.4583  mix_decode.d2.loss_cls: 0.0658  mix_decode.d2.loss_mask: 0.3750  mix_decode.d2.loss_dice: 0.4700  mix_decode.d3.loss_cls: 0.0650  mix_decode.d3.loss_mask: 0.3722  mix_decode.d3.loss_dice: 0.4653  mix_decode.d4.loss_cls: 0.0490  mix_decode.d4.loss_mask: 0.3777  mix_decode.d4.loss_dice: 0.4757  mix_decode.d5.loss_cls: 0.0634  mix_decode.d5.loss_mask: 0.3797  mix_decode.d5.loss_dice: 0.4683  mix_decode.d6.loss_cls: 0.0425  mix_decode.d6.loss_mask: 0.3848  mix_decode.d6.loss_dice: 0.4862  mix_decode.d7.loss_cls: 0.0558  mix_decode.d7.loss_mask: 0.3824  mix_decode.d7.loss_dice: 0.4782  mix_decode.d8.loss_cls: 0.0446  mix_decode.d8.loss_mask: 0.3833  mix_decode.d8.loss_dice: 0.4795
2025/03/27 15:42:50 - mmengine - INFO - Iter(train) [17750/20000]  base_lr: 1.3998e-05 lr: 1.3998e-05  eta: 0:35:46  time: 1.0761  data_time: 0.0218  memory: 10811  loss: 39.3790  decode.loss_cls: 0.2201  decode.loss_mask: 1.2280  decode.loss_dice: 1.2831  decode.d0.loss_cls: 0.2773  decode.d0.loss_mask: 1.1954  decode.d0.loss_dice: 1.3090  decode.d1.loss_cls: 0.3001  decode.d1.loss_mask: 1.1604  decode.d1.loss_dice: 1.2196  decode.d2.loss_cls: 0.2934  decode.d2.loss_mask: 1.1339  decode.d2.loss_dice: 1.2210  decode.d3.loss_cls: 0.3182  decode.d3.loss_mask: 1.1274  decode.d3.loss_dice: 1.1879  decode.d4.loss_cls: 0.2580  decode.d4.loss_mask: 1.2198  decode.d4.loss_dice: 1.2347  decode.d5.loss_cls: 0.1659  decode.d5.loss_mask: 1.2822  decode.d5.loss_dice: 1.3014  decode.d6.loss_cls: 0.2461  decode.d6.loss_mask: 1.2103  decode.d6.loss_dice: 1.2475  decode.d7.loss_cls: 0.2082  decode.d7.loss_mask: 1.2324  decode.d7.loss_dice: 1.2712  decode.d8.loss_cls: 0.2292  decode.d8.loss_mask: 1.2346  decode.d8.loss_dice: 1.2824  mix_decode.loss_cls: 0.1845  mix_decode.loss_mask: 0.4525  mix_decode.loss_dice: 0.6005  mix_decode.d0.loss_cls: 0.1978  mix_decode.d0.loss_mask: 0.4186  mix_decode.d0.loss_dice: 0.6443  mix_decode.d1.loss_cls: 0.1989  mix_decode.d1.loss_mask: 0.4238  mix_decode.d1.loss_dice: 0.5885  mix_decode.d2.loss_cls: 0.1826  mix_decode.d2.loss_mask: 0.4317  mix_decode.d2.loss_dice: 0.5952  mix_decode.d3.loss_cls: 0.2482  mix_decode.d3.loss_mask: 0.4049  mix_decode.d3.loss_dice: 0.5663  mix_decode.d4.loss_cls: 0.1433  mix_decode.d4.loss_mask: 0.4544  mix_decode.d4.loss_dice: 0.6161  mix_decode.d5.loss_cls: 0.2018  mix_decode.d5.loss_mask: 0.4120  mix_decode.d5.loss_dice: 0.5793  mix_decode.d6.loss_cls: 0.1865  mix_decode.d6.loss_mask: 0.4573  mix_decode.d6.loss_dice: 0.6042  mix_decode.d7.loss_cls: 0.1456  mix_decode.d7.loss_mask: 0.4635  mix_decode.d7.loss_dice: 0.6378  mix_decode.d8.loss_cls: 0.1496  mix_decode.d8.loss_mask: 0.4764  mix_decode.d8.loss_dice: 0.6147
2025/03/27 15:43:44 - mmengine - INFO - Iter(train) [17800/20000]  base_lr: 1.3717e-05 lr: 1.3717e-05  eta: 0:34:59  time: 1.0755  data_time: 0.0220  memory: 10806  loss: 34.8827  decode.loss_cls: 0.2204  decode.loss_mask: 1.0494  decode.loss_dice: 1.1798  decode.d0.loss_cls: 0.2269  decode.d0.loss_mask: 1.0354  decode.d0.loss_dice: 1.2458  decode.d1.loss_cls: 0.3780  decode.d1.loss_mask: 1.0015  decode.d1.loss_dice: 1.1323  decode.d2.loss_cls: 0.2986  decode.d2.loss_mask: 1.0358  decode.d2.loss_dice: 1.1636  decode.d3.loss_cls: 0.2504  decode.d3.loss_mask: 1.0146  decode.d3.loss_dice: 1.1664  decode.d4.loss_cls: 0.2898  decode.d4.loss_mask: 1.0380  decode.d4.loss_dice: 1.1764  decode.d5.loss_cls: 0.2591  decode.d5.loss_mask: 1.0256  decode.d5.loss_dice: 1.2000  decode.d6.loss_cls: 0.2294  decode.d6.loss_mask: 1.0466  decode.d6.loss_dice: 1.2314  decode.d7.loss_cls: 0.2093  decode.d7.loss_mask: 1.0518  decode.d7.loss_dice: 1.1972  decode.d8.loss_cls: 0.2646  decode.d8.loss_mask: 1.0289  decode.d8.loss_dice: 1.1453  mix_decode.loss_cls: 0.1533  mix_decode.loss_mask: 0.3984  mix_decode.loss_dice: 0.4499  mix_decode.d0.loss_cls: 0.1485  mix_decode.d0.loss_mask: 0.3916  mix_decode.d0.loss_dice: 0.5452  mix_decode.d1.loss_cls: 0.1674  mix_decode.d1.loss_mask: 0.3722  mix_decode.d1.loss_dice: 0.4542  mix_decode.d2.loss_cls: 0.1549  mix_decode.d2.loss_mask: 0.4145  mix_decode.d2.loss_dice: 0.4787  mix_decode.d3.loss_cls: 0.1506  mix_decode.d3.loss_mask: 0.3861  mix_decode.d3.loss_dice: 0.4466  mix_decode.d4.loss_cls: 0.1077  mix_decode.d4.loss_mask: 0.3999  mix_decode.d4.loss_dice: 0.4497  mix_decode.d5.loss_cls: 0.1539  mix_decode.d5.loss_mask: 0.4099  mix_decode.d5.loss_dice: 0.4590  mix_decode.d6.loss_cls: 0.1312  mix_decode.d6.loss_mask: 0.3968  mix_decode.d6.loss_dice: 0.4642  mix_decode.d7.loss_cls: 0.1154  mix_decode.d7.loss_mask: 0.3958  mix_decode.d7.loss_dice: 0.4648  mix_decode.d8.loss_cls: 0.1862  mix_decode.d8.loss_mask: 0.3825  mix_decode.d8.loss_dice: 0.4610
2025/03/27 15:44:38 - mmengine - INFO - Iter(train) [17850/20000]  base_lr: 1.3437e-05 lr: 1.3437e-05  eta: 0:34:12  time: 1.0908  data_time: 0.0237  memory: 10815  loss: 31.2002  decode.loss_cls: 0.1925  decode.loss_mask: 0.8833  decode.loss_dice: 1.0891  decode.d0.loss_cls: 0.2718  decode.d0.loss_mask: 0.9339  decode.d0.loss_dice: 1.1375  decode.d1.loss_cls: 0.1622  decode.d1.loss_mask: 0.9320  decode.d1.loss_dice: 1.1411  decode.d2.loss_cls: 0.1952  decode.d2.loss_mask: 0.8830  decode.d2.loss_dice: 1.0587  decode.d3.loss_cls: 0.1778  decode.d3.loss_mask: 0.9062  decode.d3.loss_dice: 1.0861  decode.d4.loss_cls: 0.1606  decode.d4.loss_mask: 0.9241  decode.d4.loss_dice: 1.1246  decode.d5.loss_cls: 0.1843  decode.d5.loss_mask: 0.9130  decode.d5.loss_dice: 1.0684  decode.d6.loss_cls: 0.1618  decode.d6.loss_mask: 0.9301  decode.d6.loss_dice: 1.1027  decode.d7.loss_cls: 0.1498  decode.d7.loss_mask: 0.9202  decode.d7.loss_dice: 1.0905  decode.d8.loss_cls: 0.1525  decode.d8.loss_mask: 0.9226  decode.d8.loss_dice: 1.0872  mix_decode.loss_cls: 0.1050  mix_decode.loss_mask: 0.3510  mix_decode.loss_dice: 0.4449  mix_decode.d0.loss_cls: 0.1175  mix_decode.d0.loss_mask: 0.3526  mix_decode.d0.loss_dice: 0.5071  mix_decode.d1.loss_cls: 0.1069  mix_decode.d1.loss_mask: 0.3591  mix_decode.d1.loss_dice: 0.4850  mix_decode.d2.loss_cls: 0.1299  mix_decode.d2.loss_mask: 0.3576  mix_decode.d2.loss_dice: 0.4585  mix_decode.d3.loss_cls: 0.1205  mix_decode.d3.loss_mask: 0.3469  mix_decode.d3.loss_dice: 0.4654  mix_decode.d4.loss_cls: 0.0926  mix_decode.d4.loss_mask: 0.3535  mix_decode.d4.loss_dice: 0.4689  mix_decode.d5.loss_cls: 0.0879  mix_decode.d5.loss_mask: 0.3531  mix_decode.d5.loss_dice: 0.4633  mix_decode.d6.loss_cls: 0.0911  mix_decode.d6.loss_mask: 0.3508  mix_decode.d6.loss_dice: 0.4583  mix_decode.d7.loss_cls: 0.0957  mix_decode.d7.loss_mask: 0.3487  mix_decode.d7.loss_dice: 0.4681  mix_decode.d8.loss_cls: 0.1197  mix_decode.d8.loss_mask: 0.3526  mix_decode.d8.loss_dice: 0.4452
2025/03/27 15:45:32 - mmengine - INFO - Iter(train) [17900/20000]  base_lr: 1.3155e-05 lr: 1.3155e-05  eta: 0:33:25  time: 1.0758  data_time: 0.0222  memory: 10801  loss: 34.4609  decode.loss_cls: 0.2531  decode.loss_mask: 1.0242  decode.loss_dice: 1.1642  decode.d0.loss_cls: 0.3557  decode.d0.loss_mask: 0.9905  decode.d0.loss_dice: 1.1522  decode.d1.loss_cls: 0.2691  decode.d1.loss_mask: 0.9624  decode.d1.loss_dice: 1.1053  decode.d2.loss_cls: 0.3470  decode.d2.loss_mask: 0.9554  decode.d2.loss_dice: 1.1321  decode.d3.loss_cls: 0.3165  decode.d3.loss_mask: 0.9617  decode.d3.loss_dice: 1.1247  decode.d4.loss_cls: 0.2952  decode.d4.loss_mask: 0.9642  decode.d4.loss_dice: 1.1470  decode.d5.loss_cls: 0.2595  decode.d5.loss_mask: 1.0132  decode.d5.loss_dice: 1.1450  decode.d6.loss_cls: 0.3337  decode.d6.loss_mask: 0.9433  decode.d6.loss_dice: 1.1517  decode.d7.loss_cls: 0.2970  decode.d7.loss_mask: 1.0089  decode.d7.loss_dice: 1.1568  decode.d8.loss_cls: 0.3162  decode.d8.loss_mask: 0.9679  decode.d8.loss_dice: 1.1784  mix_decode.loss_cls: 0.1009  mix_decode.loss_mask: 0.3841  mix_decode.loss_dice: 0.5085  mix_decode.d0.loss_cls: 0.1411  mix_decode.d0.loss_mask: 0.3929  mix_decode.d0.loss_dice: 0.5567  mix_decode.d1.loss_cls: 0.0942  mix_decode.d1.loss_mask: 0.3850  mix_decode.d1.loss_dice: 0.5360  mix_decode.d2.loss_cls: 0.0936  mix_decode.d2.loss_mask: 0.3859  mix_decode.d2.loss_dice: 0.5319  mix_decode.d3.loss_cls: 0.0814  mix_decode.d3.loss_mask: 0.3892  mix_decode.d3.loss_dice: 0.5227  mix_decode.d4.loss_cls: 0.1207  mix_decode.d4.loss_mask: 0.3822  mix_decode.d4.loss_dice: 0.5168  mix_decode.d5.loss_cls: 0.1272  mix_decode.d5.loss_mask: 0.3932  mix_decode.d5.loss_dice: 0.5081  mix_decode.d6.loss_cls: 0.0867  mix_decode.d6.loss_mask: 0.3898  mix_decode.d6.loss_dice: 0.5165  mix_decode.d7.loss_cls: 0.0995  mix_decode.d7.loss_mask: 0.3988  mix_decode.d7.loss_dice: 0.5212  mix_decode.d8.loss_cls: 0.0893  mix_decode.d8.loss_mask: 0.3966  mix_decode.d8.loss_dice: 0.5178
2025/03/27 15:46:27 - mmengine - INFO - Iter(train) [17950/20000]  base_lr: 1.2873e-05 lr: 1.2873e-05  eta: 0:32:38  time: 1.0908  data_time: 0.0241  memory: 10806  loss: 36.1296  decode.loss_cls: 0.1680  decode.loss_mask: 1.1105  decode.loss_dice: 1.3239  decode.d0.loss_cls: 0.2094  decode.d0.loss_mask: 1.1439  decode.d0.loss_dice: 1.3338  decode.d1.loss_cls: 0.2527  decode.d1.loss_mask: 1.1023  decode.d1.loss_dice: 1.3153  decode.d2.loss_cls: 0.2184  decode.d2.loss_mask: 1.0881  decode.d2.loss_dice: 1.2476  decode.d3.loss_cls: 0.1836  decode.d3.loss_mask: 1.0649  decode.d3.loss_dice: 1.2534  decode.d4.loss_cls: 0.1801  decode.d4.loss_mask: 1.0770  decode.d4.loss_dice: 1.2902  decode.d5.loss_cls: 0.2767  decode.d5.loss_mask: 1.0691  decode.d5.loss_dice: 1.2638  decode.d6.loss_cls: 0.2189  decode.d6.loss_mask: 1.0807  decode.d6.loss_dice: 1.2624  decode.d7.loss_cls: 0.2105  decode.d7.loss_mask: 1.0837  decode.d7.loss_dice: 1.2836  decode.d8.loss_cls: 0.2455  decode.d8.loss_mask: 1.0974  decode.d8.loss_dice: 1.2785  mix_decode.loss_cls: 0.1172  mix_decode.loss_mask: 0.3894  mix_decode.loss_dice: 0.5183  mix_decode.d0.loss_cls: 0.0761  mix_decode.d0.loss_mask: 0.4035  mix_decode.d0.loss_dice: 0.5764  mix_decode.d1.loss_cls: 0.0853  mix_decode.d1.loss_mask: 0.3933  mix_decode.d1.loss_dice: 0.5415  mix_decode.d2.loss_cls: 0.0922  mix_decode.d2.loss_mask: 0.3845  mix_decode.d2.loss_dice: 0.5269  mix_decode.d3.loss_cls: 0.1092  mix_decode.d3.loss_mask: 0.3817  mix_decode.d3.loss_dice: 0.5113  mix_decode.d4.loss_cls: 0.0881  mix_decode.d4.loss_mask: 0.3970  mix_decode.d4.loss_dice: 0.5410  mix_decode.d5.loss_cls: 0.1174  mix_decode.d5.loss_mask: 0.3981  mix_decode.d5.loss_dice: 0.5154  mix_decode.d6.loss_cls: 0.1053  mix_decode.d6.loss_mask: 0.3892  mix_decode.d6.loss_dice: 0.5124  mix_decode.d7.loss_cls: 0.1005  mix_decode.d7.loss_mask: 0.3857  mix_decode.d7.loss_dice: 0.5213  mix_decode.d8.loss_cls: 0.1019  mix_decode.d8.loss_mask: 0.3932  mix_decode.d8.loss_dice: 0.5219
2025/03/27 15:47:21 - mmengine - INFO - Exp name: pr2vi_20250327_105544
2025/03/27 15:47:21 - mmengine - INFO - Iter(train) [18000/20000]  base_lr: 1.2590e-05 lr: 1.2590e-05  eta: 0:31:51  time: 1.0764  data_time: 0.0220  memory: 10809  loss: 31.9206  decode.loss_cls: 0.0954  decode.loss_mask: 0.9680  decode.loss_dice: 1.1189  decode.d0.loss_cls: 0.1901  decode.d0.loss_mask: 0.9914  decode.d0.loss_dice: 1.1769  decode.d1.loss_cls: 0.2245  decode.d1.loss_mask: 0.9694  decode.d1.loss_dice: 1.0704  decode.d2.loss_cls: 0.2197  decode.d2.loss_mask: 0.9469  decode.d2.loss_dice: 1.0459  decode.d3.loss_cls: 0.1493  decode.d3.loss_mask: 0.9565  decode.d3.loss_dice: 1.0605  decode.d4.loss_cls: 0.1325  decode.d4.loss_mask: 0.9743  decode.d4.loss_dice: 1.0854  decode.d5.loss_cls: 0.1498  decode.d5.loss_mask: 0.9504  decode.d5.loss_dice: 1.0796  decode.d6.loss_cls: 0.1356  decode.d6.loss_mask: 0.9639  decode.d6.loss_dice: 1.0695  decode.d7.loss_cls: 0.1812  decode.d7.loss_mask: 0.9477  decode.d7.loss_dice: 1.0803  decode.d8.loss_cls: 0.1079  decode.d8.loss_mask: 0.9606  decode.d8.loss_dice: 1.1100  mix_decode.loss_cls: 0.0734  mix_decode.loss_mask: 0.3708  mix_decode.loss_dice: 0.5295  mix_decode.d0.loss_cls: 0.0656  mix_decode.d0.loss_mask: 0.3738  mix_decode.d0.loss_dice: 0.5803  mix_decode.d1.loss_cls: 0.0906  mix_decode.d1.loss_mask: 0.3736  mix_decode.d1.loss_dice: 0.5264  mix_decode.d2.loss_cls: 0.0822  mix_decode.d2.loss_mask: 0.3743  mix_decode.d2.loss_dice: 0.5238  mix_decode.d3.loss_cls: 0.0716  mix_decode.d3.loss_mask: 0.3826  mix_decode.d3.loss_dice: 0.5162  mix_decode.d4.loss_cls: 0.0801  mix_decode.d4.loss_mask: 0.3757  mix_decode.d4.loss_dice: 0.5246  mix_decode.d5.loss_cls: 0.0729  mix_decode.d5.loss_mask: 0.3776  mix_decode.d5.loss_dice: 0.5248  mix_decode.d6.loss_cls: 0.0767  mix_decode.d6.loss_mask: 0.3781  mix_decode.d6.loss_dice: 0.5265  mix_decode.d7.loss_cls: 0.0678  mix_decode.d7.loss_mask: 0.3735  mix_decode.d7.loss_dice: 0.5272  mix_decode.d8.loss_cls: 0.0761  mix_decode.d8.loss_mask: 0.3694  mix_decode.d8.loss_dice: 0.5224
2025/03/27 15:47:21 - mmengine - INFO - Saving checkpoint at 18000 iterations
2025/03/27 15:47:27 - mmengine - INFO - Iter(val) [ 50/398]    eta: 0:00:30  time: 0.0853  data_time: 0.0019  memory: 3120  
2025/03/27 15:47:31 - mmengine - INFO - Iter(val) [100/398]    eta: 0:00:25  time: 0.0852  data_time: 0.0017  memory: 3120  
2025/03/27 15:47:35 - mmengine - INFO - Iter(val) [150/398]    eta: 0:00:21  time: 0.0848  data_time: 0.0015  memory: 3120  
2025/03/27 15:47:40 - mmengine - INFO - Iter(val) [200/398]    eta: 0:00:16  time: 0.0849  data_time: 0.0017  memory: 3120  
2025/03/27 15:47:44 - mmengine - INFO - Iter(val) [250/398]    eta: 0:00:12  time: 0.0850  data_time: 0.0017  memory: 3120  
2025/03/27 15:47:48 - mmengine - INFO - Iter(val) [300/398]    eta: 0:00:08  time: 0.0850  data_time: 0.0016  memory: 3120  
2025/03/27 15:47:52 - mmengine - INFO - Iter(val) [350/398]    eta: 0:00:04  time: 0.0850  data_time: 0.0016  memory: 3120  
2025/03/27 15:47:56 - mmengine - INFO - per class results:
2025/03/27 15:47:56 - mmengine - INFO - 
+--------------------+-------+-------+
|       Class        |  IoU  |  Acc  |
+--------------------+-------+-------+
| impervious_surface | 78.97 | 89.83 |
|      building      | 89.34 | 95.59 |
|   low_vegetation   | 64.57 | 75.45 |
|        tree        | 74.07 | 81.11 |
|        car         | 61.41 | 80.52 |
|      clutter       | 29.11 | 93.61 |
+--------------------+-------+-------+
2025/03/27 15:47:56 - mmengine - INFO - Iter(val) [398/398]    aAcc: 86.0700  mIoU: 66.2400  mAcc: 86.0200  data_time: 0.0018  time: 0.0853
2025/03/27 15:48:50 - mmengine - INFO - Iter(train) [18050/20000]  base_lr: 1.2306e-05 lr: 1.2306e-05  eta: 0:31:04  time: 1.0774  data_time: 0.0221  memory: 10801  loss: 31.2167  decode.loss_cls: 0.3591  decode.loss_mask: 0.9890  decode.loss_dice: 1.0144  decode.d0.loss_cls: 0.2733  decode.d0.loss_mask: 1.0008  decode.d0.loss_dice: 1.0892  decode.d1.loss_cls: 0.2293  decode.d1.loss_mask: 0.9643  decode.d1.loss_dice: 1.0372  decode.d2.loss_cls: 0.3157  decode.d2.loss_mask: 0.9501  decode.d2.loss_dice: 0.9941  decode.d3.loss_cls: 0.2913  decode.d3.loss_mask: 0.9816  decode.d3.loss_dice: 1.0459  decode.d4.loss_cls: 0.3005  decode.d4.loss_mask: 0.9813  decode.d4.loss_dice: 1.0127  decode.d5.loss_cls: 0.2865  decode.d5.loss_mask: 0.9812  decode.d5.loss_dice: 1.0356  decode.d6.loss_cls: 0.2562  decode.d6.loss_mask: 0.9728  decode.d6.loss_dice: 1.0042  decode.d7.loss_cls: 0.2676  decode.d7.loss_mask: 0.9768  decode.d7.loss_dice: 0.9993  decode.d8.loss_cls: 0.2850  decode.d8.loss_mask: 0.9745  decode.d8.loss_dice: 1.0547  mix_decode.loss_cls: 0.0813  mix_decode.loss_mask: 0.3432  mix_decode.loss_dice: 0.4029  mix_decode.d0.loss_cls: 0.0890  mix_decode.d0.loss_mask: 0.3493  mix_decode.d0.loss_dice: 0.4444  mix_decode.d1.loss_cls: 0.0719  mix_decode.d1.loss_mask: 0.3405  mix_decode.d1.loss_dice: 0.4263  mix_decode.d2.loss_cls: 0.0824  mix_decode.d2.loss_mask: 0.3380  mix_decode.d2.loss_dice: 0.4079  mix_decode.d3.loss_cls: 0.0676  mix_decode.d3.loss_mask: 0.3403  mix_decode.d3.loss_dice: 0.4070  mix_decode.d4.loss_cls: 0.0643  mix_decode.d4.loss_mask: 0.3429  mix_decode.d4.loss_dice: 0.4114  mix_decode.d5.loss_cls: 0.0674  mix_decode.d5.loss_mask: 0.3374  mix_decode.d5.loss_dice: 0.4066  mix_decode.d6.loss_cls: 0.0915  mix_decode.d6.loss_mask: 0.3392  mix_decode.d6.loss_dice: 0.3984  mix_decode.d7.loss_cls: 0.0500  mix_decode.d7.loss_mask: 0.3425  mix_decode.d7.loss_dice: 0.4250  mix_decode.d8.loss_cls: 0.0485  mix_decode.d8.loss_mask: 0.3505  mix_decode.d8.loss_dice: 0.4246
2025/03/27 15:49:45 - mmengine - INFO - Iter(train) [18100/20000]  base_lr: 1.2022e-05 lr: 1.2022e-05  eta: 0:30:17  time: 1.0760  data_time: 0.0219  memory: 10812  loss: 27.5524  decode.loss_cls: 0.0702  decode.loss_mask: 0.7781  decode.loss_dice: 0.9500  decode.d0.loss_cls: 0.1273  decode.d0.loss_mask: 0.8058  decode.d0.loss_dice: 1.0149  decode.d1.loss_cls: 0.0917  decode.d1.loss_mask: 0.7873  decode.d1.loss_dice: 0.9681  decode.d2.loss_cls: 0.0521  decode.d2.loss_mask: 0.7797  decode.d2.loss_dice: 0.9431  decode.d3.loss_cls: 0.0465  decode.d3.loss_mask: 0.7749  decode.d3.loss_dice: 0.9519  decode.d4.loss_cls: 0.0458  decode.d4.loss_mask: 0.7740  decode.d4.loss_dice: 0.9443  decode.d5.loss_cls: 0.0527  decode.d5.loss_mask: 0.7760  decode.d5.loss_dice: 0.9427  decode.d6.loss_cls: 0.0976  decode.d6.loss_mask: 0.7817  decode.d6.loss_dice: 0.9445  decode.d7.loss_cls: 0.0856  decode.d7.loss_mask: 0.7838  decode.d7.loss_dice: 0.9327  decode.d8.loss_cls: 0.0768  decode.d8.loss_mask: 0.7776  decode.d8.loss_dice: 0.9398  mix_decode.loss_cls: 0.0395  mix_decode.loss_mask: 0.3936  mix_decode.loss_dice: 0.5063  mix_decode.d0.loss_cls: 0.0843  mix_decode.d0.loss_mask: 0.3801  mix_decode.d0.loss_dice: 0.5209  mix_decode.d1.loss_cls: 0.0673  mix_decode.d1.loss_mask: 0.3766  mix_decode.d1.loss_dice: 0.4931  mix_decode.d2.loss_cls: 0.0480  mix_decode.d2.loss_mask: 0.3803  mix_decode.d2.loss_dice: 0.4831  mix_decode.d3.loss_cls: 0.0640  mix_decode.d3.loss_mask: 0.3811  mix_decode.d3.loss_dice: 0.4881  mix_decode.d4.loss_cls: 0.0436  mix_decode.d4.loss_mask: 0.3870  mix_decode.d4.loss_dice: 0.4935  mix_decode.d5.loss_cls: 0.0711  mix_decode.d5.loss_mask: 0.3993  mix_decode.d5.loss_dice: 0.4975  mix_decode.d6.loss_cls: 0.0603  mix_decode.d6.loss_mask: 0.3951  mix_decode.d6.loss_dice: 0.4981  mix_decode.d7.loss_cls: 0.0576  mix_decode.d7.loss_mask: 0.3956  mix_decode.d7.loss_dice: 0.5051  mix_decode.d8.loss_cls: 0.0378  mix_decode.d8.loss_mask: 0.4017  mix_decode.d8.loss_dice: 0.5057
2025/03/27 15:50:39 - mmengine - INFO - Iter(train) [18150/20000]  base_lr: 1.1737e-05 lr: 1.1737e-05  eta: 0:29:30  time: 1.0811  data_time: 0.0227  memory: 10803  loss: 32.7549  decode.loss_cls: 0.1101  decode.loss_mask: 0.8923  decode.loss_dice: 1.1636  decode.d0.loss_cls: 0.1358  decode.d0.loss_mask: 0.9437  decode.d0.loss_dice: 1.2066  decode.d1.loss_cls: 0.1279  decode.d1.loss_mask: 0.8816  decode.d1.loss_dice: 1.1672  decode.d2.loss_cls: 0.1357  decode.d2.loss_mask: 0.8899  decode.d2.loss_dice: 1.1393  decode.d3.loss_cls: 0.1314  decode.d3.loss_mask: 0.8838  decode.d3.loss_dice: 1.1303  decode.d4.loss_cls: 0.1006  decode.d4.loss_mask: 0.8898  decode.d4.loss_dice: 1.1445  decode.d5.loss_cls: 0.1273  decode.d5.loss_mask: 0.8932  decode.d5.loss_dice: 1.1419  decode.d6.loss_cls: 0.1030  decode.d6.loss_mask: 0.9009  decode.d6.loss_dice: 1.1638  decode.d7.loss_cls: 0.1144  decode.d7.loss_mask: 0.9039  decode.d7.loss_dice: 1.1522  decode.d8.loss_cls: 0.1046  decode.d8.loss_mask: 0.9003  decode.d8.loss_dice: 1.1542  mix_decode.loss_cls: 0.0777  mix_decode.loss_mask: 0.4088  mix_decode.loss_dice: 0.6103  mix_decode.d0.loss_cls: 0.0708  mix_decode.d0.loss_mask: 0.4161  mix_decode.d0.loss_dice: 0.6201  mix_decode.d1.loss_cls: 0.1049  mix_decode.d1.loss_mask: 0.4024  mix_decode.d1.loss_dice: 0.6017  mix_decode.d2.loss_cls: 0.0794  mix_decode.d2.loss_mask: 0.4086  mix_decode.d2.loss_dice: 0.6060  mix_decode.d3.loss_cls: 0.0936  mix_decode.d3.loss_mask: 0.4175  mix_decode.d3.loss_dice: 0.6023  mix_decode.d4.loss_cls: 0.0911  mix_decode.d4.loss_mask: 0.4006  mix_decode.d4.loss_dice: 0.6083  mix_decode.d5.loss_cls: 0.0801  mix_decode.d5.loss_mask: 0.4169  mix_decode.d5.loss_dice: 0.6134  mix_decode.d6.loss_cls: 0.0700  mix_decode.d6.loss_mask: 0.4025  mix_decode.d6.loss_dice: 0.6166  mix_decode.d7.loss_cls: 0.0729  mix_decode.d7.loss_mask: 0.4065  mix_decode.d7.loss_dice: 0.6213  mix_decode.d8.loss_cls: 0.0765  mix_decode.d8.loss_mask: 0.4032  mix_decode.d8.loss_dice: 0.6208
2025/03/27 15:51:34 - mmengine - INFO - Iter(train) [18200/20000]  base_lr: 1.1451e-05 lr: 1.1451e-05  eta: 0:28:43  time: 1.0943  data_time: 0.0220  memory: 10803  loss: 34.1675  decode.loss_cls: 0.2699  decode.loss_mask: 0.9469  decode.loss_dice: 1.2206  decode.d0.loss_cls: 0.1886  decode.d0.loss_mask: 0.9327  decode.d0.loss_dice: 1.3186  decode.d1.loss_cls: 0.1865  decode.d1.loss_mask: 0.9385  decode.d1.loss_dice: 1.2771  decode.d2.loss_cls: 0.2191  decode.d2.loss_mask: 0.9464  decode.d2.loss_dice: 1.2889  decode.d3.loss_cls: 0.2797  decode.d3.loss_mask: 0.9222  decode.d3.loss_dice: 1.2428  decode.d4.loss_cls: 0.2102  decode.d4.loss_mask: 0.9506  decode.d4.loss_dice: 1.3000  decode.d5.loss_cls: 0.2467  decode.d5.loss_mask: 0.9538  decode.d5.loss_dice: 1.2837  decode.d6.loss_cls: 0.3283  decode.d6.loss_mask: 0.9347  decode.d6.loss_dice: 1.2304  decode.d7.loss_cls: 0.2235  decode.d7.loss_mask: 0.9410  decode.d7.loss_dice: 1.2236  decode.d8.loss_cls: 0.2253  decode.d8.loss_mask: 0.9505  decode.d8.loss_dice: 1.2515  mix_decode.loss_cls: 0.1033  mix_decode.loss_mask: 0.3434  mix_decode.loss_dice: 0.5143  mix_decode.d0.loss_cls: 0.0794  mix_decode.d0.loss_mask: 0.3409  mix_decode.d0.loss_dice: 0.5588  mix_decode.d1.loss_cls: 0.1040  mix_decode.d1.loss_mask: 0.3475  mix_decode.d1.loss_dice: 0.5301  mix_decode.d2.loss_cls: 0.1171  mix_decode.d2.loss_mask: 0.3468  mix_decode.d2.loss_dice: 0.5159  mix_decode.d3.loss_cls: 0.1482  mix_decode.d3.loss_mask: 0.3441  mix_decode.d3.loss_dice: 0.5185  mix_decode.d4.loss_cls: 0.1058  mix_decode.d4.loss_mask: 0.3409  mix_decode.d4.loss_dice: 0.5215  mix_decode.d5.loss_cls: 0.1124  mix_decode.d5.loss_mask: 0.3422  mix_decode.d5.loss_dice: 0.5232  mix_decode.d6.loss_cls: 0.0871  mix_decode.d6.loss_mask: 0.3440  mix_decode.d6.loss_dice: 0.5177  mix_decode.d7.loss_cls: 0.0893  mix_decode.d7.loss_mask: 0.3410  mix_decode.d7.loss_dice: 0.5207  mix_decode.d8.loss_cls: 0.1163  mix_decode.d8.loss_mask: 0.3442  mix_decode.d8.loss_dice: 0.5164
2025/03/27 15:52:29 - mmengine - INFO - Iter(train) [18250/20000]  base_lr: 1.1164e-05 lr: 1.1164e-05  eta: 0:27:56  time: 1.1267  data_time: 0.0267  memory: 10804  loss: 29.3215  decode.loss_cls: 0.2464  decode.loss_mask: 0.8283  decode.loss_dice: 0.9323  decode.d0.loss_cls: 0.2769  decode.d0.loss_mask: 0.8505  decode.d0.loss_dice: 1.0505  decode.d1.loss_cls: 0.2235  decode.d1.loss_mask: 0.8275  decode.d1.loss_dice: 0.9568  decode.d2.loss_cls: 0.2682  decode.d2.loss_mask: 0.8367  decode.d2.loss_dice: 0.9564  decode.d3.loss_cls: 0.2794  decode.d3.loss_mask: 0.8233  decode.d3.loss_dice: 0.9273  decode.d4.loss_cls: 0.3103  decode.d4.loss_mask: 0.8268  decode.d4.loss_dice: 0.9245  decode.d5.loss_cls: 0.2663  decode.d5.loss_mask: 0.8276  decode.d5.loss_dice: 0.9161  decode.d6.loss_cls: 0.2657  decode.d6.loss_mask: 0.8194  decode.d6.loss_dice: 0.9280  decode.d7.loss_cls: 0.2596  decode.d7.loss_mask: 0.8287  decode.d7.loss_dice: 0.9596  decode.d8.loss_cls: 0.2617  decode.d8.loss_mask: 0.8229  decode.d8.loss_dice: 0.9454  mix_decode.loss_cls: 0.1160  mix_decode.loss_mask: 0.3159  mix_decode.loss_dice: 0.4426  mix_decode.d0.loss_cls: 0.1037  mix_decode.d0.loss_mask: 0.3298  mix_decode.d0.loss_dice: 0.5187  mix_decode.d1.loss_cls: 0.1314  mix_decode.d1.loss_mask: 0.3158  mix_decode.d1.loss_dice: 0.4602  mix_decode.d2.loss_cls: 0.1080  mix_decode.d2.loss_mask: 0.3143  mix_decode.d2.loss_dice: 0.4419  mix_decode.d3.loss_cls: 0.1042  mix_decode.d3.loss_mask: 0.3138  mix_decode.d3.loss_dice: 0.4528  mix_decode.d4.loss_cls: 0.1229  mix_decode.d4.loss_mask: 0.3101  mix_decode.d4.loss_dice: 0.4473  mix_decode.d5.loss_cls: 0.1262  mix_decode.d5.loss_mask: 0.3128  mix_decode.d5.loss_dice: 0.4456  mix_decode.d6.loss_cls: 0.1329  mix_decode.d6.loss_mask: 0.3110  mix_decode.d6.loss_dice: 0.4458  mix_decode.d7.loss_cls: 0.1227  mix_decode.d7.loss_mask: 0.3109  mix_decode.d7.loss_dice: 0.4442  mix_decode.d8.loss_cls: 0.1195  mix_decode.d8.loss_mask: 0.3138  mix_decode.d8.loss_dice: 0.4400
2025/03/27 15:53:24 - mmengine - INFO - Iter(train) [18300/20000]  base_lr: 1.0877e-05 lr: 1.0877e-05  eta: 0:27:08  time: 1.0743  data_time: 0.0225  memory: 10802  loss: 36.4636  decode.loss_cls: 0.1825  decode.loss_mask: 1.3202  decode.loss_dice: 1.1441  decode.d0.loss_cls: 0.2817  decode.d0.loss_mask: 1.4015  decode.d0.loss_dice: 1.1462  decode.d1.loss_cls: 0.1910  decode.d1.loss_mask: 1.3504  decode.d1.loss_dice: 1.1371  decode.d2.loss_cls: 0.1738  decode.d2.loss_mask: 1.3414  decode.d2.loss_dice: 1.1554  decode.d3.loss_cls: 0.2037  decode.d3.loss_mask: 1.3032  decode.d3.loss_dice: 1.1117  decode.d4.loss_cls: 0.1965  decode.d4.loss_mask: 1.3029  decode.d4.loss_dice: 1.1175  decode.d5.loss_cls: 0.2033  decode.d5.loss_mask: 1.3140  decode.d5.loss_dice: 1.1379  decode.d6.loss_cls: 0.1871  decode.d6.loss_mask: 1.3538  decode.d6.loss_dice: 1.1218  decode.d7.loss_cls: 0.1726  decode.d7.loss_mask: 1.3301  decode.d7.loss_dice: 1.1271  decode.d8.loss_cls: 0.1759  decode.d8.loss_mask: 1.3249  decode.d8.loss_dice: 1.1297  mix_decode.loss_cls: 0.1047  mix_decode.loss_mask: 0.3743  mix_decode.loss_dice: 0.4863  mix_decode.d0.loss_cls: 0.1291  mix_decode.d0.loss_mask: 0.4023  mix_decode.d0.loss_dice: 0.5462  mix_decode.d1.loss_cls: 0.1277  mix_decode.d1.loss_mask: 0.3754  mix_decode.d1.loss_dice: 0.4816  mix_decode.d2.loss_cls: 0.1480  mix_decode.d2.loss_mask: 0.3788  mix_decode.d2.loss_dice: 0.4564  mix_decode.d3.loss_cls: 0.1399  mix_decode.d3.loss_mask: 0.3772  mix_decode.d3.loss_dice: 0.4570  mix_decode.d4.loss_cls: 0.1640  mix_decode.d4.loss_mask: 0.3719  mix_decode.d4.loss_dice: 0.4588  mix_decode.d5.loss_cls: 0.1352  mix_decode.d5.loss_mask: 0.3773  mix_decode.d5.loss_dice: 0.4519  mix_decode.d6.loss_cls: 0.1377  mix_decode.d6.loss_mask: 0.3745  mix_decode.d6.loss_dice: 0.4535  mix_decode.d7.loss_cls: 0.1020  mix_decode.d7.loss_mask: 0.3756  mix_decode.d7.loss_dice: 0.4822  mix_decode.d8.loss_cls: 0.1059  mix_decode.d8.loss_mask: 0.3716  mix_decode.d8.loss_dice: 0.4777
2025/03/27 15:54:18 - mmengine - INFO - Iter(train) [18350/20000]  base_lr: 1.0588e-05 lr: 1.0588e-05  eta: 0:26:21  time: 1.0771  data_time: 0.0221  memory: 10806  loss: 36.6897  decode.loss_cls: 0.3084  decode.loss_mask: 1.0430  decode.loss_dice: 1.2328  decode.d0.loss_cls: 0.4048  decode.d0.loss_mask: 1.0563  decode.d0.loss_dice: 1.2953  decode.d1.loss_cls: 0.3743  decode.d1.loss_mask: 1.0153  decode.d1.loss_dice: 1.1544  decode.d2.loss_cls: 0.3046  decode.d2.loss_mask: 1.0363  decode.d2.loss_dice: 1.1738  decode.d3.loss_cls: 0.2829  decode.d3.loss_mask: 1.0844  decode.d3.loss_dice: 1.2270  decode.d4.loss_cls: 0.3387  decode.d4.loss_mask: 1.0241  decode.d4.loss_dice: 1.1973  decode.d5.loss_cls: 0.3257  decode.d5.loss_mask: 1.0491  decode.d5.loss_dice: 1.2365  decode.d6.loss_cls: 0.3478  decode.d6.loss_mask: 1.1247  decode.d6.loss_dice: 1.2416  decode.d7.loss_cls: 0.3126  decode.d7.loss_mask: 1.0383  decode.d7.loss_dice: 1.1961  decode.d8.loss_cls: 0.2801  decode.d8.loss_mask: 1.1116  decode.d8.loss_dice: 1.2195  mix_decode.loss_cls: 0.0831  mix_decode.loss_mask: 0.4457  mix_decode.loss_dice: 0.5275  mix_decode.d0.loss_cls: 0.0736  mix_decode.d0.loss_mask: 0.4455  mix_decode.d0.loss_dice: 0.5789  mix_decode.d1.loss_cls: 0.0893  mix_decode.d1.loss_mask: 0.4459  mix_decode.d1.loss_dice: 0.5475  mix_decode.d2.loss_cls: 0.0801  mix_decode.d2.loss_mask: 0.4491  mix_decode.d2.loss_dice: 0.5309  mix_decode.d3.loss_cls: 0.0784  mix_decode.d3.loss_mask: 0.4562  mix_decode.d3.loss_dice: 0.5262  mix_decode.d4.loss_cls: 0.0619  mix_decode.d4.loss_mask: 0.4513  mix_decode.d4.loss_dice: 0.5366  mix_decode.d5.loss_cls: 0.0805  mix_decode.d5.loss_mask: 0.4420  mix_decode.d5.loss_dice: 0.5254  mix_decode.d6.loss_cls: 0.0821  mix_decode.d6.loss_mask: 0.4569  mix_decode.d6.loss_dice: 0.5448  mix_decode.d7.loss_cls: 0.0820  mix_decode.d7.loss_mask: 0.4543  mix_decode.d7.loss_dice: 0.5442  mix_decode.d8.loss_cls: 0.0834  mix_decode.d8.loss_mask: 0.4356  mix_decode.d8.loss_dice: 0.5135
2025/03/27 15:55:12 - mmengine - INFO - Iter(train) [18400/20000]  base_lr: 1.0299e-05 lr: 1.0299e-05  eta: 0:25:34  time: 1.0768  data_time: 0.0222  memory: 10806  loss: 27.6226  decode.loss_cls: 0.1712  decode.loss_mask: 0.7183  decode.loss_dice: 0.9738  decode.d0.loss_cls: 0.2580  decode.d0.loss_mask: 0.7178  decode.d0.loss_dice: 1.0171  decode.d1.loss_cls: 0.1934  decode.d1.loss_mask: 0.7078  decode.d1.loss_dice: 0.9788  decode.d2.loss_cls: 0.1616  decode.d2.loss_mask: 0.7041  decode.d2.loss_dice: 0.9589  decode.d3.loss_cls: 0.1757  decode.d3.loss_mask: 0.6919  decode.d3.loss_dice: 0.9532  decode.d4.loss_cls: 0.2227  decode.d4.loss_mask: 0.6999  decode.d4.loss_dice: 0.9551  decode.d5.loss_cls: 0.1559  decode.d5.loss_mask: 0.7089  decode.d5.loss_dice: 0.9680  decode.d6.loss_cls: 0.2057  decode.d6.loss_mask: 0.7035  decode.d6.loss_dice: 0.9685  decode.d7.loss_cls: 0.1711  decode.d7.loss_mask: 0.7119  decode.d7.loss_dice: 0.9754  decode.d8.loss_cls: 0.1654  decode.d8.loss_mask: 0.7181  decode.d8.loss_dice: 0.9775  mix_decode.loss_cls: 0.0619  mix_decode.loss_mask: 0.3239  mix_decode.loss_dice: 0.4973  mix_decode.d0.loss_cls: 0.0834  mix_decode.d0.loss_mask: 0.3052  mix_decode.d0.loss_dice: 0.5190  mix_decode.d1.loss_cls: 0.0780  mix_decode.d1.loss_mask: 0.3194  mix_decode.d1.loss_dice: 0.5010  mix_decode.d2.loss_cls: 0.0742  mix_decode.d2.loss_mask: 0.3198  mix_decode.d2.loss_dice: 0.5096  mix_decode.d3.loss_cls: 0.0870  mix_decode.d3.loss_mask: 0.3106  mix_decode.d3.loss_dice: 0.4979  mix_decode.d4.loss_cls: 0.0870  mix_decode.d4.loss_mask: 0.3128  mix_decode.d4.loss_dice: 0.4935  mix_decode.d5.loss_cls: 0.0671  mix_decode.d5.loss_mask: 0.3161  mix_decode.d5.loss_dice: 0.4956  mix_decode.d6.loss_cls: 0.0682  mix_decode.d6.loss_mask: 0.3164  mix_decode.d6.loss_dice: 0.4998  mix_decode.d7.loss_cls: 0.0796  mix_decode.d7.loss_mask: 0.3136  mix_decode.d7.loss_dice: 0.4901  mix_decode.d8.loss_cls: 0.0836  mix_decode.d8.loss_mask: 0.3150  mix_decode.d8.loss_dice: 0.5067
2025/03/27 15:56:06 - mmengine - INFO - Iter(train) [18450/20000]  base_lr: 1.0009e-05 lr: 1.0009e-05  eta: 0:24:46  time: 1.0770  data_time: 0.0224  memory: 10807  loss: 33.8778  decode.loss_cls: 0.2567  decode.loss_mask: 1.0562  decode.loss_dice: 1.1131  decode.d0.loss_cls: 0.1981  decode.d0.loss_mask: 1.1017  decode.d0.loss_dice: 1.1640  decode.d1.loss_cls: 0.2031  decode.d1.loss_mask: 1.0705  decode.d1.loss_dice: 1.1410  decode.d2.loss_cls: 0.1707  decode.d2.loss_mask: 1.0886  decode.d2.loss_dice: 1.1467  decode.d3.loss_cls: 0.1875  decode.d3.loss_mask: 1.0993  decode.d3.loss_dice: 1.1732  decode.d4.loss_cls: 0.1909  decode.d4.loss_mask: 1.1080  decode.d4.loss_dice: 1.1763  decode.d5.loss_cls: 0.1884  decode.d5.loss_mask: 1.0738  decode.d5.loss_dice: 1.1454  decode.d6.loss_cls: 0.2012  decode.d6.loss_mask: 1.1156  decode.d6.loss_dice: 1.1655  decode.d7.loss_cls: 0.2253  decode.d7.loss_mask: 1.0744  decode.d7.loss_dice: 1.1140  decode.d8.loss_cls: 0.2171  decode.d8.loss_mask: 1.1051  decode.d8.loss_dice: 1.1482  mix_decode.loss_cls: 0.0873  mix_decode.loss_mask: 0.3396  mix_decode.loss_dice: 0.5180  mix_decode.d0.loss_cls: 0.0731  mix_decode.d0.loss_mask: 0.3456  mix_decode.d0.loss_dice: 0.5867  mix_decode.d1.loss_cls: 0.0605  mix_decode.d1.loss_mask: 0.3491  mix_decode.d1.loss_dice: 0.5428  mix_decode.d2.loss_cls: 0.0925  mix_decode.d2.loss_mask: 0.3421  mix_decode.d2.loss_dice: 0.5192  mix_decode.d3.loss_cls: 0.0782  mix_decode.d3.loss_mask: 0.3367  mix_decode.d3.loss_dice: 0.5208  mix_decode.d4.loss_cls: 0.0687  mix_decode.d4.loss_mask: 0.3422  mix_decode.d4.loss_dice: 0.5376  mix_decode.d5.loss_cls: 0.0558  mix_decode.d5.loss_mask: 0.3349  mix_decode.d5.loss_dice: 0.5324  mix_decode.d6.loss_cls: 0.0615  mix_decode.d6.loss_mask: 0.3369  mix_decode.d6.loss_dice: 0.5349  mix_decode.d7.loss_cls: 0.0676  mix_decode.d7.loss_mask: 0.3430  mix_decode.d7.loss_dice: 0.5334  mix_decode.d8.loss_cls: 0.0661  mix_decode.d8.loss_mask: 0.3400  mix_decode.d8.loss_dice: 0.5109
2025/03/27 15:57:00 - mmengine - INFO - Iter(train) [18500/20000]  base_lr: 9.7180e-06 lr: 9.7180e-06  eta: 0:23:59  time: 1.0770  data_time: 0.0222  memory: 10811  loss: 30.4369  decode.loss_cls: 0.2052  decode.loss_mask: 0.9124  decode.loss_dice: 1.0551  decode.d0.loss_cls: 0.2873  decode.d0.loss_mask: 0.9465  decode.d0.loss_dice: 1.1190  decode.d1.loss_cls: 0.2176  decode.d1.loss_mask: 0.9283  decode.d1.loss_dice: 1.0714  decode.d2.loss_cls: 0.2255  decode.d2.loss_mask: 0.9182  decode.d2.loss_dice: 1.0522  decode.d3.loss_cls: 0.1927  decode.d3.loss_mask: 0.9214  decode.d3.loss_dice: 1.0563  decode.d4.loss_cls: 0.1495  decode.d4.loss_mask: 0.9520  decode.d4.loss_dice: 1.0955  decode.d5.loss_cls: 0.1418  decode.d5.loss_mask: 0.9421  decode.d5.loss_dice: 1.1143  decode.d6.loss_cls: 0.1906  decode.d6.loss_mask: 0.9341  decode.d6.loss_dice: 1.1133  decode.d7.loss_cls: 0.2188  decode.d7.loss_mask: 0.9266  decode.d7.loss_dice: 1.0693  decode.d8.loss_cls: 0.1534  decode.d8.loss_mask: 0.9353  decode.d8.loss_dice: 1.1068  mix_decode.loss_cls: 0.0360  mix_decode.loss_mask: 0.3282  mix_decode.loss_dice: 0.4587  mix_decode.d0.loss_cls: 0.0565  mix_decode.d0.loss_mask: 0.3364  mix_decode.d0.loss_dice: 0.4866  mix_decode.d1.loss_cls: 0.0278  mix_decode.d1.loss_mask: 0.3336  mix_decode.d1.loss_dice: 0.4693  mix_decode.d2.loss_cls: 0.0402  mix_decode.d2.loss_mask: 0.3250  mix_decode.d2.loss_dice: 0.4632  mix_decode.d3.loss_cls: 0.0387  mix_decode.d3.loss_mask: 0.3245  mix_decode.d3.loss_dice: 0.4533  mix_decode.d4.loss_cls: 0.0358  mix_decode.d4.loss_mask: 0.3264  mix_decode.d4.loss_dice: 0.4601  mix_decode.d5.loss_cls: 0.0311  mix_decode.d5.loss_mask: 0.3262  mix_decode.d5.loss_dice: 0.4618  mix_decode.d6.loss_cls: 0.0377  mix_decode.d6.loss_mask: 0.3269  mix_decode.d6.loss_dice: 0.4655  mix_decode.d7.loss_cls: 0.0375  mix_decode.d7.loss_mask: 0.3220  mix_decode.d7.loss_dice: 0.4620  mix_decode.d8.loss_cls: 0.0356  mix_decode.d8.loss_mask: 0.3233  mix_decode.d8.loss_dice: 0.4545
2025/03/27 15:57:54 - mmengine - INFO - Iter(train) [18550/20000]  base_lr: 9.4259e-06 lr: 9.4259e-06  eta: 0:23:11  time: 1.0752  data_time: 0.0219  memory: 10808  loss: 39.2356  decode.loss_cls: 0.2182  decode.loss_mask: 1.2101  decode.loss_dice: 1.3148  decode.d0.loss_cls: 0.2866  decode.d0.loss_mask: 1.2313  decode.d0.loss_dice: 1.3501  decode.d1.loss_cls: 0.2404  decode.d1.loss_mask: 1.2244  decode.d1.loss_dice: 1.3223  decode.d2.loss_cls: 0.2547  decode.d2.loss_mask: 1.2261  decode.d2.loss_dice: 1.2792  decode.d3.loss_cls: 0.2290  decode.d3.loss_mask: 1.2300  decode.d3.loss_dice: 1.2997  decode.d4.loss_cls: 0.2591  decode.d4.loss_mask: 1.2192  decode.d4.loss_dice: 1.3184  decode.d5.loss_cls: 0.1891  decode.d5.loss_mask: 1.2653  decode.d5.loss_dice: 1.2976  decode.d6.loss_cls: 0.2505  decode.d6.loss_mask: 1.2292  decode.d6.loss_dice: 1.2796  decode.d7.loss_cls: 0.1999  decode.d7.loss_mask: 1.2558  decode.d7.loss_dice: 1.3373  decode.d8.loss_cls: 0.2146  decode.d8.loss_mask: 1.2244  decode.d8.loss_dice: 1.3080  mix_decode.loss_cls: 0.1128  mix_decode.loss_mask: 0.3895  mix_decode.loss_dice: 0.6694  mix_decode.d0.loss_cls: 0.0412  mix_decode.d0.loss_mask: 0.3782  mix_decode.d0.loss_dice: 0.7118  mix_decode.d1.loss_cls: 0.0824  mix_decode.d1.loss_mask: 0.3885  mix_decode.d1.loss_dice: 0.6738  mix_decode.d2.loss_cls: 0.0785  mix_decode.d2.loss_mask: 0.3935  mix_decode.d2.loss_dice: 0.6662  mix_decode.d3.loss_cls: 0.1016  mix_decode.d3.loss_mask: 0.3858  mix_decode.d3.loss_dice: 0.6577  mix_decode.d4.loss_cls: 0.0832  mix_decode.d4.loss_mask: 0.3971  mix_decode.d4.loss_dice: 0.6710  mix_decode.d5.loss_cls: 0.0936  mix_decode.d5.loss_mask: 0.3986  mix_decode.d5.loss_dice: 0.6575  mix_decode.d6.loss_cls: 0.0794  mix_decode.d6.loss_mask: 0.4011  mix_decode.d6.loss_dice: 0.6714  mix_decode.d7.loss_cls: 0.0841  mix_decode.d7.loss_mask: 0.3961  mix_decode.d7.loss_dice: 0.6677  mix_decode.d8.loss_cls: 0.0721  mix_decode.d8.loss_mask: 0.3996  mix_decode.d8.loss_dice: 0.6672
2025/03/27 15:58:47 - mmengine - INFO - Iter(train) [18600/20000]  base_lr: 9.1329e-06 lr: 9.1329e-06  eta: 0:22:24  time: 1.0859  data_time: 0.0239  memory: 10802  loss: 31.5721  decode.loss_cls: 0.0893  decode.loss_mask: 1.0148  decode.loss_dice: 1.0715  decode.d0.loss_cls: 0.2193  decode.d0.loss_mask: 1.0049  decode.d0.loss_dice: 1.0780  decode.d1.loss_cls: 0.1247  decode.d1.loss_mask: 1.0011  decode.d1.loss_dice: 1.0443  decode.d2.loss_cls: 0.0931  decode.d2.loss_mask: 1.0036  decode.d2.loss_dice: 1.0482  decode.d3.loss_cls: 0.0943  decode.d3.loss_mask: 1.0091  decode.d3.loss_dice: 1.0551  decode.d4.loss_cls: 0.1352  decode.d4.loss_mask: 1.0037  decode.d4.loss_dice: 1.0612  decode.d5.loss_cls: 0.0930  decode.d5.loss_mask: 1.0075  decode.d5.loss_dice: 1.0476  decode.d6.loss_cls: 0.0962  decode.d6.loss_mask: 1.0081  decode.d6.loss_dice: 1.0593  decode.d7.loss_cls: 0.1046  decode.d7.loss_mask: 1.0080  decode.d7.loss_dice: 1.0457  decode.d8.loss_cls: 0.1312  decode.d8.loss_mask: 1.0005  decode.d8.loss_dice: 1.0480  mix_decode.loss_cls: 0.0753  mix_decode.loss_mask: 0.4283  mix_decode.loss_dice: 0.4850  mix_decode.d0.loss_cls: 0.1239  mix_decode.d0.loss_mask: 0.4086  mix_decode.d0.loss_dice: 0.5055  mix_decode.d1.loss_cls: 0.0742  mix_decode.d1.loss_mask: 0.4199  mix_decode.d1.loss_dice: 0.4778  mix_decode.d2.loss_cls: 0.0783  mix_decode.d2.loss_mask: 0.4133  mix_decode.d2.loss_dice: 0.4654  mix_decode.d3.loss_cls: 0.0613  mix_decode.d3.loss_mask: 0.4154  mix_decode.d3.loss_dice: 0.4740  mix_decode.d4.loss_cls: 0.0914  mix_decode.d4.loss_mask: 0.4150  mix_decode.d4.loss_dice: 0.4852  mix_decode.d5.loss_cls: 0.0907  mix_decode.d5.loss_mask: 0.4153  mix_decode.d5.loss_dice: 0.4651  mix_decode.d6.loss_cls: 0.0925  mix_decode.d6.loss_mask: 0.4083  mix_decode.d6.loss_dice: 0.4644  mix_decode.d7.loss_cls: 0.0780  mix_decode.d7.loss_mask: 0.4095  mix_decode.d7.loss_dice: 0.4863  mix_decode.d8.loss_cls: 0.0776  mix_decode.d8.loss_mask: 0.4059  mix_decode.d8.loss_dice: 0.4794
2025/03/27 15:59:41 - mmengine - INFO - Iter(train) [18650/20000]  base_lr: 8.8388e-06 lr: 8.8388e-06  eta: 0:21:36  time: 1.0781  data_time: 0.0226  memory: 10812  loss: 32.2860  decode.loss_cls: 0.1882  decode.loss_mask: 0.9417  decode.loss_dice: 1.1263  decode.d0.loss_cls: 0.2751  decode.d0.loss_mask: 0.9396  decode.d0.loss_dice: 1.2003  decode.d1.loss_cls: 0.2640  decode.d1.loss_mask: 0.9344  decode.d1.loss_dice: 1.1277  decode.d2.loss_cls: 0.1922  decode.d2.loss_mask: 0.9403  decode.d2.loss_dice: 1.1177  decode.d3.loss_cls: 0.2269  decode.d3.loss_mask: 0.9228  decode.d3.loss_dice: 1.1088  decode.d4.loss_cls: 0.2338  decode.d4.loss_mask: 0.9421  decode.d4.loss_dice: 1.1231  decode.d5.loss_cls: 0.1861  decode.d5.loss_mask: 0.9622  decode.d5.loss_dice: 1.1293  decode.d6.loss_cls: 0.2474  decode.d6.loss_mask: 0.9224  decode.d6.loss_dice: 1.1200  decode.d7.loss_cls: 0.2320  decode.d7.loss_mask: 0.9538  decode.d7.loss_dice: 1.1640  decode.d8.loss_cls: 0.1884  decode.d8.loss_mask: 0.9623  decode.d8.loss_dice: 1.1245  mix_decode.loss_cls: 0.0764  mix_decode.loss_mask: 0.3329  mix_decode.loss_dice: 0.5070  mix_decode.d0.loss_cls: 0.0942  mix_decode.d0.loss_mask: 0.3336  mix_decode.d0.loss_dice: 0.5607  mix_decode.d1.loss_cls: 0.0857  mix_decode.d1.loss_mask: 0.3306  mix_decode.d1.loss_dice: 0.5172  mix_decode.d2.loss_cls: 0.0895  mix_decode.d2.loss_mask: 0.3301  mix_decode.d2.loss_dice: 0.5059  mix_decode.d3.loss_cls: 0.0730  mix_decode.d3.loss_mask: 0.3371  mix_decode.d3.loss_dice: 0.5203  mix_decode.d4.loss_cls: 0.0836  mix_decode.d4.loss_mask: 0.3295  mix_decode.d4.loss_dice: 0.4975  mix_decode.d5.loss_cls: 0.0806  mix_decode.d5.loss_mask: 0.3357  mix_decode.d5.loss_dice: 0.5197  mix_decode.d6.loss_cls: 0.0784  mix_decode.d6.loss_mask: 0.3307  mix_decode.d6.loss_dice: 0.5074  mix_decode.d7.loss_cls: 0.0712  mix_decode.d7.loss_mask: 0.3331  mix_decode.d7.loss_dice: 0.5124  mix_decode.d8.loss_cls: 0.0652  mix_decode.d8.loss_mask: 0.3335  mix_decode.d8.loss_dice: 0.5161
2025/03/27 16:00:36 - mmengine - INFO - Iter(train) [18700/20000]  base_lr: 8.5436e-06 lr: 8.5436e-06  eta: 0:20:49  time: 1.0780  data_time: 0.0221  memory: 10808  loss: 31.4211  decode.loss_cls: 0.0754  decode.loss_mask: 0.9439  decode.loss_dice: 1.1094  decode.d0.loss_cls: 0.1988  decode.d0.loss_mask: 0.9530  decode.d0.loss_dice: 1.1926  decode.d1.loss_cls: 0.1251  decode.d1.loss_mask: 0.9453  decode.d1.loss_dice: 1.1238  decode.d2.loss_cls: 0.1281  decode.d2.loss_mask: 0.9459  decode.d2.loss_dice: 1.1118  decode.d3.loss_cls: 0.0951  decode.d3.loss_mask: 0.9380  decode.d3.loss_dice: 1.1175  decode.d4.loss_cls: 0.0940  decode.d4.loss_mask: 0.9360  decode.d4.loss_dice: 1.1039  decode.d5.loss_cls: 0.0936  decode.d5.loss_mask: 0.9386  decode.d5.loss_dice: 1.1420  decode.d6.loss_cls: 0.1384  decode.d6.loss_mask: 0.8859  decode.d6.loss_dice: 1.0953  decode.d7.loss_cls: 0.1014  decode.d7.loss_mask: 0.9371  decode.d7.loss_dice: 1.1107  decode.d8.loss_cls: 0.0780  decode.d8.loss_mask: 0.9435  decode.d8.loss_dice: 1.1095  mix_decode.loss_cls: 0.0594  mix_decode.loss_mask: 0.3680  mix_decode.loss_dice: 0.5330  mix_decode.d0.loss_cls: 0.0702  mix_decode.d0.loss_mask: 0.3788  mix_decode.d0.loss_dice: 0.5570  mix_decode.d1.loss_cls: 0.0731  mix_decode.d1.loss_mask: 0.3758  mix_decode.d1.loss_dice: 0.5397  mix_decode.d2.loss_cls: 0.0524  mix_decode.d2.loss_mask: 0.3820  mix_decode.d2.loss_dice: 0.5359  mix_decode.d3.loss_cls: 0.0449  mix_decode.d3.loss_mask: 0.3785  mix_decode.d3.loss_dice: 0.5347  mix_decode.d4.loss_cls: 0.0489  mix_decode.d4.loss_mask: 0.3818  mix_decode.d4.loss_dice: 0.5362  mix_decode.d5.loss_cls: 0.0434  mix_decode.d5.loss_mask: 0.3844  mix_decode.d5.loss_dice: 0.5261  mix_decode.d6.loss_cls: 0.0459  mix_decode.d6.loss_mask: 0.3802  mix_decode.d6.loss_dice: 0.5343  mix_decode.d7.loss_cls: 0.0809  mix_decode.d7.loss_mask: 0.3657  mix_decode.d7.loss_dice: 0.5265  mix_decode.d8.loss_cls: 0.0580  mix_decode.d8.loss_mask: 0.3797  mix_decode.d8.loss_dice: 0.5343
2025/03/27 16:01:31 - mmengine - INFO - Iter(train) [18750/20000]  base_lr: 8.2473e-06 lr: 8.2473e-06  eta: 0:20:01  time: 1.0817  data_time: 0.0225  memory: 10804  loss: 30.9410  decode.loss_cls: 0.1328  decode.loss_mask: 1.0326  decode.loss_dice: 1.0346  decode.d0.loss_cls: 0.2188  decode.d0.loss_mask: 1.0430  decode.d0.loss_dice: 1.0638  decode.d1.loss_cls: 0.1174  decode.d1.loss_mask: 1.0192  decode.d1.loss_dice: 1.0227  decode.d2.loss_cls: 0.1308  decode.d2.loss_mask: 1.0245  decode.d2.loss_dice: 1.0292  decode.d3.loss_cls: 0.0961  decode.d3.loss_mask: 1.0253  decode.d3.loss_dice: 1.0425  decode.d4.loss_cls: 0.1089  decode.d4.loss_mask: 1.0148  decode.d4.loss_dice: 1.0380  decode.d5.loss_cls: 0.0979  decode.d5.loss_mask: 1.0228  decode.d5.loss_dice: 1.0415  decode.d6.loss_cls: 0.0966  decode.d6.loss_mask: 1.0284  decode.d6.loss_dice: 1.0422  decode.d7.loss_cls: 0.1095  decode.d7.loss_mask: 1.0355  decode.d7.loss_dice: 1.0453  decode.d8.loss_cls: 0.1179  decode.d8.loss_mask: 1.0286  decode.d8.loss_dice: 1.0367  mix_decode.loss_cls: 0.1346  mix_decode.loss_mask: 0.3220  mix_decode.loss_dice: 0.4820  mix_decode.d0.loss_cls: 0.0965  mix_decode.d0.loss_mask: 0.3072  mix_decode.d0.loss_dice: 0.5333  mix_decode.d1.loss_cls: 0.1344  mix_decode.d1.loss_mask: 0.3173  mix_decode.d1.loss_dice: 0.4723  mix_decode.d2.loss_cls: 0.1080  mix_decode.d2.loss_mask: 0.3123  mix_decode.d2.loss_dice: 0.4715  mix_decode.d3.loss_cls: 0.1409  mix_decode.d3.loss_mask: 0.2994  mix_decode.d3.loss_dice: 0.4458  mix_decode.d4.loss_cls: 0.1064  mix_decode.d4.loss_mask: 0.3042  mix_decode.d4.loss_dice: 0.4531  mix_decode.d5.loss_cls: 0.1369  mix_decode.d5.loss_mask: 0.2982  mix_decode.d5.loss_dice: 0.4370  mix_decode.d6.loss_cls: 0.1298  mix_decode.d6.loss_mask: 0.3099  mix_decode.d6.loss_dice: 0.4573  mix_decode.d7.loss_cls: 0.0910  mix_decode.d7.loss_mask: 0.3272  mix_decode.d7.loss_dice: 0.4800  mix_decode.d8.loss_cls: 0.0989  mix_decode.d8.loss_mask: 0.3436  mix_decode.d8.loss_dice: 0.4918
2025/03/27 16:02:26 - mmengine - INFO - Iter(train) [18800/20000]  base_lr: 7.9498e-06 lr: 7.9498e-06  eta: 0:19:13  time: 1.0769  data_time: 0.0223  memory: 10810  loss: 30.5914  decode.loss_cls: 0.1309  decode.loss_mask: 0.7828  decode.loss_dice: 1.1560  decode.d0.loss_cls: 0.1871  decode.d0.loss_mask: 0.7977  decode.d0.loss_dice: 1.1917  decode.d1.loss_cls: 0.1810  decode.d1.loss_mask: 0.7866  decode.d1.loss_dice: 1.1377  decode.d2.loss_cls: 0.1884  decode.d2.loss_mask: 0.7483  decode.d2.loss_dice: 1.1212  decode.d3.loss_cls: 0.1934  decode.d3.loss_mask: 0.7567  decode.d3.loss_dice: 1.1280  decode.d4.loss_cls: 0.1448  decode.d4.loss_mask: 0.7821  decode.d4.loss_dice: 1.1364  decode.d5.loss_cls: 0.1710  decode.d5.loss_mask: 0.7584  decode.d5.loss_dice: 1.1521  decode.d6.loss_cls: 0.1618  decode.d6.loss_mask: 0.7799  decode.d6.loss_dice: 1.1263  decode.d7.loss_cls: 0.1286  decode.d7.loss_mask: 0.7924  decode.d7.loss_dice: 1.1611  decode.d8.loss_cls: 0.1735  decode.d8.loss_mask: 0.7781  decode.d8.loss_dice: 1.1612  mix_decode.loss_cls: 0.1348  mix_decode.loss_mask: 0.3413  mix_decode.loss_dice: 0.4910  mix_decode.d0.loss_cls: 0.1482  mix_decode.d0.loss_mask: 0.3404  mix_decode.d0.loss_dice: 0.5371  mix_decode.d1.loss_cls: 0.1448  mix_decode.d1.loss_mask: 0.3441  mix_decode.d1.loss_dice: 0.5141  mix_decode.d2.loss_cls: 0.1051  mix_decode.d2.loss_mask: 0.3414  mix_decode.d2.loss_dice: 0.4962  mix_decode.d3.loss_cls: 0.0889  mix_decode.d3.loss_mask: 0.3556  mix_decode.d3.loss_dice: 0.4981  mix_decode.d4.loss_cls: 0.0965  mix_decode.d4.loss_mask: 0.3389  mix_decode.d4.loss_dice: 0.5006  mix_decode.d5.loss_cls: 0.1143  mix_decode.d5.loss_mask: 0.3420  mix_decode.d5.loss_dice: 0.4989  mix_decode.d6.loss_cls: 0.1124  mix_decode.d6.loss_mask: 0.3468  mix_decode.d6.loss_dice: 0.5074  mix_decode.d7.loss_cls: 0.1307  mix_decode.d7.loss_mask: 0.3506  mix_decode.d7.loss_dice: 0.5044  mix_decode.d8.loss_cls: 0.0902  mix_decode.d8.loss_mask: 0.3540  mix_decode.d8.loss_dice: 0.5276
2025/03/27 16:03:20 - mmengine - INFO - Iter(train) [18850/20000]  base_lr: 7.6510e-06 lr: 7.6510e-06  eta: 0:18:26  time: 1.1164  data_time: 0.0255  memory: 10805  loss: 31.4243  decode.loss_cls: 0.2018  decode.loss_mask: 1.0901  decode.loss_dice: 1.0385  decode.d0.loss_cls: 0.3116  decode.d0.loss_mask: 1.0581  decode.d0.loss_dice: 1.1437  decode.d1.loss_cls: 0.2050  decode.d1.loss_mask: 1.0788  decode.d1.loss_dice: 1.0837  decode.d2.loss_cls: 0.3240  decode.d2.loss_mask: 1.0196  decode.d2.loss_dice: 1.0091  decode.d3.loss_cls: 0.2593  decode.d3.loss_mask: 1.0371  decode.d3.loss_dice: 1.0271  decode.d4.loss_cls: 0.1962  decode.d4.loss_mask: 1.0936  decode.d4.loss_dice: 1.0656  decode.d5.loss_cls: 0.2043  decode.d5.loss_mask: 1.0848  decode.d5.loss_dice: 1.0539  decode.d6.loss_cls: 0.1810  decode.d6.loss_mask: 1.0934  decode.d6.loss_dice: 1.0681  decode.d7.loss_cls: 0.1959  decode.d7.loss_mask: 1.0917  decode.d7.loss_dice: 1.0582  decode.d8.loss_cls: 0.2661  decode.d8.loss_mask: 1.0081  decode.d8.loss_dice: 1.0243  mix_decode.loss_cls: 0.0751  mix_decode.loss_mask: 0.2885  mix_decode.loss_dice: 0.4071  mix_decode.d0.loss_cls: 0.0661  mix_decode.d0.loss_mask: 0.2972  mix_decode.d0.loss_dice: 0.4556  mix_decode.d1.loss_cls: 0.0906  mix_decode.d1.loss_mask: 0.2914  mix_decode.d1.loss_dice: 0.4217  mix_decode.d2.loss_cls: 0.0726  mix_decode.d2.loss_mask: 0.2904  mix_decode.d2.loss_dice: 0.4218  mix_decode.d3.loss_cls: 0.0788  mix_decode.d3.loss_mask: 0.2898  mix_decode.d3.loss_dice: 0.4140  mix_decode.d4.loss_cls: 0.0974  mix_decode.d4.loss_mask: 0.2929  mix_decode.d4.loss_dice: 0.4124  mix_decode.d5.loss_cls: 0.0745  mix_decode.d5.loss_mask: 0.2932  mix_decode.d5.loss_dice: 0.4116  mix_decode.d6.loss_cls: 0.0857  mix_decode.d6.loss_mask: 0.2900  mix_decode.d6.loss_dice: 0.3951  mix_decode.d7.loss_cls: 0.0807  mix_decode.d7.loss_mask: 0.2877  mix_decode.d7.loss_dice: 0.4026  mix_decode.d8.loss_cls: 0.0738  mix_decode.d8.loss_mask: 0.2897  mix_decode.d8.loss_dice: 0.4037
2025/03/27 16:04:14 - mmengine - INFO - Iter(train) [18900/20000]  base_lr: 7.3510e-06 lr: 7.3510e-06  eta: 0:17:38  time: 1.0792  data_time: 0.0224  memory: 10803  loss: 35.5897  decode.loss_cls: 0.4037  decode.loss_mask: 0.9749  decode.loss_dice: 1.1009  decode.d0.loss_cls: 0.4683  decode.d0.loss_mask: 1.0016  decode.d0.loss_dice: 1.1491  decode.d1.loss_cls: 0.3999  decode.d1.loss_mask: 0.9550  decode.d1.loss_dice: 1.0917  decode.d2.loss_cls: 0.3127  decode.d2.loss_mask: 0.9969  decode.d2.loss_dice: 1.1191  decode.d3.loss_cls: 0.3068  decode.d3.loss_mask: 0.9868  decode.d3.loss_dice: 1.1008  decode.d4.loss_cls: 0.3166  decode.d4.loss_mask: 1.0139  decode.d4.loss_dice: 1.1109  decode.d5.loss_cls: 0.3233  decode.d5.loss_mask: 0.9819  decode.d5.loss_dice: 1.0948  decode.d6.loss_cls: 0.3195  decode.d6.loss_mask: 1.0155  decode.d6.loss_dice: 1.0930  decode.d7.loss_cls: 0.3667  decode.d7.loss_mask: 0.9755  decode.d7.loss_dice: 1.0938  decode.d8.loss_cls: 0.3605  decode.d8.loss_mask: 0.9916  decode.d8.loss_dice: 1.1189  mix_decode.loss_cls: 0.1149  mix_decode.loss_mask: 0.3918  mix_decode.loss_dice: 0.5969  mix_decode.d0.loss_cls: 0.1295  mix_decode.d0.loss_mask: 0.3901  mix_decode.d0.loss_dice: 0.6380  mix_decode.d1.loss_cls: 0.1440  mix_decode.d1.loss_mask: 0.3609  mix_decode.d1.loss_dice: 0.5867  mix_decode.d2.loss_cls: 0.1454  mix_decode.d2.loss_mask: 0.3780  mix_decode.d2.loss_dice: 0.5739  mix_decode.d3.loss_cls: 0.1590  mix_decode.d3.loss_mask: 0.3616  mix_decode.d3.loss_dice: 0.5738  mix_decode.d4.loss_cls: 0.1282  mix_decode.d4.loss_mask: 0.3884  mix_decode.d4.loss_dice: 0.5912  mix_decode.d5.loss_cls: 0.1326  mix_decode.d5.loss_mask: 0.3872  mix_decode.d5.loss_dice: 0.5872  mix_decode.d6.loss_cls: 0.1425  mix_decode.d6.loss_mask: 0.3675  mix_decode.d6.loss_dice: 0.5836  mix_decode.d7.loss_cls: 0.1222  mix_decode.d7.loss_mask: 0.3854  mix_decode.d7.loss_dice: 0.5862  mix_decode.d8.loss_cls: 0.1240  mix_decode.d8.loss_mask: 0.3866  mix_decode.d8.loss_dice: 0.5877
2025/03/27 16:05:08 - mmengine - INFO - Iter(train) [18950/20000]  base_lr: 7.0496e-06 lr: 7.0496e-06  eta: 0:16:50  time: 1.0786  data_time: 0.0221  memory: 10805  loss: 31.8080  decode.loss_cls: 0.1186  decode.loss_mask: 0.9921  decode.loss_dice: 1.1466  decode.d0.loss_cls: 0.2233  decode.d0.loss_mask: 1.0114  decode.d0.loss_dice: 1.1726  decode.d1.loss_cls: 0.2330  decode.d1.loss_mask: 0.9923  decode.d1.loss_dice: 1.1145  decode.d2.loss_cls: 0.1947  decode.d2.loss_mask: 0.9956  decode.d2.loss_dice: 1.1288  decode.d3.loss_cls: 0.2023  decode.d3.loss_mask: 0.9920  decode.d3.loss_dice: 1.0953  decode.d4.loss_cls: 0.1680  decode.d4.loss_mask: 0.9911  decode.d4.loss_dice: 1.1161  decode.d5.loss_cls: 0.1321  decode.d5.loss_mask: 0.9879  decode.d5.loss_dice: 1.1262  decode.d6.loss_cls: 0.1726  decode.d6.loss_mask: 0.9916  decode.d6.loss_dice: 1.1182  decode.d7.loss_cls: 0.1792  decode.d7.loss_mask: 0.9889  decode.d7.loss_dice: 1.0967  decode.d8.loss_cls: 0.1542  decode.d8.loss_mask: 0.9945  decode.d8.loss_dice: 1.1054  mix_decode.loss_cls: 0.0498  mix_decode.loss_mask: 0.3544  mix_decode.loss_dice: 0.4777  mix_decode.d0.loss_cls: 0.0772  mix_decode.d0.loss_mask: 0.3601  mix_decode.d0.loss_dice: 0.5073  mix_decode.d1.loss_cls: 0.0600  mix_decode.d1.loss_mask: 0.3560  mix_decode.d1.loss_dice: 0.4740  mix_decode.d2.loss_cls: 0.0511  mix_decode.d2.loss_mask: 0.3573  mix_decode.d2.loss_dice: 0.4801  mix_decode.d3.loss_cls: 0.0473  mix_decode.d3.loss_mask: 0.3579  mix_decode.d3.loss_dice: 0.4701  mix_decode.d4.loss_cls: 0.0438  mix_decode.d4.loss_mask: 0.3578  mix_decode.d4.loss_dice: 0.4799  mix_decode.d5.loss_cls: 0.0538  mix_decode.d5.loss_mask: 0.3575  mix_decode.d5.loss_dice: 0.4674  mix_decode.d6.loss_cls: 0.0513  mix_decode.d6.loss_mask: 0.3584  mix_decode.d6.loss_dice: 0.4730  mix_decode.d7.loss_cls: 0.0490  mix_decode.d7.loss_mask: 0.3591  mix_decode.d7.loss_dice: 0.4677  mix_decode.d8.loss_cls: 0.0470  mix_decode.d8.loss_mask: 0.3548  mix_decode.d8.loss_dice: 0.4711
2025/03/27 16:06:02 - mmengine - INFO - Exp name: pr2vi_20250327_105544
2025/03/27 16:06:02 - mmengine - INFO - Iter(train) [19000/20000]  base_lr: 6.7467e-06 lr: 6.7467e-06  eta: 0:16:02  time: 1.0782  data_time: 0.0221  memory: 10805  loss: 34.5661  decode.loss_cls: 0.1646  decode.loss_mask: 1.1606  decode.loss_dice: 1.1686  decode.d0.loss_cls: 0.1978  decode.d0.loss_mask: 1.2333  decode.d0.loss_dice: 1.2185  decode.d1.loss_cls: 0.2940  decode.d1.loss_mask: 1.1565  decode.d1.loss_dice: 1.1214  decode.d2.loss_cls: 0.2213  decode.d2.loss_mask: 1.1580  decode.d2.loss_dice: 1.0689  decode.d3.loss_cls: 0.2302  decode.d3.loss_mask: 1.1578  decode.d3.loss_dice: 1.0534  decode.d4.loss_cls: 0.2236  decode.d4.loss_mask: 1.1626  decode.d4.loss_dice: 1.0968  decode.d5.loss_cls: 0.1466  decode.d5.loss_mask: 1.1789  decode.d5.loss_dice: 1.1741  decode.d6.loss_cls: 0.1314  decode.d6.loss_mask: 1.1829  decode.d6.loss_dice: 1.1592  decode.d7.loss_cls: 0.1367  decode.d7.loss_mask: 1.1806  decode.d7.loss_dice: 1.1555  decode.d8.loss_cls: 0.1345  decode.d8.loss_mask: 1.1842  decode.d8.loss_dice: 1.1610  mix_decode.loss_cls: 0.1301  mix_decode.loss_mask: 0.3662  mix_decode.loss_dice: 0.4371  mix_decode.d0.loss_cls: 0.1247  mix_decode.d0.loss_mask: 0.3786  mix_decode.d0.loss_dice: 0.5027  mix_decode.d1.loss_cls: 0.1277  mix_decode.d1.loss_mask: 0.3663  mix_decode.d1.loss_dice: 0.4544  mix_decode.d2.loss_cls: 0.1502  mix_decode.d2.loss_mask: 0.3599  mix_decode.d2.loss_dice: 0.4379  mix_decode.d3.loss_cls: 0.1328  mix_decode.d3.loss_mask: 0.3780  mix_decode.d3.loss_dice: 0.4419  mix_decode.d4.loss_cls: 0.1291  mix_decode.d4.loss_mask: 0.3936  mix_decode.d4.loss_dice: 0.4557  mix_decode.d5.loss_cls: 0.1260  mix_decode.d5.loss_mask: 0.3790  mix_decode.d5.loss_dice: 0.4387  mix_decode.d6.loss_cls: 0.1421  mix_decode.d6.loss_mask: 0.3781  mix_decode.d6.loss_dice: 0.4392  mix_decode.d7.loss_cls: 0.1162  mix_decode.d7.loss_mask: 0.3768  mix_decode.d7.loss_dice: 0.4510  mix_decode.d8.loss_cls: 0.1316  mix_decode.d8.loss_mask: 0.3669  mix_decode.d8.loss_dice: 0.4397
2025/03/27 16:06:56 - mmengine - INFO - Iter(train) [19050/20000]  base_lr: 6.4423e-06 lr: 6.4423e-06  eta: 0:15:14  time: 1.0785  data_time: 0.0224  memory: 10810  loss: 27.3129  decode.loss_cls: 0.0862  decode.loss_mask: 0.7835  decode.loss_dice: 1.0852  decode.d0.loss_cls: 0.1372  decode.d0.loss_mask: 0.7730  decode.d0.loss_dice: 1.1089  decode.d1.loss_cls: 0.1165  decode.d1.loss_mask: 0.7684  decode.d1.loss_dice: 1.0850  decode.d2.loss_cls: 0.1848  decode.d2.loss_mask: 0.7629  decode.d2.loss_dice: 1.0501  decode.d3.loss_cls: 0.0925  decode.d3.loss_mask: 0.7814  decode.d3.loss_dice: 1.0535  decode.d4.loss_cls: 0.0817  decode.d4.loss_mask: 0.7699  decode.d4.loss_dice: 1.0486  decode.d5.loss_cls: 0.0609  decode.d5.loss_mask: 0.7789  decode.d5.loss_dice: 1.0641  decode.d6.loss_cls: 0.1275  decode.d6.loss_mask: 0.7763  decode.d6.loss_dice: 1.0692  decode.d7.loss_cls: 0.0587  decode.d7.loss_mask: 0.7777  decode.d7.loss_dice: 1.0799  decode.d8.loss_cls: 0.0579  decode.d8.loss_mask: 0.7844  decode.d8.loss_dice: 1.0582  mix_decode.loss_cls: 0.0774  mix_decode.loss_mask: 0.2927  mix_decode.loss_dice: 0.3835  mix_decode.d0.loss_cls: 0.1546  mix_decode.d0.loss_mask: 0.2891  mix_decode.d0.loss_dice: 0.3941  mix_decode.d1.loss_cls: 0.1233  mix_decode.d1.loss_mask: 0.2984  mix_decode.d1.loss_dice: 0.4030  mix_decode.d2.loss_cls: 0.0913  mix_decode.d2.loss_mask: 0.2996  mix_decode.d2.loss_dice: 0.3893  mix_decode.d3.loss_cls: 0.0867  mix_decode.d3.loss_mask: 0.3010  mix_decode.d3.loss_dice: 0.3802  mix_decode.d4.loss_cls: 0.1085  mix_decode.d4.loss_mask: 0.2943  mix_decode.d4.loss_dice: 0.3682  mix_decode.d5.loss_cls: 0.1111  mix_decode.d5.loss_mask: 0.2982  mix_decode.d5.loss_dice: 0.3639  mix_decode.d6.loss_cls: 0.1091  mix_decode.d6.loss_mask: 0.2968  mix_decode.d6.loss_dice: 0.3841  mix_decode.d7.loss_cls: 0.1198  mix_decode.d7.loss_mask: 0.2937  mix_decode.d7.loss_dice: 0.3726  mix_decode.d8.loss_cls: 0.0997  mix_decode.d8.loss_mask: 0.2930  mix_decode.d8.loss_dice: 0.3725
2025/03/27 16:07:50 - mmengine - INFO - Iter(train) [19100/20000]  base_lr: 6.1364e-06 lr: 6.1364e-06  eta: 0:14:27  time: 1.0765  data_time: 0.0222  memory: 10813  loss: 33.9241  decode.loss_cls: 0.2621  decode.loss_mask: 1.0176  decode.loss_dice: 1.1896  decode.d0.loss_cls: 0.2666  decode.d0.loss_mask: 1.0439  decode.d0.loss_dice: 1.2328  decode.d1.loss_cls: 0.2989  decode.d1.loss_mask: 1.0441  decode.d1.loss_dice: 1.1848  decode.d2.loss_cls: 0.2374  decode.d2.loss_mask: 1.0270  decode.d2.loss_dice: 1.1987  decode.d3.loss_cls: 0.2020  decode.d3.loss_mask: 1.0195  decode.d3.loss_dice: 1.2020  decode.d4.loss_cls: 0.2296  decode.d4.loss_mask: 1.0087  decode.d4.loss_dice: 1.1557  decode.d5.loss_cls: 0.2323  decode.d5.loss_mask: 1.0173  decode.d5.loss_dice: 1.1708  decode.d6.loss_cls: 0.2123  decode.d6.loss_mask: 1.0277  decode.d6.loss_dice: 1.1934  decode.d7.loss_cls: 0.2498  decode.d7.loss_mask: 1.0297  decode.d7.loss_dice: 1.2083  decode.d8.loss_cls: 0.2903  decode.d8.loss_mask: 1.0160  decode.d8.loss_dice: 1.1436  mix_decode.loss_cls: 0.0852  mix_decode.loss_mask: 0.3346  mix_decode.loss_dice: 0.5154  mix_decode.d0.loss_cls: 0.0657  mix_decode.d0.loss_mask: 0.3176  mix_decode.d0.loss_dice: 0.5812  mix_decode.d1.loss_cls: 0.1090  mix_decode.d1.loss_mask: 0.3247  mix_decode.d1.loss_dice: 0.5348  mix_decode.d2.loss_cls: 0.1057  mix_decode.d2.loss_mask: 0.3034  mix_decode.d2.loss_dice: 0.5062  mix_decode.d3.loss_cls: 0.0807  mix_decode.d3.loss_mask: 0.3284  mix_decode.d3.loss_dice: 0.4977  mix_decode.d4.loss_cls: 0.0948  mix_decode.d4.loss_mask: 0.3277  mix_decode.d4.loss_dice: 0.4982  mix_decode.d5.loss_cls: 0.0673  mix_decode.d5.loss_mask: 0.3406  mix_decode.d5.loss_dice: 0.5280  mix_decode.d6.loss_cls: 0.0483  mix_decode.d6.loss_mask: 0.3427  mix_decode.d6.loss_dice: 0.5233  mix_decode.d7.loss_cls: 0.0780  mix_decode.d7.loss_mask: 0.3159  mix_decode.d7.loss_dice: 0.5322  mix_decode.d8.loss_cls: 0.0920  mix_decode.d8.loss_mask: 0.3199  mix_decode.d8.loss_dice: 0.5127
2025/03/27 16:08:44 - mmengine - INFO - Iter(train) [19150/20000]  base_lr: 5.8287e-06 lr: 5.8287e-06  eta: 0:13:39  time: 1.1132  data_time: 0.0252  memory: 10803  loss: 37.8370  decode.loss_cls: 0.3202  decode.loss_mask: 1.1871  decode.loss_dice: 1.2716  decode.d0.loss_cls: 0.3374  decode.d0.loss_mask: 1.2296  decode.d0.loss_dice: 1.3932  decode.d1.loss_cls: 0.3779  decode.d1.loss_mask: 1.1924  decode.d1.loss_dice: 1.2882  decode.d2.loss_cls: 0.3358  decode.d2.loss_mask: 1.1928  decode.d2.loss_dice: 1.2331  decode.d3.loss_cls: 0.3344  decode.d3.loss_mask: 1.1932  decode.d3.loss_dice: 1.2614  decode.d4.loss_cls: 0.3602  decode.d4.loss_mask: 1.1874  decode.d4.loss_dice: 1.2531  decode.d5.loss_cls: 0.3695  decode.d5.loss_mask: 1.1995  decode.d5.loss_dice: 1.2776  decode.d6.loss_cls: 0.3796  decode.d6.loss_mask: 1.1844  decode.d6.loss_dice: 1.2724  decode.d7.loss_cls: 0.3730  decode.d7.loss_mask: 1.1909  decode.d7.loss_dice: 1.2976  decode.d8.loss_cls: 0.2771  decode.d8.loss_mask: 1.2272  decode.d8.loss_dice: 1.3004  mix_decode.loss_cls: 0.1035  mix_decode.loss_mask: 0.3469  mix_decode.loss_dice: 0.4912  mix_decode.d0.loss_cls: 0.0682  mix_decode.d0.loss_mask: 0.3568  mix_decode.d0.loss_dice: 0.5492  mix_decode.d1.loss_cls: 0.0969  mix_decode.d1.loss_mask: 0.3520  mix_decode.d1.loss_dice: 0.5020  mix_decode.d2.loss_cls: 0.0909  mix_decode.d2.loss_mask: 0.3600  mix_decode.d2.loss_dice: 0.5145  mix_decode.d3.loss_cls: 0.1180  mix_decode.d3.loss_mask: 0.3572  mix_decode.d3.loss_dice: 0.4860  mix_decode.d4.loss_cls: 0.1028  mix_decode.d4.loss_mask: 0.3525  mix_decode.d4.loss_dice: 0.4889  mix_decode.d5.loss_cls: 0.0844  mix_decode.d5.loss_mask: 0.3591  mix_decode.d5.loss_dice: 0.4969  mix_decode.d6.loss_cls: 0.0954  mix_decode.d6.loss_mask: 0.3579  mix_decode.d6.loss_dice: 0.5058  mix_decode.d7.loss_cls: 0.0895  mix_decode.d7.loss_mask: 0.3593  mix_decode.d7.loss_dice: 0.5039  mix_decode.d8.loss_cls: 0.0871  mix_decode.d8.loss_mask: 0.3610  mix_decode.d8.loss_dice: 0.5008
2025/03/27 16:09:39 - mmengine - INFO - Iter(train) [19200/20000]  base_lr: 5.5192e-06 lr: 5.5192e-06  eta: 0:12:51  time: 1.0760  data_time: 0.0221  memory: 10810  loss: 29.3786  decode.loss_cls: 0.2511  decode.loss_mask: 0.8219  decode.loss_dice: 0.9169  decode.d0.loss_cls: 0.2064  decode.d0.loss_mask: 0.8630  decode.d0.loss_dice: 1.0104  decode.d1.loss_cls: 0.1775  decode.d1.loss_mask: 0.8218  decode.d1.loss_dice: 0.9065  decode.d2.loss_cls: 0.1961  decode.d2.loss_mask: 0.8242  decode.d2.loss_dice: 0.9192  decode.d3.loss_cls: 0.2273  decode.d3.loss_mask: 0.8285  decode.d3.loss_dice: 0.9101  decode.d4.loss_cls: 0.2471  decode.d4.loss_mask: 0.8167  decode.d4.loss_dice: 0.8821  decode.d5.loss_cls: 0.2436  decode.d5.loss_mask: 0.8161  decode.d5.loss_dice: 0.8887  decode.d6.loss_cls: 0.2144  decode.d6.loss_mask: 0.8249  decode.d6.loss_dice: 0.9014  decode.d7.loss_cls: 0.2852  decode.d7.loss_mask: 0.8073  decode.d7.loss_dice: 0.8917  decode.d8.loss_cls: 0.2503  decode.d8.loss_mask: 0.8141  decode.d8.loss_dice: 0.9063  mix_decode.loss_cls: 0.1149  mix_decode.loss_mask: 0.3565  mix_decode.loss_dice: 0.4890  mix_decode.d0.loss_cls: 0.1098  mix_decode.d0.loss_mask: 0.3580  mix_decode.d0.loss_dice: 0.5665  mix_decode.d1.loss_cls: 0.1469  mix_decode.d1.loss_mask: 0.3532  mix_decode.d1.loss_dice: 0.4878  mix_decode.d2.loss_cls: 0.1147  mix_decode.d2.loss_mask: 0.3591  mix_decode.d2.loss_dice: 0.4915  mix_decode.d3.loss_cls: 0.0988  mix_decode.d3.loss_mask: 0.3626  mix_decode.d3.loss_dice: 0.4877  mix_decode.d4.loss_cls: 0.1217  mix_decode.d4.loss_mask: 0.3544  mix_decode.d4.loss_dice: 0.4846  mix_decode.d5.loss_cls: 0.1267  mix_decode.d5.loss_mask: 0.3560  mix_decode.d5.loss_dice: 0.4811  mix_decode.d6.loss_cls: 0.1295  mix_decode.d6.loss_mask: 0.3639  mix_decode.d6.loss_dice: 0.5090  mix_decode.d7.loss_cls: 0.0921  mix_decode.d7.loss_mask: 0.3643  mix_decode.d7.loss_dice: 0.4982  mix_decode.d8.loss_cls: 0.0944  mix_decode.d8.loss_mask: 0.3582  mix_decode.d8.loss_dice: 0.4767
2025/03/27 16:10:34 - mmengine - INFO - Iter(train) [19250/20000]  base_lr: 5.2077e-06 lr: 5.2077e-06  eta: 0:12:03  time: 1.0950  data_time: 0.0244  memory: 10806  loss: 33.3515  decode.loss_cls: 0.1956  decode.loss_mask: 1.0792  decode.loss_dice: 1.1919  decode.d0.loss_cls: 0.2397  decode.d0.loss_mask: 1.0756  decode.d0.loss_dice: 1.2665  decode.d1.loss_cls: 0.2508  decode.d1.loss_mask: 1.0762  decode.d1.loss_dice: 1.1451  decode.d2.loss_cls: 0.2331  decode.d2.loss_mask: 1.0631  decode.d2.loss_dice: 1.1266  decode.d3.loss_cls: 0.2434  decode.d3.loss_mask: 1.0323  decode.d3.loss_dice: 1.1062  decode.d4.loss_cls: 0.1730  decode.d4.loss_mask: 1.0202  decode.d4.loss_dice: 1.1716  decode.d5.loss_cls: 0.2182  decode.d5.loss_mask: 1.0471  decode.d5.loss_dice: 1.1590  decode.d6.loss_cls: 0.2033  decode.d6.loss_mask: 1.0686  decode.d6.loss_dice: 1.1803  decode.d7.loss_cls: 0.2217  decode.d7.loss_mask: 1.0513  decode.d7.loss_dice: 1.1299  decode.d8.loss_cls: 0.2172  decode.d8.loss_mask: 1.0569  decode.d8.loss_dice: 1.1473  mix_decode.loss_cls: 0.0787  mix_decode.loss_mask: 0.3424  mix_decode.loss_dice: 0.4507  mix_decode.d0.loss_cls: 0.0718  mix_decode.d0.loss_mask: 0.3544  mix_decode.d0.loss_dice: 0.5246  mix_decode.d1.loss_cls: 0.0769  mix_decode.d1.loss_mask: 0.3510  mix_decode.d1.loss_dice: 0.4854  mix_decode.d2.loss_cls: 0.0817  mix_decode.d2.loss_mask: 0.3451  mix_decode.d2.loss_dice: 0.4587  mix_decode.d3.loss_cls: 0.0951  mix_decode.d3.loss_mask: 0.3478  mix_decode.d3.loss_dice: 0.4645  mix_decode.d4.loss_cls: 0.0672  mix_decode.d4.loss_mask: 0.3447  mix_decode.d4.loss_dice: 0.4797  mix_decode.d5.loss_cls: 0.0865  mix_decode.d5.loss_mask: 0.3478  mix_decode.d5.loss_dice: 0.4651  mix_decode.d6.loss_cls: 0.0604  mix_decode.d6.loss_mask: 0.3476  mix_decode.d6.loss_dice: 0.4680  mix_decode.d7.loss_cls: 0.0481  mix_decode.d7.loss_mask: 0.3472  mix_decode.d7.loss_dice: 0.4767  mix_decode.d8.loss_cls: 0.0670  mix_decode.d8.loss_mask: 0.3584  mix_decode.d8.loss_dice: 0.4677
2025/03/27 16:11:28 - mmengine - INFO - Iter(train) [19300/20000]  base_lr: 4.8942e-06 lr: 4.8942e-06  eta: 0:11:15  time: 1.0831  data_time: 0.0231  memory: 10805  loss: 35.2773  decode.loss_cls: 0.2126  decode.loss_mask: 1.0791  decode.loss_dice: 1.1796  decode.d0.loss_cls: 0.2852  decode.d0.loss_mask: 1.1117  decode.d0.loss_dice: 1.2607  decode.d1.loss_cls: 0.2890  decode.d1.loss_mask: 1.1088  decode.d1.loss_dice: 1.1786  decode.d2.loss_cls: 0.2364  decode.d2.loss_mask: 1.0892  decode.d2.loss_dice: 1.1928  decode.d3.loss_cls: 0.2284  decode.d3.loss_mask: 1.0946  decode.d3.loss_dice: 1.1707  decode.d4.loss_cls: 0.2381  decode.d4.loss_mask: 1.0732  decode.d4.loss_dice: 1.1401  decode.d5.loss_cls: 0.2177  decode.d5.loss_mask: 1.1082  decode.d5.loss_dice: 1.1628  decode.d6.loss_cls: 0.2334  decode.d6.loss_mask: 1.0875  decode.d6.loss_dice: 1.1679  decode.d7.loss_cls: 0.2452  decode.d7.loss_mask: 1.0775  decode.d7.loss_dice: 1.1694  decode.d8.loss_cls: 0.2148  decode.d8.loss_mask: 1.0849  decode.d8.loss_dice: 1.1723  mix_decode.loss_cls: 0.1174  mix_decode.loss_mask: 0.3605  mix_decode.loss_dice: 0.5447  mix_decode.d0.loss_cls: 0.1091  mix_decode.d0.loss_mask: 0.3656  mix_decode.d0.loss_dice: 0.5944  mix_decode.d1.loss_cls: 0.0997  mix_decode.d1.loss_mask: 0.3583  mix_decode.d1.loss_dice: 0.5545  mix_decode.d2.loss_cls: 0.0852  mix_decode.d2.loss_mask: 0.3722  mix_decode.d2.loss_dice: 0.5547  mix_decode.d3.loss_cls: 0.1112  mix_decode.d3.loss_mask: 0.3613  mix_decode.d3.loss_dice: 0.5399  mix_decode.d4.loss_cls: 0.0978  mix_decode.d4.loss_mask: 0.3654  mix_decode.d4.loss_dice: 0.5502  mix_decode.d5.loss_cls: 0.0897  mix_decode.d5.loss_mask: 0.3654  mix_decode.d5.loss_dice: 0.5409  mix_decode.d6.loss_cls: 0.1009  mix_decode.d6.loss_mask: 0.3609  mix_decode.d6.loss_dice: 0.5494  mix_decode.d7.loss_cls: 0.0963  mix_decode.d7.loss_mask: 0.3548  mix_decode.d7.loss_dice: 0.5461  mix_decode.d8.loss_cls: 0.1151  mix_decode.d8.loss_mask: 0.3646  mix_decode.d8.loss_dice: 0.5407
2025/03/27 16:12:23 - mmengine - INFO - Iter(train) [19350/20000]  base_lr: 4.5784e-06 lr: 4.5784e-06  eta: 0:10:27  time: 1.0871  data_time: 0.0230  memory: 10807  loss: 32.8856  decode.loss_cls: 0.1870  decode.loss_mask: 0.9839  decode.loss_dice: 1.1669  decode.d0.loss_cls: 0.2851  decode.d0.loss_mask: 1.0056  decode.d0.loss_dice: 1.2370  decode.d1.loss_cls: 0.2751  decode.d1.loss_mask: 0.9921  decode.d1.loss_dice: 1.1806  decode.d2.loss_cls: 0.1539  decode.d2.loss_mask: 0.9741  decode.d2.loss_dice: 1.1966  decode.d3.loss_cls: 0.1853  decode.d3.loss_mask: 0.9751  decode.d3.loss_dice: 1.1773  decode.d4.loss_cls: 0.2081  decode.d4.loss_mask: 0.9727  decode.d4.loss_dice: 1.1565  decode.d5.loss_cls: 0.1855  decode.d5.loss_mask: 0.9782  decode.d5.loss_dice: 1.1749  decode.d6.loss_cls: 0.1934  decode.d6.loss_mask: 0.9883  decode.d6.loss_dice: 1.1777  decode.d7.loss_cls: 0.2040  decode.d7.loss_mask: 0.9954  decode.d7.loss_dice: 1.1767  decode.d8.loss_cls: 0.2424  decode.d8.loss_mask: 0.9746  decode.d8.loss_dice: 1.1471  mix_decode.loss_cls: 0.0878  mix_decode.loss_mask: 0.3799  mix_decode.loss_dice: 0.4556  mix_decode.d0.loss_cls: 0.1306  mix_decode.d0.loss_mask: 0.3465  mix_decode.d0.loss_dice: 0.4968  mix_decode.d1.loss_cls: 0.1228  mix_decode.d1.loss_mask: 0.3430  mix_decode.d1.loss_dice: 0.4496  mix_decode.d2.loss_cls: 0.0833  mix_decode.d2.loss_mask: 0.3594  mix_decode.d2.loss_dice: 0.4587  mix_decode.d3.loss_cls: 0.1145  mix_decode.d3.loss_mask: 0.3534  mix_decode.d3.loss_dice: 0.4405  mix_decode.d4.loss_cls: 0.0863  mix_decode.d4.loss_mask: 0.3590  mix_decode.d4.loss_dice: 0.4555  mix_decode.d5.loss_cls: 0.0770  mix_decode.d5.loss_mask: 0.3744  mix_decode.d5.loss_dice: 0.4390  mix_decode.d6.loss_cls: 0.0902  mix_decode.d6.loss_mask: 0.3589  mix_decode.d6.loss_dice: 0.4476  mix_decode.d7.loss_cls: 0.0831  mix_decode.d7.loss_mask: 0.3844  mix_decode.d7.loss_dice: 0.4419  mix_decode.d8.loss_cls: 0.0879  mix_decode.d8.loss_mask: 0.3832  mix_decode.d8.loss_dice: 0.4438
2025/03/27 16:13:17 - mmengine - INFO - Iter(train) [19400/20000]  base_lr: 4.2602e-06 lr: 4.2602e-06  eta: 0:09:39  time: 1.0804  data_time: 0.0223  memory: 10810  loss: 37.2940  decode.loss_cls: 0.2659  decode.loss_mask: 1.1452  decode.loss_dice: 1.3286  decode.d0.loss_cls: 0.3148  decode.d0.loss_mask: 1.1299  decode.d0.loss_dice: 1.3822  decode.d1.loss_cls: 0.2805  decode.d1.loss_mask: 1.0907  decode.d1.loss_dice: 1.3173  decode.d2.loss_cls: 0.3486  decode.d2.loss_mask: 1.0721  decode.d2.loss_dice: 1.2788  decode.d3.loss_cls: 0.3077  decode.d3.loss_mask: 1.1101  decode.d3.loss_dice: 1.2887  decode.d4.loss_cls: 0.2900  decode.d4.loss_mask: 1.0925  decode.d4.loss_dice: 1.3285  decode.d5.loss_cls: 0.3380  decode.d5.loss_mask: 1.1343  decode.d5.loss_dice: 1.3221  decode.d6.loss_cls: 0.3022  decode.d6.loss_mask: 1.1503  decode.d6.loss_dice: 1.3354  decode.d7.loss_cls: 0.3115  decode.d7.loss_mask: 1.1254  decode.d7.loss_dice: 1.3024  decode.d8.loss_cls: 0.2829  decode.d8.loss_mask: 1.1272  decode.d8.loss_dice: 1.3145  mix_decode.loss_cls: 0.0372  mix_decode.loss_mask: 0.4056  mix_decode.loss_dice: 0.5295  mix_decode.d0.loss_cls: 0.0549  mix_decode.d0.loss_mask: 0.4136  mix_decode.d0.loss_dice: 0.5605  mix_decode.d1.loss_cls: 0.0455  mix_decode.d1.loss_mask: 0.4074  mix_decode.d1.loss_dice: 0.5338  mix_decode.d2.loss_cls: 0.0561  mix_decode.d2.loss_mask: 0.4045  mix_decode.d2.loss_dice: 0.5299  mix_decode.d3.loss_cls: 0.0564  mix_decode.d3.loss_mask: 0.4086  mix_decode.d3.loss_dice: 0.5222  mix_decode.d4.loss_cls: 0.0649  mix_decode.d4.loss_mask: 0.3959  mix_decode.d4.loss_dice: 0.5131  mix_decode.d5.loss_cls: 0.0573  mix_decode.d5.loss_mask: 0.4002  mix_decode.d5.loss_dice: 0.5254  mix_decode.d6.loss_cls: 0.0662  mix_decode.d6.loss_mask: 0.4014  mix_decode.d6.loss_dice: 0.5305  mix_decode.d7.loss_cls: 0.0370  mix_decode.d7.loss_mask: 0.4030  mix_decode.d7.loss_dice: 0.5351  mix_decode.d8.loss_cls: 0.0421  mix_decode.d8.loss_mask: 0.4153  mix_decode.d8.loss_dice: 0.5227
2025/03/27 16:14:11 - mmengine - INFO - Iter(train) [19450/20000]  base_lr: 3.9393e-06 lr: 3.9393e-06  eta: 0:08:51  time: 1.0834  data_time: 0.0224  memory: 10803  loss: 34.8992  decode.loss_cls: 0.2120  decode.loss_mask: 0.9686  decode.loss_dice: 1.1529  decode.d0.loss_cls: 0.3700  decode.d0.loss_mask: 0.9927  decode.d0.loss_dice: 1.2282  decode.d1.loss_cls: 0.2414  decode.d1.loss_mask: 0.9707  decode.d1.loss_dice: 1.1600  decode.d2.loss_cls: 0.1838  decode.d2.loss_mask: 0.9728  decode.d2.loss_dice: 1.1448  decode.d3.loss_cls: 0.1909  decode.d3.loss_mask: 0.9781  decode.d3.loss_dice: 1.1227  decode.d4.loss_cls: 0.2369  decode.d4.loss_mask: 0.9625  decode.d4.loss_dice: 1.1031  decode.d5.loss_cls: 0.2006  decode.d5.loss_mask: 0.9699  decode.d5.loss_dice: 1.1388  decode.d6.loss_cls: 0.2239  decode.d6.loss_mask: 1.0131  decode.d6.loss_dice: 1.1663  decode.d7.loss_cls: 0.2102  decode.d7.loss_mask: 0.9801  decode.d7.loss_dice: 1.1554  decode.d8.loss_cls: 0.2330  decode.d8.loss_mask: 0.9764  decode.d8.loss_dice: 1.1382  mix_decode.loss_cls: 0.1503  mix_decode.loss_mask: 0.4020  mix_decode.loss_dice: 0.5817  mix_decode.d0.loss_cls: 0.1687  mix_decode.d0.loss_mask: 0.3777  mix_decode.d0.loss_dice: 0.6584  mix_decode.d1.loss_cls: 0.1922  mix_decode.d1.loss_mask: 0.3636  mix_decode.d1.loss_dice: 0.5855  mix_decode.d2.loss_cls: 0.1710  mix_decode.d2.loss_mask: 0.3874  mix_decode.d2.loss_dice: 0.5705  mix_decode.d3.loss_cls: 0.1972  mix_decode.d3.loss_mask: 0.3607  mix_decode.d3.loss_dice: 0.5525  mix_decode.d4.loss_cls: 0.1688  mix_decode.d4.loss_mask: 0.3791  mix_decode.d4.loss_dice: 0.5621  mix_decode.d5.loss_cls: 0.1534  mix_decode.d5.loss_mask: 0.3713  mix_decode.d5.loss_dice: 0.5762  mix_decode.d6.loss_cls: 0.1271  mix_decode.d6.loss_mask: 0.3992  mix_decode.d6.loss_dice: 0.6045  mix_decode.d7.loss_cls: 0.1282  mix_decode.d7.loss_mask: 0.3862  mix_decode.d7.loss_dice: 0.5971  mix_decode.d8.loss_cls: 0.1464  mix_decode.d8.loss_mask: 0.3964  mix_decode.d8.loss_dice: 0.5856
2025/03/27 16:15:05 - mmengine - INFO - Iter(train) [19500/20000]  base_lr: 3.6155e-06 lr: 3.6155e-06  eta: 0:08:02  time: 1.0856  data_time: 0.0241  memory: 10807  loss: 31.3687  decode.loss_cls: 0.1639  decode.loss_mask: 0.9806  decode.loss_dice: 0.9567  decode.d0.loss_cls: 0.2789  decode.d0.loss_mask: 1.0416  decode.d0.loss_dice: 0.9707  decode.d1.loss_cls: 0.2248  decode.d1.loss_mask: 1.0214  decode.d1.loss_dice: 0.9711  decode.d2.loss_cls: 0.2080  decode.d2.loss_mask: 0.9867  decode.d2.loss_dice: 0.9579  decode.d3.loss_cls: 0.1870  decode.d3.loss_mask: 0.9792  decode.d3.loss_dice: 0.9561  decode.d4.loss_cls: 0.1547  decode.d4.loss_mask: 0.9862  decode.d4.loss_dice: 0.9568  decode.d5.loss_cls: 0.1707  decode.d5.loss_mask: 0.9825  decode.d5.loss_dice: 0.9575  decode.d6.loss_cls: 0.1964  decode.d6.loss_mask: 0.9828  decode.d6.loss_dice: 0.9623  decode.d7.loss_cls: 0.1476  decode.d7.loss_mask: 0.9956  decode.d7.loss_dice: 0.9796  decode.d8.loss_cls: 0.1713  decode.d8.loss_mask: 0.9757  decode.d8.loss_dice: 0.9651  mix_decode.loss_cls: 0.0899  mix_decode.loss_mask: 0.3412  mix_decode.loss_dice: 0.5677  mix_decode.d0.loss_cls: 0.1008  mix_decode.d0.loss_mask: 0.3352  mix_decode.d0.loss_dice: 0.6189  mix_decode.d1.loss_cls: 0.1037  mix_decode.d1.loss_mask: 0.3311  mix_decode.d1.loss_dice: 0.5653  mix_decode.d2.loss_cls: 0.0829  mix_decode.d2.loss_mask: 0.3355  mix_decode.d2.loss_dice: 0.5593  mix_decode.d3.loss_cls: 0.0899  mix_decode.d3.loss_mask: 0.3413  mix_decode.d3.loss_dice: 0.5553  mix_decode.d4.loss_cls: 0.1070  mix_decode.d4.loss_mask: 0.3393  mix_decode.d4.loss_dice: 0.5519  mix_decode.d5.loss_cls: 0.0837  mix_decode.d5.loss_mask: 0.3402  mix_decode.d5.loss_dice: 0.5477  mix_decode.d6.loss_cls: 0.0614  mix_decode.d6.loss_mask: 0.3398  mix_decode.d6.loss_dice: 0.5673  mix_decode.d7.loss_cls: 0.0604  mix_decode.d7.loss_mask: 0.3379  mix_decode.d7.loss_dice: 0.5679  mix_decode.d8.loss_cls: 0.0863  mix_decode.d8.loss_mask: 0.3377  mix_decode.d8.loss_dice: 0.5525
2025/03/27 16:16:00 - mmengine - INFO - Iter(train) [19550/20000]  base_lr: 3.2884e-06 lr: 3.2884e-06  eta: 0:07:14  time: 1.0905  data_time: 0.0239  memory: 10807  loss: 32.1279  decode.loss_cls: 0.1916  decode.loss_mask: 0.8812  decode.loss_dice: 1.1570  decode.d0.loss_cls: 0.2574  decode.d0.loss_mask: 0.8825  decode.d0.loss_dice: 1.2458  decode.d1.loss_cls: 0.2748  decode.d1.loss_mask: 0.8850  decode.d1.loss_dice: 1.2265  decode.d2.loss_cls: 0.2161  decode.d2.loss_mask: 0.8916  decode.d2.loss_dice: 1.2045  decode.d3.loss_cls: 0.2074  decode.d3.loss_mask: 0.8614  decode.d3.loss_dice: 1.1821  decode.d4.loss_cls: 0.2022  decode.d4.loss_mask: 0.8847  decode.d4.loss_dice: 1.2232  decode.d5.loss_cls: 0.1952  decode.d5.loss_mask: 0.8734  decode.d5.loss_dice: 1.2217  decode.d6.loss_cls: 0.2139  decode.d6.loss_mask: 0.8779  decode.d6.loss_dice: 1.1795  decode.d7.loss_cls: 0.1801  decode.d7.loss_mask: 0.8769  decode.d7.loss_dice: 1.2084  decode.d8.loss_cls: 0.2309  decode.d8.loss_mask: 0.8674  decode.d8.loss_dice: 1.1627  mix_decode.loss_cls: 0.0823  mix_decode.loss_mask: 0.3437  mix_decode.loss_dice: 0.4868  mix_decode.d0.loss_cls: 0.0694  mix_decode.d0.loss_mask: 0.3611  mix_decode.d0.loss_dice: 0.5701  mix_decode.d1.loss_cls: 0.1023  mix_decode.d1.loss_mask: 0.3399  mix_decode.d1.loss_dice: 0.5047  mix_decode.d2.loss_cls: 0.0924  mix_decode.d2.loss_mask: 0.3366  mix_decode.d2.loss_dice: 0.4879  mix_decode.d3.loss_cls: 0.0791  mix_decode.d3.loss_mask: 0.3412  mix_decode.d3.loss_dice: 0.4694  mix_decode.d4.loss_cls: 0.0824  mix_decode.d4.loss_mask: 0.3402  mix_decode.d4.loss_dice: 0.4807  mix_decode.d5.loss_cls: 0.0736  mix_decode.d5.loss_mask: 0.3437  mix_decode.d5.loss_dice: 0.4873  mix_decode.d6.loss_cls: 0.0717  mix_decode.d6.loss_mask: 0.3457  mix_decode.d6.loss_dice: 0.4775  mix_decode.d7.loss_cls: 0.0782  mix_decode.d7.loss_mask: 0.3468  mix_decode.d7.loss_dice: 0.4739  mix_decode.d8.loss_cls: 0.0680  mix_decode.d8.loss_mask: 0.3407  mix_decode.d8.loss_dice: 0.4877
2025/03/27 16:16:54 - mmengine - INFO - Iter(train) [19600/20000]  base_lr: 2.9576e-06 lr: 2.9576e-06  eta: 0:06:26  time: 1.0757  data_time: 0.0224  memory: 10807  loss: 30.8353  decode.loss_cls: 0.2366  decode.loss_mask: 0.9475  decode.loss_dice: 1.0392  decode.d0.loss_cls: 0.3474  decode.d0.loss_mask: 1.0034  decode.d0.loss_dice: 1.0856  decode.d1.loss_cls: 0.2316  decode.d1.loss_mask: 0.9540  decode.d1.loss_dice: 1.0081  decode.d2.loss_cls: 0.2220  decode.d2.loss_mask: 0.9485  decode.d2.loss_dice: 1.0177  decode.d3.loss_cls: 0.2250  decode.d3.loss_mask: 0.9633  decode.d3.loss_dice: 1.0188  decode.d4.loss_cls: 0.2405  decode.d4.loss_mask: 0.9509  decode.d4.loss_dice: 0.9931  decode.d5.loss_cls: 0.2212  decode.d5.loss_mask: 0.9538  decode.d5.loss_dice: 1.0167  decode.d6.loss_cls: 0.1999  decode.d6.loss_mask: 0.9459  decode.d6.loss_dice: 1.0346  decode.d7.loss_cls: 0.2083  decode.d7.loss_mask: 0.9661  decode.d7.loss_dice: 1.0544  decode.d8.loss_cls: 0.1965  decode.d8.loss_mask: 0.9659  decode.d8.loss_dice: 1.0484  mix_decode.loss_cls: 0.0646  mix_decode.loss_mask: 0.3022  mix_decode.loss_dice: 0.4471  mix_decode.d0.loss_cls: 0.0868  mix_decode.d0.loss_mask: 0.3003  mix_decode.d0.loss_dice: 0.5313  mix_decode.d1.loss_cls: 0.1100  mix_decode.d1.loss_mask: 0.2952  mix_decode.d1.loss_dice: 0.4726  mix_decode.d2.loss_cls: 0.1136  mix_decode.d2.loss_mask: 0.2925  mix_decode.d2.loss_dice: 0.4634  mix_decode.d3.loss_cls: 0.1213  mix_decode.d3.loss_mask: 0.2925  mix_decode.d3.loss_dice: 0.4636  mix_decode.d4.loss_cls: 0.1198  mix_decode.d4.loss_mask: 0.2911  mix_decode.d4.loss_dice: 0.4722  mix_decode.d5.loss_cls: 0.0888  mix_decode.d5.loss_mask: 0.2907  mix_decode.d5.loss_dice: 0.4625  mix_decode.d6.loss_cls: 0.0956  mix_decode.d6.loss_mask: 0.2864  mix_decode.d6.loss_dice: 0.4764  mix_decode.d7.loss_cls: 0.0698  mix_decode.d7.loss_mask: 0.3024  mix_decode.d7.loss_dice: 0.4612  mix_decode.d8.loss_cls: 0.0650  mix_decode.d8.loss_mask: 0.2907  mix_decode.d8.loss_dice: 0.4608
2025/03/27 16:17:49 - mmengine - INFO - Iter(train) [19650/20000]  base_lr: 2.6227e-06 lr: 2.6227e-06  eta: 0:05:38  time: 1.1280  data_time: 0.0272  memory: 10800  loss: 32.8615  decode.loss_cls: 0.2026  decode.loss_mask: 0.9079  decode.loss_dice: 1.0185  decode.d0.loss_cls: 0.2671  decode.d0.loss_mask: 0.9283  decode.d0.loss_dice: 1.0701  decode.d1.loss_cls: 0.2221  decode.d1.loss_mask: 0.9206  decode.d1.loss_dice: 1.0152  decode.d2.loss_cls: 0.2210  decode.d2.loss_mask: 0.9145  decode.d2.loss_dice: 1.0232  decode.d3.loss_cls: 0.2713  decode.d3.loss_mask: 0.9056  decode.d3.loss_dice: 0.9580  decode.d4.loss_cls: 0.2157  decode.d4.loss_mask: 0.9208  decode.d4.loss_dice: 1.0216  decode.d5.loss_cls: 0.2433  decode.d5.loss_mask: 0.9044  decode.d5.loss_dice: 0.9922  decode.d6.loss_cls: 0.2439  decode.d6.loss_mask: 0.9122  decode.d6.loss_dice: 0.9886  decode.d7.loss_cls: 0.2475  decode.d7.loss_mask: 0.9158  decode.d7.loss_dice: 0.9770  decode.d8.loss_cls: 0.2094  decode.d8.loss_mask: 0.9136  decode.d8.loss_dice: 1.0212  mix_decode.loss_cls: 0.1919  mix_decode.loss_mask: 0.3922  mix_decode.loss_dice: 0.5548  mix_decode.d0.loss_cls: 0.1685  mix_decode.d0.loss_mask: 0.3935  mix_decode.d0.loss_dice: 0.6038  mix_decode.d1.loss_cls: 0.1730  mix_decode.d1.loss_mask: 0.3967  mix_decode.d1.loss_dice: 0.5590  mix_decode.d2.loss_cls: 0.1894  mix_decode.d2.loss_mask: 0.3931  mix_decode.d2.loss_dice: 0.5313  mix_decode.d3.loss_cls: 0.1604  mix_decode.d3.loss_mask: 0.3980  mix_decode.d3.loss_dice: 0.5338  mix_decode.d4.loss_cls: 0.1592  mix_decode.d4.loss_mask: 0.4050  mix_decode.d4.loss_dice: 0.5567  mix_decode.d5.loss_cls: 0.1966  mix_decode.d5.loss_mask: 0.3957  mix_decode.d5.loss_dice: 0.5448  mix_decode.d6.loss_cls: 0.1636  mix_decode.d6.loss_mask: 0.4039  mix_decode.d6.loss_dice: 0.5461  mix_decode.d7.loss_cls: 0.1791  mix_decode.d7.loss_mask: 0.3875  mix_decode.d7.loss_dice: 0.5691  mix_decode.d8.loss_cls: 0.1466  mix_decode.d8.loss_mask: 0.4175  mix_decode.d8.loss_dice: 0.5778
2025/03/27 16:18:43 - mmengine - INFO - Iter(train) [19700/20000]  base_lr: 2.2830e-06 lr: 2.2830e-06  eta: 0:04:50  time: 1.0756  data_time: 0.0225  memory: 10799  loss: 34.6963  decode.loss_cls: 0.1242  decode.loss_mask: 1.0722  decode.loss_dice: 1.1847  decode.d0.loss_cls: 0.2372  decode.d0.loss_mask: 1.0689  decode.d0.loss_dice: 1.2246  decode.d1.loss_cls: 0.1978  decode.d1.loss_mask: 1.0633  decode.d1.loss_dice: 1.1716  decode.d2.loss_cls: 0.1559  decode.d2.loss_mask: 1.0748  decode.d2.loss_dice: 1.1787  decode.d3.loss_cls: 0.1278  decode.d3.loss_mask: 1.0732  decode.d3.loss_dice: 1.1923  decode.d4.loss_cls: 0.1762  decode.d4.loss_mask: 1.0645  decode.d4.loss_dice: 1.1652  decode.d5.loss_cls: 0.1415  decode.d5.loss_mask: 1.0613  decode.d5.loss_dice: 1.1648  decode.d6.loss_cls: 0.1400  decode.d6.loss_mask: 1.0605  decode.d6.loss_dice: 1.1733  decode.d7.loss_cls: 0.2373  decode.d7.loss_mask: 1.0544  decode.d7.loss_dice: 1.1789  decode.d8.loss_cls: 0.1821  decode.d8.loss_mask: 1.0765  decode.d8.loss_dice: 1.1909  mix_decode.loss_cls: 0.1217  mix_decode.loss_mask: 0.3852  mix_decode.loss_dice: 0.5563  mix_decode.d0.loss_cls: 0.0751  mix_decode.d0.loss_mask: 0.3800  mix_decode.d0.loss_dice: 0.6143  mix_decode.d1.loss_cls: 0.0918  mix_decode.d1.loss_mask: 0.3997  mix_decode.d1.loss_dice: 0.5751  mix_decode.d2.loss_cls: 0.1227  mix_decode.d2.loss_mask: 0.3826  mix_decode.d2.loss_dice: 0.5401  mix_decode.d3.loss_cls: 0.1313  mix_decode.d3.loss_mask: 0.3689  mix_decode.d3.loss_dice: 0.5289  mix_decode.d4.loss_cls: 0.1341  mix_decode.d4.loss_mask: 0.3768  mix_decode.d4.loss_dice: 0.5420  mix_decode.d5.loss_cls: 0.0861  mix_decode.d5.loss_mask: 0.3960  mix_decode.d5.loss_dice: 0.5532  mix_decode.d6.loss_cls: 0.1077  mix_decode.d6.loss_mask: 0.3866  mix_decode.d6.loss_dice: 0.5444  mix_decode.d7.loss_cls: 0.0844  mix_decode.d7.loss_mask: 0.3939  mix_decode.d7.loss_dice: 0.5510  mix_decode.d8.loss_cls: 0.0792  mix_decode.d8.loss_mask: 0.4006  mix_decode.d8.loss_dice: 0.5719
2025/03/27 16:19:37 - mmengine - INFO - Iter(train) [19750/20000]  base_lr: 1.9375e-06 lr: 1.9375e-06  eta: 0:04:01  time: 1.0757  data_time: 0.0225  memory: 10804  loss: 31.6171  decode.loss_cls: 0.1557  decode.loss_mask: 0.9440  decode.loss_dice: 1.1506  decode.d0.loss_cls: 0.2278  decode.d0.loss_mask: 0.9545  decode.d0.loss_dice: 1.1589  decode.d1.loss_cls: 0.1777  decode.d1.loss_mask: 0.9364  decode.d1.loss_dice: 1.1407  decode.d2.loss_cls: 0.2240  decode.d2.loss_mask: 0.9523  decode.d2.loss_dice: 1.1145  decode.d3.loss_cls: 0.2217  decode.d3.loss_mask: 0.9361  decode.d3.loss_dice: 1.1242  decode.d4.loss_cls: 0.2182  decode.d4.loss_mask: 0.9132  decode.d4.loss_dice: 1.1226  decode.d5.loss_cls: 0.2217  decode.d5.loss_mask: 0.9261  decode.d5.loss_dice: 1.1393  decode.d6.loss_cls: 0.2448  decode.d6.loss_mask: 0.9192  decode.d6.loss_dice: 1.1042  decode.d7.loss_cls: 0.2376  decode.d7.loss_mask: 0.9209  decode.d7.loss_dice: 1.1151  decode.d8.loss_cls: 0.1751  decode.d8.loss_mask: 0.9162  decode.d8.loss_dice: 1.1410  mix_decode.loss_cls: 0.1259  mix_decode.loss_mask: 0.3433  mix_decode.loss_dice: 0.4145  mix_decode.d0.loss_cls: 0.1464  mix_decode.d0.loss_mask: 0.3547  mix_decode.d0.loss_dice: 0.4776  mix_decode.d1.loss_cls: 0.1489  mix_decode.d1.loss_mask: 0.3335  mix_decode.d1.loss_dice: 0.4296  mix_decode.d2.loss_cls: 0.0998  mix_decode.d2.loss_mask: 0.3555  mix_decode.d2.loss_dice: 0.4384  mix_decode.d3.loss_cls: 0.1260  mix_decode.d3.loss_mask: 0.3516  mix_decode.d3.loss_dice: 0.4086  mix_decode.d4.loss_cls: 0.1146  mix_decode.d4.loss_mask: 0.3320  mix_decode.d4.loss_dice: 0.4256  mix_decode.d5.loss_cls: 0.1126  mix_decode.d5.loss_mask: 0.3266  mix_decode.d5.loss_dice: 0.4219  mix_decode.d6.loss_cls: 0.0835  mix_decode.d6.loss_mask: 0.3485  mix_decode.d6.loss_dice: 0.4403  mix_decode.d7.loss_cls: 0.0977  mix_decode.d7.loss_mask: 0.3391  mix_decode.d7.loss_dice: 0.4298  mix_decode.d8.loss_cls: 0.0910  mix_decode.d8.loss_mask: 0.3444  mix_decode.d8.loss_dice: 0.4209
2025/03/27 16:20:31 - mmengine - INFO - Iter(train) [19800/20000]  base_lr: 1.5850e-06 lr: 1.5850e-06  eta: 0:03:13  time: 1.0762  data_time: 0.0226  memory: 10803  loss: 30.7019  decode.loss_cls: 0.2395  decode.loss_mask: 1.0092  decode.loss_dice: 1.0023  decode.d0.loss_cls: 0.2729  decode.d0.loss_mask: 1.0475  decode.d0.loss_dice: 1.0619  decode.d1.loss_cls: 0.2711  decode.d1.loss_mask: 1.0238  decode.d1.loss_dice: 1.0231  decode.d2.loss_cls: 0.1776  decode.d2.loss_mask: 1.0299  decode.d2.loss_dice: 1.0164  decode.d3.loss_cls: 0.2157  decode.d3.loss_mask: 1.0096  decode.d3.loss_dice: 1.0066  decode.d4.loss_cls: 0.1770  decode.d4.loss_mask: 1.0192  decode.d4.loss_dice: 1.0374  decode.d5.loss_cls: 0.1829  decode.d5.loss_mask: 1.0096  decode.d5.loss_dice: 1.0200  decode.d6.loss_cls: 0.2441  decode.d6.loss_mask: 1.0041  decode.d6.loss_dice: 1.0029  decode.d7.loss_cls: 0.2018  decode.d7.loss_mask: 1.0006  decode.d7.loss_dice: 1.0276  decode.d8.loss_cls: 0.2410  decode.d8.loss_mask: 0.9952  decode.d8.loss_dice: 0.9964  mix_decode.loss_cls: 0.1123  mix_decode.loss_mask: 0.2894  mix_decode.loss_dice: 0.4229  mix_decode.d0.loss_cls: 0.0741  mix_decode.d0.loss_mask: 0.3156  mix_decode.d0.loss_dice: 0.5031  mix_decode.d1.loss_cls: 0.0726  mix_decode.d1.loss_mask: 0.2979  mix_decode.d1.loss_dice: 0.4502  mix_decode.d2.loss_cls: 0.0798  mix_decode.d2.loss_mask: 0.2936  mix_decode.d2.loss_dice: 0.4297  mix_decode.d3.loss_cls: 0.0764  mix_decode.d3.loss_mask: 0.2922  mix_decode.d3.loss_dice: 0.4255  mix_decode.d4.loss_cls: 0.0530  mix_decode.d4.loss_mask: 0.3004  mix_decode.d4.loss_dice: 0.4461  mix_decode.d5.loss_cls: 0.0677  mix_decode.d5.loss_mask: 0.3008  mix_decode.d5.loss_dice: 0.4324  mix_decode.d6.loss_cls: 0.0630  mix_decode.d6.loss_mask: 0.3007  mix_decode.d6.loss_dice: 0.4371  mix_decode.d7.loss_cls: 0.0574  mix_decode.d7.loss_mask: 0.2935  mix_decode.d7.loss_dice: 0.4441  mix_decode.d8.loss_cls: 0.0780  mix_decode.d8.loss_mask: 0.2915  mix_decode.d8.loss_dice: 0.4341
2025/03/27 16:21:25 - mmengine - INFO - Iter(train) [19850/20000]  base_lr: 1.2234e-06 lr: 1.2234e-06  eta: 0:02:25  time: 1.0804  data_time: 0.0221  memory: 10802  loss: 32.9999  decode.loss_cls: 0.2492  decode.loss_mask: 0.9989  decode.loss_dice: 1.0919  decode.d0.loss_cls: 0.2907  decode.d0.loss_mask: 1.0237  decode.d0.loss_dice: 1.1347  decode.d1.loss_cls: 0.2689  decode.d1.loss_mask: 1.0079  decode.d1.loss_dice: 1.0617  decode.d2.loss_cls: 0.2998  decode.d2.loss_mask: 0.9738  decode.d2.loss_dice: 1.0663  decode.d3.loss_cls: 0.2412  decode.d3.loss_mask: 1.0186  decode.d3.loss_dice: 1.0898  decode.d4.loss_cls: 0.2792  decode.d4.loss_mask: 1.0040  decode.d4.loss_dice: 1.0334  decode.d5.loss_cls: 0.2564  decode.d5.loss_mask: 0.9873  decode.d5.loss_dice: 1.0385  decode.d6.loss_cls: 0.3238  decode.d6.loss_mask: 0.9862  decode.d6.loss_dice: 1.0209  decode.d7.loss_cls: 0.2512  decode.d7.loss_mask: 0.9856  decode.d7.loss_dice: 1.0671  decode.d8.loss_cls: 0.2822  decode.d8.loss_mask: 0.9883  decode.d8.loss_dice: 1.0391  mix_decode.loss_cls: 0.0972  mix_decode.loss_mask: 0.3676  mix_decode.loss_dice: 0.4781  mix_decode.d0.loss_cls: 0.0965  mix_decode.d0.loss_mask: 0.3885  mix_decode.d0.loss_dice: 0.5379  mix_decode.d1.loss_cls: 0.0823  mix_decode.d1.loss_mask: 0.3819  mix_decode.d1.loss_dice: 0.4937  mix_decode.d2.loss_cls: 0.1181  mix_decode.d2.loss_mask: 0.3574  mix_decode.d2.loss_dice: 0.4828  mix_decode.d3.loss_cls: 0.1055  mix_decode.d3.loss_mask: 0.3550  mix_decode.d3.loss_dice: 0.4800  mix_decode.d4.loss_cls: 0.0919  mix_decode.d4.loss_mask: 0.3832  mix_decode.d4.loss_dice: 0.4883  mix_decode.d5.loss_cls: 0.0852  mix_decode.d5.loss_mask: 0.3818  mix_decode.d5.loss_dice: 0.5010  mix_decode.d6.loss_cls: 0.0828  mix_decode.d6.loss_mask: 0.3787  mix_decode.d6.loss_dice: 0.4996  mix_decode.d7.loss_cls: 0.0965  mix_decode.d7.loss_mask: 0.3722  mix_decode.d7.loss_dice: 0.4974  mix_decode.d8.loss_cls: 0.0868  mix_decode.d8.loss_mask: 0.3778  mix_decode.d8.loss_dice: 0.4940
2025/03/27 16:22:20 - mmengine - INFO - Iter(train) [19900/20000]  base_lr: 8.4936e-07 lr: 8.4936e-07  eta: 0:01:36  time: 1.0877  data_time: 0.0233  memory: 10809  loss: 33.6479  decode.loss_cls: 0.2091  decode.loss_mask: 0.9943  decode.loss_dice: 1.1853  decode.d0.loss_cls: 0.2304  decode.d0.loss_mask: 1.0071  decode.d0.loss_dice: 1.2784  decode.d1.loss_cls: 0.2315  decode.d1.loss_mask: 1.0338  decode.d1.loss_dice: 1.2292  decode.d2.loss_cls: 0.1966  decode.d2.loss_mask: 1.0232  decode.d2.loss_dice: 1.2017  decode.d3.loss_cls: 0.2113  decode.d3.loss_mask: 0.9981  decode.d3.loss_dice: 1.1623  decode.d4.loss_cls: 0.1193  decode.d4.loss_mask: 1.0322  decode.d4.loss_dice: 1.2381  decode.d5.loss_cls: 0.1647  decode.d5.loss_mask: 1.0036  decode.d5.loss_dice: 1.1946  decode.d6.loss_cls: 0.2027  decode.d6.loss_mask: 1.0142  decode.d6.loss_dice: 1.1868  decode.d7.loss_cls: 0.2161  decode.d7.loss_mask: 1.0003  decode.d7.loss_dice: 1.2021  decode.d8.loss_cls: 0.1696  decode.d8.loss_mask: 1.0154  decode.d8.loss_dice: 1.2112  mix_decode.loss_cls: 0.0915  mix_decode.loss_mask: 0.3556  mix_decode.loss_dice: 0.5078  mix_decode.d0.loss_cls: 0.1065  mix_decode.d0.loss_mask: 0.3446  mix_decode.d0.loss_dice: 0.5362  mix_decode.d1.loss_cls: 0.0621  mix_decode.d1.loss_mask: 0.3517  mix_decode.d1.loss_dice: 0.4993  mix_decode.d2.loss_cls: 0.0886  mix_decode.d2.loss_mask: 0.3446  mix_decode.d2.loss_dice: 0.5025  mix_decode.d3.loss_cls: 0.0829  mix_decode.d3.loss_mask: 0.3697  mix_decode.d3.loss_dice: 0.5048  mix_decode.d4.loss_cls: 0.0633  mix_decode.d4.loss_mask: 0.3694  mix_decode.d4.loss_dice: 0.5195  mix_decode.d5.loss_cls: 0.0786  mix_decode.d5.loss_mask: 0.3585  mix_decode.d5.loss_dice: 0.5011  mix_decode.d6.loss_cls: 0.0941  mix_decode.d6.loss_mask: 0.3534  mix_decode.d6.loss_dice: 0.4992  mix_decode.d7.loss_cls: 0.0996  mix_decode.d7.loss_mask: 0.3450  mix_decode.d7.loss_dice: 0.5039  mix_decode.d8.loss_cls: 0.0922  mix_decode.d8.loss_mask: 0.3579  mix_decode.d8.loss_dice: 0.5008
2025/03/27 16:23:14 - mmengine - INFO - Iter(train) [19950/20000]  base_lr: 4.5516e-07 lr: 4.5516e-07  eta: 0:00:48  time: 1.0762  data_time: 0.0225  memory: 10806  loss: 32.2882  decode.loss_cls: 0.1529  decode.loss_mask: 1.0917  decode.loss_dice: 1.1226  decode.d0.loss_cls: 0.2439  decode.d0.loss_mask: 1.1052  decode.d0.loss_dice: 1.1945  decode.d1.loss_cls: 0.1816  decode.d1.loss_mask: 1.0811  decode.d1.loss_dice: 1.1405  decode.d2.loss_cls: 0.1971  decode.d2.loss_mask: 1.0567  decode.d2.loss_dice: 1.1018  decode.d3.loss_cls: 0.1681  decode.d3.loss_mask: 1.0650  decode.d3.loss_dice: 1.1280  decode.d4.loss_cls: 0.2018  decode.d4.loss_mask: 1.0722  decode.d4.loss_dice: 1.1095  decode.d5.loss_cls: 0.1912  decode.d5.loss_mask: 1.0517  decode.d5.loss_dice: 1.0880  decode.d6.loss_cls: 0.1919  decode.d6.loss_mask: 1.0760  decode.d6.loss_dice: 1.1200  decode.d7.loss_cls: 0.1831  decode.d7.loss_mask: 1.0607  decode.d7.loss_dice: 1.1149  decode.d8.loss_cls: 0.1592  decode.d8.loss_mask: 1.0628  decode.d8.loss_dice: 1.1160  mix_decode.loss_cls: 0.0641  mix_decode.loss_mask: 0.3186  mix_decode.loss_dice: 0.4595  mix_decode.d0.loss_cls: 0.0556  mix_decode.d0.loss_mask: 0.3233  mix_decode.d0.loss_dice: 0.5109  mix_decode.d1.loss_cls: 0.0708  mix_decode.d1.loss_mask: 0.3209  mix_decode.d1.loss_dice: 0.4693  mix_decode.d2.loss_cls: 0.0445  mix_decode.d2.loss_mask: 0.3211  mix_decode.d2.loss_dice: 0.4695  mix_decode.d3.loss_cls: 0.0430  mix_decode.d3.loss_mask: 0.3196  mix_decode.d3.loss_dice: 0.4656  mix_decode.d4.loss_cls: 0.0632  mix_decode.d4.loss_mask: 0.3259  mix_decode.d4.loss_dice: 0.4589  mix_decode.d5.loss_cls: 0.0560  mix_decode.d5.loss_mask: 0.3286  mix_decode.d5.loss_dice: 0.4622  mix_decode.d6.loss_cls: 0.0528  mix_decode.d6.loss_mask: 0.3196  mix_decode.d6.loss_dice: 0.4564  mix_decode.d7.loss_cls: 0.0510  mix_decode.d7.loss_mask: 0.3239  mix_decode.d7.loss_dice: 0.4626  mix_decode.d8.loss_cls: 0.0576  mix_decode.d8.loss_mask: 0.3203  mix_decode.d8.loss_dice: 0.4634
2025/03/27 16:24:07 - mmengine - INFO - Exp name: pr2vi_20250327_105544
2025/03/27 16:24:07 - mmengine - INFO - Iter(train) [20000/20000]  base_lr: 0.0000e+00 lr: 0.0000e+00  eta: 0:00:00  time: 1.0762  data_time: 0.0221  memory: 10795  loss: 38.3157  decode.loss_cls: 0.2925  decode.loss_mask: 1.1317  decode.loss_dice: 1.3361  decode.d0.loss_cls: 0.3492  decode.d0.loss_mask: 1.1888  decode.d0.loss_dice: 1.3673  decode.d1.loss_cls: 0.3382  decode.d1.loss_mask: 1.1514  decode.d1.loss_dice: 1.3259  decode.d2.loss_cls: 0.3441  decode.d2.loss_mask: 1.1351  decode.d2.loss_dice: 1.3114  decode.d3.loss_cls: 0.3349  decode.d3.loss_mask: 1.1367  decode.d3.loss_dice: 1.3098  decode.d4.loss_cls: 0.3004  decode.d4.loss_mask: 1.1172  decode.d4.loss_dice: 1.2952  decode.d5.loss_cls: 0.3611  decode.d5.loss_mask: 1.1257  decode.d5.loss_dice: 1.3196  decode.d6.loss_cls: 0.2788  decode.d6.loss_mask: 1.1532  decode.d6.loss_dice: 1.3376  decode.d7.loss_cls: 0.2917  decode.d7.loss_mask: 1.1370  decode.d7.loss_dice: 1.3183  decode.d8.loss_cls: 0.2774  decode.d8.loss_mask: 1.1378  decode.d8.loss_dice: 1.3556  mix_decode.loss_cls: 0.1055  mix_decode.loss_mask: 0.3936  mix_decode.loss_dice: 0.5623  mix_decode.d0.loss_cls: 0.1195  mix_decode.d0.loss_mask: 0.3776  mix_decode.d0.loss_dice: 0.6045  mix_decode.d1.loss_cls: 0.1111  mix_decode.d1.loss_mask: 0.3789  mix_decode.d1.loss_dice: 0.5765  mix_decode.d2.loss_cls: 0.1233  mix_decode.d2.loss_mask: 0.3772  mix_decode.d2.loss_dice: 0.5350  mix_decode.d3.loss_cls: 0.1127  mix_decode.d3.loss_mask: 0.3804  mix_decode.d3.loss_dice: 0.5320  mix_decode.d4.loss_cls: 0.1163  mix_decode.d4.loss_mask: 0.3799  mix_decode.d4.loss_dice: 0.5411  mix_decode.d5.loss_cls: 0.1156  mix_decode.d5.loss_mask: 0.3751  mix_decode.d5.loss_dice: 0.5373  mix_decode.d6.loss_cls: 0.1035  mix_decode.d6.loss_mask: 0.3803  mix_decode.d6.loss_dice: 0.5375  mix_decode.d7.loss_cls: 0.0886  mix_decode.d7.loss_mask: 0.3848  mix_decode.d7.loss_dice: 0.5577  mix_decode.d8.loss_cls: 0.1071  mix_decode.d8.loss_mask: 0.3777  mix_decode.d8.loss_dice: 0.5633
2025/03/27 16:24:07 - mmengine - INFO - Saving checkpoint at 20000 iterations
2025/03/27 16:24:13 - mmengine - INFO - Iter(val) [ 50/398]    eta: 0:00:29  time: 0.0850  data_time: 0.0017  memory: 3118  
2025/03/27 16:24:17 - mmengine - INFO - Iter(val) [100/398]    eta: 0:00:25  time: 0.0883  data_time: 0.0023  memory: 3118  
2025/03/27 16:24:21 - mmengine - INFO - Iter(val) [150/398]    eta: 0:00:21  time: 0.0849  data_time: 0.0016  memory: 3118  
2025/03/27 16:24:26 - mmengine - INFO - Iter(val) [200/398]    eta: 0:00:16  time: 0.0849  data_time: 0.0016  memory: 3118  
2025/03/27 16:24:30 - mmengine - INFO - Iter(val) [250/398]    eta: 0:00:12  time: 0.0848  data_time: 0.0016  memory: 3118  
2025/03/27 16:24:34 - mmengine - INFO - Iter(val) [300/398]    eta: 0:00:08  time: 0.0851  data_time: 0.0016  memory: 3118  
2025/03/27 16:24:38 - mmengine - INFO - Iter(val) [350/398]    eta: 0:00:04  time: 0.0853  data_time: 0.0017  memory: 3118  
2025/03/27 16:24:43 - mmengine - INFO - per class results:
2025/03/27 16:24:43 - mmengine - INFO - 
+--------------------+-------+-------+
|       Class        |  IoU  |  Acc  |
+--------------------+-------+-------+
| impervious_surface | 78.48 | 89.88 |
|      building      | 89.27 | 95.84 |
|   low_vegetation   | 63.75 | 74.28 |
|        tree        | 73.99 | 81.21 |
|        car         | 62.48 | 82.25 |
|      clutter       | 30.81 | 93.67 |
+--------------------+-------+-------+
2025/03/27 16:24:43 - mmengine - INFO - Iter(val) [398/398]    aAcc: 85.9300  mIoU: 66.4600  mAcc: 86.1900  data_time: 0.0018  time: 0.0855
