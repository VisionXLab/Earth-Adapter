2025/03/29 12:24:55 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.9.21 (main, Dec 11 2024, 16:24:11) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 0
    GPU 0: NVIDIA GeForce RTX 3090
    CUDA_HOME: /usr/local/cuda-12.1
    NVCC: Cuda compilation tools, release 12.1, V12.1.66
    GCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0
    PyTorch: 2.1.1+cu121
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.9.2
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=8.9.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.1+cu121
    OpenCV: 4.11.0
    MMEngine: 0.10.7

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 0
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2025/03/29 12:24:55 - mmengine - INFO - Config:
crop_size = (
    512,
    512,
)
data_root = '/home/face/kaichengyang/xiaoxinghu/data'
dataset_type = 'LoveDADataset'
default_hooks = dict(
    checkpoint=dict(
        by_epoch=False,
        interval=2000,
        max_keep_ckpts=1,
        save_best='mIoU',
        type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
embed_multi = dict(decay_mult=0.0, lr_mult=1.0)
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
exp_name = 'DG_spatial_64_cutoff_0.3_fft_suf3'
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        adapter_config=dict(
            cutoff_ratio=0.3,
            dim=64,
            fft_layer=[
                21,
                22,
                23,
            ],
            scale=0.1,
            with_token=False),
        block_chunks=0,
        depth=24,
        embed_dim=1024,
        ffn_bias=True,
        ffn_layer='mlp',
        img_size=512,
        init_cfg=dict(
            checkpoint='checkpoints/dinov2_converted.pth', type='Pretrained'),
        init_values=1e-05,
        mlp_ratio=4,
        moe_adapter_type='earth_adapter',
        num_heads=16,
        patch_size=16,
        proj_bias=True,
        qkv_bias=True,
        type='MOE_Adpter_DinoVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        enforce_decoder_input_project=False,
        feat_channels=256,
        in_channels=[
            1024,
            1024,
            1024,
            1024,
        ],
        loss_cls=dict(
            class_weight=[
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                0.1,
            ],
            loss_weight=2.0,
            reduction='mean',
            type='mmdet.CrossEntropyLoss',
            use_sigmoid=False),
        loss_dice=dict(
            activate=True,
            eps=1.0,
            loss_weight=5.0,
            naive_dice=True,
            reduction='mean',
            type='mmdet.DiceLoss',
            use_sigmoid=True),
        loss_mask=dict(
            loss_weight=5.0,
            reduction='mean',
            type='mmdet.CrossEntropyLoss',
            use_sigmoid=True),
        num_classes=7,
        num_queries=100,
        num_transformer_feat_level=3,
        out_channels=256,
        pixel_decoder=dict(
            act_cfg=dict(type='ReLU'),
            encoder=dict(
                init_cfg=None,
                layer_cfg=dict(
                    ffn_cfg=dict(
                        act_cfg=dict(inplace=True, type='ReLU'),
                        embed_dims=256,
                        feedforward_channels=1024,
                        ffn_drop=0.0,
                        num_fcs=2),
                    self_attn_cfg=dict(
                        batch_first=True,
                        dropout=0.0,
                        embed_dims=256,
                        im2col_step=64,
                        init_cfg=None,
                        norm_cfg=None,
                        num_heads=8,
                        num_levels=3,
                        num_points=4)),
                num_layers=6),
            init_cfg=None,
            norm_cfg=dict(num_groups=32, type='GN'),
            num_outs=3,
            positional_encoding=dict(normalize=True, num_feats=128),
            type='mmdet.MSDeformAttnPixelDecoder'),
        positional_encoding=dict(normalize=True, num_feats=128),
        strides=[
            4,
            8,
            16,
            32,
        ],
        train_cfg=dict(
            assigner=dict(
                match_costs=[
                    dict(type='mmdet.ClassificationCost', weight=2.0),
                    dict(
                        type='mmdet.CrossEntropyLossCost',
                        use_sigmoid=True,
                        weight=5.0),
                    dict(
                        eps=1.0,
                        pred_act=True,
                        type='mmdet.DiceCost',
                        weight=5.0),
                ],
                type='mmdet.HungarianAssigner'),
            importance_sample_ratio=0.75,
            num_points=12544,
            oversample_ratio=3.0,
            sampler=dict(type='mmdet.MaskPseudoSampler')),
        transformer_decoder=dict(
            init_cfg=None,
            layer_cfg=dict(
                cross_attn_cfg=dict(
                    attn_drop=0.0,
                    batch_first=True,
                    dropout_layer=None,
                    embed_dims=256,
                    num_heads=8,
                    proj_drop=0.0),
                ffn_cfg=dict(
                    act_cfg=dict(inplace=True, type='ReLU'),
                    add_identity=True,
                    dropout_layer=None,
                    embed_dims=256,
                    feedforward_channels=2048,
                    ffn_drop=0.0,
                    num_fcs=2),
                self_attn_cfg=dict(
                    attn_drop=0.0,
                    batch_first=True,
                    dropout_layer=None,
                    embed_dims=256,
                    num_heads=8,
                    proj_drop=0.0)),
            num_layers=9,
            return_intermediate=True),
        type='Mask2FormerHead'),
    test_cfg=dict(crop_size=(
        512,
        512,
    ), mode='slide', stride=(
        341,
        341,
    )),
    train_cfg=dict(),
    type='EncoderDecoder')
num_classes = 19
optim_wrapper = dict(
    constructor='PEFTOptimWrapperConstructor',
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ),
        eps=1e-08,
        lr=0.0001,
        type='AdamW',
        weight_decay=0.05),
    paramwise_cfg=dict(
        custom_keys=dict({
            'learnable_tokens': dict(decay_mult=0.0, lr_mult=1.0),
            'level_embed': dict(decay_mult=0.0, lr_mult=1.0),
            'norm': dict(decay_mult=0.0),
            'query_embed': dict(decay_mult=0.0, lr_mult=1.0),
            'reins.scale': dict(decay_mult=0.0, lr_mult=1.0)
        }),
        norm_decay_mult=0.0))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=20000,
        eta_min=0,
        power=0.9,
        type='PolyLR'),
]
randomness = dict(seed=0)
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='loveda_uda/rural/val/img_dir',
            seg_map_path='loveda_uda/rural/val/ann_dir'),
        data_root='/home/face/kaichengyang/xiaoxinghu/data',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                512,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='LoveDADataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        512,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(max_iters=20000, type='IterBasedTrainLoop', val_interval=2000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='loveda_uda/urban/train/img_dir',
            seg_map_path='loveda_uda/urban/train/ann_dir'),
        data_root='/home/face/kaichengyang/xiaoxinghu/data',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    512,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='LoveDADataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            512,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='loveda_uda/rural/val/img_dir',
            seg_map_path='loveda_uda/rural/val/ann_dir'),
        data_root='/home/face/kaichengyang/xiaoxinghu/data',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                512,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='LoveDADataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
    dict(type='TensorboardVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
        dict(type='TensorboardVisBackend'),
    ])
work_dir = './work_dirs/u2r/DG_spatial_64_cutoff_0.3_fft_suf3/ee2e4_seed0'

2025/03/29 12:25:00 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2025/03/29 12:25:00 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.scale
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.1.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.1.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.3.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.3.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.4.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.4.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.5.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.5.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.6.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.6.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.7.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.7.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.8.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.8.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.9.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.9.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.10.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.10.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.11.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.11.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.12.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.12.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.13.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.13.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.14.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.14.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.15.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.15.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.16.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.16.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.17.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.17.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.18.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.18.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.19.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.19.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.20.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.20.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.21.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.21.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.22.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.22.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.23.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.23.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.0.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.0.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.0.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.0.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.1.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.1.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.1.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.1.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.2.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.2.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.2.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.2.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.3.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.3.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.3.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.3.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.4.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.4.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.4.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.4.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.5.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.5.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.5.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.5.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.6.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.6.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.6.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.6.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.7.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.7.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.7.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.7.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.8.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.8.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.8.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.8.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.9.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.9.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.9.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.9.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.10.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.10.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.10.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.10.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.11.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.11.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.11.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.11.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.12.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.12.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.12.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.12.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.13.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.13.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.13.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.13.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.14.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.14.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.14.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.14.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.15.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.15.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.15.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.15.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.16.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.16.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.16.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.16.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.17.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.17.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.17.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.17.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.18.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.18.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.18.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.18.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.19.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.19.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.19.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.19.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.20.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.20.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.20.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.20.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.21.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.21.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.21.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.21.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.22.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.22.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.22.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.22.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.23.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.23.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.23.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.23.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.0.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.0.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.0.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.0.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.1.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.1.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.1.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.1.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.2.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.2.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.2.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.2.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.3.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.3.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.3.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.3.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.4.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.4.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.4.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.4.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.5.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.5.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.5.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.5.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.6.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.6.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.6.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.6.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.7.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.7.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.7.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.7.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.8.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.8.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.8.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.8.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.9.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.9.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.9.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.9.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.10.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.10.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.10.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.10.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.11.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.11.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.11.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.11.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.12.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.12.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.12.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.12.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.13.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.13.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.13.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.13.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.14.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.14.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.14.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.14.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.15.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.15.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.15.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.15.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.16.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.16.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.16.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.16.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.17.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.17.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.17.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.17.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.18.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.18.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.18.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.18.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.19.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.19.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.19.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.19.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.20.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.20.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.20.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.20.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.21.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.21.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.21.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.21.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.22.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.22.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.22.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.22.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.23.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.23.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.23.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.23.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.0.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.0.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.0.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.0.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.1.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.1.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.1.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.1.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.2.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.2.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.2.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.2.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.3.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.3.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.3.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.3.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.4.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.4.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.4.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.4.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.5.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.5.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.5.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.5.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.6.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.6.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.6.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.6.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.7.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.7.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.7.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.7.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.8.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.8.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.8.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.8.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.9.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.9.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.9.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.9.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.10.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.10.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.10.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.10.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.11.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.11.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.11.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.11.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.12.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.12.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.12.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.12.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.13.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.13.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.13.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.13.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.14.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.14.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.14.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.14.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.15.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.15.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.15.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.15.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.16.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.16.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.16.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.16.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.17.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.17.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.17.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.17.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.18.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.18.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.18.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.18.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.19.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.19.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.19.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.19.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.20.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.20.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.20.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.20.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.21.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.21.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.21.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.21.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.22.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.22.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.22.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.22.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.23.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.23.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.23.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.23.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.0.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.0.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.1.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.1.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.2.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.2.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.3.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.3.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.4.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.4.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.5.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.5.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.6.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.6.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.7.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.7.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.8.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.8.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.9.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.9.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.10.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.10.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.11.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.11.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.12.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.12.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.13.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.13.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.14.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.14.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.15.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.15.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.16.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.16.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.17.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.17.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.18.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.18.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.19.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.19.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.20.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.20.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.21.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.21.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.22.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.22.bias
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.23.weight
2025/03/29 12:25:01 - mmengine - INFO - set_requires_grad----refine_feat.router.23.bias
2025/03/29 12:25:01 - mmengine - INFO - Total trainable params--9638496, All params--313838176, Ratio--3.1%
2025/03/29 12:25:01 - mmengine - INFO - set_train----.refine_feat
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.scale:num of params=24
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.weight:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.0.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.0.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.0.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.0.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.1.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.1.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.1.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.1.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.2.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.2.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.2.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.2.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.3.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.3.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.3.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.3.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.4.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.4.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.4.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.4.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.5.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.5.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.5.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.5.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.6.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.6.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.6.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.6.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.7.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.7.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.7.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.7.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.8.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.8.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.8.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.8.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.9.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.9.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.9.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.9.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.10.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.10.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.10.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.10.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.11.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.11.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.11.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.11.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.12.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.12.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.12.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.12.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.13.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.13.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.13.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.13.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.14.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.14.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.14.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.14.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.15.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.15.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.15.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.15.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.16.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.16.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.16.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.16.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.17.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.17.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.17.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.17.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.18.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.18.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.18.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.18.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.19.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.19.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.19.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.19.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.20.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.20.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.20.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.20.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.21.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.21.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.21.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.21.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.22.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.22.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.22.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.22.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.23.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.23.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.23.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.23.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.0.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.0.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.0.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.0.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.1.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.1.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.1.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.1.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.2.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.2.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.2.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.2.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.3.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.3.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.3.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.3.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.4.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.4.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.4.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.4.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.5.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.5.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.5.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.5.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.6.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.6.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.6.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.6.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.7.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.7.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.7.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.7.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.8.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.8.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.8.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.8.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.9.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.9.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.9.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.9.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.10.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.10.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.10.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.10.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.11.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.11.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.11.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.11.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.12.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.12.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.12.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.12.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.13.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.13.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.13.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.13.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.14.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.14.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.14.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.14.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.15.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.15.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.15.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.15.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.16.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.16.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.16.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.16.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.17.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.17.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.17.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.17.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.18.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.18.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.18.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.18.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.19.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.19.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.19.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.19.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.20.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.20.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.20.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.20.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.21.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.21.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.21.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.21.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.22.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.22.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.22.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.22.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.23.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.23.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.23.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.23.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.0.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.0.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.0.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.0.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.1.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.1.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.1.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.1.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.2.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.2.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.2.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.2.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.3.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.3.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.3.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.3.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.4.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.4.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.4.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.4.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.5.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.5.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.5.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.5.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.6.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.6.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.6.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.6.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.7.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.7.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.7.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.7.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.8.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.8.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.8.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.8.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.9.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.9.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.9.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.9.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.10.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.10.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.10.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.10.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.11.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.11.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.11.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.11.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.12.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.12.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.12.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.12.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.13.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.13.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.13.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.13.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.14.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.14.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.14.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.14.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.15.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.15.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.15.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.15.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.16.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.16.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.16.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.16.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.17.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.17.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.17.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.17.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.18.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.18.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.18.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.18.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.19.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.19.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.19.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.19.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.20.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.20.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.20.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.20.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.21.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.21.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.21.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.21.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.22.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.22.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.22.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.22.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.23.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.23.0.bias:num of params=64
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.23.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.23.2.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.0.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.0.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.1.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.1.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.2.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.2.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.3.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.3.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.4.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.4.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.5.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.5.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.6.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.6.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.7.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.7.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.8.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.8.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.9.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.9.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.10.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.10.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.11.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.11.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.12.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.12.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.13.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.13.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.14.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.14.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.15.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.15.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.16.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.16.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.17.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.17.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.18.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.18.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.19.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.19.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.20.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.20.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.21.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.21.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.22.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.22.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.23.weight:num of params=3072
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.23.bias:num of params=3
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.0.conv.weight:num of params=262144
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.0.conv.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.0.gn.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.0.gn.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.0.gn.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.0.gn.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.1.conv.weight:num of params=262144
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.1.conv.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.1.gn.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.1.gn.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.1.gn.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.1.gn.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.2.conv.weight:num of params=262144
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.2.conv.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.2.gn.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.2.gn.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.2.gn.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.2.gn.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.sampling_offsets.weight:num of params=49152
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.sampling_offsets.bias:num of params=192
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.attention_weights.weight:num of params=24576
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.attention_weights.bias:num of params=96
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.value_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.value_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.output_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.output_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.ffn.layers.0.0.weight:num of params=262144
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.ffn.layers.0.0.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.ffn.layers.1.weight:num of params=262144
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.ffn.layers.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.sampling_offsets.weight:num of params=49152
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.sampling_offsets.bias:num of params=192
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.attention_weights.weight:num of params=24576
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.attention_weights.bias:num of params=96
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.value_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.value_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.output_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.output_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.ffn.layers.0.0.weight:num of params=262144
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.ffn.layers.0.0.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.ffn.layers.1.weight:num of params=262144
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.ffn.layers.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.sampling_offsets.weight:num of params=49152
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.sampling_offsets.bias:num of params=192
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.attention_weights.weight:num of params=24576
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.attention_weights.bias:num of params=96
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.value_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.value_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.output_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.output_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.ffn.layers.0.0.weight:num of params=262144
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.ffn.layers.0.0.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.ffn.layers.1.weight:num of params=262144
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.ffn.layers.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.sampling_offsets.weight:num of params=49152
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.sampling_offsets.bias:num of params=192
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.attention_weights.weight:num of params=24576
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.attention_weights.bias:num of params=96
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.value_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.value_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.output_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.output_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.ffn.layers.0.0.weight:num of params=262144
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.ffn.layers.0.0.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.ffn.layers.1.weight:num of params=262144
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.ffn.layers.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.sampling_offsets.weight:num of params=49152
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.sampling_offsets.bias:num of params=192
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.attention_weights.weight:num of params=24576
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.attention_weights.bias:num of params=96
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.value_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.value_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.output_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.output_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.ffn.layers.0.0.weight:num of params=262144
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.ffn.layers.0.0.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.ffn.layers.1.weight:num of params=262144
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.ffn.layers.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.sampling_offsets.weight:num of params=49152
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.sampling_offsets.bias:num of params=192
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.attention_weights.weight:num of params=24576
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.attention_weights.bias:num of params=96
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.value_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.value_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.output_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.output_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.ffn.layers.0.0.weight:num of params=262144
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.ffn.layers.0.0.bias:num of params=1024
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.ffn.layers.1.weight:num of params=262144
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.ffn.layers.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.level_encoding.weight:num of params=768
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.lateral_convs.0.conv.weight:num of params=262144
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.lateral_convs.0.gn.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.lateral_convs.0.gn.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.lateral_convs.0.gn.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.lateral_convs.0.gn.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.output_convs.0.conv.weight:num of params=589824
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.output_convs.0.gn.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.output_convs.0.gn.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.output_convs.0.gn.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.output_convs.0.gn.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.mask_feature.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.mask_feature.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.self_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.self_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.self_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.self_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.cross_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.cross_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.ffn.layers.0.0.weight:num of params=524288
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.ffn.layers.0.0.bias:num of params=2048
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.ffn.layers.1.weight:num of params=524288
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.ffn.layers.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.self_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.self_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.self_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.self_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.cross_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.cross_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.ffn.layers.0.0.weight:num of params=524288
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.ffn.layers.0.0.bias:num of params=2048
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.ffn.layers.1.weight:num of params=524288
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.ffn.layers.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.self_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.self_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.self_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.self_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.cross_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.cross_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.ffn.layers.0.0.weight:num of params=524288
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.ffn.layers.0.0.bias:num of params=2048
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.ffn.layers.1.weight:num of params=524288
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.ffn.layers.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.self_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.self_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.self_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.self_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.cross_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.cross_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.ffn.layers.0.0.weight:num of params=524288
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.ffn.layers.0.0.bias:num of params=2048
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.ffn.layers.1.weight:num of params=524288
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.ffn.layers.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.self_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.self_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.self_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.self_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.cross_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.cross_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.ffn.layers.0.0.weight:num of params=524288
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.ffn.layers.0.0.bias:num of params=2048
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.ffn.layers.1.weight:num of params=524288
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.ffn.layers.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.self_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.self_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.self_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.self_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.cross_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.cross_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.ffn.layers.0.0.weight:num of params=524288
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.ffn.layers.0.0.bias:num of params=2048
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.ffn.layers.1.weight:num of params=524288
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.ffn.layers.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.self_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.self_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.self_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.self_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.cross_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.cross_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.ffn.layers.0.0.weight:num of params=524288
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.ffn.layers.0.0.bias:num of params=2048
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.ffn.layers.1.weight:num of params=524288
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.ffn.layers.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.self_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.self_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.self_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.self_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.cross_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.cross_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.ffn.layers.0.0.weight:num of params=524288
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.ffn.layers.0.0.bias:num of params=2048
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.ffn.layers.1.weight:num of params=524288
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.ffn.layers.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.self_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.self_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.self_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.self_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.cross_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.cross_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.ffn.layers.0.0.weight:num of params=524288
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.ffn.layers.0.0.bias:num of params=2048
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.ffn.layers.1.weight:num of params=524288
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.ffn.layers.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.weight:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.bias:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.bias:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.bias:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.query_embed.weight:num of params=25600
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.query_embed.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.query_embed.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.query_embed.weight:lr_mult=1.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.query_embed.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.query_feat.weight:num of params=25600
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.level_embed.weight:num of params=768
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.level_embed.weight:lr=0.0001
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.level_embed.weight:weight_decay=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.level_embed.weight:lr_mult=1.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.level_embed.weight:decay_mult=0.0
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.cls_embed.weight:num of params=2048
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.cls_embed.bias:num of params=8
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.mask_embed.0.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.mask_embed.0.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.mask_embed.2.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.mask_embed.2.bias:num of params=256
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.mask_embed.4.weight:num of params=65536
2025/03/29 12:25:01 - mmengine - INFO - paramwise_options -- decode_head.mask_embed.4.bias:num of params=256
2025/03/29 12:25:01 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
2025/03/29 12:25:02 - mmengine - INFO - load model from: checkpoints/dinov2_converted.pth
2025/03/29 12:25:02 - mmengine - INFO - Loads checkpoint by local backend from path: checkpoints/dinov2_converted.pth
2025/03/29 12:25:04 - mmengine - WARNING - The model and loaded state dict do not match exactly

missing keys in source state_dict: refine_feat.scale, refine_feat.layer_norm.0.weight, refine_feat.layer_norm.0.bias, refine_feat.layer_norm.1.weight, refine_feat.layer_norm.1.bias, refine_feat.layer_norm.2.weight, refine_feat.layer_norm.2.bias, refine_feat.layer_norm.3.weight, refine_feat.layer_norm.3.bias, refine_feat.layer_norm.4.weight, refine_feat.layer_norm.4.bias, refine_feat.layer_norm.5.weight, refine_feat.layer_norm.5.bias, refine_feat.layer_norm.6.weight, refine_feat.layer_norm.6.bias, refine_feat.layer_norm.7.weight, refine_feat.layer_norm.7.bias, refine_feat.layer_norm.8.weight, refine_feat.layer_norm.8.bias, refine_feat.layer_norm.9.weight, refine_feat.layer_norm.9.bias, refine_feat.layer_norm.10.weight, refine_feat.layer_norm.10.bias, refine_feat.layer_norm.11.weight, refine_feat.layer_norm.11.bias, refine_feat.layer_norm.12.weight, refine_feat.layer_norm.12.bias, refine_feat.layer_norm.13.weight, refine_feat.layer_norm.13.bias, refine_feat.layer_norm.14.weight, refine_feat.layer_norm.14.bias, refine_feat.layer_norm.15.weight, refine_feat.layer_norm.15.bias, refine_feat.layer_norm.16.weight, refine_feat.layer_norm.16.bias, refine_feat.layer_norm.17.weight, refine_feat.layer_norm.17.bias, refine_feat.layer_norm.18.weight, refine_feat.layer_norm.18.bias, refine_feat.layer_norm.19.weight, refine_feat.layer_norm.19.bias, refine_feat.layer_norm.20.weight, refine_feat.layer_norm.20.bias, refine_feat.layer_norm.21.weight, refine_feat.layer_norm.21.bias, refine_feat.layer_norm.22.weight, refine_feat.layer_norm.22.bias, refine_feat.layer_norm.23.weight, refine_feat.layer_norm.23.bias, refine_feat.mlp_list1.0.0.weight, refine_feat.mlp_list1.0.0.bias, refine_feat.mlp_list1.0.2.weight, refine_feat.mlp_list1.0.2.bias, refine_feat.mlp_list1.1.0.weight, refine_feat.mlp_list1.1.0.bias, refine_feat.mlp_list1.1.2.weight, refine_feat.mlp_list1.1.2.bias, refine_feat.mlp_list1.2.0.weight, refine_feat.mlp_list1.2.0.bias, refine_feat.mlp_list1.2.2.weight, refine_feat.mlp_list1.2.2.bias, refine_feat.mlp_list1.3.0.weight, refine_feat.mlp_list1.3.0.bias, refine_feat.mlp_list1.3.2.weight, refine_feat.mlp_list1.3.2.bias, refine_feat.mlp_list1.4.0.weight, refine_feat.mlp_list1.4.0.bias, refine_feat.mlp_list1.4.2.weight, refine_feat.mlp_list1.4.2.bias, refine_feat.mlp_list1.5.0.weight, refine_feat.mlp_list1.5.0.bias, refine_feat.mlp_list1.5.2.weight, refine_feat.mlp_list1.5.2.bias, refine_feat.mlp_list1.6.0.weight, refine_feat.mlp_list1.6.0.bias, refine_feat.mlp_list1.6.2.weight, refine_feat.mlp_list1.6.2.bias, refine_feat.mlp_list1.7.0.weight, refine_feat.mlp_list1.7.0.bias, refine_feat.mlp_list1.7.2.weight, refine_feat.mlp_list1.7.2.bias, refine_feat.mlp_list1.8.0.weight, refine_feat.mlp_list1.8.0.bias, refine_feat.mlp_list1.8.2.weight, refine_feat.mlp_list1.8.2.bias, refine_feat.mlp_list1.9.0.weight, refine_feat.mlp_list1.9.0.bias, refine_feat.mlp_list1.9.2.weight, refine_feat.mlp_list1.9.2.bias, refine_feat.mlp_list1.10.0.weight, refine_feat.mlp_list1.10.0.bias, refine_feat.mlp_list1.10.2.weight, refine_feat.mlp_list1.10.2.bias, refine_feat.mlp_list1.11.0.weight, refine_feat.mlp_list1.11.0.bias, refine_feat.mlp_list1.11.2.weight, refine_feat.mlp_list1.11.2.bias, refine_feat.mlp_list1.12.0.weight, refine_feat.mlp_list1.12.0.bias, refine_feat.mlp_list1.12.2.weight, refine_feat.mlp_list1.12.2.bias, refine_feat.mlp_list1.13.0.weight, refine_feat.mlp_list1.13.0.bias, refine_feat.mlp_list1.13.2.weight, refine_feat.mlp_list1.13.2.bias, refine_feat.mlp_list1.14.0.weight, refine_feat.mlp_list1.14.0.bias, refine_feat.mlp_list1.14.2.weight, refine_feat.mlp_list1.14.2.bias, refine_feat.mlp_list1.15.0.weight, refine_feat.mlp_list1.15.0.bias, refine_feat.mlp_list1.15.2.weight, refine_feat.mlp_list1.15.2.bias, refine_feat.mlp_list1.16.0.weight, refine_feat.mlp_list1.16.0.bias, refine_feat.mlp_list1.16.2.weight, refine_feat.mlp_list1.16.2.bias, refine_feat.mlp_list1.17.0.weight, refine_feat.mlp_list1.17.0.bias, refine_feat.mlp_list1.17.2.weight, refine_feat.mlp_list1.17.2.bias, refine_feat.mlp_list1.18.0.weight, refine_feat.mlp_list1.18.0.bias, refine_feat.mlp_list1.18.2.weight, refine_feat.mlp_list1.18.2.bias, refine_feat.mlp_list1.19.0.weight, refine_feat.mlp_list1.19.0.bias, refine_feat.mlp_list1.19.2.weight, refine_feat.mlp_list1.19.2.bias, refine_feat.mlp_list1.20.0.weight, refine_feat.mlp_list1.20.0.bias, refine_feat.mlp_list1.20.2.weight, refine_feat.mlp_list1.20.2.bias, refine_feat.mlp_list1.21.0.weight, refine_feat.mlp_list1.21.0.bias, refine_feat.mlp_list1.21.2.weight, refine_feat.mlp_list1.21.2.bias, refine_feat.mlp_list1.22.0.weight, refine_feat.mlp_list1.22.0.bias, refine_feat.mlp_list1.22.2.weight, refine_feat.mlp_list1.22.2.bias, refine_feat.mlp_list1.23.0.weight, refine_feat.mlp_list1.23.0.bias, refine_feat.mlp_list1.23.2.weight, refine_feat.mlp_list1.23.2.bias, refine_feat.mlp_list2.0.0.weight, refine_feat.mlp_list2.0.0.bias, refine_feat.mlp_list2.0.2.weight, refine_feat.mlp_list2.0.2.bias, refine_feat.mlp_list2.1.0.weight, refine_feat.mlp_list2.1.0.bias, refine_feat.mlp_list2.1.2.weight, refine_feat.mlp_list2.1.2.bias, refine_feat.mlp_list2.2.0.weight, refine_feat.mlp_list2.2.0.bias, refine_feat.mlp_list2.2.2.weight, refine_feat.mlp_list2.2.2.bias, refine_feat.mlp_list2.3.0.weight, refine_feat.mlp_list2.3.0.bias, refine_feat.mlp_list2.3.2.weight, refine_feat.mlp_list2.3.2.bias, refine_feat.mlp_list2.4.0.weight, refine_feat.mlp_list2.4.0.bias, refine_feat.mlp_list2.4.2.weight, refine_feat.mlp_list2.4.2.bias, refine_feat.mlp_list2.5.0.weight, refine_feat.mlp_list2.5.0.bias, refine_feat.mlp_list2.5.2.weight, refine_feat.mlp_list2.5.2.bias, refine_feat.mlp_list2.6.0.weight, refine_feat.mlp_list2.6.0.bias, refine_feat.mlp_list2.6.2.weight, refine_feat.mlp_list2.6.2.bias, refine_feat.mlp_list2.7.0.weight, refine_feat.mlp_list2.7.0.bias, refine_feat.mlp_list2.7.2.weight, refine_feat.mlp_list2.7.2.bias, refine_feat.mlp_list2.8.0.weight, refine_feat.mlp_list2.8.0.bias, refine_feat.mlp_list2.8.2.weight, refine_feat.mlp_list2.8.2.bias, refine_feat.mlp_list2.9.0.weight, refine_feat.mlp_list2.9.0.bias, refine_feat.mlp_list2.9.2.weight, refine_feat.mlp_list2.9.2.bias, refine_feat.mlp_list2.10.0.weight, refine_feat.mlp_list2.10.0.bias, refine_feat.mlp_list2.10.2.weight, refine_feat.mlp_list2.10.2.bias, refine_feat.mlp_list2.11.0.weight, refine_feat.mlp_list2.11.0.bias, refine_feat.mlp_list2.11.2.weight, refine_feat.mlp_list2.11.2.bias, refine_feat.mlp_list2.12.0.weight, refine_feat.mlp_list2.12.0.bias, refine_feat.mlp_list2.12.2.weight, refine_feat.mlp_list2.12.2.bias, refine_feat.mlp_list2.13.0.weight, refine_feat.mlp_list2.13.0.bias, refine_feat.mlp_list2.13.2.weight, refine_feat.mlp_list2.13.2.bias, refine_feat.mlp_list2.14.0.weight, refine_feat.mlp_list2.14.0.bias, refine_feat.mlp_list2.14.2.weight, refine_feat.mlp_list2.14.2.bias, refine_feat.mlp_list2.15.0.weight, refine_feat.mlp_list2.15.0.bias, refine_feat.mlp_list2.15.2.weight, refine_feat.mlp_list2.15.2.bias, refine_feat.mlp_list2.16.0.weight, refine_feat.mlp_list2.16.0.bias, refine_feat.mlp_list2.16.2.weight, refine_feat.mlp_list2.16.2.bias, refine_feat.mlp_list2.17.0.weight, refine_feat.mlp_list2.17.0.bias, refine_feat.mlp_list2.17.2.weight, refine_feat.mlp_list2.17.2.bias, refine_feat.mlp_list2.18.0.weight, refine_feat.mlp_list2.18.0.bias, refine_feat.mlp_list2.18.2.weight, refine_feat.mlp_list2.18.2.bias, refine_feat.mlp_list2.19.0.weight, refine_feat.mlp_list2.19.0.bias, refine_feat.mlp_list2.19.2.weight, refine_feat.mlp_list2.19.2.bias, refine_feat.mlp_list2.20.0.weight, refine_feat.mlp_list2.20.0.bias, refine_feat.mlp_list2.20.2.weight, refine_feat.mlp_list2.20.2.bias, refine_feat.mlp_list2.21.0.weight, refine_feat.mlp_list2.21.0.bias, refine_feat.mlp_list2.21.2.weight, refine_feat.mlp_list2.21.2.bias, refine_feat.mlp_list2.22.0.weight, refine_feat.mlp_list2.22.0.bias, refine_feat.mlp_list2.22.2.weight, refine_feat.mlp_list2.22.2.bias, refine_feat.mlp_list2.23.0.weight, refine_feat.mlp_list2.23.0.bias, refine_feat.mlp_list2.23.2.weight, refine_feat.mlp_list2.23.2.bias, refine_feat.mlp_list3.0.0.weight, refine_feat.mlp_list3.0.0.bias, refine_feat.mlp_list3.0.2.weight, refine_feat.mlp_list3.0.2.bias, refine_feat.mlp_list3.1.0.weight, refine_feat.mlp_list3.1.0.bias, refine_feat.mlp_list3.1.2.weight, refine_feat.mlp_list3.1.2.bias, refine_feat.mlp_list3.2.0.weight, refine_feat.mlp_list3.2.0.bias, refine_feat.mlp_list3.2.2.weight, refine_feat.mlp_list3.2.2.bias, refine_feat.mlp_list3.3.0.weight, refine_feat.mlp_list3.3.0.bias, refine_feat.mlp_list3.3.2.weight, refine_feat.mlp_list3.3.2.bias, refine_feat.mlp_list3.4.0.weight, refine_feat.mlp_list3.4.0.bias, refine_feat.mlp_list3.4.2.weight, refine_feat.mlp_list3.4.2.bias, refine_feat.mlp_list3.5.0.weight, refine_feat.mlp_list3.5.0.bias, refine_feat.mlp_list3.5.2.weight, refine_feat.mlp_list3.5.2.bias, refine_feat.mlp_list3.6.0.weight, refine_feat.mlp_list3.6.0.bias, refine_feat.mlp_list3.6.2.weight, refine_feat.mlp_list3.6.2.bias, refine_feat.mlp_list3.7.0.weight, refine_feat.mlp_list3.7.0.bias, refine_feat.mlp_list3.7.2.weight, refine_feat.mlp_list3.7.2.bias, refine_feat.mlp_list3.8.0.weight, refine_feat.mlp_list3.8.0.bias, refine_feat.mlp_list3.8.2.weight, refine_feat.mlp_list3.8.2.bias, refine_feat.mlp_list3.9.0.weight, refine_feat.mlp_list3.9.0.bias, refine_feat.mlp_list3.9.2.weight, refine_feat.mlp_list3.9.2.bias, refine_feat.mlp_list3.10.0.weight, refine_feat.mlp_list3.10.0.bias, refine_feat.mlp_list3.10.2.weight, refine_feat.mlp_list3.10.2.bias, refine_feat.mlp_list3.11.0.weight, refine_feat.mlp_list3.11.0.bias, refine_feat.mlp_list3.11.2.weight, refine_feat.mlp_list3.11.2.bias, refine_feat.mlp_list3.12.0.weight, refine_feat.mlp_list3.12.0.bias, refine_feat.mlp_list3.12.2.weight, refine_feat.mlp_list3.12.2.bias, refine_feat.mlp_list3.13.0.weight, refine_feat.mlp_list3.13.0.bias, refine_feat.mlp_list3.13.2.weight, refine_feat.mlp_list3.13.2.bias, refine_feat.mlp_list3.14.0.weight, refine_feat.mlp_list3.14.0.bias, refine_feat.mlp_list3.14.2.weight, refine_feat.mlp_list3.14.2.bias, refine_feat.mlp_list3.15.0.weight, refine_feat.mlp_list3.15.0.bias, refine_feat.mlp_list3.15.2.weight, refine_feat.mlp_list3.15.2.bias, refine_feat.mlp_list3.16.0.weight, refine_feat.mlp_list3.16.0.bias, refine_feat.mlp_list3.16.2.weight, refine_feat.mlp_list3.16.2.bias, refine_feat.mlp_list3.17.0.weight, refine_feat.mlp_list3.17.0.bias, refine_feat.mlp_list3.17.2.weight, refine_feat.mlp_list3.17.2.bias, refine_feat.mlp_list3.18.0.weight, refine_feat.mlp_list3.18.0.bias, refine_feat.mlp_list3.18.2.weight, refine_feat.mlp_list3.18.2.bias, refine_feat.mlp_list3.19.0.weight, refine_feat.mlp_list3.19.0.bias, refine_feat.mlp_list3.19.2.weight, refine_feat.mlp_list3.19.2.bias, refine_feat.mlp_list3.20.0.weight, refine_feat.mlp_list3.20.0.bias, refine_feat.mlp_list3.20.2.weight, refine_feat.mlp_list3.20.2.bias, refine_feat.mlp_list3.21.0.weight, refine_feat.mlp_list3.21.0.bias, refine_feat.mlp_list3.21.2.weight, refine_feat.mlp_list3.21.2.bias, refine_feat.mlp_list3.22.0.weight, refine_feat.mlp_list3.22.0.bias, refine_feat.mlp_list3.22.2.weight, refine_feat.mlp_list3.22.2.bias, refine_feat.mlp_list3.23.0.weight, refine_feat.mlp_list3.23.0.bias, refine_feat.mlp_list3.23.2.weight, refine_feat.mlp_list3.23.2.bias, refine_feat.router.0.weight, refine_feat.router.0.bias, refine_feat.router.1.weight, refine_feat.router.1.bias, refine_feat.router.2.weight, refine_feat.router.2.bias, refine_feat.router.3.weight, refine_feat.router.3.bias, refine_feat.router.4.weight, refine_feat.router.4.bias, refine_feat.router.5.weight, refine_feat.router.5.bias, refine_feat.router.6.weight, refine_feat.router.6.bias, refine_feat.router.7.weight, refine_feat.router.7.bias, refine_feat.router.8.weight, refine_feat.router.8.bias, refine_feat.router.9.weight, refine_feat.router.9.bias, refine_feat.router.10.weight, refine_feat.router.10.bias, refine_feat.router.11.weight, refine_feat.router.11.bias, refine_feat.router.12.weight, refine_feat.router.12.bias, refine_feat.router.13.weight, refine_feat.router.13.bias, refine_feat.router.14.weight, refine_feat.router.14.bias, refine_feat.router.15.weight, refine_feat.router.15.bias, refine_feat.router.16.weight, refine_feat.router.16.bias, refine_feat.router.17.weight, refine_feat.router.17.bias, refine_feat.router.18.weight, refine_feat.router.18.bias, refine_feat.router.19.weight, refine_feat.router.19.bias, refine_feat.router.20.weight, refine_feat.router.20.bias, refine_feat.router.21.weight, refine_feat.router.21.bias, refine_feat.router.22.weight, refine_feat.router.22.bias, refine_feat.router.23.weight, refine_feat.router.23.bias

Name of parameter - Initialization information

backbone.cls_token - torch.Size([1, 1, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.pos_embed - torch.Size([1, 1025, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.mask_token - torch.Size([1, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.patch_embed.proj.weight - torch.Size([1024, 3, 16, 16]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.patch_embed.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.norm.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.norm.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.refine_feat.scale - torch.Size([24]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.0.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.3.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.4.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.4.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.5.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.5.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.6.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.6.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.7.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.7.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.8.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.8.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.9.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.9.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.10.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.10.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.11.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.11.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.12.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.12.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.13.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.13.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.14.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.14.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.15.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.15.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.16.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.16.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.17.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.17.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.18.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.18.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.19.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.19.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.20.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.20.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.21.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.21.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.22.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.22.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.23.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.23.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.0.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.0.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.0.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.0.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.1.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.1.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.1.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.1.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.2.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.2.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.2.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.2.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.3.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.3.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.3.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.3.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.4.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.4.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.4.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.4.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.5.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.5.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.5.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.5.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.6.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.6.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.6.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.6.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.7.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.7.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.7.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.7.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.8.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.8.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.8.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.8.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.9.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.9.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.9.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.9.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.10.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.10.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.10.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.10.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.11.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.11.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.11.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.11.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.12.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.12.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.12.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.12.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.13.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.13.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.13.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.13.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.14.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.14.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.14.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.14.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.15.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.15.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.15.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.15.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.16.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.16.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.16.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.16.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.17.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.17.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.17.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.17.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.18.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.18.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.18.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.18.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.19.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.19.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.19.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.19.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.20.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.20.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.20.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.20.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.21.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.21.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.21.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.21.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.22.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.22.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.22.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.22.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.23.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.23.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.23.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.23.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.0.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.0.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.0.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.0.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.1.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.1.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.1.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.1.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.2.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.2.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.2.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.2.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.3.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.3.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.3.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.3.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.4.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.4.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.4.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.4.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.5.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.5.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.5.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.5.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.6.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.6.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.6.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.6.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.7.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.7.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.7.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.7.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.8.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.8.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.8.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.8.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.9.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.9.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.9.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.9.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.10.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.10.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.10.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.10.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.11.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.11.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.11.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.11.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.12.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.12.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.12.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.12.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.13.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.13.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.13.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.13.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.14.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.14.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.14.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.14.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.15.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.15.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.15.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.15.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.16.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.16.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.16.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.16.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.17.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.17.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.17.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.17.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.18.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.18.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.18.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.18.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.19.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.19.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.19.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.19.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.20.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.20.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.20.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.20.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.21.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.21.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.21.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.21.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.22.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.22.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.22.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.22.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.23.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.23.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.23.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.23.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.0.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.0.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.0.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.0.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.1.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.1.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.1.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.1.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.2.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.2.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.2.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.2.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.3.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.3.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.3.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.3.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.4.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.4.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.4.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.4.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.5.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.5.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.5.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.5.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.6.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.6.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.6.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.6.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.7.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.7.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.7.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.7.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.8.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.8.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.8.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.8.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.9.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.9.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.9.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.9.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.10.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.10.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.10.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.10.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.11.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.11.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.11.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.11.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.12.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.12.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.12.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.12.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.13.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.13.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.13.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.13.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.14.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.14.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.14.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.14.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.15.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.15.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.15.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.15.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.16.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.16.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.16.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.16.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.17.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.17.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.17.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.17.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.18.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.18.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.18.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.18.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.19.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.19.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.19.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.19.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.20.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.20.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.20.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.20.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.21.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.21.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.21.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.21.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.22.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.22.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.22.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.22.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.23.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.23.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.23.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.23.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.0.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.0.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.1.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.1.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.2.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.2.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.3.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.3.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.4.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.4.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.5.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.5.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.6.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.6.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.7.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.7.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.8.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.8.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.9.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.9.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.10.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.10.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.11.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.11.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.12.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.12.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.13.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.13.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.14.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.14.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.15.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.15.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.16.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.16.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.17.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.17.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.18.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.18.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.19.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.19.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.20.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.20.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.21.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.21.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.22.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.22.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.23.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.23.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.input_convs.0.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.input_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.input_convs.0.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.input_convs.0.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.input_convs.1.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.input_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.input_convs.1.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.input_convs.1.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.input_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.input_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.input_convs.2.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.input_convs.2.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.0.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.0.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.0.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.0.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.0.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.0.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.0.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.0.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.0.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.0.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.0.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.0.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.0.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.0.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.0.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.0.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.1.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.1.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.1.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.1.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.1.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.1.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.1.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.1.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.1.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.1.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.1.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.1.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.1.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.1.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.1.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.1.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.2.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.2.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.2.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.2.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.2.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.2.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.2.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.2.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.2.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.2.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.2.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.2.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.2.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.2.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.2.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.2.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.3.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.3.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.3.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.3.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.3.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.3.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.3.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.3.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.3.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.3.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.3.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.3.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.3.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.3.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.3.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.3.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.4.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.4.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.4.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.4.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.4.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.4.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.4.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.4.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.4.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.4.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.4.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.4.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.4.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.4.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.4.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.4.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.5.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.5.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.5.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.5.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.5.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.5.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.5.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.5.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.5.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.5.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.5.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.5.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.5.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.5.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.5.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.5.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.level_encoding.weight - torch.Size([3, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.lateral_convs.0.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.lateral_convs.0.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.lateral_convs.0.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.output_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.output_convs.0.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.output_convs.0.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.mask_feature.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.mask_feature.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.0.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.0.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.0.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.0.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.0.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.0.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.0.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.0.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.0.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.0.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.0.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.0.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.0.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.0.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.0.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.0.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.0.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.0.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.1.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.1.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.1.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.1.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.1.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.1.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.2.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.2.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.2.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.2.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.2.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.2.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.3.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.3.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.3.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.3.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.3.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.3.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.4.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.4.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.4.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.4.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.4.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.4.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.5.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.5.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.5.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.5.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.5.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.5.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.6.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.6.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.6.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.6.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.6.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.6.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.7.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.7.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.7.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.7.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.7.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.7.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.8.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.8.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.8.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.8.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.8.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.8.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.post_norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.post_norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.query_embed.weight - torch.Size([100, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.query_feat.weight - torch.Size([100, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.level_embed.weight - torch.Size([3, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.cls_embed.weight - torch.Size([8, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.cls_embed.bias - torch.Size([8]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.mask_embed.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.mask_embed.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.mask_embed.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.mask_embed.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.mask_embed.4.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.mask_embed.4.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2025/03/29 12:25:05 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2025/03/29 12:25:05 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2025/03/29 12:25:05 - mmengine - INFO - Checkpoints will be saved to /home/face/kaichengyang/xiaoxinghu/Earth_Adapter/work_dirs/u2r/DG_spatial_64_cutoff_0.3_fft_suf3/ee2e4_seed0.
2025/03/29 12:26:30 - mmengine - INFO - Iter(train) [   50/20000]  base_lr: 9.9779e-05 lr: 9.9779e-05  eta: 9:26:56  time: 1.6696  data_time: 0.0176  memory: 9687  loss: 76.3624  decode.loss_cls: 1.9894  decode.loss_mask: 2.8229  decode.loss_dice: 3.4313  decode.d0.loss_cls: 3.8663  decode.d0.loss_mask: 2.4745  decode.d0.loss_dice: 3.1241  decode.d1.loss_cls: 1.5224  decode.d1.loss_mask: 2.4327  decode.d1.loss_dice: 3.0690  decode.d2.loss_cls: 1.5772  decode.d2.loss_mask: 2.4423  decode.d2.loss_dice: 3.0779  decode.d3.loss_cls: 1.5821  decode.d3.loss_mask: 2.4170  decode.d3.loss_dice: 3.0284  decode.d4.loss_cls: 1.5808  decode.d4.loss_mask: 2.4476  decode.d4.loss_dice: 3.1380  decode.d5.loss_cls: 1.6849  decode.d5.loss_mask: 2.4564  decode.d5.loss_dice: 3.1648  decode.d6.loss_cls: 1.8036  decode.d6.loss_mask: 2.5049  decode.d6.loss_dice: 3.2225  decode.d7.loss_cls: 1.8670  decode.d7.loss_mask: 2.4657  decode.d7.loss_dice: 3.2649  decode.d8.loss_cls: 1.9393  decode.d8.loss_mask: 2.5920  decode.d8.loss_dice: 3.3724
2025/03/29 12:27:53 - mmengine - INFO - Iter(train) [  100/20000]  base_lr: 9.9554e-05 lr: 9.9554e-05  eta: 9:18:36  time: 1.6781  data_time: 0.0158  memory: 9684  loss: 68.4480  decode.loss_cls: 1.5488  decode.loss_mask: 2.5116  decode.loss_dice: 2.8903  decode.d0.loss_cls: 3.7031  decode.d0.loss_mask: 2.4358  decode.d0.loss_dice: 2.9023  decode.d1.loss_cls: 1.2200  decode.d1.loss_mask: 2.4422  decode.d1.loss_dice: 2.7975  decode.d2.loss_cls: 1.2034  decode.d2.loss_mask: 2.4224  decode.d2.loss_dice: 2.7147  decode.d3.loss_cls: 1.2893  decode.d3.loss_mask: 2.4642  decode.d3.loss_dice: 2.7130  decode.d4.loss_cls: 1.3150  decode.d4.loss_mask: 2.4737  decode.d4.loss_dice: 2.7349  decode.d5.loss_cls: 1.3501  decode.d5.loss_mask: 2.4910  decode.d5.loss_dice: 2.7826  decode.d6.loss_cls: 1.3163  decode.d6.loss_mask: 2.4773  decode.d6.loss_dice: 2.8033  decode.d7.loss_cls: 1.3755  decode.d7.loss_mask: 2.5067  decode.d7.loss_dice: 2.8130  decode.d8.loss_cls: 1.4221  decode.d8.loss_mask: 2.4892  decode.d8.loss_dice: 2.8391
2025/03/29 12:29:17 - mmengine - INFO - Iter(train) [  150/20000]  base_lr: 9.9329e-05 lr: 9.9329e-05  eta: 9:16:25  time: 1.6779  data_time: 0.0164  memory: 9681  loss: 64.5850  decode.loss_cls: 1.3739  decode.loss_mask: 2.3372  decode.loss_dice: 2.6152  decode.d0.loss_cls: 3.6085  decode.d0.loss_mask: 2.2972  decode.d0.loss_dice: 2.6748  decode.d1.loss_cls: 1.1961  decode.d1.loss_mask: 2.2855  decode.d1.loss_dice: 2.5454  decode.d2.loss_cls: 1.1154  decode.d2.loss_mask: 2.3559  decode.d2.loss_dice: 2.5970  decode.d3.loss_cls: 1.2425  decode.d3.loss_mask: 2.2644  decode.d3.loss_dice: 2.5664  decode.d4.loss_cls: 1.2979  decode.d4.loss_mask: 2.3303  decode.d4.loss_dice: 2.5470  decode.d5.loss_cls: 1.2857  decode.d5.loss_mask: 2.4017  decode.d5.loss_dice: 2.6118  decode.d6.loss_cls: 1.3712  decode.d6.loss_mask: 2.4028  decode.d6.loss_dice: 2.6009  decode.d7.loss_cls: 1.3577  decode.d7.loss_mask: 2.3984  decode.d7.loss_dice: 2.6182  decode.d8.loss_cls: 1.3391  decode.d8.loss_mask: 2.3464  decode.d8.loss_dice: 2.6005
2025/03/29 12:30:41 - mmengine - INFO - Iter(train) [  200/20000]  base_lr: 9.9104e-05 lr: 9.9104e-05  eta: 9:14:28  time: 1.6775  data_time: 0.0166  memory: 9676  loss: 60.7531  decode.loss_cls: 1.3795  decode.loss_mask: 2.3041  decode.loss_dice: 2.3127  decode.d0.loss_cls: 3.3620  decode.d0.loss_mask: 2.3751  decode.d0.loss_dice: 2.5069  decode.d1.loss_cls: 0.9771  decode.d1.loss_mask: 2.3740  decode.d1.loss_dice: 2.4230  decode.d2.loss_cls: 1.0058  decode.d2.loss_mask: 2.3400  decode.d2.loss_dice: 2.3805  decode.d3.loss_cls: 1.0391  decode.d3.loss_mask: 2.3821  decode.d3.loss_dice: 2.3284  decode.d4.loss_cls: 1.2302  decode.d4.loss_mask: 2.3317  decode.d4.loss_dice: 2.2755  decode.d5.loss_cls: 1.1545  decode.d5.loss_mask: 2.3237  decode.d5.loss_dice: 2.2923  decode.d6.loss_cls: 1.1948  decode.d6.loss_mask: 2.3410  decode.d6.loss_dice: 2.2902  decode.d7.loss_cls: 1.2454  decode.d7.loss_mask: 2.3401  decode.d7.loss_dice: 2.3158  decode.d8.loss_cls: 1.2610  decode.d8.loss_mask: 2.3430  decode.d8.loss_dice: 2.3235
2025/03/29 12:32:05 - mmengine - INFO - Iter(train) [  250/20000]  base_lr: 9.8879e-05 lr: 9.8879e-05  eta: 9:12:33  time: 1.6725  data_time: 0.0158  memory: 9738  loss: 57.3326  decode.loss_cls: 1.1114  decode.loss_mask: 2.2027  decode.loss_dice: 2.4772  decode.d0.loss_cls: 3.1747  decode.d0.loss_mask: 2.1216  decode.d0.loss_dice: 2.4813  decode.d1.loss_cls: 0.8017  decode.d1.loss_mask: 2.1168  decode.d1.loss_dice: 2.4292  decode.d2.loss_cls: 0.7554  decode.d2.loss_mask: 2.1837  decode.d2.loss_dice: 2.3880  decode.d3.loss_cls: 0.7992  decode.d3.loss_mask: 2.1914  decode.d3.loss_dice: 2.3620  decode.d4.loss_cls: 0.9533  decode.d4.loss_mask: 2.0949  decode.d4.loss_dice: 2.3230  decode.d5.loss_cls: 1.0098  decode.d5.loss_mask: 2.1114  decode.d5.loss_dice: 2.3287  decode.d6.loss_cls: 1.0568  decode.d6.loss_mask: 2.1618  decode.d6.loss_dice: 2.3794  decode.d7.loss_cls: 1.0547  decode.d7.loss_mask: 2.1899  decode.d7.loss_dice: 2.3837  decode.d8.loss_cls: 1.0976  decode.d8.loss_mask: 2.2258  decode.d8.loss_dice: 2.3653
2025/03/29 12:33:28 - mmengine - INFO - Iter(train) [  300/20000]  base_lr: 9.8653e-05 lr: 9.8653e-05  eta: 9:10:37  time: 1.6668  data_time: 0.0159  memory: 9687  loss: 57.1065  decode.loss_cls: 1.1816  decode.loss_mask: 2.2101  decode.loss_dice: 2.3147  decode.d0.loss_cls: 3.1103  decode.d0.loss_mask: 2.1892  decode.d0.loss_dice: 2.4866  decode.d1.loss_cls: 0.7450  decode.d1.loss_mask: 2.2705  decode.d1.loss_dice: 2.3718  decode.d2.loss_cls: 0.8053  decode.d2.loss_mask: 2.2496  decode.d2.loss_dice: 2.3359  decode.d3.loss_cls: 0.7911  decode.d3.loss_mask: 2.2487  decode.d3.loss_dice: 2.2729  decode.d4.loss_cls: 0.9369  decode.d4.loss_mask: 2.1832  decode.d4.loss_dice: 2.2646  decode.d5.loss_cls: 1.0218  decode.d5.loss_mask: 2.2402  decode.d5.loss_dice: 2.2833  decode.d6.loss_cls: 1.0527  decode.d6.loss_mask: 2.1929  decode.d6.loss_dice: 2.2873  decode.d7.loss_cls: 1.0607  decode.d7.loss_mask: 2.1883  decode.d7.loss_dice: 2.2955  decode.d8.loss_cls: 1.0698  decode.d8.loss_mask: 2.1752  decode.d8.loss_dice: 2.2711
2025/03/29 12:34:52 - mmengine - INFO - Iter(train) [  350/20000]  base_lr: 9.8428e-05 lr: 9.8428e-05  eta: 9:08:51  time: 1.6642  data_time: 0.0156  memory: 9683  loss: 51.1756  decode.loss_cls: 0.8211  decode.loss_mask: 2.0836  decode.loss_dice: 2.0940  decode.d0.loss_cls: 3.0647  decode.d0.loss_mask: 2.1274  decode.d0.loss_dice: 2.1543  decode.d1.loss_cls: 0.5730  decode.d1.loss_mask: 2.1123  decode.d1.loss_dice: 2.0967  decode.d2.loss_cls: 0.6152  decode.d2.loss_mask: 2.1441  decode.d2.loss_dice: 2.0979  decode.d3.loss_cls: 0.5890  decode.d3.loss_mask: 2.1455  decode.d3.loss_dice: 2.0405  decode.d4.loss_cls: 0.6660  decode.d4.loss_mask: 2.1393  decode.d4.loss_dice: 2.0527  decode.d5.loss_cls: 0.7138  decode.d5.loss_mask: 2.0946  decode.d5.loss_dice: 2.0713  decode.d6.loss_cls: 0.6594  decode.d6.loss_mask: 2.0902  decode.d6.loss_dice: 2.0590  decode.d7.loss_cls: 0.6964  decode.d7.loss_mask: 2.1579  decode.d7.loss_dice: 2.0931  decode.d8.loss_cls: 0.7624  decode.d8.loss_mask: 2.1027  decode.d8.loss_dice: 2.0574
2025/03/29 12:36:15 - mmengine - INFO - Iter(train) [  400/20000]  base_lr: 9.8203e-05 lr: 9.8203e-05  eta: 9:07:12  time: 1.6695  data_time: 0.0161  memory: 9679  loss: 51.6191  decode.loss_cls: 0.8058  decode.loss_mask: 2.0078  decode.loss_dice: 2.1525  decode.d0.loss_cls: 2.9656  decode.d0.loss_mask: 2.0379  decode.d0.loss_dice: 2.2545  decode.d1.loss_cls: 0.6153  decode.d1.loss_mask: 2.1034  decode.d1.loss_dice: 2.1979  decode.d2.loss_cls: 0.6342  decode.d2.loss_mask: 2.0865  decode.d2.loss_dice: 2.1536  decode.d3.loss_cls: 0.6469  decode.d3.loss_mask: 2.1120  decode.d3.loss_dice: 2.1775  decode.d4.loss_cls: 0.7002  decode.d4.loss_mask: 2.0245  decode.d4.loss_dice: 2.1509  decode.d5.loss_cls: 0.7404  decode.d5.loss_mask: 2.0589  decode.d5.loss_dice: 2.1356  decode.d6.loss_cls: 0.7206  decode.d6.loss_mask: 2.0226  decode.d6.loss_dice: 2.1265  decode.d7.loss_cls: 0.7246  decode.d7.loss_mask: 2.1157  decode.d7.loss_dice: 2.1997  decode.d8.loss_cls: 0.7300  decode.d8.loss_mask: 2.0289  decode.d8.loss_dice: 2.1887
2025/03/29 12:37:39 - mmengine - INFO - Iter(train) [  450/20000]  base_lr: 9.7977e-05 lr: 9.7977e-05  eta: 9:05:38  time: 1.6677  data_time: 0.0154  memory: 9687  loss: 49.1951  decode.loss_cls: 0.8741  decode.loss_mask: 1.8491  decode.loss_dice: 1.9568  decode.d0.loss_cls: 2.9681  decode.d0.loss_mask: 1.8990  decode.d0.loss_dice: 2.1035  decode.d1.loss_cls: 0.7305  decode.d1.loss_mask: 1.8866  decode.d1.loss_dice: 2.0139  decode.d2.loss_cls: 0.7369  decode.d2.loss_mask: 1.8820  decode.d2.loss_dice: 2.0379  decode.d3.loss_cls: 0.7070  decode.d3.loss_mask: 1.9277  decode.d3.loss_dice: 2.0123  decode.d4.loss_cls: 0.7289  decode.d4.loss_mask: 1.9006  decode.d4.loss_dice: 2.0311  decode.d5.loss_cls: 0.7946  decode.d5.loss_mask: 1.9493  decode.d5.loss_dice: 2.0181  decode.d6.loss_cls: 0.8129  decode.d6.loss_mask: 1.9062  decode.d6.loss_dice: 1.9944  decode.d7.loss_cls: 0.8972  decode.d7.loss_mask: 1.8702  decode.d7.loss_dice: 2.0080  decode.d8.loss_cls: 0.8957  decode.d8.loss_mask: 1.8301  decode.d8.loss_dice: 1.9723
2025/03/29 12:39:02 - mmengine - INFO - Iter(train) [  500/20000]  base_lr: 9.7752e-05 lr: 9.7752e-05  eta: 9:04:09  time: 1.6703  data_time: 0.0157  memory: 9686  loss: 51.8403  decode.loss_cls: 0.6940  decode.loss_mask: 2.0473  decode.loss_dice: 2.2366  decode.d0.loss_cls: 2.7314  decode.d0.loss_mask: 2.0399  decode.d0.loss_dice: 2.3606  decode.d1.loss_cls: 0.5598  decode.d1.loss_mask: 2.0727  decode.d1.loss_dice: 2.3095  decode.d2.loss_cls: 0.6049  decode.d2.loss_mask: 2.0818  decode.d2.loss_dice: 2.3003  decode.d3.loss_cls: 0.5872  decode.d3.loss_mask: 2.0990  decode.d3.loss_dice: 2.2489  decode.d4.loss_cls: 0.6731  decode.d4.loss_mask: 2.0905  decode.d4.loss_dice: 2.2380  decode.d5.loss_cls: 0.5988  decode.d5.loss_mask: 2.0937  decode.d5.loss_dice: 2.2433  decode.d6.loss_cls: 0.6217  decode.d6.loss_mask: 2.0801  decode.d6.loss_dice: 2.2443  decode.d7.loss_cls: 0.6443  decode.d7.loss_mask: 2.0737  decode.d7.loss_dice: 2.2935  decode.d8.loss_cls: 0.6092  decode.d8.loss_mask: 2.0545  decode.d8.loss_dice: 2.3079
2025/03/29 12:40:26 - mmengine - INFO - Iter(train) [  550/20000]  base_lr: 9.7526e-05 lr: 9.7526e-05  eta: 9:02:49  time: 1.6796  data_time: 0.0157  memory: 9699  loss: 50.8418  decode.loss_cls: 0.7537  decode.loss_mask: 2.1742  decode.loss_dice: 2.1902  decode.d0.loss_cls: 2.6747  decode.d0.loss_mask: 2.0668  decode.d0.loss_dice: 2.1912  decode.d1.loss_cls: 0.6441  decode.d1.loss_mask: 2.0489  decode.d1.loss_dice: 2.0908  decode.d2.loss_cls: 0.5499  decode.d2.loss_mask: 2.1093  decode.d2.loss_dice: 2.1197  decode.d3.loss_cls: 0.5741  decode.d3.loss_mask: 2.0651  decode.d3.loss_dice: 2.0574  decode.d4.loss_cls: 0.6229  decode.d4.loss_mask: 2.1411  decode.d4.loss_dice: 2.1139  decode.d5.loss_cls: 0.6266  decode.d5.loss_mask: 2.1556  decode.d5.loss_dice: 2.1407  decode.d6.loss_cls: 0.5952  decode.d6.loss_mask: 2.1438  decode.d6.loss_dice: 2.1268  decode.d7.loss_cls: 0.6040  decode.d7.loss_mask: 2.1778  decode.d7.loss_dice: 2.1474  decode.d8.loss_cls: 0.6771  decode.d8.loss_mask: 2.1456  decode.d8.loss_dice: 2.1133
2025/03/29 12:41:49 - mmengine - INFO - Iter(train) [  600/20000]  base_lr: 9.7300e-05 lr: 9.7300e-05  eta: 9:01:12  time: 1.6650  data_time: 0.0155  memory: 9671  loss: 53.7800  decode.loss_cls: 0.7347  decode.loss_mask: 2.2331  decode.loss_dice: 2.1854  decode.d0.loss_cls: 2.6329  decode.d0.loss_mask: 2.3108  decode.d0.loss_dice: 2.3513  decode.d1.loss_cls: 0.6491  decode.d1.loss_mask: 2.2115  decode.d1.loss_dice: 2.2275  decode.d2.loss_cls: 0.6657  decode.d2.loss_mask: 2.2438  decode.d2.loss_dice: 2.2008  decode.d3.loss_cls: 0.6801  decode.d3.loss_mask: 2.2471  decode.d3.loss_dice: 2.2193  decode.d4.loss_cls: 0.6937  decode.d4.loss_mask: 2.2760  decode.d4.loss_dice: 2.2113  decode.d5.loss_cls: 0.6891  decode.d5.loss_mask: 2.2948  decode.d5.loss_dice: 2.2233  decode.d6.loss_cls: 0.7129  decode.d6.loss_mask: 2.2302  decode.d6.loss_dice: 2.2330  decode.d7.loss_cls: 0.7208  decode.d7.loss_mask: 2.2894  decode.d7.loss_dice: 2.2021  decode.d8.loss_cls: 0.7597  decode.d8.loss_mask: 2.2808  decode.d8.loss_dice: 2.1700
2025/03/29 12:43:13 - mmengine - INFO - Iter(train) [  650/20000]  base_lr: 9.7075e-05 lr: 9.7075e-05  eta: 8:59:41  time: 1.6676  data_time: 0.0154  memory: 9702  loss: 51.5935  decode.loss_cls: 0.6449  decode.loss_mask: 2.2873  decode.loss_dice: 2.2355  decode.d0.loss_cls: 2.4726  decode.d0.loss_mask: 2.1748  decode.d0.loss_dice: 2.2627  decode.d1.loss_cls: 0.5503  decode.d1.loss_mask: 2.0985  decode.d1.loss_dice: 2.1389  decode.d2.loss_cls: 0.6052  decode.d2.loss_mask: 2.1317  decode.d2.loss_dice: 2.1596  decode.d3.loss_cls: 0.6965  decode.d3.loss_mask: 2.0889  decode.d3.loss_dice: 2.1237  decode.d4.loss_cls: 0.6603  decode.d4.loss_mask: 2.1769  decode.d4.loss_dice: 2.1494  decode.d5.loss_cls: 0.6394  decode.d5.loss_mask: 2.1919  decode.d5.loss_dice: 2.1437  decode.d6.loss_cls: 0.6017  decode.d6.loss_mask: 2.2040  decode.d6.loss_dice: 2.1435  decode.d7.loss_cls: 0.5946  decode.d7.loss_mask: 2.2133  decode.d7.loss_dice: 2.1787  decode.d8.loss_cls: 0.6044  decode.d8.loss_mask: 2.2211  decode.d8.loss_dice: 2.1996
2025/03/29 12:44:36 - mmengine - INFO - Iter(train) [  700/20000]  base_lr: 9.6849e-05 lr: 9.6849e-05  eta: 8:58:10  time: 1.6694  data_time: 0.0155  memory: 9684  loss: 54.3006  decode.loss_cls: 0.6445  decode.loss_mask: 2.3218  decode.loss_dice: 2.2678  decode.d0.loss_cls: 2.3605  decode.d0.loss_mask: 2.4175  decode.d0.loss_dice: 2.4378  decode.d1.loss_cls: 0.6046  decode.d1.loss_mask: 2.3468  decode.d1.loss_dice: 2.3144  decode.d2.loss_cls: 0.6104  decode.d2.loss_mask: 2.3839  decode.d2.loss_dice: 2.2968  decode.d3.loss_cls: 0.6262  decode.d3.loss_mask: 2.3260  decode.d3.loss_dice: 2.2420  decode.d4.loss_cls: 0.5873  decode.d4.loss_mask: 2.3441  decode.d4.loss_dice: 2.2773  decode.d5.loss_cls: 0.5717  decode.d5.loss_mask: 2.3688  decode.d5.loss_dice: 2.2794  decode.d6.loss_cls: 0.5810  decode.d6.loss_mask: 2.3615  decode.d6.loss_dice: 2.2460  decode.d7.loss_cls: 0.5917  decode.d7.loss_mask: 2.3788  decode.d7.loss_dice: 2.2772  decode.d8.loss_cls: 0.6073  decode.d8.loss_mask: 2.3443  decode.d8.loss_dice: 2.2832
2025/03/29 12:46:00 - mmengine - INFO - Iter(train) [  750/20000]  base_lr: 9.6623e-05 lr: 9.6623e-05  eta: 8:56:43  time: 1.6713  data_time: 0.0162  memory: 9705  loss: 50.4815  decode.loss_cls: 0.4961  decode.loss_mask: 2.2519  decode.loss_dice: 2.1626  decode.d0.loss_cls: 2.2040  decode.d0.loss_mask: 2.1974  decode.d0.loss_dice: 2.2167  decode.d1.loss_cls: 0.4398  decode.d1.loss_mask: 2.2362  decode.d1.loss_dice: 2.1820  decode.d2.loss_cls: 0.4929  decode.d2.loss_mask: 2.2546  decode.d2.loss_dice: 2.2003  decode.d3.loss_cls: 0.4907  decode.d3.loss_mask: 2.2433  decode.d3.loss_dice: 2.2069  decode.d4.loss_cls: 0.4536  decode.d4.loss_mask: 2.2559  decode.d4.loss_dice: 2.1789  decode.d5.loss_cls: 0.4242  decode.d5.loss_mask: 2.2584  decode.d5.loss_dice: 2.1780  decode.d6.loss_cls: 0.4211  decode.d6.loss_mask: 2.2264  decode.d6.loss_dice: 2.1399  decode.d7.loss_cls: 0.4267  decode.d7.loss_mask: 2.2345  decode.d7.loss_dice: 2.1464  decode.d8.loss_cls: 0.4544  decode.d8.loss_mask: 2.2480  decode.d8.loss_dice: 2.1598
2025/03/29 12:47:23 - mmengine - INFO - Iter(train) [  800/20000]  base_lr: 9.6397e-05 lr: 9.6397e-05  eta: 8:55:18  time: 1.6742  data_time: 0.0155  memory: 9675  loss: 48.9387  decode.loss_cls: 0.7938  decode.loss_mask: 1.8451  decode.loss_dice: 2.0861  decode.d0.loss_cls: 2.2938  decode.d0.loss_mask: 1.8719  decode.d0.loss_dice: 2.1641  decode.d1.loss_cls: 0.7569  decode.d1.loss_mask: 1.8669  decode.d1.loss_dice: 2.0697  decode.d2.loss_cls: 0.7978  decode.d2.loss_mask: 1.8274  decode.d2.loss_dice: 2.0272  decode.d3.loss_cls: 0.7480  decode.d3.loss_mask: 1.9020  decode.d3.loss_dice: 2.0306  decode.d4.loss_cls: 0.7881  decode.d4.loss_mask: 1.8516  decode.d4.loss_dice: 2.0271  decode.d5.loss_cls: 0.8058  decode.d5.loss_mask: 1.8839  decode.d5.loss_dice: 2.0655  decode.d6.loss_cls: 0.8489  decode.d6.loss_mask: 1.9188  decode.d6.loss_dice: 2.0748  decode.d7.loss_cls: 0.8463  decode.d7.loss_mask: 1.8873  decode.d7.loss_dice: 2.0794  decode.d8.loss_cls: 0.8281  decode.d8.loss_mask: 1.8802  decode.d8.loss_dice: 2.0716
2025/03/29 12:48:47 - mmengine - INFO - Iter(train) [  850/20000]  base_lr: 9.6171e-05 lr: 9.6171e-05  eta: 8:53:51  time: 1.6684  data_time: 0.0159  memory: 9692  loss: 50.7658  decode.loss_cls: 0.6128  decode.loss_mask: 2.0571  decode.loss_dice: 2.2502  decode.d0.loss_cls: 2.1996  decode.d0.loss_mask: 2.0413  decode.d0.loss_dice: 2.3435  decode.d1.loss_cls: 0.6384  decode.d1.loss_mask: 2.0493  decode.d1.loss_dice: 2.2556  decode.d2.loss_cls: 0.6019  decode.d2.loss_mask: 2.0266  decode.d2.loss_dice: 2.2517  decode.d3.loss_cls: 0.6047  decode.d3.loss_mask: 2.0360  decode.d3.loss_dice: 2.2152  decode.d4.loss_cls: 0.6000  decode.d4.loss_mask: 2.0513  decode.d4.loss_dice: 2.2841  decode.d5.loss_cls: 0.6375  decode.d5.loss_mask: 2.0268  decode.d5.loss_dice: 2.2222  decode.d6.loss_cls: 0.6432  decode.d6.loss_mask: 2.0423  decode.d6.loss_dice: 2.2129  decode.d7.loss_cls: 0.6484  decode.d7.loss_mask: 2.0523  decode.d7.loss_dice: 2.2501  decode.d8.loss_cls: 0.5979  decode.d8.loss_mask: 2.0645  decode.d8.loss_dice: 2.2482
2025/03/29 12:50:11 - mmengine - INFO - Iter(train) [  900/20000]  base_lr: 9.5945e-05 lr: 9.5945e-05  eta: 8:52:35  time: 1.6638  data_time: 0.0158  memory: 9676  loss: 47.8480  decode.loss_cls: 0.5614  decode.loss_mask: 2.0359  decode.loss_dice: 2.1075  decode.d0.loss_cls: 1.9885  decode.d0.loss_mask: 2.0910  decode.d0.loss_dice: 2.1547  decode.d1.loss_cls: 0.3933  decode.d1.loss_mask: 2.0969  decode.d1.loss_dice: 2.0943  decode.d2.loss_cls: 0.3672  decode.d2.loss_mask: 2.0618  decode.d2.loss_dice: 2.1625  decode.d3.loss_cls: 0.4069  decode.d3.loss_mask: 2.0478  decode.d3.loss_dice: 2.1115  decode.d4.loss_cls: 0.4476  decode.d4.loss_mask: 2.0637  decode.d4.loss_dice: 2.1437  decode.d5.loss_cls: 0.4551  decode.d5.loss_mask: 2.0549  decode.d5.loss_dice: 2.0950  decode.d6.loss_cls: 0.4728  decode.d6.loss_mask: 2.1129  decode.d6.loss_dice: 2.0991  decode.d7.loss_cls: 0.4731  decode.d7.loss_mask: 2.0339  decode.d7.loss_dice: 2.0775  decode.d8.loss_cls: 0.4565  decode.d8.loss_mask: 2.0798  decode.d8.loss_dice: 2.1012
2025/03/29 12:51:35 - mmengine - INFO - Iter(train) [  950/20000]  base_lr: 9.5719e-05 lr: 9.5719e-05  eta: 8:51:13  time: 1.6693  data_time: 0.0157  memory: 9685  loss: 46.8378  decode.loss_cls: 0.5914  decode.loss_mask: 1.9719  decode.loss_dice: 2.0440  decode.d0.loss_cls: 1.9776  decode.d0.loss_mask: 1.9236  decode.d0.loss_dice: 2.1632  decode.d1.loss_cls: 0.4921  decode.d1.loss_mask: 1.9406  decode.d1.loss_dice: 2.0712  decode.d2.loss_cls: 0.4770  decode.d2.loss_mask: 1.9323  decode.d2.loss_dice: 2.0764  decode.d3.loss_cls: 0.4274  decode.d3.loss_mask: 1.9505  decode.d3.loss_dice: 2.1063  decode.d4.loss_cls: 0.4556  decode.d4.loss_mask: 1.9476  decode.d4.loss_dice: 2.0919  decode.d5.loss_cls: 0.4830  decode.d5.loss_mask: 1.9540  decode.d5.loss_dice: 2.1074  decode.d6.loss_cls: 0.4585  decode.d6.loss_mask: 1.9618  decode.d6.loss_dice: 2.0949  decode.d7.loss_cls: 0.5215  decode.d7.loss_mask: 1.9577  decode.d7.loss_dice: 2.0887  decode.d8.loss_cls: 0.5525  decode.d8.loss_mask: 1.9690  decode.d8.loss_dice: 2.0482
2025/03/29 12:52:58 - mmengine - INFO - Exp name: u2r_20250329_122454
2025/03/29 12:52:58 - mmengine - INFO - Iter(train) [ 1000/20000]  base_lr: 9.5493e-05 lr: 9.5493e-05  eta: 8:49:51  time: 1.6776  data_time: 0.0161  memory: 9684  loss: 46.9424  decode.loss_cls: 0.5150  decode.loss_mask: 2.1130  decode.loss_dice: 2.0057  decode.d0.loss_cls: 1.8280  decode.d0.loss_mask: 2.1055  decode.d0.loss_dice: 2.1570  decode.d1.loss_cls: 0.4469  decode.d1.loss_mask: 2.0606  decode.d1.loss_dice: 2.0114  decode.d2.loss_cls: 0.4361  decode.d2.loss_mask: 2.0609  decode.d2.loss_dice: 2.0101  decode.d3.loss_cls: 0.5010  decode.d3.loss_mask: 2.0296  decode.d3.loss_dice: 1.9837  decode.d4.loss_cls: 0.4295  decode.d4.loss_mask: 2.0643  decode.d4.loss_dice: 2.0329  decode.d5.loss_cls: 0.4644  decode.d5.loss_mask: 2.0571  decode.d5.loss_dice: 1.9933  decode.d6.loss_cls: 0.4907  decode.d6.loss_mask: 2.0595  decode.d6.loss_dice: 1.9818  decode.d7.loss_cls: 0.4422  decode.d7.loss_mask: 2.0845  decode.d7.loss_dice: 2.0089  decode.d8.loss_cls: 0.4589  decode.d8.loss_mask: 2.1058  decode.d8.loss_dice: 2.0038
2025/03/29 12:54:22 - mmengine - INFO - Iter(train) [ 1050/20000]  base_lr: 9.5267e-05 lr: 9.5267e-05  eta: 8:48:25  time: 1.6709  data_time: 0.0159  memory: 9692  loss: 48.4181  decode.loss_cls: 0.6428  decode.loss_mask: 2.0993  decode.loss_dice: 2.0634  decode.d0.loss_cls: 1.7644  decode.d0.loss_mask: 2.0560  decode.d0.loss_dice: 2.1367  decode.d1.loss_cls: 0.5358  decode.d1.loss_mask: 2.0808  decode.d1.loss_dice: 2.0863  decode.d2.loss_cls: 0.5556  decode.d2.loss_mask: 2.0612  decode.d2.loss_dice: 2.0468  decode.d3.loss_cls: 0.5337  decode.d3.loss_mask: 2.0468  decode.d3.loss_dice: 2.1068  decode.d4.loss_cls: 0.6145  decode.d4.loss_mask: 2.0423  decode.d4.loss_dice: 2.0813  decode.d5.loss_cls: 0.5970  decode.d5.loss_mask: 2.0469  decode.d5.loss_dice: 2.0655  decode.d6.loss_cls: 0.5943  decode.d6.loss_mask: 2.0406  decode.d6.loss_dice: 2.0739  decode.d7.loss_cls: 0.6001  decode.d7.loss_mask: 2.0399  decode.d7.loss_dice: 2.0850  decode.d8.loss_cls: 0.5635  decode.d8.loss_mask: 2.0678  decode.d8.loss_dice: 2.0890
2025/03/29 12:55:45 - mmengine - INFO - Iter(train) [ 1100/20000]  base_lr: 9.5040e-05 lr: 9.5040e-05  eta: 8:47:02  time: 1.6730  data_time: 0.0161  memory: 9679  loss: 46.2275  decode.loss_cls: 0.5373  decode.loss_mask: 1.9466  decode.loss_dice: 1.9703  decode.d0.loss_cls: 1.7155  decode.d0.loss_mask: 1.9896  decode.d0.loss_dice: 2.1035  decode.d1.loss_cls: 0.5145  decode.d1.loss_mask: 1.9544  decode.d1.loss_dice: 2.0161  decode.d2.loss_cls: 0.4747  decode.d2.loss_mask: 1.9956  decode.d2.loss_dice: 2.0479  decode.d3.loss_cls: 0.4846  decode.d3.loss_mask: 2.0131  decode.d3.loss_dice: 2.0524  decode.d4.loss_cls: 0.4777  decode.d4.loss_mask: 1.9429  decode.d4.loss_dice: 2.0019  decode.d5.loss_cls: 0.4796  decode.d5.loss_mask: 1.9581  decode.d5.loss_dice: 2.0232  decode.d6.loss_cls: 0.4914  decode.d6.loss_mask: 1.9680  decode.d6.loss_dice: 2.0293  decode.d7.loss_cls: 0.4941  decode.d7.loss_mask: 1.9869  decode.d7.loss_dice: 2.0272  decode.d8.loss_cls: 0.5536  decode.d8.loss_mask: 1.9817  decode.d8.loss_dice: 1.9959
2025/03/29 12:57:09 - mmengine - INFO - Iter(train) [ 1150/20000]  base_lr: 9.4814e-05 lr: 9.4814e-05  eta: 8:45:37  time: 1.6713  data_time: 0.0154  memory: 9675  loss: 47.5416  decode.loss_cls: 0.4742  decode.loss_mask: 2.1056  decode.loss_dice: 2.0741  decode.d0.loss_cls: 1.6330  decode.d0.loss_mask: 2.1070  decode.d0.loss_dice: 2.1842  decode.d1.loss_cls: 0.4578  decode.d1.loss_mask: 2.0640  decode.d1.loss_dice: 2.0920  decode.d2.loss_cls: 0.4788  decode.d2.loss_mask: 2.0945  decode.d2.loss_dice: 2.0341  decode.d3.loss_cls: 0.4251  decode.d3.loss_mask: 2.1021  decode.d3.loss_dice: 2.0521  decode.d4.loss_cls: 0.4790  decode.d4.loss_mask: 2.0620  decode.d4.loss_dice: 2.0728  decode.d5.loss_cls: 0.5159  decode.d5.loss_mask: 2.0734  decode.d5.loss_dice: 2.0488  decode.d6.loss_cls: 0.5046  decode.d6.loss_mask: 2.0512  decode.d6.loss_dice: 2.0633  decode.d7.loss_cls: 0.5053  decode.d7.loss_mask: 2.0899  decode.d7.loss_dice: 2.0483  decode.d8.loss_cls: 0.4932  decode.d8.loss_mask: 2.0912  decode.d8.loss_dice: 2.0641
2025/03/29 12:57:19 - mmengine - INFO - Exp name: u2r_20250329_122454
2025/03/29 12:58:33 - mmengine - INFO - Iter(train) [ 1200/20000]  base_lr: 9.4588e-05 lr: 9.4588e-05  eta: 8:44:11  time: 1.6677  data_time: 0.0153  memory: 9696  loss: 46.8951  decode.loss_cls: 0.5610  decode.loss_mask: 2.0541  decode.loss_dice: 2.0188  decode.d0.loss_cls: 1.6189  decode.d0.loss_mask: 1.9504  decode.d0.loss_dice: 2.1090  decode.d1.loss_cls: 0.5470  decode.d1.loss_mask: 1.9719  decode.d1.loss_dice: 2.0034  decode.d2.loss_cls: 0.5834  decode.d2.loss_mask: 1.9246  decode.d2.loss_dice: 1.9816  decode.d3.loss_cls: 0.5795  decode.d3.loss_mask: 2.0112  decode.d3.loss_dice: 1.9930  decode.d4.loss_cls: 0.5860  decode.d4.loss_mask: 2.0067  decode.d4.loss_dice: 2.0186  decode.d5.loss_cls: 0.5899  decode.d5.loss_mask: 2.0407  decode.d5.loss_dice: 2.0376  decode.d6.loss_cls: 0.5540  decode.d6.loss_mask: 2.0395  decode.d6.loss_dice: 2.0071  decode.d7.loss_cls: 0.5504  decode.d7.loss_mask: 2.0267  decode.d7.loss_dice: 1.9920  decode.d8.loss_cls: 0.5350  decode.d8.loss_mask: 2.0104  decode.d8.loss_dice: 1.9929
2025/03/29 12:59:56 - mmengine - INFO - Iter(train) [ 1250/20000]  base_lr: 9.4361e-05 lr: 9.4361e-05  eta: 8:42:46  time: 1.6682  data_time: 0.0154  memory: 9680  loss: 49.2987  decode.loss_cls: 0.6958  decode.loss_mask: 2.0463  decode.loss_dice: 2.1819  decode.d0.loss_cls: 1.5563  decode.d0.loss_mask: 2.0043  decode.d0.loss_dice: 2.2622  decode.d1.loss_cls: 0.5369  decode.d1.loss_mask: 2.0248  decode.d1.loss_dice: 2.1623  decode.d2.loss_cls: 0.5758  decode.d2.loss_mask: 2.0489  decode.d2.loss_dice: 2.1583  decode.d3.loss_cls: 0.6048  decode.d3.loss_mask: 2.0621  decode.d3.loss_dice: 2.1366  decode.d4.loss_cls: 0.5762  decode.d4.loss_mask: 2.1072  decode.d4.loss_dice: 2.1685  decode.d5.loss_cls: 0.6136  decode.d5.loss_mask: 2.0398  decode.d5.loss_dice: 2.1481  decode.d6.loss_cls: 0.6000  decode.d6.loss_mask: 2.0598  decode.d6.loss_dice: 2.1615  decode.d7.loss_cls: 0.5609  decode.d7.loss_mask: 2.0604  decode.d7.loss_dice: 2.1913  decode.d8.loss_cls: 0.7065  decode.d8.loss_mask: 2.0664  decode.d8.loss_dice: 2.1813
2025/03/29 13:01:20 - mmengine - INFO - Iter(train) [ 1300/20000]  base_lr: 9.4135e-05 lr: 9.4135e-05  eta: 8:41:21  time: 1.6681  data_time: 0.0156  memory: 9684  loss: 46.2148  decode.loss_cls: 0.5571  decode.loss_mask: 1.9595  decode.loss_dice: 1.9957  decode.d0.loss_cls: 1.4726  decode.d0.loss_mask: 1.9237  decode.d0.loss_dice: 2.1147  decode.d1.loss_cls: 0.5126  decode.d1.loss_mask: 1.9235  decode.d1.loss_dice: 1.9749  decode.d2.loss_cls: 0.5100  decode.d2.loss_mask: 1.9708  decode.d2.loss_dice: 1.9838  decode.d3.loss_cls: 0.6070  decode.d3.loss_mask: 1.9782  decode.d3.loss_dice: 1.9766  decode.d4.loss_cls: 0.5940  decode.d4.loss_mask: 1.9251  decode.d4.loss_dice: 1.9801  decode.d5.loss_cls: 0.6489  decode.d5.loss_mask: 1.9548  decode.d5.loss_dice: 2.0131  decode.d6.loss_cls: 0.6064  decode.d6.loss_mask: 1.9256  decode.d6.loss_dice: 1.9755  decode.d7.loss_cls: 0.6366  decode.d7.loss_mask: 1.9929  decode.d7.loss_dice: 2.0002  decode.d8.loss_cls: 0.5846  decode.d8.loss_mask: 1.9615  decode.d8.loss_dice: 1.9548
2025/03/29 13:02:43 - mmengine - INFO - Iter(train) [ 1350/20000]  base_lr: 9.3908e-05 lr: 9.3908e-05  eta: 8:39:56  time: 1.6723  data_time: 0.0159  memory: 9679  loss: 48.0364  decode.loss_cls: 0.5259  decode.loss_mask: 2.1506  decode.loss_dice: 2.0449  decode.d0.loss_cls: 1.3948  decode.d0.loss_mask: 2.1721  decode.d0.loss_dice: 2.1265  decode.d1.loss_cls: 0.4682  decode.d1.loss_mask: 2.1432  decode.d1.loss_dice: 2.0365  decode.d2.loss_cls: 0.4191  decode.d2.loss_mask: 2.1538  decode.d2.loss_dice: 2.0438  decode.d3.loss_cls: 0.3965  decode.d3.loss_mask: 2.1998  decode.d3.loss_dice: 2.0978  decode.d4.loss_cls: 0.4538  decode.d4.loss_mask: 2.1800  decode.d4.loss_dice: 2.0672  decode.d5.loss_cls: 0.4518  decode.d5.loss_mask: 2.1887  decode.d5.loss_dice: 2.0960  decode.d6.loss_cls: 0.5238  decode.d6.loss_mask: 2.1602  decode.d6.loss_dice: 2.0564  decode.d7.loss_cls: 0.5508  decode.d7.loss_mask: 2.1658  decode.d7.loss_dice: 2.0673  decode.d8.loss_cls: 0.5325  decode.d8.loss_mask: 2.1408  decode.d8.loss_dice: 2.0281
2025/03/29 13:04:07 - mmengine - INFO - Iter(train) [ 1400/20000]  base_lr: 9.3682e-05 lr: 9.3682e-05  eta: 8:38:33  time: 1.6691  data_time: 0.0164  memory: 9676  loss: 41.7738  decode.loss_cls: 0.4330  decode.loss_mask: 1.8021  decode.loss_dice: 1.9002  decode.d0.loss_cls: 1.2579  decode.d0.loss_mask: 1.7920  decode.d0.loss_dice: 1.9712  decode.d1.loss_cls: 0.3938  decode.d1.loss_mask: 1.7658  decode.d1.loss_dice: 1.8797  decode.d2.loss_cls: 0.3717  decode.d2.loss_mask: 1.7867  decode.d2.loss_dice: 1.8703  decode.d3.loss_cls: 0.4414  decode.d3.loss_mask: 1.8132  decode.d3.loss_dice: 1.8878  decode.d4.loss_cls: 0.3894  decode.d4.loss_mask: 1.7878  decode.d4.loss_dice: 1.9215  decode.d5.loss_cls: 0.4299  decode.d5.loss_mask: 1.7791  decode.d5.loss_dice: 1.9051  decode.d6.loss_cls: 0.3927  decode.d6.loss_mask: 1.8233  decode.d6.loss_dice: 1.8848  decode.d7.loss_cls: 0.4069  decode.d7.loss_mask: 1.7816  decode.d7.loss_dice: 1.8675  decode.d8.loss_cls: 0.3614  decode.d8.loss_mask: 1.7785  decode.d8.loss_dice: 1.8974
2025/03/29 13:05:30 - mmengine - INFO - Iter(train) [ 1450/20000]  base_lr: 9.3455e-05 lr: 9.3455e-05  eta: 8:37:07  time: 1.6679  data_time: 0.0167  memory: 9685  loss: 46.0845  decode.loss_cls: 0.5503  decode.loss_mask: 2.0675  decode.loss_dice: 1.9139  decode.d0.loss_cls: 1.3314  decode.d0.loss_mask: 2.0544  decode.d0.loss_dice: 2.0111  decode.d1.loss_cls: 0.4999  decode.d1.loss_mask: 2.0535  decode.d1.loss_dice: 1.9354  decode.d2.loss_cls: 0.4770  decode.d2.loss_mask: 2.0256  decode.d2.loss_dice: 1.9573  decode.d3.loss_cls: 0.5236  decode.d3.loss_mask: 2.0404  decode.d3.loss_dice: 1.9297  decode.d4.loss_cls: 0.5279  decode.d4.loss_mask: 2.0658  decode.d4.loss_dice: 1.9309  decode.d5.loss_cls: 0.5331  decode.d5.loss_mask: 2.0540  decode.d5.loss_dice: 1.9435  decode.d6.loss_cls: 0.5131  decode.d6.loss_mask: 2.0991  decode.d6.loss_dice: 1.9431  decode.d7.loss_cls: 0.5206  decode.d7.loss_mask: 2.0970  decode.d7.loss_dice: 1.9395  decode.d8.loss_cls: 0.5142  decode.d8.loss_mask: 2.1015  decode.d8.loss_dice: 1.9303
2025/03/29 13:06:54 - mmengine - INFO - Iter(train) [ 1500/20000]  base_lr: 9.3228e-05 lr: 9.3228e-05  eta: 8:35:44  time: 1.6715  data_time: 0.0153  memory: 9679  loss: 44.5752  decode.loss_cls: 0.4747  decode.loss_mask: 1.9667  decode.loss_dice: 1.9865  decode.d0.loss_cls: 1.1936  decode.d0.loss_mask: 1.9961  decode.d0.loss_dice: 2.1251  decode.d1.loss_cls: 0.4040  decode.d1.loss_mask: 1.9101  decode.d1.loss_dice: 1.9819  decode.d2.loss_cls: 0.3758  decode.d2.loss_mask: 1.9241  decode.d2.loss_dice: 1.9894  decode.d3.loss_cls: 0.4266  decode.d3.loss_mask: 1.9693  decode.d3.loss_dice: 1.9959  decode.d4.loss_cls: 0.4390  decode.d4.loss_mask: 1.9685  decode.d4.loss_dice: 1.9799  decode.d5.loss_cls: 0.4333  decode.d5.loss_mask: 1.9710  decode.d5.loss_dice: 1.9825  decode.d6.loss_cls: 0.4220  decode.d6.loss_mask: 1.9639  decode.d6.loss_dice: 1.9595  decode.d7.loss_cls: 0.3713  decode.d7.loss_mask: 1.9998  decode.d7.loss_dice: 1.9617  decode.d8.loss_cls: 0.4536  decode.d8.loss_mask: 1.9739  decode.d8.loss_dice: 1.9757
2025/03/29 13:08:18 - mmengine - INFO - Iter(train) [ 1550/20000]  base_lr: 9.3001e-05 lr: 9.3001e-05  eta: 8:34:19  time: 1.6663  data_time: 0.0165  memory: 9687  loss: 45.6543  decode.loss_cls: 0.4372  decode.loss_mask: 2.0417  decode.loss_dice: 2.0060  decode.d0.loss_cls: 1.2071  decode.d0.loss_mask: 2.0403  decode.d0.loss_dice: 2.0604  decode.d1.loss_cls: 0.4267  decode.d1.loss_mask: 2.0780  decode.d1.loss_dice: 1.9680  decode.d2.loss_cls: 0.4657  decode.d2.loss_mask: 2.0385  decode.d2.loss_dice: 1.9394  decode.d3.loss_cls: 0.4691  decode.d3.loss_mask: 2.0517  decode.d3.loss_dice: 1.9729  decode.d4.loss_cls: 0.4802  decode.d4.loss_mask: 2.0381  decode.d4.loss_dice: 1.9479  decode.d5.loss_cls: 0.4480  decode.d5.loss_mask: 2.0651  decode.d5.loss_dice: 1.9673  decode.d6.loss_cls: 0.4194  decode.d6.loss_mask: 2.0969  decode.d6.loss_dice: 1.9936  decode.d7.loss_cls: 0.4950  decode.d7.loss_mask: 2.0201  decode.d7.loss_dice: 2.0001  decode.d8.loss_cls: 0.4271  decode.d8.loss_mask: 2.0317  decode.d8.loss_dice: 2.0208
2025/03/29 13:09:41 - mmengine - INFO - Iter(train) [ 1600/20000]  base_lr: 9.2774e-05 lr: 9.2774e-05  eta: 8:32:55  time: 1.6733  data_time: 0.0155  memory: 9691  loss: 47.7653  decode.loss_cls: 0.5514  decode.loss_mask: 2.1606  decode.loss_dice: 2.0262  decode.d0.loss_cls: 1.2239  decode.d0.loss_mask: 2.0969  decode.d0.loss_dice: 2.0998  decode.d1.loss_cls: 0.5935  decode.d1.loss_mask: 2.0966  decode.d1.loss_dice: 1.9959  decode.d2.loss_cls: 0.5714  decode.d2.loss_mask: 2.1142  decode.d2.loss_dice: 2.0181  decode.d3.loss_cls: 0.5170  decode.d3.loss_mask: 2.1471  decode.d3.loss_dice: 1.9885  decode.d4.loss_cls: 0.5674  decode.d4.loss_mask: 2.1118  decode.d4.loss_dice: 2.0153  decode.d5.loss_cls: 0.5587  decode.d5.loss_mask: 2.1188  decode.d5.loss_dice: 2.0143  decode.d6.loss_cls: 0.5645  decode.d6.loss_mask: 2.1205  decode.d6.loss_dice: 2.0246  decode.d7.loss_cls: 0.5670  decode.d7.loss_mask: 2.1406  decode.d7.loss_dice: 2.0216  decode.d8.loss_cls: 0.5576  decode.d8.loss_mask: 2.1437  decode.d8.loss_dice: 2.0380
2025/03/29 13:11:05 - mmengine - INFO - Iter(train) [ 1650/20000]  base_lr: 9.2548e-05 lr: 9.2548e-05  eta: 8:31:30  time: 1.6684  data_time: 0.0155  memory: 9677  loss: 44.5404  decode.loss_cls: 0.4187  decode.loss_mask: 1.9927  decode.loss_dice: 1.9429  decode.d0.loss_cls: 1.0796  decode.d0.loss_mask: 2.0219  decode.d0.loss_dice: 2.0295  decode.d1.loss_cls: 0.4318  decode.d1.loss_mask: 2.0140  decode.d1.loss_dice: 1.9891  decode.d2.loss_cls: 0.4622  decode.d2.loss_mask: 1.9937  decode.d2.loss_dice: 1.9331  decode.d3.loss_cls: 0.4586  decode.d3.loss_mask: 1.9923  decode.d3.loss_dice: 1.9052  decode.d4.loss_cls: 0.4224  decode.d4.loss_mask: 2.0178  decode.d4.loss_dice: 1.9365  decode.d5.loss_cls: 0.4492  decode.d5.loss_mask: 2.0022  decode.d5.loss_dice: 1.9448  decode.d6.loss_cls: 0.4088  decode.d6.loss_mask: 2.0234  decode.d6.loss_dice: 1.9512  decode.d7.loss_cls: 0.3844  decode.d7.loss_mask: 2.0213  decode.d7.loss_dice: 1.9487  decode.d8.loss_cls: 0.3832  decode.d8.loss_mask: 2.0181  decode.d8.loss_dice: 1.9634
2025/03/29 13:12:28 - mmengine - INFO - Iter(train) [ 1700/20000]  base_lr: 9.2321e-05 lr: 9.2321e-05  eta: 8:30:05  time: 1.6680  data_time: 0.0155  memory: 9679  loss: 45.2979  decode.loss_cls: 0.4411  decode.loss_mask: 2.1295  decode.loss_dice: 1.9160  decode.d0.loss_cls: 1.0410  decode.d0.loss_mask: 2.1388  decode.d0.loss_dice: 1.9791  decode.d1.loss_cls: 0.4719  decode.d1.loss_mask: 2.0799  decode.d1.loss_dice: 1.8690  decode.d2.loss_cls: 0.4289  decode.d2.loss_mask: 2.1021  decode.d2.loss_dice: 1.9174  decode.d3.loss_cls: 0.4481  decode.d3.loss_mask: 2.0957  decode.d3.loss_dice: 1.9106  decode.d4.loss_cls: 0.4336  decode.d4.loss_mask: 2.0984  decode.d4.loss_dice: 1.9336  decode.d5.loss_cls: 0.4056  decode.d5.loss_mask: 2.1258  decode.d5.loss_dice: 1.9263  decode.d6.loss_cls: 0.4071  decode.d6.loss_mask: 2.1126  decode.d6.loss_dice: 1.9578  decode.d7.loss_cls: 0.4326  decode.d7.loss_mask: 2.1115  decode.d7.loss_dice: 1.9312  decode.d8.loss_cls: 0.4254  decode.d8.loss_mask: 2.1241  decode.d8.loss_dice: 1.9032
2025/03/29 13:13:52 - mmengine - INFO - Iter(train) [ 1750/20000]  base_lr: 9.2094e-05 lr: 9.2094e-05  eta: 8:28:40  time: 1.6678  data_time: 0.0155  memory: 9691  loss: 43.9504  decode.loss_cls: 0.3704  decode.loss_mask: 1.9841  decode.loss_dice: 1.9665  decode.d0.loss_cls: 0.9551  decode.d0.loss_mask: 1.9798  decode.d0.loss_dice: 2.0127  decode.d1.loss_cls: 0.3567  decode.d1.loss_mask: 1.9695  decode.d1.loss_dice: 1.9678  decode.d2.loss_cls: 0.3736  decode.d2.loss_mask: 1.9725  decode.d2.loss_dice: 1.9702  decode.d3.loss_cls: 0.4010  decode.d3.loss_mask: 1.9437  decode.d3.loss_dice: 1.9932  decode.d4.loss_cls: 0.3666  decode.d4.loss_mask: 1.9694  decode.d4.loss_dice: 2.0009  decode.d5.loss_cls: 0.3875  decode.d5.loss_mask: 1.9246  decode.d5.loss_dice: 2.0207  decode.d6.loss_cls: 0.3838  decode.d6.loss_mask: 1.9364  decode.d6.loss_dice: 2.0287  decode.d7.loss_cls: 0.3604  decode.d7.loss_mask: 1.9859  decode.d7.loss_dice: 2.0255  decode.d8.loss_cls: 0.4051  decode.d8.loss_mask: 1.9735  decode.d8.loss_dice: 1.9646
2025/03/29 13:15:15 - mmengine - INFO - Iter(train) [ 1800/20000]  base_lr: 9.1866e-05 lr: 9.1866e-05  eta: 8:27:16  time: 1.7783  data_time: 0.0156  memory: 9684  loss: 45.2129  decode.loss_cls: 0.5262  decode.loss_mask: 2.0709  decode.loss_dice: 1.9331  decode.d0.loss_cls: 1.0277  decode.d0.loss_mask: 2.0592  decode.d0.loss_dice: 1.9628  decode.d1.loss_cls: 0.5177  decode.d1.loss_mask: 1.9765  decode.d1.loss_dice: 1.9054  decode.d2.loss_cls: 0.4855  decode.d2.loss_mask: 1.9943  decode.d2.loss_dice: 1.9231  decode.d3.loss_cls: 0.5020  decode.d3.loss_mask: 2.0249  decode.d3.loss_dice: 1.9137  decode.d4.loss_cls: 0.5395  decode.d4.loss_mask: 2.0127  decode.d4.loss_dice: 1.9142  decode.d5.loss_cls: 0.4890  decode.d5.loss_mask: 2.0393  decode.d5.loss_dice: 1.9217  decode.d6.loss_cls: 0.5258  decode.d6.loss_mask: 2.0248  decode.d6.loss_dice: 1.9472  decode.d7.loss_cls: 0.4680  decode.d7.loss_mask: 2.0798  decode.d7.loss_dice: 1.9469  decode.d8.loss_cls: 0.4758  decode.d8.loss_mask: 2.0845  decode.d8.loss_dice: 1.9205
2025/03/29 13:16:44 - mmengine - INFO - Iter(train) [ 1850/20000]  base_lr: 9.1639e-05 lr: 9.1639e-05  eta: 8:26:44  time: 1.7803  data_time: 0.0154  memory: 9685  loss: 45.7707  decode.loss_cls: 0.5443  decode.loss_mask: 2.1299  decode.loss_dice: 1.8869  decode.d0.loss_cls: 0.9883  decode.d0.loss_mask: 2.1074  decode.d0.loss_dice: 1.9553  decode.d1.loss_cls: 0.5407  decode.d1.loss_mask: 2.0939  decode.d1.loss_dice: 1.8967  decode.d2.loss_cls: 0.5275  decode.d2.loss_mask: 2.1103  decode.d2.loss_dice: 1.8457  decode.d3.loss_cls: 0.5619  decode.d3.loss_mask: 2.0818  decode.d3.loss_dice: 1.8388  decode.d4.loss_cls: 0.5404  decode.d4.loss_mask: 2.1136  decode.d4.loss_dice: 1.8702  decode.d5.loss_cls: 0.4994  decode.d5.loss_mask: 2.1418  decode.d5.loss_dice: 1.8699  decode.d6.loss_cls: 0.5676  decode.d6.loss_mask: 2.1080  decode.d6.loss_dice: 1.8686  decode.d7.loss_cls: 0.4992  decode.d7.loss_mask: 2.1509  decode.d7.loss_dice: 1.8922  decode.d8.loss_cls: 0.5307  decode.d8.loss_mask: 2.1146  decode.d8.loss_dice: 1.8944
2025/03/29 13:18:13 - mmengine - INFO - Iter(train) [ 1900/20000]  base_lr: 9.1412e-05 lr: 9.1412e-05  eta: 8:26:06  time: 1.7799  data_time: 0.0154  memory: 9684  loss: 46.8869  decode.loss_cls: 0.6498  decode.loss_mask: 2.0287  decode.loss_dice: 2.0021  decode.d0.loss_cls: 0.9467  decode.d0.loss_mask: 2.0548  decode.d0.loss_dice: 2.1036  decode.d1.loss_cls: 0.5363  decode.d1.loss_mask: 2.0138  decode.d1.loss_dice: 2.0407  decode.d2.loss_cls: 0.5958  decode.d2.loss_mask: 2.0257  decode.d2.loss_dice: 1.9745  decode.d3.loss_cls: 0.6353  decode.d3.loss_mask: 2.0108  decode.d3.loss_dice: 1.9613  decode.d4.loss_cls: 0.6353  decode.d4.loss_mask: 2.0587  decode.d4.loss_dice: 1.9952  decode.d5.loss_cls: 0.6175  decode.d5.loss_mask: 2.0391  decode.d5.loss_dice: 1.9876  decode.d6.loss_cls: 0.6282  decode.d6.loss_mask: 2.0615  decode.d6.loss_dice: 1.9568  decode.d7.loss_cls: 0.6604  decode.d7.loss_mask: 2.0116  decode.d7.loss_dice: 1.9708  decode.d8.loss_cls: 0.6392  decode.d8.loss_mask: 2.0587  decode.d8.loss_dice: 1.9864
2025/03/29 13:19:41 - mmengine - INFO - Iter(train) [ 1950/20000]  base_lr: 9.1185e-05 lr: 9.1185e-05  eta: 8:25:26  time: 1.7810  data_time: 0.0155  memory: 9744  loss: 46.9765  decode.loss_cls: 0.5229  decode.loss_mask: 2.1169  decode.loss_dice: 1.9887  decode.d0.loss_cls: 0.9929  decode.d0.loss_mask: 2.1413  decode.d0.loss_dice: 2.0860  decode.d1.loss_cls: 0.5054  decode.d1.loss_mask: 2.1690  decode.d1.loss_dice: 2.0315  decode.d2.loss_cls: 0.5233  decode.d2.loss_mask: 2.1694  decode.d2.loss_dice: 2.0187  decode.d3.loss_cls: 0.5734  decode.d3.loss_mask: 2.1262  decode.d3.loss_dice: 1.9528  decode.d4.loss_cls: 0.5388  decode.d4.loss_mask: 2.1199  decode.d4.loss_dice: 1.9524  decode.d5.loss_cls: 0.5106  decode.d5.loss_mask: 2.1287  decode.d5.loss_dice: 1.9603  decode.d6.loss_cls: 0.5019  decode.d6.loss_mask: 2.1553  decode.d6.loss_dice: 1.9265  decode.d7.loss_cls: 0.4804  decode.d7.loss_mask: 2.1573  decode.d7.loss_dice: 1.9942  decode.d8.loss_cls: 0.5305  decode.d8.loss_mask: 2.1349  decode.d8.loss_dice: 1.9664
2025/03/29 13:21:09 - mmengine - INFO - Exp name: u2r_20250329_122454
2025/03/29 13:21:09 - mmengine - INFO - Iter(train) [ 2000/20000]  base_lr: 9.0957e-05 lr: 9.0957e-05  eta: 8:24:39  time: 1.7611  data_time: 0.0156  memory: 9692  loss: 41.7845  decode.loss_cls: 0.3737  decode.loss_mask: 1.9043  decode.loss_dice: 1.8483  decode.d0.loss_cls: 0.8702  decode.d0.loss_mask: 1.8849  decode.d0.loss_dice: 1.9340  decode.d1.loss_cls: 0.3233  decode.d1.loss_mask: 1.9126  decode.d1.loss_dice: 1.8378  decode.d2.loss_cls: 0.3454  decode.d2.loss_mask: 1.9090  decode.d2.loss_dice: 1.8534  decode.d3.loss_cls: 0.3520  decode.d3.loss_mask: 1.9025  decode.d3.loss_dice: 1.8588  decode.d4.loss_cls: 0.3531  decode.d4.loss_mask: 1.9335  decode.d4.loss_dice: 1.8482  decode.d5.loss_cls: 0.3609  decode.d5.loss_mask: 1.9272  decode.d5.loss_dice: 1.8390  decode.d6.loss_cls: 0.3278  decode.d6.loss_mask: 1.9508  decode.d6.loss_dice: 1.8537  decode.d7.loss_cls: 0.3488  decode.d7.loss_mask: 1.9248  decode.d7.loss_dice: 1.8602  decode.d8.loss_cls: 0.4007  decode.d8.loss_mask: 1.9178  decode.d8.loss_dice: 1.8280
2025/03/29 13:21:09 - mmengine - INFO - Saving checkpoint at 2000 iterations
2025/03/29 13:21:21 - mmengine - INFO - Iter(val) [  50/3968]    eta: 0:12:03  time: 0.1722  data_time: 0.0012  memory: 1849  
2025/03/29 13:21:29 - mmengine - INFO - Iter(val) [ 100/3968]    eta: 0:11:30  time: 0.1724  data_time: 0.0012  memory: 1849  
2025/03/29 13:21:38 - mmengine - INFO - Iter(val) [ 150/3968]    eta: 0:11:13  time: 0.1723  data_time: 0.0013  memory: 1849  
2025/03/29 13:21:46 - mmengine - INFO - Iter(val) [ 200/3968]    eta: 0:11:00  time: 0.1720  data_time: 0.0012  memory: 1849  
2025/03/29 13:21:54 - mmengine - INFO - Iter(val) [ 250/3968]    eta: 0:10:35  time: 0.0931  data_time: 0.0013  memory: 1849  
2025/03/29 13:22:01 - mmengine - INFO - Iter(val) [ 300/3968]    eta: 0:10:08  time: 0.1560  data_time: 0.0013  memory: 1849  
2025/03/29 13:22:09 - mmengine - INFO - Iter(val) [ 350/3968]    eta: 0:09:55  time: 0.1672  data_time: 0.0012  memory: 1849  
2025/03/29 13:22:17 - mmengine - INFO - Iter(val) [ 400/3968]    eta: 0:09:44  time: 0.1543  data_time: 0.0012  memory: 1849  
2025/03/29 13:22:25 - mmengine - INFO - Iter(val) [ 450/3968]    eta: 0:09:34  time: 0.1581  data_time: 0.0012  memory: 1849  
2025/03/29 13:22:33 - mmengine - INFO - Iter(val) [ 500/3968]    eta: 0:09:23  time: 0.1632  data_time: 0.0012  memory: 1849  
2025/03/29 13:22:41 - mmengine - INFO - Iter(val) [ 550/3968]    eta: 0:09:14  time: 0.1537  data_time: 0.0012  memory: 1849  
2025/03/29 13:22:49 - mmengine - INFO - Iter(val) [ 600/3968]    eta: 0:09:06  time: 0.1657  data_time: 0.0012  memory: 1849  
2025/03/29 13:22:57 - mmengine - INFO - Iter(val) [ 650/3968]    eta: 0:08:56  time: 0.1548  data_time: 0.0012  memory: 1849  
2025/03/29 13:23:05 - mmengine - INFO - Iter(val) [ 700/3968]    eta: 0:08:48  time: 0.1553  data_time: 0.0013  memory: 1849  
2025/03/29 13:23:13 - mmengine - INFO - Iter(val) [ 750/3968]    eta: 0:08:39  time: 0.1657  data_time: 0.0013  memory: 1849  
2025/03/29 13:23:20 - mmengine - INFO - Iter(val) [ 800/3968]    eta: 0:08:30  time: 0.1513  data_time: 0.0013  memory: 1849  
2025/03/29 13:23:28 - mmengine - INFO - Iter(val) [ 850/3968]    eta: 0:08:21  time: 0.1550  data_time: 0.0013  memory: 1849  
2025/03/29 13:23:36 - mmengine - INFO - Iter(val) [ 900/3968]    eta: 0:08:13  time: 0.1636  data_time: 0.0012  memory: 1849  
2025/03/29 13:23:44 - mmengine - INFO - Iter(val) [ 950/3968]    eta: 0:08:04  time: 0.1659  data_time: 0.0013  memory: 1849  
2025/03/29 13:23:52 - mmengine - INFO - Iter(val) [1000/3968]    eta: 0:07:55  time: 0.1555  data_time: 0.0013  memory: 1849  
2025/03/29 13:23:59 - mmengine - INFO - Iter(val) [1050/3968]    eta: 0:07:46  time: 0.1478  data_time: 0.0012  memory: 1849  
2025/03/29 13:24:07 - mmengine - INFO - Iter(val) [1100/3968]    eta: 0:07:38  time: 0.1514  data_time: 0.0012  memory: 1849  
2025/03/29 13:24:15 - mmengine - INFO - Iter(val) [1150/3968]    eta: 0:07:30  time: 0.1665  data_time: 0.0012  memory: 1849  
2025/03/29 13:24:23 - mmengine - INFO - Iter(val) [1200/3968]    eta: 0:07:22  time: 0.1543  data_time: 0.0012  memory: 1849  
2025/03/29 13:24:31 - mmengine - INFO - Iter(val) [1250/3968]    eta: 0:07:14  time: 0.1553  data_time: 0.0013  memory: 1849  
2025/03/29 13:24:39 - mmengine - INFO - Iter(val) [1300/3968]    eta: 0:07:06  time: 0.1658  data_time: 0.0013  memory: 1849  
2025/03/29 13:24:47 - mmengine - INFO - Iter(val) [1350/3968]    eta: 0:06:57  time: 0.1515  data_time: 0.0013  memory: 1849  
2025/03/29 13:24:55 - mmengine - INFO - Iter(val) [1400/3968]    eta: 0:06:49  time: 0.1538  data_time: 0.0013  memory: 1849  
2025/03/29 13:25:03 - mmengine - INFO - Iter(val) [1450/3968]    eta: 0:06:41  time: 0.1657  data_time: 0.0012  memory: 1849  
2025/03/29 13:25:11 - mmengine - INFO - Iter(val) [1500/3968]    eta: 0:06:33  time: 0.1510  data_time: 0.0013  memory: 1849  
2025/03/29 13:25:19 - mmengine - INFO - Iter(val) [1550/3968]    eta: 0:06:25  time: 0.1528  data_time: 0.0012  memory: 1849  
2025/03/29 13:25:27 - mmengine - INFO - Iter(val) [1600/3968]    eta: 0:06:17  time: 0.1666  data_time: 0.0012  memory: 1849  
2025/03/29 13:25:35 - mmengine - INFO - Iter(val) [1650/3968]    eta: 0:06:09  time: 0.1557  data_time: 0.0013  memory: 1849  
2025/03/29 13:25:43 - mmengine - INFO - Iter(val) [1700/3968]    eta: 0:06:01  time: 0.1528  data_time: 0.0013  memory: 1849  
2025/03/29 13:25:50 - mmengine - INFO - Iter(val) [1750/3968]    eta: 0:05:53  time: 0.1660  data_time: 0.0013  memory: 1849  
2025/03/29 13:25:58 - mmengine - INFO - Iter(val) [1800/3968]    eta: 0:05:45  time: 0.1511  data_time: 0.0013  memory: 1849  
2025/03/29 13:26:06 - mmengine - INFO - Iter(val) [1850/3968]    eta: 0:05:37  time: 0.1544  data_time: 0.0013  memory: 1849  
2025/03/29 13:26:14 - mmengine - INFO - Iter(val) [1900/3968]    eta: 0:05:29  time: 0.1666  data_time: 0.0013  memory: 1849  
2025/03/29 13:26:22 - mmengine - INFO - Iter(val) [1950/3968]    eta: 0:05:21  time: 0.1538  data_time: 0.0013  memory: 1849  
2025/03/29 13:26:30 - mmengine - INFO - Iter(val) [2000/3968]    eta: 0:05:13  time: 0.1525  data_time: 0.0012  memory: 1849  
2025/03/29 13:26:38 - mmengine - INFO - Iter(val) [2050/3968]    eta: 0:05:05  time: 0.1665  data_time: 0.0014  memory: 1849  
2025/03/29 13:26:46 - mmengine - INFO - Iter(val) [2100/3968]    eta: 0:04:57  time: 0.1577  data_time: 0.0013  memory: 1849  
2025/03/29 13:26:54 - mmengine - INFO - Iter(val) [2150/3968]    eta: 0:04:49  time: 0.1653  data_time: 0.0013  memory: 1849  
2025/03/29 13:27:02 - mmengine - INFO - Iter(val) [2200/3968]    eta: 0:04:41  time: 0.1546  data_time: 0.0012  memory: 1849  
2025/03/29 13:27:10 - mmengine - INFO - Iter(val) [2250/3968]    eta: 0:04:33  time: 0.1555  data_time: 0.0012  memory: 1849  
2025/03/29 13:27:18 - mmengine - INFO - Iter(val) [2300/3968]    eta: 0:04:25  time: 0.1672  data_time: 0.0013  memory: 1849  
2025/03/29 13:27:25 - mmengine - INFO - Iter(val) [2350/3968]    eta: 0:04:17  time: 0.1548  data_time: 0.0013  memory: 1849  
2025/03/29 13:27:34 - mmengine - INFO - Iter(val) [2400/3968]    eta: 0:04:09  time: 0.1536  data_time: 0.0012  memory: 1849  
2025/03/29 13:27:41 - mmengine - INFO - Iter(val) [2450/3968]    eta: 0:04:01  time: 0.1659  data_time: 0.0013  memory: 1849  
2025/03/29 13:27:49 - mmengine - INFO - Iter(val) [2500/3968]    eta: 0:03:53  time: 0.1554  data_time: 0.0013  memory: 1849  
2025/03/29 13:27:58 - mmengine - INFO - Iter(val) [2550/3968]    eta: 0:03:45  time: 0.1678  data_time: 0.0013  memory: 1849  
2025/03/29 13:28:05 - mmengine - INFO - Iter(val) [2600/3968]    eta: 0:03:37  time: 0.1639  data_time: 0.0013  memory: 1849  
2025/03/29 13:28:14 - mmengine - INFO - Iter(val) [2650/3968]    eta: 0:03:29  time: 0.1670  data_time: 0.0013  memory: 1849  
2025/03/29 13:28:22 - mmengine - INFO - Iter(val) [2700/3968]    eta: 0:03:22  time: 0.1683  data_time: 0.0013  memory: 1849  
2025/03/29 13:28:31 - mmengine - INFO - Iter(val) [2750/3968]    eta: 0:03:14  time: 0.1622  data_time: 0.0013  memory: 1849  
2025/03/29 13:28:39 - mmengine - INFO - Iter(val) [2800/3968]    eta: 0:03:06  time: 0.1660  data_time: 0.0013  memory: 1849  
2025/03/29 13:28:47 - mmengine - INFO - Iter(val) [2850/3968]    eta: 0:02:58  time: 0.1640  data_time: 0.0013  memory: 1849  
2025/03/29 13:28:55 - mmengine - INFO - Iter(val) [2900/3968]    eta: 0:02:50  time: 0.1683  data_time: 0.0013  memory: 1849  
2025/03/29 13:29:04 - mmengine - INFO - Iter(val) [2950/3968]    eta: 0:02:42  time: 0.1698  data_time: 0.0013  memory: 1849  
2025/03/29 13:29:12 - mmengine - INFO - Iter(val) [3000/3968]    eta: 0:02:34  time: 0.1646  data_time: 0.0013  memory: 1849  
2025/03/29 13:29:20 - mmengine - INFO - Iter(val) [3050/3968]    eta: 0:02:27  time: 0.1643  data_time: 0.0013  memory: 1849  
2025/03/29 13:29:29 - mmengine - INFO - Iter(val) [3100/3968]    eta: 0:02:19  time: 0.1617  data_time: 0.0013  memory: 1849  
2025/03/29 13:29:37 - mmengine - INFO - Iter(val) [3150/3968]    eta: 0:02:11  time: 0.1692  data_time: 0.0012  memory: 1849  
2025/03/29 13:29:45 - mmengine - INFO - Iter(val) [3200/3968]    eta: 0:02:03  time: 0.1620  data_time: 0.0013  memory: 1849  
2025/03/29 13:29:54 - mmengine - INFO - Iter(val) [3250/3968]    eta: 0:01:55  time: 0.1683  data_time: 0.0013  memory: 1849  
2025/03/29 13:30:02 - mmengine - INFO - Iter(val) [3300/3968]    eta: 0:01:47  time: 0.1641  data_time: 0.0013  memory: 1849  
2025/03/29 13:30:10 - mmengine - INFO - Iter(val) [3350/3968]    eta: 0:01:39  time: 0.1688  data_time: 0.0013  memory: 1849  
2025/03/29 13:30:19 - mmengine - INFO - Iter(val) [3400/3968]    eta: 0:01:31  time: 0.1627  data_time: 0.0013  memory: 1849  
2025/03/29 13:30:27 - mmengine - INFO - Iter(val) [3450/3968]    eta: 0:01:23  time: 0.1655  data_time: 0.0013  memory: 1849  
2025/03/29 13:30:35 - mmengine - INFO - Iter(val) [3500/3968]    eta: 0:01:15  time: 0.1640  data_time: 0.0013  memory: 1849  
2025/03/29 13:30:43 - mmengine - INFO - Iter(val) [3550/3968]    eta: 0:01:07  time: 0.1683  data_time: 0.0013  memory: 1849  
2025/03/29 13:30:52 - mmengine - INFO - Iter(val) [3600/3968]    eta: 0:00:59  time: 0.1688  data_time: 0.0014  memory: 1849  
2025/03/29 13:31:00 - mmengine - INFO - Iter(val) [3650/3968]    eta: 0:00:51  time: 0.1618  data_time: 0.0013  memory: 1849  
2025/03/29 13:31:08 - mmengine - INFO - Iter(val) [3700/3968]    eta: 0:00:43  time: 0.1642  data_time: 0.0013  memory: 1849  
2025/03/29 13:31:17 - mmengine - INFO - Iter(val) [3750/3968]    eta: 0:00:35  time: 0.1640  data_time: 0.0013  memory: 1849  
2025/03/29 13:31:25 - mmengine - INFO - Iter(val) [3800/3968]    eta: 0:00:27  time: 0.1671  data_time: 0.0013  memory: 1849  
2025/03/29 13:31:33 - mmengine - INFO - Iter(val) [3850/3968]    eta: 0:00:19  time: 0.1523  data_time: 0.0012  memory: 1849  
2025/03/29 13:31:41 - mmengine - INFO - Iter(val) [3900/3968]    eta: 0:00:10  time: 0.1654  data_time: 0.0012  memory: 1849  
2025/03/29 13:31:49 - mmengine - INFO - Iter(val) [3950/3968]    eta: 0:00:02  time: 0.1588  data_time: 0.0013  memory: 1849  
2025/03/29 13:31:52 - mmengine - INFO - per class results:
2025/03/29 13:31:52 - mmengine - INFO - 
+--------------+-------+-------+
|    Class     |  IoU  |  Acc  |
+--------------+-------+-------+
|  background  | 40.99 |  60.4 |
|   building   | 59.57 | 69.66 |
|     road     | 40.49 |  43.1 |
|    water     | 63.88 | 72.24 |
|    barren    |  3.52 | 21.91 |
|    forest    |  8.0  |  8.21 |
| agricultural | 48.46 | 52.98 |
+--------------+-------+-------+
2025/03/29 13:31:52 - mmengine - INFO - Iter(val) [3968/3968]    aAcc: 55.3800  mIoU: 37.8400  mAcc: 46.9300  data_time: 0.0013  time: 0.1612
2025/03/29 13:31:53 - mmengine - INFO - The best checkpoint with 37.8400 mIoU at 2000 iter is saved to best_mIoU_iter_2000.pth.
2025/03/29 13:33:18 - mmengine - INFO - Iter(train) [ 2050/20000]  base_lr: 9.0730e-05 lr: 9.0730e-05  eta: 8:23:33  time: 1.6692  data_time: 0.0161  memory: 9688  loss: 44.1852  decode.loss_cls: 0.4414  decode.loss_mask: 2.0727  decode.loss_dice: 1.9420  decode.d0.loss_cls: 0.9317  decode.d0.loss_mask: 1.9778  decode.d0.loss_dice: 2.0199  decode.d1.loss_cls: 0.5677  decode.d1.loss_mask: 1.8884  decode.d1.loss_dice: 1.8563  decode.d2.loss_cls: 0.4842  decode.d2.loss_mask: 1.9840  decode.d2.loss_dice: 1.9171  decode.d3.loss_cls: 0.4694  decode.d3.loss_mask: 2.0028  decode.d3.loss_dice: 1.8929  decode.d4.loss_cls: 0.4788  decode.d4.loss_mask: 1.9759  decode.d4.loss_dice: 1.8924  decode.d5.loss_cls: 0.4556  decode.d5.loss_mask: 1.9743  decode.d5.loss_dice: 1.8567  decode.d6.loss_cls: 0.4289  decode.d6.loss_mask: 2.0103  decode.d6.loss_dice: 1.9124  decode.d7.loss_cls: 0.4058  decode.d7.loss_mask: 1.9969  decode.d7.loss_dice: 1.8964  decode.d8.loss_cls: 0.4434  decode.d8.loss_mask: 2.0570  decode.d8.loss_dice: 1.9523
2025/03/29 13:34:42 - mmengine - INFO - Iter(train) [ 2100/20000]  base_lr: 9.0502e-05 lr: 9.0502e-05  eta: 8:22:05  time: 1.6763  data_time: 0.0154  memory: 9700  loss: 46.9267  decode.loss_cls: 0.3748  decode.loss_mask: 2.2255  decode.loss_dice: 2.0458  decode.d0.loss_cls: 0.7787  decode.d0.loss_mask: 2.1931  decode.d0.loss_dice: 2.1084  decode.d1.loss_cls: 0.3477  decode.d1.loss_mask: 2.1881  decode.d1.loss_dice: 2.0555  decode.d2.loss_cls: 0.3365  decode.d2.loss_mask: 2.2202  decode.d2.loss_dice: 2.0714  decode.d3.loss_cls: 0.3726  decode.d3.loss_mask: 2.2491  decode.d3.loss_dice: 2.0608  decode.d4.loss_cls: 0.3862  decode.d4.loss_mask: 2.2204  decode.d4.loss_dice: 2.0609  decode.d5.loss_cls: 0.4400  decode.d5.loss_mask: 2.1625  decode.d5.loss_dice: 2.0135  decode.d6.loss_cls: 0.3917  decode.d6.loss_mask: 2.2259  decode.d6.loss_dice: 2.0411  decode.d7.loss_cls: 0.3822  decode.d7.loss_mask: 2.2208  decode.d7.loss_dice: 2.0328  decode.d8.loss_cls: 0.4271  decode.d8.loss_mask: 2.2190  decode.d8.loss_dice: 2.0745
2025/03/29 13:36:05 - mmengine - INFO - Iter(train) [ 2150/20000]  base_lr: 9.0275e-05 lr: 9.0275e-05  eta: 8:20:36  time: 1.6665  data_time: 0.0157  memory: 9678  loss: 42.8218  decode.loss_cls: 0.3345  decode.loss_mask: 2.1034  decode.loss_dice: 1.8055  decode.d0.loss_cls: 0.7741  decode.d0.loss_mask: 2.0517  decode.d0.loss_dice: 1.8909  decode.d1.loss_cls: 0.3780  decode.d1.loss_mask: 2.0484  decode.d1.loss_dice: 1.7982  decode.d2.loss_cls: 0.3997  decode.d2.loss_mask: 2.0977  decode.d2.loss_dice: 1.8034  decode.d3.loss_cls: 0.4129  decode.d3.loss_mask: 2.0472  decode.d3.loss_dice: 1.7721  decode.d4.loss_cls: 0.4024  decode.d4.loss_mask: 2.0348  decode.d4.loss_dice: 1.7901  decode.d5.loss_cls: 0.4332  decode.d5.loss_mask: 2.0260  decode.d5.loss_dice: 1.7699  decode.d6.loss_cls: 0.3672  decode.d6.loss_mask: 2.0512  decode.d6.loss_dice: 1.8124  decode.d7.loss_cls: 0.3254  decode.d7.loss_mask: 2.0629  decode.d7.loss_dice: 1.8054  decode.d8.loss_cls: 0.3423  decode.d8.loss_mask: 2.0942  decode.d8.loss_dice: 1.7871
2025/03/29 13:37:29 - mmengine - INFO - Iter(train) [ 2200/20000]  base_lr: 9.0047e-05 lr: 9.0047e-05  eta: 8:19:07  time: 1.6718  data_time: 0.0161  memory: 9688  loss: 47.8983  decode.loss_cls: 0.3933  decode.loss_mask: 2.2921  decode.loss_dice: 2.0617  decode.d0.loss_cls: 0.7732  decode.d0.loss_mask: 2.2561  decode.d0.loss_dice: 2.0758  decode.d1.loss_cls: 0.4503  decode.d1.loss_mask: 2.2634  decode.d1.loss_dice: 2.0762  decode.d2.loss_cls: 0.3951  decode.d2.loss_mask: 2.2919  decode.d2.loss_dice: 2.0514  decode.d3.loss_cls: 0.3757  decode.d3.loss_mask: 2.2741  decode.d3.loss_dice: 2.0836  decode.d4.loss_cls: 0.3528  decode.d4.loss_mask: 2.3090  decode.d4.loss_dice: 2.0730  decode.d5.loss_cls: 0.3945  decode.d5.loss_mask: 2.2962  decode.d5.loss_dice: 2.0519  decode.d6.loss_cls: 0.3737  decode.d6.loss_mask: 2.3205  decode.d6.loss_dice: 2.0808  decode.d7.loss_cls: 0.3959  decode.d7.loss_mask: 2.3046  decode.d7.loss_dice: 2.0602  decode.d8.loss_cls: 0.4012  decode.d8.loss_mask: 2.3066  decode.d8.loss_dice: 2.0634
2025/03/29 13:38:53 - mmengine - INFO - Iter(train) [ 2250/20000]  base_lr: 8.9820e-05 lr: 8.9820e-05  eta: 8:17:38  time: 1.6683  data_time: 0.0154  memory: 9687  loss: 44.7549  decode.loss_cls: 0.4411  decode.loss_mask: 1.9877  decode.loss_dice: 1.9877  decode.d0.loss_cls: 0.8210  decode.d0.loss_mask: 2.0248  decode.d0.loss_dice: 1.9962  decode.d1.loss_cls: 0.4338  decode.d1.loss_mask: 2.0118  decode.d1.loss_dice: 1.9546  decode.d2.loss_cls: 0.4805  decode.d2.loss_mask: 2.0142  decode.d2.loss_dice: 1.9716  decode.d3.loss_cls: 0.4480  decode.d3.loss_mask: 2.0162  decode.d3.loss_dice: 1.9888  decode.d4.loss_cls: 0.4766  decode.d4.loss_mask: 1.9829  decode.d4.loss_dice: 1.9646  decode.d5.loss_cls: 0.4753  decode.d5.loss_mask: 1.9767  decode.d5.loss_dice: 1.9952  decode.d6.loss_cls: 0.4559  decode.d6.loss_mask: 2.0037  decode.d6.loss_dice: 1.9727  decode.d7.loss_cls: 0.4356  decode.d7.loss_mask: 2.0173  decode.d7.loss_dice: 1.9755  decode.d8.loss_cls: 0.4647  decode.d8.loss_mask: 1.9973  decode.d8.loss_dice: 1.9828
2025/03/29 13:40:16 - mmengine - INFO - Iter(train) [ 2300/20000]  base_lr: 8.9592e-05 lr: 8.9592e-05  eta: 8:16:09  time: 1.6717  data_time: 0.0153  memory: 9695  loss: 45.8470  decode.loss_cls: 0.4828  decode.loss_mask: 2.0923  decode.loss_dice: 1.9736  decode.d0.loss_cls: 0.7871  decode.d0.loss_mask: 2.1435  decode.d0.loss_dice: 2.0156  decode.d1.loss_cls: 0.4985  decode.d1.loss_mask: 2.1085  decode.d1.loss_dice: 1.9462  decode.d2.loss_cls: 0.4952  decode.d2.loss_mask: 2.0983  decode.d2.loss_dice: 1.9539  decode.d3.loss_cls: 0.5025  decode.d3.loss_mask: 2.1098  decode.d3.loss_dice: 1.9376  decode.d4.loss_cls: 0.4543  decode.d4.loss_mask: 2.1296  decode.d4.loss_dice: 1.9616  decode.d5.loss_cls: 0.4600  decode.d5.loss_mask: 2.1417  decode.d5.loss_dice: 1.9659  decode.d6.loss_cls: 0.4926  decode.d6.loss_mask: 2.1174  decode.d6.loss_dice: 1.9456  decode.d7.loss_cls: 0.4876  decode.d7.loss_mask: 2.0893  decode.d7.loss_dice: 1.9578  decode.d8.loss_cls: 0.4899  decode.d8.loss_mask: 2.0696  decode.d8.loss_dice: 1.9387
2025/03/29 13:41:40 - mmengine - INFO - Iter(train) [ 2350/20000]  base_lr: 8.9364e-05 lr: 8.9364e-05  eta: 8:14:41  time: 1.6684  data_time: 0.0159  memory: 9684  loss: 46.2545  decode.loss_cls: 0.3884  decode.loss_mask: 2.1930  decode.loss_dice: 2.0168  decode.d0.loss_cls: 0.7425  decode.d0.loss_mask: 2.1753  decode.d0.loss_dice: 2.0443  decode.d1.loss_cls: 0.4243  decode.d1.loss_mask: 2.1444  decode.d1.loss_dice: 2.0006  decode.d2.loss_cls: 0.3916  decode.d2.loss_mask: 2.1542  decode.d2.loss_dice: 2.0247  decode.d3.loss_cls: 0.3601  decode.d3.loss_mask: 2.1588  decode.d3.loss_dice: 2.0331  decode.d4.loss_cls: 0.3814  decode.d4.loss_mask: 2.1682  decode.d4.loss_dice: 2.0412  decode.d5.loss_cls: 0.4494  decode.d5.loss_mask: 2.1184  decode.d5.loss_dice: 2.0073  decode.d6.loss_cls: 0.4258  decode.d6.loss_mask: 2.1622  decode.d6.loss_dice: 2.0328  decode.d7.loss_cls: 0.4251  decode.d7.loss_mask: 2.1967  decode.d7.loss_dice: 2.0419  decode.d8.loss_cls: 0.4275  decode.d8.loss_mask: 2.1317  decode.d8.loss_dice: 1.9929
2025/03/29 13:43:03 - mmengine - INFO - Iter(train) [ 2400/20000]  base_lr: 8.9136e-05 lr: 8.9136e-05  eta: 8:13:13  time: 1.6720  data_time: 0.0157  memory: 9676  loss: 43.1737  decode.loss_cls: 0.4478  decode.loss_mask: 1.9745  decode.loss_dice: 1.8903  decode.d0.loss_cls: 0.7315  decode.d0.loss_mask: 1.9608  decode.d0.loss_dice: 1.9522  decode.d1.loss_cls: 0.4719  decode.d1.loss_mask: 1.9380  decode.d1.loss_dice: 1.8849  decode.d2.loss_cls: 0.4357  decode.d2.loss_mask: 1.9491  decode.d2.loss_dice: 1.8682  decode.d3.loss_cls: 0.4033  decode.d3.loss_mask: 1.9633  decode.d3.loss_dice: 1.8769  decode.d4.loss_cls: 0.4263  decode.d4.loss_mask: 1.9409  decode.d4.loss_dice: 1.8709  decode.d5.loss_cls: 0.5044  decode.d5.loss_mask: 1.9188  decode.d5.loss_dice: 1.8738  decode.d6.loss_cls: 0.4464  decode.d6.loss_mask: 1.9739  decode.d6.loss_dice: 1.8976  decode.d7.loss_cls: 0.4613  decode.d7.loss_mask: 1.9511  decode.d7.loss_dice: 1.8591  decode.d8.loss_cls: 0.4696  decode.d8.loss_mask: 1.9474  decode.d8.loss_dice: 1.8840
2025/03/29 13:44:27 - mmengine - INFO - Iter(train) [ 2450/20000]  base_lr: 8.8908e-05 lr: 8.8908e-05  eta: 8:11:45  time: 1.6703  data_time: 0.0153  memory: 9685  loss: 42.8632  decode.loss_cls: 0.4645  decode.loss_mask: 2.0001  decode.loss_dice: 1.8124  decode.d0.loss_cls: 0.7259  decode.d0.loss_mask: 2.0187  decode.d0.loss_dice: 1.8948  decode.d1.loss_cls: 0.4483  decode.d1.loss_mask: 2.0230  decode.d1.loss_dice: 1.8303  decode.d2.loss_cls: 0.4102  decode.d2.loss_mask: 2.0019  decode.d2.loss_dice: 1.8071  decode.d3.loss_cls: 0.3886  decode.d3.loss_mask: 1.9972  decode.d3.loss_dice: 1.7907  decode.d4.loss_cls: 0.4061  decode.d4.loss_mask: 2.0074  decode.d4.loss_dice: 1.8218  decode.d5.loss_cls: 0.4409  decode.d5.loss_mask: 1.9950  decode.d5.loss_dice: 1.7986  decode.d6.loss_cls: 0.4933  decode.d6.loss_mask: 2.0090  decode.d6.loss_dice: 1.7819  decode.d7.loss_cls: 0.4707  decode.d7.loss_mask: 2.0037  decode.d7.loss_dice: 1.7754  decode.d8.loss_cls: 0.4784  decode.d8.loss_mask: 1.9868  decode.d8.loss_dice: 1.7802
2025/03/29 13:45:50 - mmengine - INFO - Iter(train) [ 2500/20000]  base_lr: 8.8680e-05 lr: 8.8680e-05  eta: 8:10:17  time: 1.6669  data_time: 0.0161  memory: 9684  loss: 44.3134  decode.loss_cls: 0.4408  decode.loss_mask: 1.9505  decode.loss_dice: 1.9939  decode.d0.loss_cls: 0.6787  decode.d0.loss_mask: 1.9562  decode.d0.loss_dice: 2.0971  decode.d1.loss_cls: 0.4117  decode.d1.loss_mask: 2.0033  decode.d1.loss_dice: 2.0499  decode.d2.loss_cls: 0.4745  decode.d2.loss_mask: 1.9777  decode.d2.loss_dice: 1.9732  decode.d3.loss_cls: 0.4388  decode.d3.loss_mask: 1.9724  decode.d3.loss_dice: 1.9718  decode.d4.loss_cls: 0.4741  decode.d4.loss_mask: 1.9430  decode.d4.loss_dice: 1.9791  decode.d5.loss_cls: 0.4290  decode.d5.loss_mask: 1.9466  decode.d5.loss_dice: 1.9892  decode.d6.loss_cls: 0.4320  decode.d6.loss_mask: 1.9343  decode.d6.loss_dice: 1.9987  decode.d7.loss_cls: 0.4586  decode.d7.loss_mask: 1.9392  decode.d7.loss_dice: 2.0101  decode.d8.loss_cls: 0.3990  decode.d8.loss_mask: 1.9793  decode.d8.loss_dice: 2.0107
2025/03/29 13:47:14 - mmengine - INFO - Iter(train) [ 2550/20000]  base_lr: 8.8452e-05 lr: 8.8452e-05  eta: 8:08:49  time: 1.6695  data_time: 0.0153  memory: 9665  loss: 42.3806  decode.loss_cls: 0.2993  decode.loss_mask: 2.0165  decode.loss_dice: 1.9601  decode.d0.loss_cls: 0.6727  decode.d0.loss_mask: 1.9214  decode.d0.loss_dice: 1.9405  decode.d1.loss_cls: 0.3283  decode.d1.loss_mask: 1.9553  decode.d1.loss_dice: 1.9110  decode.d2.loss_cls: 0.3623  decode.d2.loss_mask: 1.9200  decode.d2.loss_dice: 1.8895  decode.d3.loss_cls: 0.3643  decode.d3.loss_mask: 1.9250  decode.d3.loss_dice: 1.8668  decode.d4.loss_cls: 0.3925  decode.d4.loss_mask: 1.9104  decode.d4.loss_dice: 1.8667  decode.d5.loss_cls: 0.3683  decode.d5.loss_mask: 1.9366  decode.d5.loss_dice: 1.8703  decode.d6.loss_cls: 0.4356  decode.d6.loss_mask: 1.8997  decode.d6.loss_dice: 1.8361  decode.d7.loss_cls: 0.3429  decode.d7.loss_mask: 1.9818  decode.d7.loss_dice: 1.8717  decode.d8.loss_cls: 0.3387  decode.d8.loss_mask: 2.0258  decode.d8.loss_dice: 1.9703
2025/03/29 13:48:37 - mmengine - INFO - Iter(train) [ 2600/20000]  base_lr: 8.8224e-05 lr: 8.8224e-05  eta: 8:07:21  time: 1.6682  data_time: 0.0154  memory: 9693  loss: 41.6946  decode.loss_cls: 0.2850  decode.loss_mask: 2.1008  decode.loss_dice: 1.7647  decode.d0.loss_cls: 0.5903  decode.d0.loss_mask: 2.1062  decode.d0.loss_dice: 1.8335  decode.d1.loss_cls: 0.2829  decode.d1.loss_mask: 2.0422  decode.d1.loss_dice: 1.7992  decode.d2.loss_cls: 0.2616  decode.d2.loss_mask: 2.0548  decode.d2.loss_dice: 1.7596  decode.d3.loss_cls: 0.2870  decode.d3.loss_mask: 2.1002  decode.d3.loss_dice: 1.7595  decode.d4.loss_cls: 0.2807  decode.d4.loss_mask: 2.0816  decode.d4.loss_dice: 1.7654  decode.d5.loss_cls: 0.2546  decode.d5.loss_mask: 2.0660  decode.d5.loss_dice: 1.7744  decode.d6.loss_cls: 0.2695  decode.d6.loss_mask: 2.0834  decode.d6.loss_dice: 1.7863  decode.d7.loss_cls: 0.2884  decode.d7.loss_mask: 2.1027  decode.d7.loss_dice: 1.7899  decode.d8.loss_cls: 0.2925  decode.d8.loss_mask: 2.0788  decode.d8.loss_dice: 1.7529
2025/03/29 13:50:01 - mmengine - INFO - Iter(train) [ 2650/20000]  base_lr: 8.7996e-05 lr: 8.7996e-05  eta: 8:05:54  time: 1.6766  data_time: 0.0154  memory: 9697  loss: 43.0751  decode.loss_cls: 0.4015  decode.loss_mask: 1.9619  decode.loss_dice: 1.9474  decode.d0.loss_cls: 0.6258  decode.d0.loss_mask: 1.9742  decode.d0.loss_dice: 1.9285  decode.d1.loss_cls: 0.3940  decode.d1.loss_mask: 1.9603  decode.d1.loss_dice: 1.8900  decode.d2.loss_cls: 0.3489  decode.d2.loss_mask: 2.0162  decode.d2.loss_dice: 1.9460  decode.d3.loss_cls: 0.4105  decode.d3.loss_mask: 1.9665  decode.d3.loss_dice: 1.8990  decode.d4.loss_cls: 0.4059  decode.d4.loss_mask: 1.9563  decode.d4.loss_dice: 1.9025  decode.d5.loss_cls: 0.3882  decode.d5.loss_mask: 1.9545  decode.d5.loss_dice: 1.9029  decode.d6.loss_cls: 0.3901  decode.d6.loss_mask: 1.9186  decode.d6.loss_dice: 1.9105  decode.d7.loss_cls: 0.4430  decode.d7.loss_mask: 1.9696  decode.d7.loss_dice: 1.9524  decode.d8.loss_cls: 0.4124  decode.d8.loss_mask: 1.9622  decode.d8.loss_dice: 1.9353
2025/03/29 13:51:24 - mmengine - INFO - Iter(train) [ 2700/20000]  base_lr: 8.7768e-05 lr: 8.7768e-05  eta: 8:04:26  time: 1.6669  data_time: 0.0159  memory: 9689  loss: 44.0586  decode.loss_cls: 0.3405  decode.loss_mask: 2.0922  decode.loss_dice: 1.9110  decode.d0.loss_cls: 0.5790  decode.d0.loss_mask: 2.1249  decode.d0.loss_dice: 1.9358  decode.d1.loss_cls: 0.3897  decode.d1.loss_mask: 2.1065  decode.d1.loss_dice: 1.9453  decode.d2.loss_cls: 0.3761  decode.d2.loss_mask: 2.0893  decode.d2.loss_dice: 1.9113  decode.d3.loss_cls: 0.3803  decode.d3.loss_mask: 2.0644  decode.d3.loss_dice: 1.8916  decode.d4.loss_cls: 0.3831  decode.d4.loss_mask: 2.0656  decode.d4.loss_dice: 1.9037  decode.d5.loss_cls: 0.3895  decode.d5.loss_mask: 2.0883  decode.d5.loss_dice: 1.9068  decode.d6.loss_cls: 0.4421  decode.d6.loss_mask: 2.0757  decode.d6.loss_dice: 1.9183  decode.d7.loss_cls: 0.4131  decode.d7.loss_mask: 2.0893  decode.d7.loss_dice: 1.9134  decode.d8.loss_cls: 0.3387  decode.d8.loss_mask: 2.0896  decode.d8.loss_dice: 1.9033
2025/03/29 13:52:48 - mmengine - INFO - Iter(train) [ 2750/20000]  base_lr: 8.7539e-05 lr: 8.7539e-05  eta: 8:02:59  time: 1.6672  data_time: 0.0153  memory: 9696  loss: 46.2388  decode.loss_cls: 0.5813  decode.loss_mask: 2.1147  decode.loss_dice: 1.9342  decode.d0.loss_cls: 0.6702  decode.d0.loss_mask: 2.2038  decode.d0.loss_dice: 2.0346  decode.d1.loss_cls: 0.4579  decode.d1.loss_mask: 2.1366  decode.d1.loss_dice: 1.9234  decode.d2.loss_cls: 0.5362  decode.d2.loss_mask: 2.1207  decode.d2.loss_dice: 1.8773  decode.d3.loss_cls: 0.5423  decode.d3.loss_mask: 2.1105  decode.d3.loss_dice: 1.8917  decode.d4.loss_cls: 0.6012  decode.d4.loss_mask: 2.1369  decode.d4.loss_dice: 1.9379  decode.d5.loss_cls: 0.5735  decode.d5.loss_mask: 2.1240  decode.d5.loss_dice: 1.9255  decode.d6.loss_cls: 0.5616  decode.d6.loss_mask: 2.1044  decode.d6.loss_dice: 1.9133  decode.d7.loss_cls: 0.5841  decode.d7.loss_mask: 2.1202  decode.d7.loss_dice: 1.9136  decode.d8.loss_cls: 0.6102  decode.d8.loss_mask: 2.0808  decode.d8.loss_dice: 1.9164
2025/03/29 13:54:11 - mmengine - INFO - Iter(train) [ 2800/20000]  base_lr: 8.7311e-05 lr: 8.7311e-05  eta: 8:01:31  time: 1.6667  data_time: 0.0155  memory: 9697  loss: 42.6179  decode.loss_cls: 0.2801  decode.loss_mask: 2.2183  decode.loss_dice: 1.7584  decode.d0.loss_cls: 0.5460  decode.d0.loss_mask: 2.1538  decode.d0.loss_dice: 1.8093  decode.d1.loss_cls: 0.3157  decode.d1.loss_mask: 2.1461  decode.d1.loss_dice: 1.8043  decode.d2.loss_cls: 0.2686  decode.d2.loss_mask: 2.1901  decode.d2.loss_dice: 1.7522  decode.d3.loss_cls: 0.2389  decode.d3.loss_mask: 2.2163  decode.d3.loss_dice: 1.7731  decode.d4.loss_cls: 0.2612  decode.d4.loss_mask: 2.2151  decode.d4.loss_dice: 1.7493  decode.d5.loss_cls: 0.2574  decode.d5.loss_mask: 2.1959  decode.d5.loss_dice: 1.7771  decode.d6.loss_cls: 0.2578  decode.d6.loss_mask: 2.2088  decode.d6.loss_dice: 1.7691  decode.d7.loss_cls: 0.2790  decode.d7.loss_mask: 2.2149  decode.d7.loss_dice: 1.7541  decode.d8.loss_cls: 0.2749  decode.d8.loss_mask: 2.1867  decode.d8.loss_dice: 1.7451
2025/03/29 13:55:35 - mmengine - INFO - Iter(train) [ 2850/20000]  base_lr: 8.7082e-05 lr: 8.7082e-05  eta: 8:00:05  time: 1.6833  data_time: 0.0167  memory: 9688  loss: 41.4108  decode.loss_cls: 0.3227  decode.loss_mask: 1.7815  decode.loss_dice: 1.9526  decode.d0.loss_cls: 0.5848  decode.d0.loss_mask: 1.7941  decode.d0.loss_dice: 1.9816  decode.d1.loss_cls: 0.3581  decode.d1.loss_mask: 1.8228  decode.d1.loss_dice: 1.9369  decode.d2.loss_cls: 0.4291  decode.d2.loss_mask: 1.7719  decode.d2.loss_dice: 1.8841  decode.d3.loss_cls: 0.4201  decode.d3.loss_mask: 1.7550  decode.d3.loss_dice: 1.8916  decode.d4.loss_cls: 0.4237  decode.d4.loss_mask: 1.7736  decode.d4.loss_dice: 1.9078  decode.d5.loss_cls: 0.4335  decode.d5.loss_mask: 1.7783  decode.d5.loss_dice: 1.9135  decode.d6.loss_cls: 0.4714  decode.d6.loss_mask: 1.8033  decode.d6.loss_dice: 1.9081  decode.d7.loss_cls: 0.4866  decode.d7.loss_mask: 1.7655  decode.d7.loss_dice: 1.9127  decode.d8.loss_cls: 0.4448  decode.d8.loss_mask: 1.7709  decode.d8.loss_dice: 1.9306
2025/03/29 13:56:59 - mmengine - INFO - Iter(train) [ 2900/20000]  base_lr: 8.6854e-05 lr: 8.6854e-05  eta: 7:58:42  time: 1.6828  data_time: 0.0159  memory: 9745  loss: 43.3927  decode.loss_cls: 0.5093  decode.loss_mask: 1.8759  decode.loss_dice: 1.9300  decode.d0.loss_cls: 0.7560  decode.d0.loss_mask: 1.8774  decode.d0.loss_dice: 1.9783  decode.d1.loss_cls: 0.5843  decode.d1.loss_mask: 1.8695  decode.d1.loss_dice: 1.9228  decode.d2.loss_cls: 0.5409  decode.d2.loss_mask: 1.8563  decode.d2.loss_dice: 1.9216  decode.d3.loss_cls: 0.4862  decode.d3.loss_mask: 1.8867  decode.d3.loss_dice: 1.9426  decode.d4.loss_cls: 0.5030  decode.d4.loss_mask: 1.8510  decode.d4.loss_dice: 1.9230  decode.d5.loss_cls: 0.4770  decode.d5.loss_mask: 1.8962  decode.d5.loss_dice: 1.9090  decode.d6.loss_cls: 0.5278  decode.d6.loss_mask: 1.9080  decode.d6.loss_dice: 1.9454  decode.d7.loss_cls: 0.4772  decode.d7.loss_mask: 1.8982  decode.d7.loss_dice: 1.8979  decode.d8.loss_cls: 0.4896  decode.d8.loss_mask: 1.8490  decode.d8.loss_dice: 1.9027
2025/03/29 13:58:23 - mmengine - INFO - Iter(train) [ 2950/20000]  base_lr: 8.6625e-05 lr: 8.6625e-05  eta: 7:57:19  time: 1.6746  data_time: 0.0157  memory: 9684  loss: 44.1793  decode.loss_cls: 0.3366  decode.loss_mask: 2.1158  decode.loss_dice: 1.8983  decode.d0.loss_cls: 0.5538  decode.d0.loss_mask: 2.0852  decode.d0.loss_dice: 1.9474  decode.d1.loss_cls: 0.3957  decode.d1.loss_mask: 2.1050  decode.d1.loss_dice: 1.9148  decode.d2.loss_cls: 0.3799  decode.d2.loss_mask: 2.1061  decode.d2.loss_dice: 1.8949  decode.d3.loss_cls: 0.3884  decode.d3.loss_mask: 2.1263  decode.d3.loss_dice: 1.9291  decode.d4.loss_cls: 0.3550  decode.d4.loss_mask: 2.1462  decode.d4.loss_dice: 1.9336  decode.d5.loss_cls: 0.3542  decode.d5.loss_mask: 2.1338  decode.d5.loss_dice: 1.9263  decode.d6.loss_cls: 0.3467  decode.d6.loss_mask: 2.1021  decode.d6.loss_dice: 1.9328  decode.d7.loss_cls: 0.3726  decode.d7.loss_mask: 2.0987  decode.d7.loss_dice: 1.9139  decode.d8.loss_cls: 0.3597  decode.d8.loss_mask: 2.1326  decode.d8.loss_dice: 1.8939
2025/03/29 13:59:46 - mmengine - INFO - Exp name: u2r_20250329_122454
2025/03/29 13:59:46 - mmengine - INFO - Iter(train) [ 3000/20000]  base_lr: 8.6397e-05 lr: 8.6397e-05  eta: 7:55:52  time: 1.6673  data_time: 0.0153  memory: 9697  loss: 40.5489  decode.loss_cls: 0.4547  decode.loss_mask: 1.8385  decode.loss_dice: 1.6742  decode.d0.loss_cls: 0.5826  decode.d0.loss_mask: 1.9716  decode.d0.loss_dice: 1.8053  decode.d1.loss_cls: 0.4060  decode.d1.loss_mask: 1.8792  decode.d1.loss_dice: 1.7113  decode.d2.loss_cls: 0.4045  decode.d2.loss_mask: 1.9143  decode.d2.loss_dice: 1.7664  decode.d3.loss_cls: 0.3456  decode.d3.loss_mask: 1.8745  decode.d3.loss_dice: 1.7294  decode.d4.loss_cls: 0.4025  decode.d4.loss_mask: 1.8650  decode.d4.loss_dice: 1.7278  decode.d5.loss_cls: 0.4655  decode.d5.loss_mask: 1.8434  decode.d5.loss_dice: 1.7291  decode.d6.loss_cls: 0.4680  decode.d6.loss_mask: 1.8639  decode.d6.loss_dice: 1.7346  decode.d7.loss_cls: 0.4608  decode.d7.loss_mask: 1.8818  decode.d7.loss_dice: 1.7196  decode.d8.loss_cls: 0.4460  decode.d8.loss_mask: 1.8701  decode.d8.loss_dice: 1.7125
2025/03/29 14:01:10 - mmengine - INFO - Iter(train) [ 3050/20000]  base_lr: 8.6168e-05 lr: 8.6168e-05  eta: 7:54:26  time: 1.6728  data_time: 0.0159  memory: 9752  loss: 43.4443  decode.loss_cls: 0.4631  decode.loss_mask: 1.9805  decode.loss_dice: 1.8279  decode.d0.loss_cls: 0.6354  decode.d0.loss_mask: 2.0476  decode.d0.loss_dice: 1.9116  decode.d1.loss_cls: 0.4840  decode.d1.loss_mask: 2.0679  decode.d1.loss_dice: 1.8673  decode.d2.loss_cls: 0.4607  decode.d2.loss_mask: 2.0068  decode.d2.loss_dice: 1.8321  decode.d3.loss_cls: 0.5130  decode.d3.loss_mask: 2.0027  decode.d3.loss_dice: 1.8122  decode.d4.loss_cls: 0.5063  decode.d4.loss_mask: 2.0051  decode.d4.loss_dice: 1.7929  decode.d5.loss_cls: 0.5411  decode.d5.loss_mask: 1.9597  decode.d5.loss_dice: 1.8086  decode.d6.loss_cls: 0.4758  decode.d6.loss_mask: 2.0037  decode.d6.loss_dice: 1.8203  decode.d7.loss_cls: 0.4936  decode.d7.loss_mask: 1.9994  decode.d7.loss_dice: 1.8199  decode.d8.loss_cls: 0.5095  decode.d8.loss_mask: 1.9684  decode.d8.loss_dice: 1.8274
2025/03/29 14:02:33 - mmengine - INFO - Iter(train) [ 3100/20000]  base_lr: 8.5939e-05 lr: 8.5939e-05  eta: 7:52:59  time: 1.6713  data_time: 0.0154  memory: 9684  loss: 42.4409  decode.loss_cls: 0.4009  decode.loss_mask: 2.0066  decode.loss_dice: 1.8695  decode.d0.loss_cls: 0.5744  decode.d0.loss_mask: 1.9940  decode.d0.loss_dice: 1.8652  decode.d1.loss_cls: 0.3685  decode.d1.loss_mask: 1.9665  decode.d1.loss_dice: 1.8185  decode.d2.loss_cls: 0.4243  decode.d2.loss_mask: 1.9782  decode.d2.loss_dice: 1.8080  decode.d3.loss_cls: 0.4050  decode.d3.loss_mask: 1.9930  decode.d3.loss_dice: 1.7791  decode.d4.loss_cls: 0.3918  decode.d4.loss_mask: 1.9660  decode.d4.loss_dice: 1.8204  decode.d5.loss_cls: 0.4559  decode.d5.loss_mask: 1.9850  decode.d5.loss_dice: 1.8344  decode.d6.loss_cls: 0.4445  decode.d6.loss_mask: 1.9809  decode.d6.loss_dice: 1.8190  decode.d7.loss_cls: 0.4154  decode.d7.loss_mask: 1.9814  decode.d7.loss_dice: 1.8198  decode.d8.loss_cls: 0.3894  decode.d8.loss_mask: 2.0284  decode.d8.loss_dice: 1.8566
2025/03/29 14:03:57 - mmengine - INFO - Iter(train) [ 3150/20000]  base_lr: 8.5710e-05 lr: 8.5710e-05  eta: 7:51:33  time: 1.6743  data_time: 0.0155  memory: 9680  loss: 42.0415  decode.loss_cls: 0.4618  decode.loss_mask: 1.9212  decode.loss_dice: 1.8073  decode.d0.loss_cls: 0.5787  decode.d0.loss_mask: 1.9634  decode.d0.loss_dice: 1.8653  decode.d1.loss_cls: 0.3961  decode.d1.loss_mask: 1.9160  decode.d1.loss_dice: 1.7921  decode.d2.loss_cls: 0.4295  decode.d2.loss_mask: 1.9491  decode.d2.loss_dice: 1.7948  decode.d3.loss_cls: 0.4306  decode.d3.loss_mask: 1.9753  decode.d3.loss_dice: 1.7664  decode.d4.loss_cls: 0.4238  decode.d4.loss_mask: 1.9343  decode.d4.loss_dice: 1.8450  decode.d5.loss_cls: 0.4244  decode.d5.loss_mask: 1.9467  decode.d5.loss_dice: 1.8039  decode.d6.loss_cls: 0.4434  decode.d6.loss_mask: 1.9459  decode.d6.loss_dice: 1.8111  decode.d7.loss_cls: 0.5210  decode.d7.loss_mask: 1.9029  decode.d7.loss_dice: 1.8127  decode.d8.loss_cls: 0.4264  decode.d8.loss_mask: 1.9335  decode.d8.loss_dice: 1.8190
2025/03/29 14:05:21 - mmengine - INFO - Iter(train) [ 3200/20000]  base_lr: 8.5481e-05 lr: 8.5481e-05  eta: 7:50:07  time: 1.6723  data_time: 0.0154  memory: 9679  loss: 41.7984  decode.loss_cls: 0.4028  decode.loss_mask: 1.8957  decode.loss_dice: 1.9209  decode.d0.loss_cls: 0.5091  decode.d0.loss_mask: 1.9100  decode.d0.loss_dice: 1.9397  decode.d1.loss_cls: 0.3735  decode.d1.loss_mask: 1.8792  decode.d1.loss_dice: 1.9312  decode.d2.loss_cls: 0.2988  decode.d2.loss_mask: 1.8902  decode.d2.loss_dice: 1.9352  decode.d3.loss_cls: 0.3585  decode.d3.loss_mask: 1.8911  decode.d3.loss_dice: 1.9203  decode.d4.loss_cls: 0.3575  decode.d4.loss_mask: 1.8784  decode.d4.loss_dice: 1.8808  decode.d5.loss_cls: 0.3714  decode.d5.loss_mask: 1.8890  decode.d5.loss_dice: 1.8694  decode.d6.loss_cls: 0.3868  decode.d6.loss_mask: 1.8937  decode.d6.loss_dice: 1.8794  decode.d7.loss_cls: 0.3936  decode.d7.loss_mask: 1.8764  decode.d7.loss_dice: 1.8637  decode.d8.loss_cls: 0.4223  decode.d8.loss_mask: 1.8976  decode.d8.loss_dice: 1.8824
2025/03/29 14:06:44 - mmengine - INFO - Iter(train) [ 3250/20000]  base_lr: 8.5252e-05 lr: 8.5252e-05  eta: 7:48:40  time: 1.6664  data_time: 0.0156  memory: 9682  loss: 42.4456  decode.loss_cls: 0.4010  decode.loss_mask: 2.0303  decode.loss_dice: 1.8191  decode.d0.loss_cls: 0.5530  decode.d0.loss_mask: 2.0315  decode.d0.loss_dice: 1.9543  decode.d1.loss_cls: 0.3819  decode.d1.loss_mask: 2.0139  decode.d1.loss_dice: 1.8328  decode.d2.loss_cls: 0.3736  decode.d2.loss_mask: 2.0305  decode.d2.loss_dice: 1.8620  decode.d3.loss_cls: 0.3809  decode.d3.loss_mask: 2.0051  decode.d3.loss_dice: 1.7952  decode.d4.loss_cls: 0.3678  decode.d4.loss_mask: 2.0192  decode.d4.loss_dice: 1.7869  decode.d5.loss_cls: 0.4386  decode.d5.loss_mask: 1.9742  decode.d5.loss_dice: 1.7654  decode.d6.loss_cls: 0.4192  decode.d6.loss_mask: 2.0036  decode.d6.loss_dice: 1.7864  decode.d7.loss_cls: 0.4255  decode.d7.loss_mask: 1.9863  decode.d7.loss_dice: 1.7733  decode.d8.loss_cls: 0.4655  decode.d8.loss_mask: 1.9949  decode.d8.loss_dice: 1.7738
2025/03/29 14:08:07 - mmengine - INFO - Iter(train) [ 3300/20000]  base_lr: 8.5023e-05 lr: 8.5023e-05  eta: 7:47:14  time: 1.6699  data_time: 0.0159  memory: 9692  loss: 42.5015  decode.loss_cls: 0.3735  decode.loss_mask: 1.9944  decode.loss_dice: 1.8918  decode.d0.loss_cls: 0.4584  decode.d0.loss_mask: 2.0425  decode.d0.loss_dice: 1.9530  decode.d1.loss_cls: 0.2590  decode.d1.loss_mask: 2.0204  decode.d1.loss_dice: 1.9338  decode.d2.loss_cls: 0.3087  decode.d2.loss_mask: 1.9792  decode.d2.loss_dice: 1.8872  decode.d3.loss_cls: 0.3338  decode.d3.loss_mask: 2.0062  decode.d3.loss_dice: 1.9012  decode.d4.loss_cls: 0.3404  decode.d4.loss_mask: 1.9763  decode.d4.loss_dice: 1.8682  decode.d5.loss_cls: 0.3165  decode.d5.loss_mask: 2.0004  decode.d5.loss_dice: 1.9131  decode.d6.loss_cls: 0.3452  decode.d6.loss_mask: 1.9959  decode.d6.loss_dice: 1.9048  decode.d7.loss_cls: 0.3537  decode.d7.loss_mask: 2.0050  decode.d7.loss_dice: 1.8959  decode.d8.loss_cls: 0.2860  decode.d8.loss_mask: 2.0572  decode.d8.loss_dice: 1.8999
2025/03/29 14:09:31 - mmengine - INFO - Iter(train) [ 3350/20000]  base_lr: 8.4794e-05 lr: 8.4794e-05  eta: 7:45:48  time: 1.6703  data_time: 0.0165  memory: 9687  loss: 40.8546  decode.loss_cls: 0.4259  decode.loss_mask: 1.8713  decode.loss_dice: 1.7776  decode.d0.loss_cls: 0.5592  decode.d0.loss_mask: 1.8587  decode.d0.loss_dice: 1.8771  decode.d1.loss_cls: 0.4041  decode.d1.loss_mask: 1.9017  decode.d1.loss_dice: 1.7800  decode.d2.loss_cls: 0.4100  decode.d2.loss_mask: 1.8666  decode.d2.loss_dice: 1.7509  decode.d3.loss_cls: 0.4333  decode.d3.loss_mask: 1.8907  decode.d3.loss_dice: 1.7222  decode.d4.loss_cls: 0.4356  decode.d4.loss_mask: 1.8700  decode.d4.loss_dice: 1.7544  decode.d5.loss_cls: 0.4435  decode.d5.loss_mask: 1.8442  decode.d5.loss_dice: 1.7284  decode.d6.loss_cls: 0.4202  decode.d6.loss_mask: 1.8780  decode.d6.loss_dice: 1.7422  decode.d7.loss_cls: 0.4289  decode.d7.loss_mask: 1.8870  decode.d7.loss_dice: 1.7837  decode.d8.loss_cls: 0.4791  decode.d8.loss_mask: 1.8692  decode.d8.loss_dice: 1.7607
2025/03/29 14:10:55 - mmengine - INFO - Iter(train) [ 3400/20000]  base_lr: 8.4565e-05 lr: 8.4565e-05  eta: 7:44:22  time: 1.6713  data_time: 0.0153  memory: 9692  loss: 45.2495  decode.loss_cls: 0.4299  decode.loss_mask: 2.1783  decode.loss_dice: 1.9394  decode.d0.loss_cls: 0.6172  decode.d0.loss_mask: 2.1361  decode.d0.loss_dice: 1.9545  decode.d1.loss_cls: 0.4606  decode.d1.loss_mask: 2.1165  decode.d1.loss_dice: 1.9074  decode.d2.loss_cls: 0.4636  decode.d2.loss_mask: 2.1204  decode.d2.loss_dice: 1.9552  decode.d3.loss_cls: 0.4615  decode.d3.loss_mask: 2.1467  decode.d3.loss_dice: 1.9189  decode.d4.loss_cls: 0.4480  decode.d4.loss_mask: 2.1577  decode.d4.loss_dice: 1.8974  decode.d5.loss_cls: 0.4241  decode.d5.loss_mask: 2.1890  decode.d5.loss_dice: 1.8771  decode.d6.loss_cls: 0.4093  decode.d6.loss_mask: 2.1350  decode.d6.loss_dice: 1.8754  decode.d7.loss_cls: 0.4847  decode.d7.loss_mask: 2.1627  decode.d7.loss_dice: 1.8799  decode.d8.loss_cls: 0.4651  decode.d8.loss_mask: 2.1350  decode.d8.loss_dice: 1.9031
2025/03/29 14:12:18 - mmengine - INFO - Iter(train) [ 3450/20000]  base_lr: 8.4336e-05 lr: 8.4336e-05  eta: 7:42:56  time: 1.6689  data_time: 0.0154  memory: 9688  loss: 38.7125  decode.loss_cls: 0.3748  decode.loss_mask: 1.7818  decode.loss_dice: 1.6981  decode.d0.loss_cls: 0.4947  decode.d0.loss_mask: 1.7542  decode.d0.loss_dice: 1.8441  decode.d1.loss_cls: 0.3318  decode.d1.loss_mask: 1.7439  decode.d1.loss_dice: 1.7556  decode.d2.loss_cls: 0.3394  decode.d2.loss_mask: 1.7437  decode.d2.loss_dice: 1.7385  decode.d3.loss_cls: 0.3490  decode.d3.loss_mask: 1.7701  decode.d3.loss_dice: 1.7299  decode.d4.loss_cls: 0.3559  decode.d4.loss_mask: 1.7557  decode.d4.loss_dice: 1.7148  decode.d5.loss_cls: 0.3459  decode.d5.loss_mask: 1.7459  decode.d5.loss_dice: 1.7430  decode.d6.loss_cls: 0.3686  decode.d6.loss_mask: 1.7505  decode.d6.loss_dice: 1.7362  decode.d7.loss_cls: 0.3569  decode.d7.loss_mask: 1.7489  decode.d7.loss_dice: 1.7519  decode.d8.loss_cls: 0.3811  decode.d8.loss_mask: 1.8037  decode.d8.loss_dice: 1.7039
2025/03/29 14:13:42 - mmengine - INFO - Iter(train) [ 3500/20000]  base_lr: 8.4106e-05 lr: 8.4106e-05  eta: 7:41:30  time: 1.6695  data_time: 0.0155  memory: 9695  loss: 46.5482  decode.loss_cls: 0.6793  decode.loss_mask: 2.0716  decode.loss_dice: 1.9713  decode.d0.loss_cls: 0.6733  decode.d0.loss_mask: 2.0312  decode.d0.loss_dice: 2.0698  decode.d1.loss_cls: 0.6503  decode.d1.loss_mask: 1.9856  decode.d1.loss_dice: 1.9743  decode.d2.loss_cls: 0.6237  decode.d2.loss_mask: 2.0414  decode.d2.loss_dice: 1.9482  decode.d3.loss_cls: 0.6001  decode.d3.loss_mask: 2.0617  decode.d3.loss_dice: 2.0145  decode.d4.loss_cls: 0.6052  decode.d4.loss_mask: 2.0013  decode.d4.loss_dice: 2.0052  decode.d5.loss_cls: 0.7002  decode.d5.loss_mask: 1.9711  decode.d5.loss_dice: 1.9326  decode.d6.loss_cls: 0.7335  decode.d6.loss_mask: 2.0074  decode.d6.loss_dice: 1.9447  decode.d7.loss_cls: 0.6756  decode.d7.loss_mask: 2.0004  decode.d7.loss_dice: 1.9632  decode.d8.loss_cls: 0.6506  decode.d8.loss_mask: 2.0045  decode.d8.loss_dice: 1.9563
2025/03/29 14:15:05 - mmengine - INFO - Iter(train) [ 3550/20000]  base_lr: 8.3877e-05 lr: 8.3877e-05  eta: 7:40:04  time: 1.6708  data_time: 0.0152  memory: 9692  loss: 40.5994  decode.loss_cls: 0.3368  decode.loss_mask: 1.9622  decode.loss_dice: 1.7171  decode.d0.loss_cls: 0.5216  decode.d0.loss_mask: 1.9542  decode.d0.loss_dice: 1.7722  decode.d1.loss_cls: 0.4387  decode.d1.loss_mask: 1.9317  decode.d1.loss_dice: 1.7398  decode.d2.loss_cls: 0.4267  decode.d2.loss_mask: 1.9338  decode.d2.loss_dice: 1.6996  decode.d3.loss_cls: 0.3875  decode.d3.loss_mask: 1.9344  decode.d3.loss_dice: 1.7360  decode.d4.loss_cls: 0.4004  decode.d4.loss_mask: 1.9554  decode.d4.loss_dice: 1.7059  decode.d5.loss_cls: 0.3872  decode.d5.loss_mask: 1.9277  decode.d5.loss_dice: 1.6786  decode.d6.loss_cls: 0.3590  decode.d6.loss_mask: 1.9337  decode.d6.loss_dice: 1.7009  decode.d7.loss_cls: 0.3978  decode.d7.loss_mask: 1.9379  decode.d7.loss_dice: 1.6999  decode.d8.loss_cls: 0.3576  decode.d8.loss_mask: 1.9698  decode.d8.loss_dice: 1.6952
2025/03/29 14:16:28 - mmengine - INFO - Iter(train) [ 3600/20000]  base_lr: 8.3647e-05 lr: 8.3647e-05  eta: 7:38:38  time: 1.6671  data_time: 0.0152  memory: 9686  loss: 40.5840  decode.loss_cls: 0.4659  decode.loss_mask: 1.7689  decode.loss_dice: 1.8071  decode.d0.loss_cls: 0.5472  decode.d0.loss_mask: 1.8373  decode.d0.loss_dice: 1.8675  decode.d1.loss_cls: 0.3470  decode.d1.loss_mask: 1.8627  decode.d1.loss_dice: 1.7904  decode.d2.loss_cls: 0.4096  decode.d2.loss_mask: 1.8299  decode.d2.loss_dice: 1.7711  decode.d3.loss_cls: 0.4840  decode.d3.loss_mask: 1.7931  decode.d3.loss_dice: 1.7854  decode.d4.loss_cls: 0.4108  decode.d4.loss_mask: 1.8401  decode.d4.loss_dice: 1.7967  decode.d5.loss_cls: 0.4568  decode.d5.loss_mask: 1.8106  decode.d5.loss_dice: 1.7912  decode.d6.loss_cls: 0.4840  decode.d6.loss_mask: 1.7840  decode.d6.loss_dice: 1.7763  decode.d7.loss_cls: 0.4396  decode.d7.loss_mask: 1.8265  decode.d7.loss_dice: 1.7774  decode.d8.loss_cls: 0.4832  decode.d8.loss_mask: 1.7523  decode.d8.loss_dice: 1.7874
2025/03/29 14:17:52 - mmengine - INFO - Iter(train) [ 3650/20000]  base_lr: 8.3418e-05 lr: 8.3418e-05  eta: 7:37:13  time: 1.6698  data_time: 0.0152  memory: 9688  loss: 42.4973  decode.loss_cls: 0.4667  decode.loss_mask: 1.9218  decode.loss_dice: 1.8718  decode.d0.loss_cls: 0.5976  decode.d0.loss_mask: 1.9312  decode.d0.loss_dice: 1.9928  decode.d1.loss_cls: 0.4491  decode.d1.loss_mask: 1.8986  decode.d1.loss_dice: 1.8734  decode.d2.loss_cls: 0.4312  decode.d2.loss_mask: 1.8633  decode.d2.loss_dice: 1.8449  decode.d3.loss_cls: 0.4299  decode.d3.loss_mask: 1.8968  decode.d3.loss_dice: 1.8223  decode.d4.loss_cls: 0.4142  decode.d4.loss_mask: 1.9115  decode.d4.loss_dice: 1.8775  decode.d5.loss_cls: 0.4410  decode.d5.loss_mask: 1.8982  decode.d5.loss_dice: 1.8804  decode.d6.loss_cls: 0.4638  decode.d6.loss_mask: 1.8834  decode.d6.loss_dice: 1.9330  decode.d7.loss_cls: 0.4625  decode.d7.loss_mask: 1.9168  decode.d7.loss_dice: 1.8758  decode.d8.loss_cls: 0.5041  decode.d8.loss_mask: 1.8947  decode.d8.loss_dice: 1.8490
2025/03/29 14:19:18 - mmengine - INFO - Iter(train) [ 3700/20000]  base_lr: 8.3188e-05 lr: 8.3188e-05  eta: 7:35:58  time: 1.7789  data_time: 0.0157  memory: 9684  loss: 40.0459  decode.loss_cls: 0.2873  decode.loss_mask: 1.8861  decode.loss_dice: 1.8200  decode.d0.loss_cls: 0.4595  decode.d0.loss_mask: 1.8920  decode.d0.loss_dice: 1.8088  decode.d1.loss_cls: 0.3373  decode.d1.loss_mask: 1.8255  decode.d1.loss_dice: 1.7962  decode.d2.loss_cls: 0.3090  decode.d2.loss_mask: 1.8503  decode.d2.loss_dice: 1.7945  decode.d3.loss_cls: 0.3025  decode.d3.loss_mask: 1.8636  decode.d3.loss_dice: 1.7810  decode.d4.loss_cls: 0.3052  decode.d4.loss_mask: 1.8679  decode.d4.loss_dice: 1.8039  decode.d5.loss_cls: 0.3521  decode.d5.loss_mask: 1.8599  decode.d5.loss_dice: 1.8240  decode.d6.loss_cls: 0.3623  decode.d6.loss_mask: 1.8483  decode.d6.loss_dice: 1.8063  decode.d7.loss_cls: 0.3271  decode.d7.loss_mask: 1.8694  decode.d7.loss_dice: 1.8094  decode.d8.loss_cls: 0.3617  decode.d8.loss_mask: 1.8468  decode.d8.loss_dice: 1.7879
2025/03/29 14:20:47 - mmengine - INFO - Iter(train) [ 3750/20000]  base_lr: 8.2958e-05 lr: 8.2958e-05  eta: 7:34:57  time: 1.7790  data_time: 0.0156  memory: 9681  loss: 43.6675  decode.loss_cls: 0.3492  decode.loss_mask: 2.1070  decode.loss_dice: 1.9201  decode.d0.loss_cls: 0.5547  decode.d0.loss_mask: 2.1208  decode.d0.loss_dice: 1.9262  decode.d1.loss_cls: 0.4164  decode.d1.loss_mask: 2.0896  decode.d1.loss_dice: 1.8514  decode.d2.loss_cls: 0.4286  decode.d2.loss_mask: 2.0656  decode.d2.loss_dice: 1.8438  decode.d3.loss_cls: 0.3878  decode.d3.loss_mask: 2.0313  decode.d3.loss_dice: 1.8764  decode.d4.loss_cls: 0.3603  decode.d4.loss_mask: 2.0777  decode.d4.loss_dice: 1.9142  decode.d5.loss_cls: 0.3800  decode.d5.loss_mask: 2.0719  decode.d5.loss_dice: 1.8713  decode.d6.loss_cls: 0.4184  decode.d6.loss_mask: 2.0686  decode.d6.loss_dice: 1.8708  decode.d7.loss_cls: 0.4472  decode.d7.loss_mask: 2.0141  decode.d7.loss_dice: 1.8540  decode.d8.loss_cls: 0.3940  decode.d8.loss_mask: 2.0619  decode.d8.loss_dice: 1.8942
2025/03/29 14:22:16 - mmengine - INFO - Iter(train) [ 3800/20000]  base_lr: 8.2729e-05 lr: 8.2729e-05  eta: 7:33:54  time: 1.7788  data_time: 0.0156  memory: 9679  loss: 42.0482  decode.loss_cls: 0.3438  decode.loss_mask: 2.0347  decode.loss_dice: 1.8399  decode.d0.loss_cls: 0.4859  decode.d0.loss_mask: 1.9854  decode.d0.loss_dice: 1.8544  decode.d1.loss_cls: 0.3384  decode.d1.loss_mask: 2.0211  decode.d1.loss_dice: 1.7835  decode.d2.loss_cls: 0.2877  decode.d2.loss_mask: 2.0787  decode.d2.loss_dice: 1.7911  decode.d3.loss_cls: 0.3558  decode.d3.loss_mask: 2.0339  decode.d3.loss_dice: 1.7866  decode.d4.loss_cls: 0.3901  decode.d4.loss_mask: 2.0795  decode.d4.loss_dice: 1.8492  decode.d5.loss_cls: 0.3567  decode.d5.loss_mask: 1.9696  decode.d5.loss_dice: 1.7978  decode.d6.loss_cls: 0.3810  decode.d6.loss_mask: 2.0317  decode.d6.loss_dice: 1.8082  decode.d7.loss_cls: 0.3856  decode.d7.loss_mask: 2.0005  decode.d7.loss_dice: 1.7842  decode.d8.loss_cls: 0.3908  decode.d8.loss_mask: 1.9910  decode.d8.loss_dice: 1.8114
2025/03/29 14:23:45 - mmengine - INFO - Iter(train) [ 3850/20000]  base_lr: 8.2499e-05 lr: 8.2499e-05  eta: 7:32:51  time: 1.7806  data_time: 0.0152  memory: 9686  loss: 43.5819  decode.loss_cls: 0.5821  decode.loss_mask: 1.9428  decode.loss_dice: 1.8214  decode.d0.loss_cls: 0.6371  decode.d0.loss_mask: 1.9653  decode.d0.loss_dice: 1.8796  decode.d1.loss_cls: 0.5329  decode.d1.loss_mask: 1.9731  decode.d1.loss_dice: 1.8637  decode.d2.loss_cls: 0.5418  decode.d2.loss_mask: 1.9752  decode.d2.loss_dice: 1.8614  decode.d3.loss_cls: 0.5159  decode.d3.loss_mask: 1.9604  decode.d3.loss_dice: 1.8561  decode.d4.loss_cls: 0.4489  decode.d4.loss_mask: 1.9914  decode.d4.loss_dice: 1.8488  decode.d5.loss_cls: 0.5793  decode.d5.loss_mask: 1.9246  decode.d5.loss_dice: 1.8228  decode.d6.loss_cls: 0.5757  decode.d6.loss_mask: 1.9405  decode.d6.loss_dice: 1.8119  decode.d7.loss_cls: 0.5905  decode.d7.loss_mask: 1.9632  decode.d7.loss_dice: 1.8228  decode.d8.loss_cls: 0.5844  decode.d8.loss_mask: 1.9264  decode.d8.loss_dice: 1.8417
2025/03/29 14:25:14 - mmengine - INFO - Iter(train) [ 3900/20000]  base_lr: 8.2269e-05 lr: 8.2269e-05  eta: 7:31:48  time: 1.7789  data_time: 0.0152  memory: 9696  loss: 40.1495  decode.loss_cls: 0.4311  decode.loss_mask: 1.9111  decode.loss_dice: 1.7040  decode.d0.loss_cls: 0.5336  decode.d0.loss_mask: 1.8382  decode.d0.loss_dice: 1.8028  decode.d1.loss_cls: 0.3965  decode.d1.loss_mask: 1.8460  decode.d1.loss_dice: 1.7280  decode.d2.loss_cls: 0.3864  decode.d2.loss_mask: 1.8311  decode.d2.loss_dice: 1.7292  decode.d3.loss_cls: 0.4062  decode.d3.loss_mask: 1.8465  decode.d3.loss_dice: 1.7359  decode.d4.loss_cls: 0.3876  decode.d4.loss_mask: 1.8641  decode.d4.loss_dice: 1.7250  decode.d5.loss_cls: 0.4683  decode.d5.loss_mask: 1.8106  decode.d5.loss_dice: 1.7024  decode.d6.loss_cls: 0.4932  decode.d6.loss_mask: 1.8201  decode.d6.loss_dice: 1.6978  decode.d7.loss_cls: 0.4453  decode.d7.loss_mask: 1.8430  decode.d7.loss_dice: 1.7265  decode.d8.loss_cls: 0.4597  decode.d8.loss_mask: 1.8565  decode.d8.loss_dice: 1.7226
2025/03/29 14:26:36 - mmengine - INFO - Iter(train) [ 3950/20000]  base_lr: 8.2039e-05 lr: 8.2039e-05  eta: 7:30:11  time: 1.6615  data_time: 0.0153  memory: 9695  loss: 40.7768  decode.loss_cls: 0.3559  decode.loss_mask: 1.9496  decode.loss_dice: 1.7652  decode.d0.loss_cls: 0.5908  decode.d0.loss_mask: 1.9088  decode.d0.loss_dice: 1.8035  decode.d1.loss_cls: 0.3873  decode.d1.loss_mask: 1.9211  decode.d1.loss_dice: 1.7493  decode.d2.loss_cls: 0.3997  decode.d2.loss_mask: 1.8727  decode.d2.loss_dice: 1.7488  decode.d3.loss_cls: 0.3666  decode.d3.loss_mask: 1.9479  decode.d3.loss_dice: 1.7773  decode.d4.loss_cls: 0.3798  decode.d4.loss_mask: 1.9149  decode.d4.loss_dice: 1.7454  decode.d5.loss_cls: 0.3971  decode.d5.loss_mask: 1.9284  decode.d5.loss_dice: 1.7486  decode.d6.loss_cls: 0.4024  decode.d6.loss_mask: 1.9177  decode.d6.loss_dice: 1.7073  decode.d7.loss_cls: 0.3889  decode.d7.loss_mask: 1.9204  decode.d7.loss_dice: 1.7282  decode.d8.loss_cls: 0.4279  decode.d8.loss_mask: 1.8901  decode.d8.loss_dice: 1.7351
2025/03/29 14:27:58 - mmengine - INFO - Exp name: u2r_20250329_122454
2025/03/29 14:27:58 - mmengine - INFO - Iter(train) [ 4000/20000]  base_lr: 8.1809e-05 lr: 8.1809e-05  eta: 7:28:41  time: 1.6250  data_time: 0.0153  memory: 9697  loss: 42.9671  decode.loss_cls: 0.5113  decode.loss_mask: 1.9245  decode.loss_dice: 1.8385  decode.d0.loss_cls: 0.5978  decode.d0.loss_mask: 1.9282  decode.d0.loss_dice: 1.9500  decode.d1.loss_cls: 0.3115  decode.d1.loss_mask: 1.9855  decode.d1.loss_dice: 1.8799  decode.d2.loss_cls: 0.4192  decode.d2.loss_mask: 2.0022  decode.d2.loss_dice: 1.8355  decode.d3.loss_cls: 0.4335  decode.d3.loss_mask: 1.9740  decode.d3.loss_dice: 1.8413  decode.d4.loss_cls: 0.4184  decode.d4.loss_mask: 2.0008  decode.d4.loss_dice: 1.8462  decode.d5.loss_cls: 0.4593  decode.d5.loss_mask: 1.9999  decode.d5.loss_dice: 1.8816  decode.d6.loss_cls: 0.4241  decode.d6.loss_mask: 1.9933  decode.d6.loss_dice: 1.9031  decode.d7.loss_cls: 0.4817  decode.d7.loss_mask: 1.9927  decode.d7.loss_dice: 1.8312  decode.d8.loss_cls: 0.4735  decode.d8.loss_mask: 1.9936  decode.d8.loss_dice: 1.8350
2025/03/29 14:27:58 - mmengine - INFO - Saving checkpoint at 4000 iterations
2025/03/29 14:28:08 - mmengine - INFO - Iter(val) [  50/3968]    eta: 0:10:24  time: 0.1580  data_time: 0.0013  memory: 1849  
2025/03/29 14:28:16 - mmengine - INFO - Iter(val) [ 100/3968]    eta: 0:10:19  time: 0.1624  data_time: 0.0013  memory: 1849  
2025/03/29 14:28:24 - mmengine - INFO - Iter(val) [ 150/3968]    eta: 0:10:04  time: 0.1607  data_time: 0.0013  memory: 1849  
2025/03/29 14:28:31 - mmengine - INFO - Iter(val) [ 200/3968]    eta: 0:09:57  time: 0.1527  data_time: 0.0012  memory: 1849  
2025/03/29 14:28:39 - mmengine - INFO - Iter(val) [ 250/3968]    eta: 0:09:50  time: 0.1624  data_time: 0.0012  memory: 1849  
2025/03/29 14:28:47 - mmengine - INFO - Iter(val) [ 300/3968]    eta: 0:09:40  time: 0.1604  data_time: 0.0013  memory: 1849  
2025/03/29 14:28:55 - mmengine - INFO - Iter(val) [ 350/3968]    eta: 0:09:33  time: 0.1561  data_time: 0.0012  memory: 1849  
2025/03/29 14:29:03 - mmengine - INFO - Iter(val) [ 400/3968]    eta: 0:09:26  time: 0.1665  data_time: 0.0012  memory: 1849  
2025/03/29 14:29:11 - mmengine - INFO - Iter(val) [ 450/3968]    eta: 0:09:16  time: 0.1541  data_time: 0.0012  memory: 1849  
2025/03/29 14:29:19 - mmengine - INFO - Iter(val) [ 500/3968]    eta: 0:09:09  time: 0.1549  data_time: 0.0012  memory: 1849  
2025/03/29 14:29:27 - mmengine - INFO - Iter(val) [ 550/3968]    eta: 0:09:01  time: 0.1656  data_time: 0.0013  memory: 1849  
2025/03/29 14:29:35 - mmengine - INFO - Iter(val) [ 600/3968]    eta: 0:08:53  time: 0.1507  data_time: 0.0012  memory: 1849  
2025/03/29 14:29:43 - mmengine - INFO - Iter(val) [ 650/3968]    eta: 0:08:46  time: 0.1545  data_time: 0.0012  memory: 1849  
2025/03/29 14:29:51 - mmengine - INFO - Iter(val) [ 700/3968]    eta: 0:08:37  time: 0.1668  data_time: 0.0012  memory: 1849  
2025/03/29 14:29:59 - mmengine - INFO - Iter(val) [ 750/3968]    eta: 0:08:29  time: 0.1481  data_time: 0.0013  memory: 1849  
2025/03/29 14:30:07 - mmengine - INFO - Iter(val) [ 800/3968]    eta: 0:08:21  time: 0.1544  data_time: 0.0012  memory: 1849  
2025/03/29 14:30:14 - mmengine - INFO - Iter(val) [ 850/3968]    eta: 0:08:13  time: 0.1666  data_time: 0.0012  memory: 1849  
2025/03/29 14:30:22 - mmengine - INFO - Iter(val) [ 900/3968]    eta: 0:08:05  time: 0.1542  data_time: 0.0013  memory: 1849  
2025/03/29 14:30:30 - mmengine - INFO - Iter(val) [ 950/3968]    eta: 0:07:58  time: 0.1576  data_time: 0.0013  memory: 1849  
2025/03/29 14:30:38 - mmengine - INFO - Iter(val) [1000/3968]    eta: 0:07:49  time: 0.1603  data_time: 0.0013  memory: 1849  
2025/03/29 14:30:46 - mmengine - INFO - Iter(val) [1050/3968]    eta: 0:07:42  time: 0.1575  data_time: 0.0013  memory: 1849  
2025/03/29 14:30:54 - mmengine - INFO - Iter(val) [1100/3968]    eta: 0:07:34  time: 0.1652  data_time: 0.0013  memory: 1849  
2025/03/29 14:31:02 - mmengine - INFO - Iter(val) [1150/3968]    eta: 0:07:26  time: 0.1545  data_time: 0.0012  memory: 1849  
2025/03/29 14:31:10 - mmengine - INFO - Iter(val) [1200/3968]    eta: 0:07:18  time: 0.1561  data_time: 0.0013  memory: 1849  
2025/03/29 14:31:18 - mmengine - INFO - Iter(val) [1250/3968]    eta: 0:07:10  time: 0.1669  data_time: 0.0013  memory: 1849  
2025/03/29 14:31:26 - mmengine - INFO - Iter(val) [1300/3968]    eta: 0:07:02  time: 0.1503  data_time: 0.0012  memory: 1849  
2025/03/29 14:31:34 - mmengine - INFO - Iter(val) [1350/3968]    eta: 0:06:54  time: 0.1551  data_time: 0.0013  memory: 1849  
2025/03/29 14:31:42 - mmengine - INFO - Iter(val) [1400/3968]    eta: 0:06:46  time: 0.1666  data_time: 0.0013  memory: 1849  
2025/03/29 14:31:49 - mmengine - INFO - Iter(val) [1450/3968]    eta: 0:06:38  time: 0.1518  data_time: 0.0012  memory: 1849  
2025/03/29 14:31:58 - mmengine - INFO - Iter(val) [1500/3968]    eta: 0:06:30  time: 0.1507  data_time: 0.0013  memory: 1849  
2025/03/29 14:32:05 - mmengine - INFO - Iter(val) [1550/3968]    eta: 0:06:22  time: 0.1656  data_time: 0.0013  memory: 1849  
2025/03/29 14:32:13 - mmengine - INFO - Iter(val) [1600/3968]    eta: 0:06:14  time: 0.1509  data_time: 0.0012  memory: 1849  
2025/03/29 14:32:21 - mmengine - INFO - Iter(val) [1650/3968]    eta: 0:06:07  time: 0.1571  data_time: 0.0013  memory: 1849  
2025/03/29 14:32:29 - mmengine - INFO - Iter(val) [1700/3968]    eta: 0:05:59  time: 0.1595  data_time: 0.0013  memory: 1849  
2025/03/29 14:32:37 - mmengine - INFO - Iter(val) [1750/3968]    eta: 0:05:51  time: 0.1573  data_time: 0.0013  memory: 1849  
2025/03/29 14:32:45 - mmengine - INFO - Iter(val) [1800/3968]    eta: 0:05:43  time: 0.1660  data_time: 0.0013  memory: 1849  
2025/03/29 14:32:53 - mmengine - INFO - Iter(val) [1850/3968]    eta: 0:05:35  time: 0.1592  data_time: 0.0013  memory: 1849  
2025/03/29 14:33:01 - mmengine - INFO - Iter(val) [1900/3968]    eta: 0:05:27  time: 0.1639  data_time: 0.0013  memory: 1849  
2025/03/29 14:33:09 - mmengine - INFO - Iter(val) [1950/3968]    eta: 0:05:19  time: 0.1522  data_time: 0.0013  memory: 1849  
2025/03/29 14:33:17 - mmengine - INFO - Iter(val) [2000/3968]    eta: 0:05:12  time: 0.1560  data_time: 0.0013  memory: 1849  
2025/03/29 14:33:25 - mmengine - INFO - Iter(val) [2050/3968]    eta: 0:05:04  time: 0.1560  data_time: 0.0014  memory: 1849  
2025/03/29 14:33:33 - mmengine - INFO - Iter(val) [2100/3968]    eta: 0:04:56  time: 0.1536  data_time: 0.0012  memory: 1849  
2025/03/29 14:33:41 - mmengine - INFO - Iter(val) [2150/3968]    eta: 0:04:48  time: 0.1671  data_time: 0.0013  memory: 1849  
2025/03/29 14:33:49 - mmengine - INFO - Iter(val) [2200/3968]    eta: 0:04:40  time: 0.1531  data_time: 0.0012  memory: 1849  
2025/03/29 14:33:57 - mmengine - INFO - Iter(val) [2250/3968]    eta: 0:04:32  time: 0.1671  data_time: 0.0013  memory: 1849  
2025/03/29 14:34:05 - mmengine - INFO - Iter(val) [2300/3968]    eta: 0:04:24  time: 0.1552  data_time: 0.0013  memory: 1849  
2025/03/29 14:34:13 - mmengine - INFO - Iter(val) [2350/3968]    eta: 0:04:16  time: 0.1642  data_time: 0.0013  memory: 1849  
2025/03/29 14:34:21 - mmengine - INFO - Iter(val) [2400/3968]    eta: 0:04:08  time: 0.1572  data_time: 0.0013  memory: 1849  
2025/03/29 14:34:29 - mmengine - INFO - Iter(val) [2450/3968]    eta: 0:04:01  time: 0.1494  data_time: 0.0013  memory: 1849  
2025/03/29 14:34:37 - mmengine - INFO - Iter(val) [2500/3968]    eta: 0:03:53  time: 0.1664  data_time: 0.0013  memory: 1849  
2025/03/29 14:34:45 - mmengine - INFO - Iter(val) [2550/3968]    eta: 0:03:45  time: 0.1603  data_time: 0.0013  memory: 1849  
2025/03/29 14:34:53 - mmengine - INFO - Iter(val) [2600/3968]    eta: 0:03:37  time: 0.1673  data_time: 0.0013  memory: 1849  
2025/03/29 14:35:01 - mmengine - INFO - Iter(val) [2650/3968]    eta: 0:03:29  time: 0.1575  data_time: 0.0013  memory: 1849  
2025/03/29 14:35:09 - mmengine - INFO - Iter(val) [2700/3968]    eta: 0:03:21  time: 0.1674  data_time: 0.0013  memory: 1849  
2025/03/29 14:35:17 - mmengine - INFO - Iter(val) [2750/3968]    eta: 0:03:13  time: 0.1527  data_time: 0.0013  memory: 1849  
2025/03/29 14:35:25 - mmengine - INFO - Iter(val) [2800/3968]    eta: 0:03:05  time: 0.1680  data_time: 0.0013  memory: 1849  
2025/03/29 14:35:34 - mmengine - INFO - Iter(val) [2850/3968]    eta: 0:02:57  time: 0.1639  data_time: 0.0014  memory: 1849  
2025/03/29 14:35:42 - mmengine - INFO - Iter(val) [2900/3968]    eta: 0:02:49  time: 0.1535  data_time: 0.0015  memory: 1849  
2025/03/29 14:35:50 - mmengine - INFO - Iter(val) [2950/3968]    eta: 0:02:41  time: 0.1566  data_time: 0.0015  memory: 1849  
2025/03/29 14:35:58 - mmengine - INFO - Iter(val) [3000/3968]    eta: 0:02:34  time: 0.1665  data_time: 0.0012  memory: 1849  
2025/03/29 14:36:06 - mmengine - INFO - Iter(val) [3050/3968]    eta: 0:02:26  time: 0.1548  data_time: 0.0012  memory: 1849  
2025/03/29 14:36:14 - mmengine - INFO - Iter(val) [3100/3968]    eta: 0:02:18  time: 0.1657  data_time: 0.0013  memory: 1849  
2025/03/29 14:36:21 - mmengine - INFO - Iter(val) [3150/3968]    eta: 0:02:10  time: 0.1505  data_time: 0.0012  memory: 1849  
2025/03/29 14:36:30 - mmengine - INFO - Iter(val) [3200/3968]    eta: 0:02:02  time: 0.1502  data_time: 0.0012  memory: 1849  
2025/03/29 14:36:37 - mmengine - INFO - Iter(val) [3250/3968]    eta: 0:01:54  time: 0.1659  data_time: 0.0013  memory: 1849  
2025/03/29 14:36:45 - mmengine - INFO - Iter(val) [3300/3968]    eta: 0:01:46  time: 0.1519  data_time: 0.0012  memory: 1849  
2025/03/29 14:36:53 - mmengine - INFO - Iter(val) [3350/3968]    eta: 0:01:38  time: 0.1662  data_time: 0.0013  memory: 1849  
2025/03/29 14:37:01 - mmengine - INFO - Iter(val) [3400/3968]    eta: 0:01:30  time: 0.1527  data_time: 0.0012  memory: 1849  
2025/03/29 14:37:09 - mmengine - INFO - Iter(val) [3450/3968]    eta: 0:01:22  time: 0.1537  data_time: 0.0012  memory: 1849  
2025/03/29 14:37:17 - mmengine - INFO - Iter(val) [3500/3968]    eta: 0:01:14  time: 0.1600  data_time: 0.0014  memory: 1849  
2025/03/29 14:37:25 - mmengine - INFO - Iter(val) [3550/3968]    eta: 0:01:06  time: 0.1552  data_time: 0.0012  memory: 1849  
2025/03/29 14:37:33 - mmengine - INFO - Iter(val) [3600/3968]    eta: 0:00:58  time: 0.1656  data_time: 0.0013  memory: 1849  
2025/03/29 14:37:41 - mmengine - INFO - Iter(val) [3650/3968]    eta: 0:00:50  time: 0.1550  data_time: 0.0013  memory: 1849  
2025/03/29 14:37:49 - mmengine - INFO - Iter(val) [3700/3968]    eta: 0:00:42  time: 0.1659  data_time: 0.0013  memory: 1849  
2025/03/29 14:37:57 - mmengine - INFO - Iter(val) [3750/3968]    eta: 0:00:34  time: 0.1524  data_time: 0.0013  memory: 1849  
2025/03/29 14:38:05 - mmengine - INFO - Iter(val) [3800/3968]    eta: 0:00:26  time: 0.1577  data_time: 0.0013  memory: 1849  
2025/03/29 14:38:13 - mmengine - INFO - Iter(val) [3850/3968]    eta: 0:00:18  time: 0.1536  data_time: 0.0013  memory: 1849  
2025/03/29 14:38:21 - mmengine - INFO - Iter(val) [3900/3968]    eta: 0:00:10  time: 0.1581  data_time: 0.0013  memory: 1849  
2025/03/29 14:38:29 - mmengine - INFO - Iter(val) [3950/3968]    eta: 0:00:02  time: 0.1592  data_time: 0.0013  memory: 1849  
2025/03/29 14:38:32 - mmengine - INFO - per class results:
2025/03/29 14:38:32 - mmengine - INFO - 
+--------------+-------+-------+
|    Class     |  IoU  |  Acc  |
+--------------+-------+-------+
|  background  | 43.95 | 56.53 |
|   building   | 65.04 | 78.33 |
|     road     | 38.43 | 40.09 |
|    water     | 60.69 | 64.88 |
|    barren    |  9.53 |  29.6 |
|    forest    | 12.09 |  12.6 |
| agricultural | 60.23 | 87.78 |
+--------------+-------+-------+
2025/03/29 14:38:32 - mmengine - INFO - Iter(val) [3968/3968]    aAcc: 64.2200  mIoU: 41.4200  mAcc: 52.8300  data_time: 0.0013  time: 0.1592
2025/03/29 14:38:32 - mmengine - INFO - The previous best checkpoint /home/face/kaichengyang/xiaoxinghu/Earth_Adapter/work_dirs/u2r/DG_spatial_64_cutoff_0.3_fft_suf3/ee2e4_seed0/best_mIoU_iter_2000.pth is removed
2025/03/29 14:38:33 - mmengine - INFO - The best checkpoint with 41.4200 mIoU at 4000 iter is saved to best_mIoU_iter_4000.pth.
2025/03/29 14:39:57 - mmengine - INFO - Iter(train) [ 4050/20000]  base_lr: 8.1579e-05 lr: 8.1579e-05  eta: 7:27:21  time: 1.6478  data_time: 0.0156  memory: 9681  loss: 43.4500  decode.loss_cls: 0.4349  decode.loss_mask: 1.8849  decode.loss_dice: 1.9794  decode.d0.loss_cls: 0.5023  decode.d0.loss_mask: 1.9309  decode.d0.loss_dice: 2.0427  decode.d1.loss_cls: 0.3980  decode.d1.loss_mask: 1.8937  decode.d1.loss_dice: 2.0206  decode.d2.loss_cls: 0.3806  decode.d2.loss_mask: 1.8725  decode.d2.loss_dice: 2.0058  decode.d3.loss_cls: 0.4385  decode.d3.loss_mask: 1.9048  decode.d3.loss_dice: 2.0255  decode.d4.loss_cls: 0.3575  decode.d4.loss_mask: 1.9187  decode.d4.loss_dice: 2.0419  decode.d5.loss_cls: 0.4503  decode.d5.loss_mask: 1.8821  decode.d5.loss_dice: 1.9814  decode.d6.loss_cls: 0.4446  decode.d6.loss_mask: 1.9092  decode.d6.loss_dice: 2.0448  decode.d7.loss_cls: 0.4698  decode.d7.loss_mask: 1.8709  decode.d7.loss_dice: 2.0312  decode.d8.loss_cls: 0.4640  decode.d8.loss_mask: 1.8751  decode.d8.loss_dice: 1.9934
2025/03/29 14:41:20 - mmengine - INFO - Iter(train) [ 4100/20000]  base_lr: 8.1349e-05 lr: 8.1349e-05  eta: 7:25:51  time: 1.6677  data_time: 0.0156  memory: 9681  loss: 45.8910  decode.loss_cls: 0.6743  decode.loss_mask: 1.9865  decode.loss_dice: 1.9292  decode.d0.loss_cls: 0.6305  decode.d0.loss_mask: 2.0090  decode.d0.loss_dice: 2.0262  decode.d1.loss_cls: 0.6512  decode.d1.loss_mask: 2.0435  decode.d1.loss_dice: 1.9516  decode.d2.loss_cls: 0.5925  decode.d2.loss_mask: 2.0059  decode.d2.loss_dice: 1.9453  decode.d3.loss_cls: 0.6016  decode.d3.loss_mask: 2.0072  decode.d3.loss_dice: 1.8992  decode.d4.loss_cls: 0.5494  decode.d4.loss_mask: 2.0127  decode.d4.loss_dice: 1.9311  decode.d5.loss_cls: 0.6537  decode.d5.loss_mask: 2.0158  decode.d5.loss_dice: 1.9340  decode.d6.loss_cls: 0.7450  decode.d6.loss_mask: 2.0019  decode.d6.loss_dice: 1.9294  decode.d7.loss_cls: 0.6886  decode.d7.loss_mask: 1.9569  decode.d7.loss_dice: 1.9396  decode.d8.loss_cls: 0.6775  decode.d8.loss_mask: 1.9805  decode.d8.loss_dice: 1.9213
2025/03/29 14:42:44 - mmengine - INFO - Iter(train) [ 4150/20000]  base_lr: 8.1118e-05 lr: 8.1118e-05  eta: 7:24:25  time: 1.6706  data_time: 0.0163  memory: 9684  loss: 42.4702  decode.loss_cls: 0.4765  decode.loss_mask: 1.9533  decode.loss_dice: 1.8716  decode.d0.loss_cls: 0.5343  decode.d0.loss_mask: 2.0045  decode.d0.loss_dice: 1.9459  decode.d1.loss_cls: 0.4372  decode.d1.loss_mask: 1.9304  decode.d1.loss_dice: 1.8517  decode.d2.loss_cls: 0.4014  decode.d2.loss_mask: 1.9439  decode.d2.loss_dice: 1.9000  decode.d3.loss_cls: 0.3837  decode.d3.loss_mask: 1.9450  decode.d3.loss_dice: 1.8596  decode.d4.loss_cls: 0.3876  decode.d4.loss_mask: 1.9467  decode.d4.loss_dice: 1.8534  decode.d5.loss_cls: 0.4255  decode.d5.loss_mask: 1.9133  decode.d5.loss_dice: 1.8759  decode.d6.loss_cls: 0.4493  decode.d6.loss_mask: 1.9116  decode.d6.loss_dice: 1.8409  decode.d7.loss_cls: 0.4508  decode.d7.loss_mask: 1.9378  decode.d7.loss_dice: 1.8463  decode.d8.loss_cls: 0.4444  decode.d8.loss_mask: 1.8996  decode.d8.loss_dice: 1.8481
2025/03/29 14:44:07 - mmengine - INFO - Iter(train) [ 4200/20000]  base_lr: 8.0888e-05 lr: 8.0888e-05  eta: 7:22:58  time: 1.6663  data_time: 0.0156  memory: 9688  loss: 41.6019  decode.loss_cls: 0.3861  decode.loss_mask: 1.8596  decode.loss_dice: 1.8567  decode.d0.loss_cls: 0.4521  decode.d0.loss_mask: 1.9103  decode.d0.loss_dice: 1.9769  decode.d1.loss_cls: 0.3677  decode.d1.loss_mask: 1.8973  decode.d1.loss_dice: 1.8364  decode.d2.loss_cls: 0.4064  decode.d2.loss_mask: 1.8924  decode.d2.loss_dice: 1.8424  decode.d3.loss_cls: 0.4289  decode.d3.loss_mask: 1.8819  decode.d3.loss_dice: 1.8422  decode.d4.loss_cls: 0.4360  decode.d4.loss_mask: 1.8670  decode.d4.loss_dice: 1.8539  decode.d5.loss_cls: 0.4140  decode.d5.loss_mask: 1.8803  decode.d5.loss_dice: 1.8525  decode.d6.loss_cls: 0.3964  decode.d6.loss_mask: 1.9026  decode.d6.loss_dice: 1.8261  decode.d7.loss_cls: 0.4118  decode.d7.loss_mask: 1.9250  decode.d7.loss_dice: 1.8652  decode.d8.loss_cls: 0.4146  decode.d8.loss_mask: 1.8902  decode.d8.loss_dice: 1.8291
2025/03/29 14:45:31 - mmengine - INFO - Iter(train) [ 4250/20000]  base_lr: 8.0658e-05 lr: 8.0658e-05  eta: 7:21:31  time: 1.6664  data_time: 0.0158  memory: 9686  loss: 47.2763  decode.loss_cls: 0.4683  decode.loss_mask: 2.1489  decode.loss_dice: 2.0284  decode.d0.loss_cls: 0.6050  decode.d0.loss_mask: 2.1949  decode.d0.loss_dice: 2.0581  decode.d1.loss_cls: 0.4755  decode.d1.loss_mask: 2.1390  decode.d1.loss_dice: 2.0573  decode.d2.loss_cls: 0.5256  decode.d2.loss_mask: 2.1627  decode.d2.loss_dice: 2.0122  decode.d3.loss_cls: 0.5345  decode.d3.loss_mask: 2.1654  decode.d3.loss_dice: 2.0372  decode.d4.loss_cls: 0.5060  decode.d4.loss_mask: 2.1226  decode.d4.loss_dice: 2.0724  decode.d5.loss_cls: 0.5464  decode.d5.loss_mask: 2.1558  decode.d5.loss_dice: 2.0780  decode.d6.loss_cls: 0.4877  decode.d6.loss_mask: 2.1311  decode.d6.loss_dice: 2.0621  decode.d7.loss_cls: 0.5433  decode.d7.loss_mask: 2.1434  decode.d7.loss_dice: 2.0494  decode.d8.loss_cls: 0.4933  decode.d8.loss_mask: 2.2133  decode.d8.loss_dice: 2.0585
2025/03/29 14:46:54 - mmengine - INFO - Iter(train) [ 4300/20000]  base_lr: 8.0427e-05 lr: 8.0427e-05  eta: 7:20:06  time: 1.6825  data_time: 0.0160  memory: 9688  loss: 43.8091  decode.loss_cls: 0.4285  decode.loss_mask: 2.1362  decode.loss_dice: 1.8682  decode.d0.loss_cls: 0.5501  decode.d0.loss_mask: 2.0886  decode.d0.loss_dice: 1.8953  decode.d1.loss_cls: 0.3857  decode.d1.loss_mask: 2.1126  decode.d1.loss_dice: 1.8591  decode.d2.loss_cls: 0.3630  decode.d2.loss_mask: 2.1575  decode.d2.loss_dice: 1.8713  decode.d3.loss_cls: 0.3844  decode.d3.loss_mask: 2.1355  decode.d3.loss_dice: 1.8670  decode.d4.loss_cls: 0.3492  decode.d4.loss_mask: 2.1325  decode.d4.loss_dice: 1.8282  decode.d5.loss_cls: 0.4179  decode.d5.loss_mask: 2.0985  decode.d5.loss_dice: 1.8299  decode.d6.loss_cls: 0.4375  decode.d6.loss_mask: 2.0632  decode.d6.loss_dice: 1.8203  decode.d7.loss_cls: 0.4501  decode.d7.loss_mask: 2.1026  decode.d7.loss_dice: 1.8232  decode.d8.loss_cls: 0.4508  decode.d8.loss_mask: 2.0728  decode.d8.loss_dice: 1.8294
2025/03/29 14:48:18 - mmengine - INFO - Iter(train) [ 4350/20000]  base_lr: 8.0197e-05 lr: 8.0197e-05  eta: 7:18:41  time: 1.6686  data_time: 0.0160  memory: 9684  loss: 43.0890  decode.loss_cls: 0.4285  decode.loss_mask: 1.9401  decode.loss_dice: 1.9254  decode.d0.loss_cls: 0.5280  decode.d0.loss_mask: 1.9574  decode.d0.loss_dice: 1.9754  decode.d1.loss_cls: 0.4362  decode.d1.loss_mask: 1.9669  decode.d1.loss_dice: 1.9117  decode.d2.loss_cls: 0.4606  decode.d2.loss_mask: 1.9313  decode.d2.loss_dice: 1.8822  decode.d3.loss_cls: 0.3923  decode.d3.loss_mask: 1.9756  decode.d3.loss_dice: 1.8777  decode.d4.loss_cls: 0.3929  decode.d4.loss_mask: 1.9578  decode.d4.loss_dice: 1.9090  decode.d5.loss_cls: 0.4620  decode.d5.loss_mask: 1.9582  decode.d5.loss_dice: 1.9056  decode.d6.loss_cls: 0.4870  decode.d6.loss_mask: 1.9595  decode.d6.loss_dice: 1.9028  decode.d7.loss_cls: 0.4254  decode.d7.loss_mask: 1.9640  decode.d7.loss_dice: 1.8696  decode.d8.loss_cls: 0.4718  decode.d8.loss_mask: 1.9570  decode.d8.loss_dice: 1.8771
2025/03/29 14:49:42 - mmengine - INFO - Iter(train) [ 4400/20000]  base_lr: 7.9966e-05 lr: 7.9966e-05  eta: 7:17:15  time: 1.6693  data_time: 0.0156  memory: 9738  loss: 41.8603  decode.loss_cls: 0.4813  decode.loss_mask: 1.9182  decode.loss_dice: 1.7856  decode.d0.loss_cls: 0.6029  decode.d0.loss_mask: 1.9336  decode.d0.loss_dice: 1.8358  decode.d1.loss_cls: 0.4561  decode.d1.loss_mask: 1.9181  decode.d1.loss_dice: 1.8302  decode.d2.loss_cls: 0.4372  decode.d2.loss_mask: 1.9062  decode.d2.loss_dice: 1.8117  decode.d3.loss_cls: 0.4926  decode.d3.loss_mask: 1.8692  decode.d3.loss_dice: 1.7707  decode.d4.loss_cls: 0.4516  decode.d4.loss_mask: 1.9187  decode.d4.loss_dice: 1.7885  decode.d5.loss_cls: 0.4848  decode.d5.loss_mask: 1.9282  decode.d5.loss_dice: 1.7659  decode.d6.loss_cls: 0.4182  decode.d6.loss_mask: 1.9556  decode.d6.loss_dice: 1.7755  decode.d7.loss_cls: 0.4563  decode.d7.loss_mask: 1.8998  decode.d7.loss_dice: 1.7930  decode.d8.loss_cls: 0.4971  decode.d8.loss_mask: 1.9023  decode.d8.loss_dice: 1.7750
2025/03/29 14:51:05 - mmengine - INFO - Iter(train) [ 4450/20000]  base_lr: 7.9735e-05 lr: 7.9735e-05  eta: 7:15:49  time: 1.6719  data_time: 0.0156  memory: 9692  loss: 39.4182  decode.loss_cls: 0.3841  decode.loss_mask: 1.8618  decode.loss_dice: 1.6985  decode.d0.loss_cls: 0.4952  decode.d0.loss_mask: 1.8915  decode.d0.loss_dice: 1.7347  decode.d1.loss_cls: 0.3843  decode.d1.loss_mask: 1.8447  decode.d1.loss_dice: 1.6890  decode.d2.loss_cls: 0.3837  decode.d2.loss_mask: 1.8465  decode.d2.loss_dice: 1.6855  decode.d3.loss_cls: 0.3474  decode.d3.loss_mask: 1.8889  decode.d3.loss_dice: 1.7035  decode.d4.loss_cls: 0.3886  decode.d4.loss_mask: 1.8599  decode.d4.loss_dice: 1.6933  decode.d5.loss_cls: 0.3957  decode.d5.loss_mask: 1.8336  decode.d5.loss_dice: 1.6640  decode.d6.loss_cls: 0.3873  decode.d6.loss_mask: 1.8493  decode.d6.loss_dice: 1.6585  decode.d7.loss_cls: 0.4073  decode.d7.loss_mask: 1.8568  decode.d7.loss_dice: 1.6505  decode.d8.loss_cls: 0.4036  decode.d8.loss_mask: 1.8713  decode.d8.loss_dice: 1.6590
2025/03/29 14:52:29 - mmengine - INFO - Iter(train) [ 4500/20000]  base_lr: 7.9504e-05 lr: 7.9504e-05  eta: 7:14:23  time: 1.6707  data_time: 0.0154  memory: 9694  loss: 40.9303  decode.loss_cls: 0.3205  decode.loss_mask: 1.9150  decode.loss_dice: 1.8658  decode.d0.loss_cls: 0.4209  decode.d0.loss_mask: 1.9296  decode.d0.loss_dice: 1.8845  decode.d1.loss_cls: 0.2788  decode.d1.loss_mask: 1.9698  decode.d1.loss_dice: 1.8605  decode.d2.loss_cls: 0.3170  decode.d2.loss_mask: 1.9410  decode.d2.loss_dice: 1.8312  decode.d3.loss_cls: 0.3445  decode.d3.loss_mask: 1.8967  decode.d3.loss_dice: 1.8138  decode.d4.loss_cls: 0.3373  decode.d4.loss_mask: 1.8749  decode.d4.loss_dice: 1.8251  decode.d5.loss_cls: 0.3588  decode.d5.loss_mask: 1.8658  decode.d5.loss_dice: 1.8273  decode.d6.loss_cls: 0.3608  decode.d6.loss_mask: 1.8886  decode.d6.loss_dice: 1.8478  decode.d7.loss_cls: 0.3652  decode.d7.loss_mask: 1.8687  decode.d7.loss_dice: 1.8393  decode.d8.loss_cls: 0.3307  decode.d8.loss_mask: 1.9129  decode.d8.loss_dice: 1.8375
2025/03/29 14:53:52 - mmengine - INFO - Iter(train) [ 4550/20000]  base_lr: 7.9274e-05 lr: 7.9274e-05  eta: 7:12:57  time: 1.6704  data_time: 0.0155  memory: 9689  loss: 38.7619  decode.loss_cls: 0.3747  decode.loss_mask: 1.6980  decode.loss_dice: 1.7832  decode.d0.loss_cls: 0.4778  decode.d0.loss_mask: 1.7055  decode.d0.loss_dice: 1.8598  decode.d1.loss_cls: 0.3631  decode.d1.loss_mask: 1.7340  decode.d1.loss_dice: 1.7939  decode.d2.loss_cls: 0.4225  decode.d2.loss_mask: 1.6873  decode.d2.loss_dice: 1.7745  decode.d3.loss_cls: 0.4005  decode.d3.loss_mask: 1.6896  decode.d3.loss_dice: 1.7366  decode.d4.loss_cls: 0.4147  decode.d4.loss_mask: 1.6703  decode.d4.loss_dice: 1.7515  decode.d5.loss_cls: 0.4503  decode.d5.loss_mask: 1.6591  decode.d5.loss_dice: 1.7392  decode.d6.loss_cls: 0.4334  decode.d6.loss_mask: 1.6910  decode.d6.loss_dice: 1.7444  decode.d7.loss_cls: 0.4605  decode.d7.loss_mask: 1.6752  decode.d7.loss_dice: 1.7134  decode.d8.loss_cls: 0.4256  decode.d8.loss_mask: 1.6815  decode.d8.loss_dice: 1.7510
2025/03/29 14:55:16 - mmengine - INFO - Iter(train) [ 4600/20000]  base_lr: 7.9043e-05 lr: 7.9043e-05  eta: 7:11:32  time: 1.6841  data_time: 0.0158  memory: 9693  loss: 44.1393  decode.loss_cls: 0.3878  decode.loss_mask: 2.0043  decode.loss_dice: 2.0071  decode.d0.loss_cls: 0.4603  decode.d0.loss_mask: 2.0046  decode.d0.loss_dice: 2.0966  decode.d1.loss_cls: 0.4822  decode.d1.loss_mask: 1.9845  decode.d1.loss_dice: 1.9714  decode.d2.loss_cls: 0.3432  decode.d2.loss_mask: 2.0023  decode.d2.loss_dice: 2.0102  decode.d3.loss_cls: 0.3498  decode.d3.loss_mask: 2.0043  decode.d3.loss_dice: 2.0482  decode.d4.loss_cls: 0.3610  decode.d4.loss_mask: 1.9820  decode.d4.loss_dice: 2.0175  decode.d5.loss_cls: 0.4675  decode.d5.loss_mask: 1.9658  decode.d5.loss_dice: 2.0321  decode.d6.loss_cls: 0.3875  decode.d6.loss_mask: 1.9791  decode.d6.loss_dice: 2.0437  decode.d7.loss_cls: 0.4353  decode.d7.loss_mask: 1.9453  decode.d7.loss_dice: 1.9870  decode.d8.loss_cls: 0.4093  decode.d8.loss_mask: 1.9873  decode.d8.loss_dice: 1.9822
2025/03/29 14:56:40 - mmengine - INFO - Iter(train) [ 4650/20000]  base_lr: 7.8812e-05 lr: 7.8812e-05  eta: 7:10:07  time: 1.6709  data_time: 0.0155  memory: 9665  loss: 41.6046  decode.loss_cls: 0.3459  decode.loss_mask: 1.9375  decode.loss_dice: 1.8126  decode.d0.loss_cls: 0.4648  decode.d0.loss_mask: 1.9739  decode.d0.loss_dice: 1.9092  decode.d1.loss_cls: 0.4090  decode.d1.loss_mask: 1.9402  decode.d1.loss_dice: 1.8176  decode.d2.loss_cls: 0.4311  decode.d2.loss_mask: 1.9205  decode.d2.loss_dice: 1.7862  decode.d3.loss_cls: 0.3949  decode.d3.loss_mask: 1.9477  decode.d3.loss_dice: 1.7962  decode.d4.loss_cls: 0.4263  decode.d4.loss_mask: 1.9342  decode.d4.loss_dice: 1.7751  decode.d5.loss_cls: 0.4290  decode.d5.loss_mask: 1.9107  decode.d5.loss_dice: 1.7837  decode.d6.loss_cls: 0.4687  decode.d6.loss_mask: 1.8952  decode.d6.loss_dice: 1.7890  decode.d7.loss_cls: 0.4882  decode.d7.loss_mask: 1.9056  decode.d7.loss_dice: 1.7727  decode.d8.loss_cls: 0.3956  decode.d8.loss_mask: 1.9450  decode.d8.loss_dice: 1.7983
2025/03/29 14:58:04 - mmengine - INFO - Iter(train) [ 4700/20000]  base_lr: 7.8581e-05 lr: 7.8581e-05  eta: 7:08:42  time: 1.6750  data_time: 0.0167  memory: 9697  loss: 40.4220  decode.loss_cls: 0.2684  decode.loss_mask: 1.9312  decode.loss_dice: 1.7993  decode.d0.loss_cls: 0.3600  decode.d0.loss_mask: 1.9674  decode.d0.loss_dice: 1.8537  decode.d1.loss_cls: 0.2737  decode.d1.loss_mask: 1.9657  decode.d1.loss_dice: 1.7932  decode.d2.loss_cls: 0.2296  decode.d2.loss_mask: 1.9728  decode.d2.loss_dice: 1.8171  decode.d3.loss_cls: 0.2994  decode.d3.loss_mask: 1.9626  decode.d3.loss_dice: 1.7795  decode.d4.loss_cls: 0.3033  decode.d4.loss_mask: 1.9216  decode.d4.loss_dice: 1.8165  decode.d5.loss_cls: 0.3388  decode.d5.loss_mask: 1.8928  decode.d5.loss_dice: 1.8025  decode.d6.loss_cls: 0.3136  decode.d6.loss_mask: 1.9118  decode.d6.loss_dice: 1.7959  decode.d7.loss_cls: 0.2944  decode.d7.loss_mask: 1.9191  decode.d7.loss_dice: 1.8055  decode.d8.loss_cls: 0.2939  decode.d8.loss_mask: 1.9244  decode.d8.loss_dice: 1.8146
2025/03/29 14:59:27 - mmengine - INFO - Iter(train) [ 4750/20000]  base_lr: 7.8349e-05 lr: 7.8349e-05  eta: 7:07:16  time: 1.6756  data_time: 0.0153  memory: 9684  loss: 39.2555  decode.loss_cls: 0.4235  decode.loss_mask: 1.7660  decode.loss_dice: 1.7615  decode.d0.loss_cls: 0.5305  decode.d0.loss_mask: 1.7346  decode.d0.loss_dice: 1.8766  decode.d1.loss_cls: 0.3956  decode.d1.loss_mask: 1.7583  decode.d1.loss_dice: 1.7763  decode.d2.loss_cls: 0.3883  decode.d2.loss_mask: 1.7222  decode.d2.loss_dice: 1.7371  decode.d3.loss_cls: 0.3620  decode.d3.loss_mask: 1.7425  decode.d3.loss_dice: 1.7209  decode.d4.loss_cls: 0.4158  decode.d4.loss_mask: 1.7422  decode.d4.loss_dice: 1.7168  decode.d5.loss_cls: 0.4157  decode.d5.loss_mask: 1.7241  decode.d5.loss_dice: 1.7564  decode.d6.loss_cls: 0.4283  decode.d6.loss_mask: 1.7397  decode.d6.loss_dice: 1.7509  decode.d7.loss_cls: 0.4399  decode.d7.loss_mask: 1.7424  decode.d7.loss_dice: 1.7641  decode.d8.loss_cls: 0.4479  decode.d8.loss_mask: 1.7420  decode.d8.loss_dice: 1.7335
2025/03/29 15:00:51 - mmengine - INFO - Iter(train) [ 4800/20000]  base_lr: 7.8118e-05 lr: 7.8118e-05  eta: 7:05:50  time: 1.6674  data_time: 0.0155  memory: 9684  loss: 44.7477  decode.loss_cls: 0.5093  decode.loss_mask: 2.0672  decode.loss_dice: 1.9597  decode.d0.loss_cls: 0.5018  decode.d0.loss_mask: 2.0395  decode.d0.loss_dice: 2.0363  decode.d1.loss_cls: 0.5158  decode.d1.loss_mask: 1.9717  decode.d1.loss_dice: 1.9156  decode.d2.loss_cls: 0.4810  decode.d2.loss_mask: 2.0242  decode.d2.loss_dice: 1.9622  decode.d3.loss_cls: 0.4682  decode.d3.loss_mask: 2.0229  decode.d3.loss_dice: 1.9128  decode.d4.loss_cls: 0.4379  decode.d4.loss_mask: 2.0199  decode.d4.loss_dice: 1.9290  decode.d5.loss_cls: 0.4872  decode.d5.loss_mask: 2.0223  decode.d5.loss_dice: 1.9379  decode.d6.loss_cls: 0.5356  decode.d6.loss_mask: 2.0496  decode.d6.loss_dice: 1.9312  decode.d7.loss_cls: 0.5402  decode.d7.loss_mask: 2.0013  decode.d7.loss_dice: 1.9188  decode.d8.loss_cls: 0.5469  decode.d8.loss_mask: 2.0414  decode.d8.loss_dice: 1.9602
2025/03/29 15:02:14 - mmengine - INFO - Iter(train) [ 4850/20000]  base_lr: 7.7887e-05 lr: 7.7887e-05  eta: 7:04:25  time: 1.6737  data_time: 0.0160  memory: 9698  loss: 38.8823  decode.loss_cls: 0.4708  decode.loss_mask: 1.7043  decode.loss_dice: 1.7603  decode.d0.loss_cls: 0.4576  decode.d0.loss_mask: 1.7660  decode.d0.loss_dice: 1.7950  decode.d1.loss_cls: 0.3656  decode.d1.loss_mask: 1.7694  decode.d1.loss_dice: 1.7301  decode.d2.loss_cls: 0.4030  decode.d2.loss_mask: 1.7548  decode.d2.loss_dice: 1.6795  decode.d3.loss_cls: 0.3893  decode.d3.loss_mask: 1.7611  decode.d3.loss_dice: 1.7095  decode.d4.loss_cls: 0.3859  decode.d4.loss_mask: 1.7588  decode.d4.loss_dice: 1.7150  decode.d5.loss_cls: 0.3446  decode.d5.loss_mask: 1.7373  decode.d5.loss_dice: 1.7557  decode.d6.loss_cls: 0.3754  decode.d6.loss_mask: 1.7309  decode.d6.loss_dice: 1.7587  decode.d7.loss_cls: 0.4477  decode.d7.loss_mask: 1.7445  decode.d7.loss_dice: 1.7306  decode.d8.loss_cls: 0.3708  decode.d8.loss_mask: 1.7782  decode.d8.loss_dice: 1.7320
2025/03/29 15:03:38 - mmengine - INFO - Iter(train) [ 4900/20000]  base_lr: 7.7655e-05 lr: 7.7655e-05  eta: 7:02:59  time: 1.6681  data_time: 0.0155  memory: 9684  loss: 41.5709  decode.loss_cls: 0.3135  decode.loss_mask: 1.9259  decode.loss_dice: 1.8750  decode.d0.loss_cls: 0.3876  decode.d0.loss_mask: 1.9378  decode.d0.loss_dice: 1.9443  decode.d1.loss_cls: 0.3582  decode.d1.loss_mask: 1.9205  decode.d1.loss_dice: 1.8588  decode.d2.loss_cls: 0.3082  decode.d2.loss_mask: 1.9638  decode.d2.loss_dice: 1.8659  decode.d3.loss_cls: 0.3733  decode.d3.loss_mask: 1.9333  decode.d3.loss_dice: 1.8560  decode.d4.loss_cls: 0.3522  decode.d4.loss_mask: 1.9222  decode.d4.loss_dice: 1.8693  decode.d5.loss_cls: 0.3663  decode.d5.loss_mask: 1.8940  decode.d5.loss_dice: 1.8720  decode.d6.loss_cls: 0.3736  decode.d6.loss_mask: 1.9103  decode.d6.loss_dice: 1.9112  decode.d7.loss_cls: 0.3252  decode.d7.loss_mask: 1.9227  decode.d7.loss_dice: 1.9248  decode.d8.loss_cls: 0.2968  decode.d8.loss_mask: 1.9235  decode.d8.loss_dice: 1.8846
2025/03/29 15:05:02 - mmengine - INFO - Iter(train) [ 4950/20000]  base_lr: 7.7424e-05 lr: 7.7424e-05  eta: 7:01:34  time: 1.6689  data_time: 0.0154  memory: 9692  loss: 44.3163  decode.loss_cls: 0.6668  decode.loss_mask: 1.9365  decode.loss_dice: 1.8143  decode.d0.loss_cls: 0.6895  decode.d0.loss_mask: 1.9274  decode.d0.loss_dice: 1.9201  decode.d1.loss_cls: 0.6787  decode.d1.loss_mask: 1.9247  decode.d1.loss_dice: 1.7774  decode.d2.loss_cls: 0.6863  decode.d2.loss_mask: 1.9568  decode.d2.loss_dice: 1.7829  decode.d3.loss_cls: 0.7249  decode.d3.loss_mask: 1.9720  decode.d3.loss_dice: 1.7941  decode.d4.loss_cls: 0.6272  decode.d4.loss_mask: 2.0117  decode.d4.loss_dice: 1.8083  decode.d5.loss_cls: 0.6734  decode.d5.loss_mask: 1.9878  decode.d5.loss_dice: 1.8016  decode.d6.loss_cls: 0.6295  decode.d6.loss_mask: 1.9937  decode.d6.loss_dice: 1.8189  decode.d7.loss_cls: 0.6325  decode.d7.loss_mask: 1.9077  decode.d7.loss_dice: 1.7840  decode.d8.loss_cls: 0.6242  decode.d8.loss_mask: 1.9528  decode.d8.loss_dice: 1.8108
2025/03/29 15:06:25 - mmengine - INFO - Exp name: u2r_20250329_122454
2025/03/29 15:06:25 - mmengine - INFO - Iter(train) [ 5000/20000]  base_lr: 7.7192e-05 lr: 7.7192e-05  eta: 7:00:08  time: 1.6691  data_time: 0.0155  memory: 9692  loss: 41.8618  decode.loss_cls: 0.3671  decode.loss_mask: 1.9938  decode.loss_dice: 1.7783  decode.d0.loss_cls: 0.4471  decode.d0.loss_mask: 2.0186  decode.d0.loss_dice: 1.8600  decode.d1.loss_cls: 0.3272  decode.d1.loss_mask: 1.9720  decode.d1.loss_dice: 1.8194  decode.d2.loss_cls: 0.3412  decode.d2.loss_mask: 1.9751  decode.d2.loss_dice: 1.8138  decode.d3.loss_cls: 0.3566  decode.d3.loss_mask: 1.9802  decode.d3.loss_dice: 1.8040  decode.d4.loss_cls: 0.3670  decode.d4.loss_mask: 2.0168  decode.d4.loss_dice: 1.8422  decode.d5.loss_cls: 0.3937  decode.d5.loss_mask: 2.0505  decode.d5.loss_dice: 1.8381  decode.d6.loss_cls: 0.3894  decode.d6.loss_mask: 1.9797  decode.d6.loss_dice: 1.8376  decode.d7.loss_cls: 0.3973  decode.d7.loss_mask: 1.9447  decode.d7.loss_dice: 1.8007  decode.d8.loss_cls: 0.4132  decode.d8.loss_mask: 1.9543  decode.d8.loss_dice: 1.7824
2025/03/29 15:07:49 - mmengine - INFO - Iter(train) [ 5050/20000]  base_lr: 7.6961e-05 lr: 7.6961e-05  eta: 6:58:43  time: 1.6725  data_time: 0.0158  memory: 9688  loss: 40.6088  decode.loss_cls: 0.2423  decode.loss_mask: 1.9418  decode.loss_dice: 1.8529  decode.d0.loss_cls: 0.3646  decode.d0.loss_mask: 1.9763  decode.d0.loss_dice: 1.8629  decode.d1.loss_cls: 0.2245  decode.d1.loss_mask: 1.9347  decode.d1.loss_dice: 1.8312  decode.d2.loss_cls: 0.2335  decode.d2.loss_mask: 1.9412  decode.d2.loss_dice: 1.8457  decode.d3.loss_cls: 0.2463  decode.d3.loss_mask: 1.9518  decode.d3.loss_dice: 1.8441  decode.d4.loss_cls: 0.2401  decode.d4.loss_mask: 1.9589  decode.d4.loss_dice: 1.8572  decode.d5.loss_cls: 0.2389  decode.d5.loss_mask: 1.9653  decode.d5.loss_dice: 1.8743  decode.d6.loss_cls: 0.2803  decode.d6.loss_mask: 1.9455  decode.d6.loss_dice: 1.8454  decode.d7.loss_cls: 0.2317  decode.d7.loss_mask: 1.9494  decode.d7.loss_dice: 1.8727  decode.d8.loss_cls: 0.2592  decode.d8.loss_mask: 1.9406  decode.d8.loss_dice: 1.8554
2025/03/29 15:09:12 - mmengine - INFO - Iter(train) [ 5100/20000]  base_lr: 7.6729e-05 lr: 7.6729e-05  eta: 6:57:18  time: 1.6690  data_time: 0.0160  memory: 9672  loss: 43.0978  decode.loss_cls: 0.3671  decode.loss_mask: 2.0571  decode.loss_dice: 1.9006  decode.d0.loss_cls: 0.4689  decode.d0.loss_mask: 2.0449  decode.d0.loss_dice: 1.9201  decode.d1.loss_cls: 0.3749  decode.d1.loss_mask: 2.0766  decode.d1.loss_dice: 1.9052  decode.d2.loss_cls: 0.3675  decode.d2.loss_mask: 2.0620  decode.d2.loss_dice: 1.8565  decode.d3.loss_cls: 0.3642  decode.d3.loss_mask: 2.0700  decode.d3.loss_dice: 1.8536  decode.d4.loss_cls: 0.3559  decode.d4.loss_mask: 2.0522  decode.d4.loss_dice: 1.8510  decode.d5.loss_cls: 0.3454  decode.d5.loss_mask: 2.0839  decode.d5.loss_dice: 1.8716  decode.d6.loss_cls: 0.4258  decode.d6.loss_mask: 2.0275  decode.d6.loss_dice: 1.8661  decode.d7.loss_cls: 0.3553  decode.d7.loss_mask: 2.0439  decode.d7.loss_dice: 1.8654  decode.d8.loss_cls: 0.3338  decode.d8.loss_mask: 2.0579  decode.d8.loss_dice: 1.8726
2025/03/29 15:10:36 - mmengine - INFO - Iter(train) [ 5150/20000]  base_lr: 7.6497e-05 lr: 7.6497e-05  eta: 6:55:52  time: 1.6661  data_time: 0.0155  memory: 9688  loss: 41.4540  decode.loss_cls: 0.4026  decode.loss_mask: 1.8621  decode.loss_dice: 1.8472  decode.d0.loss_cls: 0.4620  decode.d0.loss_mask: 1.9077  decode.d0.loss_dice: 1.9971  decode.d1.loss_cls: 0.3703  decode.d1.loss_mask: 1.8695  decode.d1.loss_dice: 1.8819  decode.d2.loss_cls: 0.3745  decode.d2.loss_mask: 1.8434  decode.d2.loss_dice: 1.8629  decode.d3.loss_cls: 0.4313  decode.d3.loss_mask: 1.8255  decode.d3.loss_dice: 1.8506  decode.d4.loss_cls: 0.3416  decode.d4.loss_mask: 1.8884  decode.d4.loss_dice: 1.8988  decode.d5.loss_cls: 0.4129  decode.d5.loss_mask: 1.8513  decode.d5.loss_dice: 1.8783  decode.d6.loss_cls: 0.4406  decode.d6.loss_mask: 1.8443  decode.d6.loss_dice: 1.8519  decode.d7.loss_cls: 0.4079  decode.d7.loss_mask: 1.8691  decode.d7.loss_dice: 1.8299  decode.d8.loss_cls: 0.4482  decode.d8.loss_mask: 1.8503  decode.d8.loss_dice: 1.8521
2025/03/29 15:11:59 - mmengine - INFO - Iter(train) [ 5200/20000]  base_lr: 7.6265e-05 lr: 7.6265e-05  eta: 6:54:27  time: 1.6692  data_time: 0.0159  memory: 9692  loss: 40.0468  decode.loss_cls: 0.4142  decode.loss_mask: 1.7927  decode.loss_dice: 1.8206  decode.d0.loss_cls: 0.5088  decode.d0.loss_mask: 1.8136  decode.d0.loss_dice: 1.8644  decode.d1.loss_cls: 0.3708  decode.d1.loss_mask: 1.8030  decode.d1.loss_dice: 1.7835  decode.d2.loss_cls: 0.4438  decode.d2.loss_mask: 1.7599  decode.d2.loss_dice: 1.7963  decode.d3.loss_cls: 0.4300  decode.d3.loss_mask: 1.7564  decode.d3.loss_dice: 1.7807  decode.d4.loss_cls: 0.3540  decode.d4.loss_mask: 1.7723  decode.d4.loss_dice: 1.7823  decode.d5.loss_cls: 0.3764  decode.d5.loss_mask: 1.7989  decode.d5.loss_dice: 1.7594  decode.d6.loss_cls: 0.4400  decode.d6.loss_mask: 1.8163  decode.d6.loss_dice: 1.7730  decode.d7.loss_cls: 0.4193  decode.d7.loss_mask: 1.8162  decode.d7.loss_dice: 1.8040  decode.d8.loss_cls: 0.3949  decode.d8.loss_mask: 1.8112  decode.d8.loss_dice: 1.7899
2025/03/29 15:13:23 - mmengine - INFO - Iter(train) [ 5250/20000]  base_lr: 7.6034e-05 lr: 7.6034e-05  eta: 6:53:01  time: 1.6679  data_time: 0.0154  memory: 9693  loss: 39.4713  decode.loss_cls: 0.3778  decode.loss_mask: 1.7793  decode.loss_dice: 1.7783  decode.d0.loss_cls: 0.4159  decode.d0.loss_mask: 1.7801  decode.d0.loss_dice: 1.8571  decode.d1.loss_cls: 0.3999  decode.d1.loss_mask: 1.7167  decode.d1.loss_dice: 1.7453  decode.d2.loss_cls: 0.3722  decode.d2.loss_mask: 1.7812  decode.d2.loss_dice: 1.7641  decode.d3.loss_cls: 0.3919  decode.d3.loss_mask: 1.7907  decode.d3.loss_dice: 1.7525  decode.d4.loss_cls: 0.3965  decode.d4.loss_mask: 1.7816  decode.d4.loss_dice: 1.7437  decode.d5.loss_cls: 0.3860  decode.d5.loss_mask: 1.7678  decode.d5.loss_dice: 1.7780  decode.d6.loss_cls: 0.4080  decode.d6.loss_mask: 1.7621  decode.d6.loss_dice: 1.7682  decode.d7.loss_cls: 0.3695  decode.d7.loss_mask: 1.7897  decode.d7.loss_dice: 1.8376  decode.d8.loss_cls: 0.4182  decode.d8.loss_mask: 1.7563  decode.d8.loss_dice: 1.8050
2025/03/29 15:14:46 - mmengine - INFO - Iter(train) [ 5300/20000]  base_lr: 7.5802e-05 lr: 7.5802e-05  eta: 6:51:35  time: 1.6672  data_time: 0.0154  memory: 9686  loss: 43.7603  decode.loss_cls: 0.5519  decode.loss_mask: 1.8754  decode.loss_dice: 1.9501  decode.d0.loss_cls: 0.5249  decode.d0.loss_mask: 1.8565  decode.d0.loss_dice: 2.0627  decode.d1.loss_cls: 0.4910  decode.d1.loss_mask: 1.8901  decode.d1.loss_dice: 1.9644  decode.d2.loss_cls: 0.4521  decode.d2.loss_mask: 1.8483  decode.d2.loss_dice: 1.9728  decode.d3.loss_cls: 0.4782  decode.d3.loss_mask: 1.8908  decode.d3.loss_dice: 1.9985  decode.d4.loss_cls: 0.4941  decode.d4.loss_mask: 1.9068  decode.d4.loss_dice: 1.9590  decode.d5.loss_cls: 0.5490  decode.d5.loss_mask: 1.8846  decode.d5.loss_dice: 1.9399  decode.d6.loss_cls: 0.5783  decode.d6.loss_mask: 1.8789  decode.d6.loss_dice: 1.9597  decode.d7.loss_cls: 0.5418  decode.d7.loss_mask: 1.8718  decode.d7.loss_dice: 2.0070  decode.d8.loss_cls: 0.5428  decode.d8.loss_mask: 1.8765  decode.d8.loss_dice: 1.9625
2025/03/29 15:16:09 - mmengine - INFO - Iter(train) [ 5350/20000]  base_lr: 7.5569e-05 lr: 7.5569e-05  eta: 6:50:10  time: 1.6665  data_time: 0.0153  memory: 9703  loss: 37.4197  decode.loss_cls: 0.3052  decode.loss_mask: 1.7337  decode.loss_dice: 1.6541  decode.d0.loss_cls: 0.3809  decode.d0.loss_mask: 1.7713  decode.d0.loss_dice: 1.8022  decode.d1.loss_cls: 0.3765  decode.d1.loss_mask: 1.7019  decode.d1.loss_dice: 1.6453  decode.d2.loss_cls: 0.3542  decode.d2.loss_mask: 1.7279  decode.d2.loss_dice: 1.6294  decode.d3.loss_cls: 0.3494  decode.d3.loss_mask: 1.7076  decode.d3.loss_dice: 1.6357  decode.d4.loss_cls: 0.3629  decode.d4.loss_mask: 1.7004  decode.d4.loss_dice: 1.6218  decode.d5.loss_cls: 0.3949  decode.d5.loss_mask: 1.7034  decode.d5.loss_dice: 1.6357  decode.d6.loss_cls: 0.3945  decode.d6.loss_mask: 1.7188  decode.d6.loss_dice: 1.6474  decode.d7.loss_cls: 0.3728  decode.d7.loss_mask: 1.7186  decode.d7.loss_dice: 1.6289  decode.d8.loss_cls: 0.3593  decode.d8.loss_mask: 1.7437  decode.d8.loss_dice: 1.6413
2025/03/29 15:17:33 - mmengine - INFO - Iter(train) [ 5400/20000]  base_lr: 7.5337e-05 lr: 7.5337e-05  eta: 6:48:44  time: 1.6665  data_time: 0.0154  memory: 9697  loss: 43.5056  decode.loss_cls: 0.3853  decode.loss_mask: 2.0145  decode.loss_dice: 1.9459  decode.d0.loss_cls: 0.4611  decode.d0.loss_mask: 2.0649  decode.d0.loss_dice: 2.0028  decode.d1.loss_cls: 0.3614  decode.d1.loss_mask: 2.0205  decode.d1.loss_dice: 1.9479  decode.d2.loss_cls: 0.3828  decode.d2.loss_mask: 2.0033  decode.d2.loss_dice: 1.9474  decode.d3.loss_cls: 0.3883  decode.d3.loss_mask: 2.0005  decode.d3.loss_dice: 1.9115  decode.d4.loss_cls: 0.4102  decode.d4.loss_mask: 2.0139  decode.d4.loss_dice: 1.9213  decode.d5.loss_cls: 0.3926  decode.d5.loss_mask: 2.0062  decode.d5.loss_dice: 1.9338  decode.d6.loss_cls: 0.3875  decode.d6.loss_mask: 2.0090  decode.d6.loss_dice: 1.9188  decode.d7.loss_cls: 0.4237  decode.d7.loss_mask: 1.9806  decode.d7.loss_dice: 1.8956  decode.d8.loss_cls: 0.4174  decode.d8.loss_mask: 2.0332  decode.d8.loss_dice: 1.9237
2025/03/29 15:18:56 - mmengine - INFO - Iter(train) [ 5450/20000]  base_lr: 7.5105e-05 lr: 7.5105e-05  eta: 6:47:19  time: 1.6653  data_time: 0.0155  memory: 9694  loss: 40.5682  decode.loss_cls: 0.3519  decode.loss_mask: 1.9001  decode.loss_dice: 1.7902  decode.d0.loss_cls: 0.5109  decode.d0.loss_mask: 1.8954  decode.d0.loss_dice: 1.8361  decode.d1.loss_cls: 0.3889  decode.d1.loss_mask: 1.8572  decode.d1.loss_dice: 1.7873  decode.d2.loss_cls: 0.3326  decode.d2.loss_mask: 1.8687  decode.d2.loss_dice: 1.7985  decode.d3.loss_cls: 0.3616  decode.d3.loss_mask: 1.8681  decode.d3.loss_dice: 1.7718  decode.d4.loss_cls: 0.3538  decode.d4.loss_mask: 1.8753  decode.d4.loss_dice: 1.8392  decode.d5.loss_cls: 0.3624  decode.d5.loss_mask: 1.8689  decode.d5.loss_dice: 1.7944  decode.d6.loss_cls: 0.4481  decode.d6.loss_mask: 1.8460  decode.d6.loss_dice: 1.7996  decode.d7.loss_cls: 0.3399  decode.d7.loss_mask: 1.9149  decode.d7.loss_dice: 1.7999  decode.d8.loss_cls: 0.4085  decode.d8.loss_mask: 1.8528  decode.d8.loss_dice: 1.7449
2025/03/29 15:20:20 - mmengine - INFO - Iter(train) [ 5500/20000]  base_lr: 7.4873e-05 lr: 7.4873e-05  eta: 6:45:53  time: 1.6665  data_time: 0.0153  memory: 9686  loss: 41.3324  decode.loss_cls: 0.2663  decode.loss_mask: 1.9489  decode.loss_dice: 1.8768  decode.d0.loss_cls: 0.3686  decode.d0.loss_mask: 1.9477  decode.d0.loss_dice: 1.8981  decode.d1.loss_cls: 0.3680  decode.d1.loss_mask: 1.9330  decode.d1.loss_dice: 1.8607  decode.d2.loss_cls: 0.3330  decode.d2.loss_mask: 1.9494  decode.d2.loss_dice: 1.8657  decode.d3.loss_cls: 0.3266  decode.d3.loss_mask: 1.9367  decode.d3.loss_dice: 1.8747  decode.d4.loss_cls: 0.3083  decode.d4.loss_mask: 1.9157  decode.d4.loss_dice: 1.8700  decode.d5.loss_cls: 0.2890  decode.d5.loss_mask: 1.9551  decode.d5.loss_dice: 1.8810  decode.d6.loss_cls: 0.3220  decode.d6.loss_mask: 1.9329  decode.d6.loss_dice: 1.8796  decode.d7.loss_cls: 0.3363  decode.d7.loss_mask: 1.9007  decode.d7.loss_dice: 1.8804  decode.d8.loss_cls: 0.3592  decode.d8.loss_mask: 1.9062  decode.d8.loss_dice: 1.8418
2025/03/29 15:21:43 - mmengine - INFO - Iter(train) [ 5550/20000]  base_lr: 7.4640e-05 lr: 7.4640e-05  eta: 6:44:28  time: 1.6708  data_time: 0.0155  memory: 9661  loss: 42.7571  decode.loss_cls: 0.5171  decode.loss_mask: 2.0223  decode.loss_dice: 1.7226  decode.d0.loss_cls: 0.5649  decode.d0.loss_mask: 2.0395  decode.d0.loss_dice: 1.7908  decode.d1.loss_cls: 0.5605  decode.d1.loss_mask: 2.0015  decode.d1.loss_dice: 1.7438  decode.d2.loss_cls: 0.5448  decode.d2.loss_mask: 1.9960  decode.d2.loss_dice: 1.7664  decode.d3.loss_cls: 0.4971  decode.d3.loss_mask: 1.9907  decode.d3.loss_dice: 1.7452  decode.d4.loss_cls: 0.4669  decode.d4.loss_mask: 1.9708  decode.d4.loss_dice: 1.7560  decode.d5.loss_cls: 0.5286  decode.d5.loss_mask: 1.9866  decode.d5.loss_dice: 1.7500  decode.d6.loss_cls: 0.5273  decode.d6.loss_mask: 1.9821  decode.d6.loss_dice: 1.7205  decode.d7.loss_cls: 0.5083  decode.d7.loss_mask: 2.0167  decode.d7.loss_dice: 1.7415  decode.d8.loss_cls: 0.5272  decode.d8.loss_mask: 2.0211  decode.d8.loss_dice: 1.7502
2025/03/29 15:23:10 - mmengine - INFO - Iter(train) [ 5600/20000]  base_lr: 7.4408e-05 lr: 7.4408e-05  eta: 6:43:12  time: 1.8494  data_time: 0.0163  memory: 9686  loss: 40.0555  decode.loss_cls: 0.3405  decode.loss_mask: 1.9429  decode.loss_dice: 1.6793  decode.d0.loss_cls: 0.4574  decode.d0.loss_mask: 1.9558  decode.d0.loss_dice: 1.7358  decode.d1.loss_cls: 0.3666  decode.d1.loss_mask: 1.9823  decode.d1.loss_dice: 1.6828  decode.d2.loss_cls: 0.3596  decode.d2.loss_mask: 1.9454  decode.d2.loss_dice: 1.6439  decode.d3.loss_cls: 0.3132  decode.d3.loss_mask: 2.0127  decode.d3.loss_dice: 1.6916  decode.d4.loss_cls: 0.3284  decode.d4.loss_mask: 1.9558  decode.d4.loss_dice: 1.6920  decode.d5.loss_cls: 0.3562  decode.d5.loss_mask: 1.9739  decode.d5.loss_dice: 1.6811  decode.d6.loss_cls: 0.3626  decode.d6.loss_mask: 2.0003  decode.d6.loss_dice: 1.6630  decode.d7.loss_cls: 0.3316  decode.d7.loss_mask: 1.9519  decode.d7.loss_dice: 1.6818  decode.d8.loss_cls: 0.3302  decode.d8.loss_mask: 1.9527  decode.d8.loss_dice: 1.6842
2025/03/29 15:24:40 - mmengine - INFO - Iter(train) [ 5650/20000]  base_lr: 7.4175e-05 lr: 7.4175e-05  eta: 6:42:02  time: 1.7789  data_time: 0.0156  memory: 9708  loss: 42.8094  decode.loss_cls: 0.3656  decode.loss_mask: 2.0812  decode.loss_dice: 1.8132  decode.d0.loss_cls: 0.5116  decode.d0.loss_mask: 2.0573  decode.d0.loss_dice: 1.8548  decode.d1.loss_cls: 0.3535  decode.d1.loss_mask: 2.0626  decode.d1.loss_dice: 1.8063  decode.d2.loss_cls: 0.3410  decode.d2.loss_mask: 2.0718  decode.d2.loss_dice: 1.8414  decode.d3.loss_cls: 0.3057  decode.d3.loss_mask: 2.0755  decode.d3.loss_dice: 1.8359  decode.d4.loss_cls: 0.3525  decode.d4.loss_mask: 2.0475  decode.d4.loss_dice: 1.8669  decode.d5.loss_cls: 0.3773  decode.d5.loss_mask: 2.0475  decode.d5.loss_dice: 1.8641  decode.d6.loss_cls: 0.3701  decode.d6.loss_mask: 2.0865  decode.d6.loss_dice: 1.8332  decode.d7.loss_cls: 0.4026  decode.d7.loss_mask: 2.0787  decode.d7.loss_dice: 1.8242  decode.d8.loss_cls: 0.4266  decode.d8.loss_mask: 2.0544  decode.d8.loss_dice: 1.7999
2025/03/29 15:26:08 - mmengine - INFO - Iter(train) [ 5700/20000]  base_lr: 7.3943e-05 lr: 7.3943e-05  eta: 6:40:48  time: 1.7227  data_time: 0.0155  memory: 9689  loss: 40.8006  decode.loss_cls: 0.4622  decode.loss_mask: 1.8564  decode.loss_dice: 1.7301  decode.d0.loss_cls: 0.5046  decode.d0.loss_mask: 1.8742  decode.d0.loss_dice: 1.8687  decode.d1.loss_cls: 0.4158  decode.d1.loss_mask: 1.9030  decode.d1.loss_dice: 1.7672  decode.d2.loss_cls: 0.4228  decode.d2.loss_mask: 1.8651  decode.d2.loss_dice: 1.7539  decode.d3.loss_cls: 0.3793  decode.d3.loss_mask: 1.9666  decode.d3.loss_dice: 1.7713  decode.d4.loss_cls: 0.3938  decode.d4.loss_mask: 1.9391  decode.d4.loss_dice: 1.7379  decode.d5.loss_cls: 0.4504  decode.d5.loss_mask: 1.8798  decode.d5.loss_dice: 1.7270  decode.d6.loss_cls: 0.4679  decode.d6.loss_mask: 1.8554  decode.d6.loss_dice: 1.7088  decode.d7.loss_cls: 0.4877  decode.d7.loss_mask: 1.8476  decode.d7.loss_dice: 1.7205  decode.d8.loss_cls: 0.4796  decode.d8.loss_mask: 1.8446  decode.d8.loss_dice: 1.7197
2025/03/29 15:27:34 - mmengine - INFO - Iter(train) [ 5750/20000]  base_lr: 7.3710e-05 lr: 7.3710e-05  eta: 6:39:28  time: 1.7055  data_time: 0.0153  memory: 9684  loss: 41.0818  decode.loss_cls: 0.3720  decode.loss_mask: 1.9778  decode.loss_dice: 1.7268  decode.d0.loss_cls: 0.5391  decode.d0.loss_mask: 1.9868  decode.d0.loss_dice: 1.7719  decode.d1.loss_cls: 0.4787  decode.d1.loss_mask: 1.9379  decode.d1.loss_dice: 1.7316  decode.d2.loss_cls: 0.4392  decode.d2.loss_mask: 1.9283  decode.d2.loss_dice: 1.7142  decode.d3.loss_cls: 0.4084  decode.d3.loss_mask: 1.9623  decode.d3.loss_dice: 1.7303  decode.d4.loss_cls: 0.3879  decode.d4.loss_mask: 1.9402  decode.d4.loss_dice: 1.7269  decode.d5.loss_cls: 0.4094  decode.d5.loss_mask: 1.9679  decode.d5.loss_dice: 1.7030  decode.d6.loss_cls: 0.4464  decode.d6.loss_mask: 1.9428  decode.d6.loss_dice: 1.7168  decode.d7.loss_cls: 0.4221  decode.d7.loss_mask: 1.9392  decode.d7.loss_dice: 1.7130  decode.d8.loss_cls: 0.4551  decode.d8.loss_mask: 1.9107  decode.d8.loss_dice: 1.6950
2025/03/29 15:29:02 - mmengine - INFO - Iter(train) [ 5800/20000]  base_lr: 7.3477e-05 lr: 7.3477e-05  eta: 6:38:14  time: 1.7789  data_time: 0.0156  memory: 9689  loss: 39.9986  decode.loss_cls: 0.3977  decode.loss_mask: 1.8603  decode.loss_dice: 1.7706  decode.d0.loss_cls: 0.4857  decode.d0.loss_mask: 1.8515  decode.d0.loss_dice: 1.7972  decode.d1.loss_cls: 0.3894  decode.d1.loss_mask: 1.8269  decode.d1.loss_dice: 1.7502  decode.d2.loss_cls: 0.4002  decode.d2.loss_mask: 1.8185  decode.d2.loss_dice: 1.7507  decode.d3.loss_cls: 0.3644  decode.d3.loss_mask: 1.8309  decode.d3.loss_dice: 1.7658  decode.d4.loss_cls: 0.3047  decode.d4.loss_mask: 1.8745  decode.d4.loss_dice: 1.8047  decode.d5.loss_cls: 0.3294  decode.d5.loss_mask: 1.8647  decode.d5.loss_dice: 1.8038  decode.d6.loss_cls: 0.4144  decode.d6.loss_mask: 1.8324  decode.d6.loss_dice: 1.7389  decode.d7.loss_cls: 0.3931  decode.d7.loss_mask: 1.8428  decode.d7.loss_dice: 1.7718  decode.d8.loss_cls: 0.3849  decode.d8.loss_mask: 1.8344  decode.d8.loss_dice: 1.7440
2025/03/29 15:30:24 - mmengine - INFO - Iter(train) [ 5850/20000]  base_lr: 7.3244e-05 lr: 7.3244e-05  eta: 6:36:46  time: 1.6666  data_time: 0.0153  memory: 9681  loss: 38.7103  decode.loss_cls: 0.3981  decode.loss_mask: 1.8887  decode.loss_dice: 1.6255  decode.d0.loss_cls: 0.5600  decode.d0.loss_mask: 1.8263  decode.d0.loss_dice: 1.6104  decode.d1.loss_cls: 0.3807  decode.d1.loss_mask: 1.8634  decode.d1.loss_dice: 1.6207  decode.d2.loss_cls: 0.3521  decode.d2.loss_mask: 1.8532  decode.d2.loss_dice: 1.6020  decode.d3.loss_cls: 0.3453  decode.d3.loss_mask: 1.8773  decode.d3.loss_dice: 1.5957  decode.d4.loss_cls: 0.3975  decode.d4.loss_mask: 1.8424  decode.d4.loss_dice: 1.6004  decode.d5.loss_cls: 0.3623  decode.d5.loss_mask: 1.8836  decode.d5.loss_dice: 1.5789  decode.d6.loss_cls: 0.3846  decode.d6.loss_mask: 1.8660  decode.d6.loss_dice: 1.6065  decode.d7.loss_cls: 0.3764  decode.d7.loss_mask: 1.8883  decode.d7.loss_dice: 1.6121  decode.d8.loss_cls: 0.4243  decode.d8.loss_mask: 1.8864  decode.d8.loss_dice: 1.6012
2025/03/29 15:31:47 - mmengine - INFO - Iter(train) [ 5900/20000]  base_lr: 7.3011e-05 lr: 7.3011e-05  eta: 6:35:19  time: 1.6426  data_time: 0.0158  memory: 9679  loss: 38.2054  decode.loss_cls: 0.3689  decode.loss_mask: 1.8516  decode.loss_dice: 1.6143  decode.d0.loss_cls: 0.4630  decode.d0.loss_mask: 1.8418  decode.d0.loss_dice: 1.6181  decode.d1.loss_cls: 0.3250  decode.d1.loss_mask: 1.8366  decode.d1.loss_dice: 1.6216  decode.d2.loss_cls: 0.3294  decode.d2.loss_mask: 1.8357  decode.d2.loss_dice: 1.6010  decode.d3.loss_cls: 0.3452  decode.d3.loss_mask: 1.8565  decode.d3.loss_dice: 1.6111  decode.d4.loss_cls: 0.3441  decode.d4.loss_mask: 1.8462  decode.d4.loss_dice: 1.6244  decode.d5.loss_cls: 0.3327  decode.d5.loss_mask: 1.8542  decode.d5.loss_dice: 1.6093  decode.d6.loss_cls: 0.3166  decode.d6.loss_mask: 1.8725  decode.d6.loss_dice: 1.6104  decode.d7.loss_cls: 0.3277  decode.d7.loss_mask: 1.8718  decode.d7.loss_dice: 1.6366  decode.d8.loss_cls: 0.3238  decode.d8.loss_mask: 1.8806  decode.d8.loss_dice: 1.6347
2025/03/29 15:33:10 - mmengine - INFO - Iter(train) [ 5950/20000]  base_lr: 7.2778e-05 lr: 7.2778e-05  eta: 6:33:53  time: 1.6612  data_time: 0.0164  memory: 9677  loss: 39.8303  decode.loss_cls: 0.2917  decode.loss_mask: 1.8667  decode.loss_dice: 1.7806  decode.d0.loss_cls: 0.3961  decode.d0.loss_mask: 1.8470  decode.d0.loss_dice: 1.8593  decode.d1.loss_cls: 0.3865  decode.d1.loss_mask: 1.8153  decode.d1.loss_dice: 1.7697  decode.d2.loss_cls: 0.3753  decode.d2.loss_mask: 1.8463  decode.d2.loss_dice: 1.7933  decode.d3.loss_cls: 0.3521  decode.d3.loss_mask: 1.8444  decode.d3.loss_dice: 1.7691  decode.d4.loss_cls: 0.3597  decode.d4.loss_mask: 1.8375  decode.d4.loss_dice: 1.7501  decode.d5.loss_cls: 0.3434  decode.d5.loss_mask: 1.8543  decode.d5.loss_dice: 1.7677  decode.d6.loss_cls: 0.3038  decode.d6.loss_mask: 1.8793  decode.d6.loss_dice: 1.7886  decode.d7.loss_cls: 0.3202  decode.d7.loss_mask: 1.8560  decode.d7.loss_dice: 1.7665  decode.d8.loss_cls: 0.3427  decode.d8.loss_mask: 1.8772  decode.d8.loss_dice: 1.7899
2025/03/29 15:34:33 - mmengine - INFO - Exp name: u2r_20250329_122454
2025/03/29 15:34:33 - mmengine - INFO - Iter(train) [ 6000/20000]  base_lr: 7.2545e-05 lr: 7.2545e-05  eta: 6:32:26  time: 1.6554  data_time: 0.0155  memory: 9744  loss: 40.9805  decode.loss_cls: 0.4880  decode.loss_mask: 1.8202  decode.loss_dice: 1.7637  decode.d0.loss_cls: 0.5298  decode.d0.loss_mask: 1.8780  decode.d0.loss_dice: 1.8512  decode.d1.loss_cls: 0.4350  decode.d1.loss_mask: 1.8616  decode.d1.loss_dice: 1.8155  decode.d2.loss_cls: 0.4677  decode.d2.loss_mask: 1.8222  decode.d2.loss_dice: 1.7757  decode.d3.loss_cls: 0.5116  decode.d3.loss_mask: 1.8002  decode.d3.loss_dice: 1.7877  decode.d4.loss_cls: 0.5163  decode.d4.loss_mask: 1.8095  decode.d4.loss_dice: 1.7691  decode.d5.loss_cls: 0.4743  decode.d5.loss_mask: 1.7908  decode.d5.loss_dice: 1.7637  decode.d6.loss_cls: 0.4772  decode.d6.loss_mask: 1.8286  decode.d6.loss_dice: 1.7934  decode.d7.loss_cls: 0.4901  decode.d7.loss_mask: 1.8304  decode.d7.loss_dice: 1.7644  decode.d8.loss_cls: 0.4780  decode.d8.loss_mask: 1.8268  decode.d8.loss_dice: 1.7597
2025/03/29 15:34:33 - mmengine - INFO - Saving checkpoint at 6000 iterations
2025/03/29 15:34:43 - mmengine - INFO - Iter(val) [  50/3968]    eta: 0:10:28  time: 0.1524  data_time: 0.0012  memory: 1849  
2025/03/29 15:34:51 - mmengine - INFO - Iter(val) [ 100/3968]    eta: 0:10:16  time: 0.1667  data_time: 0.0012  memory: 1849  
2025/03/29 15:34:59 - mmengine - INFO - Iter(val) [ 150/3968]    eta: 0:10:05  time: 0.1508  data_time: 0.0012  memory: 1849  
2025/03/29 15:35:06 - mmengine - INFO - Iter(val) [ 200/3968]    eta: 0:09:57  time: 0.1448  data_time: 0.0012  memory: 1849  
2025/03/29 15:35:14 - mmengine - INFO - Iter(val) [ 250/3968]    eta: 0:09:49  time: 0.1665  data_time: 0.0013  memory: 1849  
2025/03/29 15:35:22 - mmengine - INFO - Iter(val) [ 300/3968]    eta: 0:09:39  time: 0.1540  data_time: 0.0012  memory: 1849  
2025/03/29 15:35:30 - mmengine - INFO - Iter(val) [ 350/3968]    eta: 0:09:32  time: 0.1511  data_time: 0.0012  memory: 1849  
2025/03/29 15:35:38 - mmengine - INFO - Iter(val) [ 400/3968]    eta: 0:09:24  time: 0.1655  data_time: 0.0012  memory: 1849  
2025/03/29 15:35:46 - mmengine - INFO - Iter(val) [ 450/3968]    eta: 0:09:16  time: 0.1526  data_time: 0.0013  memory: 1849  
2025/03/29 15:35:54 - mmengine - INFO - Iter(val) [ 500/3968]    eta: 0:09:09  time: 0.1547  data_time: 0.0012  memory: 1849  
2025/03/29 15:36:02 - mmengine - INFO - Iter(val) [ 550/3968]    eta: 0:09:00  time: 0.1643  data_time: 0.0013  memory: 1849  
2025/03/29 15:36:10 - mmengine - INFO - Iter(val) [ 600/3968]    eta: 0:08:52  time: 0.1528  data_time: 0.0012  memory: 1849  
2025/03/29 15:36:18 - mmengine - INFO - Iter(val) [ 650/3968]    eta: 0:08:45  time: 0.1627  data_time: 0.0013  memory: 1849  
2025/03/29 15:36:26 - mmengine - INFO - Iter(val) [ 700/3968]    eta: 0:08:36  time: 0.1603  data_time: 0.0013  memory: 1849  
2025/03/29 15:36:34 - mmengine - INFO - Iter(val) [ 750/3968]    eta: 0:08:29  time: 0.1570  data_time: 0.0012  memory: 1849  
2025/03/29 15:36:42 - mmengine - INFO - Iter(val) [ 800/3968]    eta: 0:08:21  time: 0.1659  data_time: 0.0013  memory: 1849  
2025/03/29 15:36:49 - mmengine - INFO - Iter(val) [ 850/3968]    eta: 0:08:13  time: 0.1537  data_time: 0.0012  memory: 1849  
2025/03/29 15:36:57 - mmengine - INFO - Iter(val) [ 900/3968]    eta: 0:08:05  time: 0.1574  data_time: 0.0013  memory: 1849  
2025/03/29 15:37:07 - mmengine - INFO - Iter(val) [ 950/3968]    eta: 0:08:03  time: 0.1645  data_time: 0.0015  memory: 1849  
2025/03/29 15:37:15 - mmengine - INFO - Iter(val) [1000/3968]    eta: 0:07:54  time: 0.1526  data_time: 0.0013  memory: 1849  
2025/03/29 15:37:23 - mmengine - INFO - Iter(val) [1050/3968]    eta: 0:07:47  time: 0.1568  data_time: 0.0015  memory: 1849  
2025/03/29 15:37:31 - mmengine - INFO - Iter(val) [1100/3968]    eta: 0:07:38  time: 0.1626  data_time: 0.0013  memory: 1849  
2025/03/29 15:37:49 - mmengine - INFO - Iter(val) [1150/3968]    eta: 0:07:54  time: 0.1554  data_time: 0.0014  memory: 1849  
2025/03/29 15:37:57 - mmengine - INFO - Iter(val) [1200/3968]    eta: 0:07:45  time: 0.1633  data_time: 0.0012  memory: 1849  
2025/03/29 15:38:04 - mmengine - INFO - Iter(val) [1250/3968]    eta: 0:07:35  time: 0.1588  data_time: 0.0013  memory: 1849  
2025/03/29 15:38:12 - mmengine - INFO - Iter(val) [1300/3968]    eta: 0:07:26  time: 0.1640  data_time: 0.0014  memory: 1849  
2025/03/29 15:38:20 - mmengine - INFO - Iter(val) [1350/3968]    eta: 0:07:17  time: 0.1666  data_time: 0.0013  memory: 1849  
2025/03/29 15:38:28 - mmengine - INFO - Iter(val) [1400/3968]    eta: 0:07:07  time: 0.1547  data_time: 0.0013  memory: 1849  
2025/03/29 15:38:36 - mmengine - INFO - Iter(val) [1450/3968]    eta: 0:06:59  time: 0.1533  data_time: 0.0013  memory: 1849  
2025/03/29 15:38:44 - mmengine - INFO - Iter(val) [1500/3968]    eta: 0:06:50  time: 0.1660  data_time: 0.0013  memory: 1849  
2025/03/29 15:38:52 - mmengine - INFO - Iter(val) [1550/3968]    eta: 0:06:41  time: 0.1549  data_time: 0.0013  memory: 1849  
2025/03/29 15:39:00 - mmengine - INFO - Iter(val) [1600/3968]    eta: 0:06:32  time: 0.1669  data_time: 0.0013  memory: 1849  
2025/03/29 15:39:08 - mmengine - INFO - Iter(val) [1650/3968]    eta: 0:06:23  time: 0.1553  data_time: 0.0012  memory: 1849  
2025/03/29 15:39:16 - mmengine - INFO - Iter(val) [1700/3968]    eta: 0:06:14  time: 0.1526  data_time: 0.0013  memory: 1849  
2025/03/29 15:39:24 - mmengine - INFO - Iter(val) [1750/3968]    eta: 0:06:06  time: 0.1662  data_time: 0.0013  memory: 1849  
2025/03/29 15:39:32 - mmengine - INFO - Iter(val) [1800/3968]    eta: 0:05:57  time: 0.1510  data_time: 0.0014  memory: 1849  
2025/03/29 15:39:40 - mmengine - INFO - Iter(val) [1850/3968]    eta: 0:05:49  time: 0.1568  data_time: 0.0013  memory: 1849  
2025/03/29 15:39:48 - mmengine - INFO - Iter(val) [1900/3968]    eta: 0:05:40  time: 0.1665  data_time: 0.0013  memory: 1849  
2025/03/29 15:39:56 - mmengine - INFO - Iter(val) [1950/3968]    eta: 0:05:31  time: 0.1610  data_time: 0.0014  memory: 1849  
2025/03/29 15:40:04 - mmengine - INFO - Iter(val) [2000/3968]    eta: 0:05:23  time: 0.1670  data_time: 0.0013  memory: 1849  
2025/03/29 15:40:12 - mmengine - INFO - Iter(val) [2050/3968]    eta: 0:05:14  time: 0.1532  data_time: 0.0013  memory: 1849  
2025/03/29 15:40:20 - mmengine - INFO - Iter(val) [2100/3968]    eta: 0:05:06  time: 0.1550  data_time: 0.0013  memory: 1849  
2025/03/29 15:40:28 - mmengine - INFO - Iter(val) [2150/3968]    eta: 0:04:58  time: 0.1626  data_time: 0.0013  memory: 1849  
2025/03/29 15:40:36 - mmengine - INFO - Iter(val) [2200/3968]    eta: 0:04:49  time: 0.1555  data_time: 0.0014  memory: 1849  
2025/03/29 15:40:44 - mmengine - INFO - Iter(val) [2250/3968]    eta: 0:04:41  time: 0.1663  data_time: 0.0013  memory: 1849  
2025/03/29 15:40:51 - mmengine - INFO - Iter(val) [2300/3968]    eta: 0:04:32  time: 0.1530  data_time: 0.0013  memory: 1849  
2025/03/29 15:41:00 - mmengine - INFO - Iter(val) [2350/3968]    eta: 0:04:24  time: 0.1580  data_time: 0.0014  memory: 1849  
2025/03/29 15:41:07 - mmengine - INFO - Iter(val) [2400/3968]    eta: 0:04:16  time: 0.1666  data_time: 0.0013  memory: 1849  
2025/03/29 15:41:15 - mmengine - INFO - Iter(val) [2450/3968]    eta: 0:04:07  time: 0.1531  data_time: 0.0013  memory: 1849  
2025/03/29 15:41:23 - mmengine - INFO - Iter(val) [2500/3968]    eta: 0:03:59  time: 0.1666  data_time: 0.0013  memory: 1849  
2025/03/29 15:41:31 - mmengine - INFO - Iter(val) [2550/3968]    eta: 0:03:51  time: 0.1540  data_time: 0.0013  memory: 1849  
2025/03/29 15:41:39 - mmengine - INFO - Iter(val) [2600/3968]    eta: 0:03:43  time: 0.1529  data_time: 0.0013  memory: 1849  
2025/03/29 15:41:47 - mmengine - INFO - Iter(val) [2650/3968]    eta: 0:03:34  time: 0.1666  data_time: 0.0014  memory: 1849  
2025/03/29 15:41:55 - mmengine - INFO - Iter(val) [2700/3968]    eta: 0:03:26  time: 0.1614  data_time: 0.0014  memory: 1849  
2025/03/29 15:42:03 - mmengine - INFO - Iter(val) [2750/3968]    eta: 0:03:18  time: 0.1665  data_time: 0.0014  memory: 1849  
2025/03/29 15:42:11 - mmengine - INFO - Iter(val) [2800/3968]    eta: 0:03:10  time: 0.1574  data_time: 0.0013  memory: 1849  
2025/03/29 15:42:19 - mmengine - INFO - Iter(val) [2850/3968]    eta: 0:03:02  time: 0.1636  data_time: 0.0013  memory: 1849  
2025/03/29 15:42:27 - mmengine - INFO - Iter(val) [2900/3968]    eta: 0:02:53  time: 0.1523  data_time: 0.0014  memory: 1849  
2025/03/29 15:42:35 - mmengine - INFO - Iter(val) [2950/3968]    eta: 0:02:45  time: 0.1509  data_time: 0.0015  memory: 1849  
2025/03/29 15:42:43 - mmengine - INFO - Iter(val) [3000/3968]    eta: 0:02:37  time: 0.1671  data_time: 0.0014  memory: 1849  
2025/03/29 15:42:51 - mmengine - INFO - Iter(val) [3050/3968]    eta: 0:02:29  time: 0.1511  data_time: 0.0013  memory: 1849  
2025/03/29 15:42:59 - mmengine - INFO - Iter(val) [3100/3968]    eta: 0:02:21  time: 0.1554  data_time: 0.0013  memory: 1849  
2025/03/29 15:43:07 - mmengine - INFO - Iter(val) [3150/3968]    eta: 0:02:12  time: 0.1607  data_time: 0.0012  memory: 1849  
2025/03/29 15:43:15 - mmengine - INFO - Iter(val) [3200/3968]    eta: 0:02:04  time: 0.1583  data_time: 0.0013  memory: 1849  
2025/03/29 15:43:23 - mmengine - INFO - Iter(val) [3250/3968]    eta: 0:01:56  time: 0.1675  data_time: 0.0013  memory: 1849  
2025/03/29 15:43:31 - mmengine - INFO - Iter(val) [3300/3968]    eta: 0:01:48  time: 0.1571  data_time: 0.0014  memory: 1849  
2025/03/29 15:43:39 - mmengine - INFO - Iter(val) [3350/3968]    eta: 0:01:40  time: 0.1588  data_time: 0.0012  memory: 1849  
2025/03/29 15:43:47 - mmengine - INFO - Iter(val) [3400/3968]    eta: 0:01:32  time: 0.1578  data_time: 0.0013  memory: 1849  
2025/03/29 15:43:55 - mmengine - INFO - Iter(val) [3450/3968]    eta: 0:01:23  time: 0.1529  data_time: 0.0013  memory: 1849  
2025/03/29 15:44:03 - mmengine - INFO - Iter(val) [3500/3968]    eta: 0:01:15  time: 0.1664  data_time: 0.0013  memory: 1849  
2025/03/29 15:44:11 - mmengine - INFO - Iter(val) [3550/3968]    eta: 0:01:07  time: 0.1538  data_time: 0.0012  memory: 1849  
2025/03/29 15:44:19 - mmengine - INFO - Iter(val) [3600/3968]    eta: 0:00:59  time: 0.1672  data_time: 0.0013  memory: 1849  
2025/03/29 15:44:27 - mmengine - INFO - Iter(val) [3650/3968]    eta: 0:00:51  time: 0.1527  data_time: 0.0013  memory: 1849  
2025/03/29 15:44:35 - mmengine - INFO - Iter(val) [3700/3968]    eta: 0:00:43  time: 0.1603  data_time: 0.0013  memory: 1849  
2025/03/29 15:44:43 - mmengine - INFO - Iter(val) [3750/3968]    eta: 0:00:35  time: 0.1572  data_time: 0.0013  memory: 1849  
2025/03/29 15:44:51 - mmengine - INFO - Iter(val) [3800/3968]    eta: 0:00:27  time: 0.1575  data_time: 0.0014  memory: 1849  
2025/03/29 15:44:59 - mmengine - INFO - Iter(val) [3850/3968]    eta: 0:00:19  time: 0.1629  data_time: 0.0013  memory: 1849  
2025/03/29 15:45:07 - mmengine - INFO - Iter(val) [3900/3968]    eta: 0:00:11  time: 0.1557  data_time: 0.0013  memory: 1849  
2025/03/29 15:45:15 - mmengine - INFO - Iter(val) [3950/3968]    eta: 0:00:02  time: 0.1663  data_time: 0.0013  memory: 1849  
2025/03/29 15:45:18 - mmengine - INFO - per class results:
2025/03/29 15:45:18 - mmengine - INFO - 
+--------------+-------+-------+
|    Class     |  IoU  |  Acc  |
+--------------+-------+-------+
|  background  | 53.79 | 74.83 |
|   building   | 58.05 | 69.56 |
|     road     | 44.61 | 48.34 |
|    water     | 61.05 | 72.51 |
|    barren    |  8.79 |  9.28 |
|    forest    | 11.85 | 12.28 |
| agricultural | 57.67 | 77.81 |
+--------------+-------+-------+
2025/03/29 15:45:18 - mmengine - INFO - Iter(val) [3968/3968]    aAcc: 69.0500  mIoU: 42.2600  mAcc: 52.0900  data_time: 0.0043  time: 0.1618
2025/03/29 15:45:18 - mmengine - INFO - The previous best checkpoint /home/face/kaichengyang/xiaoxinghu/Earth_Adapter/work_dirs/u2r/DG_spatial_64_cutoff_0.3_fft_suf3/ee2e4_seed0/best_mIoU_iter_4000.pth is removed
2025/03/29 15:45:19 - mmengine - INFO - The best checkpoint with 42.2600 mIoU at 6000 iter is saved to best_mIoU_iter_6000.pth.
2025/03/29 15:46:44 - mmengine - INFO - Iter(train) [ 6050/20000]  base_lr: 7.2312e-05 lr: 7.2312e-05  eta: 6:31:07  time: 1.6685  data_time: 0.0155  memory: 9685  loss: 39.2961  decode.loss_cls: 0.3466  decode.loss_mask: 1.8902  decode.loss_dice: 1.6865  decode.d0.loss_cls: 0.4247  decode.d0.loss_mask: 1.8629  decode.d0.loss_dice: 1.7875  decode.d1.loss_cls: 0.3558  decode.d1.loss_mask: 1.8689  decode.d1.loss_dice: 1.6936  decode.d2.loss_cls: 0.3573  decode.d2.loss_mask: 1.8786  decode.d2.loss_dice: 1.6472  decode.d3.loss_cls: 0.3391  decode.d3.loss_mask: 1.8754  decode.d3.loss_dice: 1.6823  decode.d4.loss_cls: 0.3312  decode.d4.loss_mask: 1.8796  decode.d4.loss_dice: 1.6910  decode.d5.loss_cls: 0.3395  decode.d5.loss_mask: 1.8871  decode.d5.loss_dice: 1.6994  decode.d6.loss_cls: 0.3533  decode.d6.loss_mask: 1.8732  decode.d6.loss_dice: 1.6839  decode.d7.loss_cls: 0.4132  decode.d7.loss_mask: 1.8499  decode.d7.loss_dice: 1.6688  decode.d8.loss_cls: 0.3711  decode.d8.loss_mask: 1.8889  decode.d8.loss_dice: 1.6695
2025/03/29 15:48:08 - mmengine - INFO - Iter(train) [ 6100/20000]  base_lr: 7.2079e-05 lr: 7.2079e-05  eta: 6:29:41  time: 1.6690  data_time: 0.0156  memory: 9685  loss: 38.6781  decode.loss_cls: 0.5623  decode.loss_mask: 1.6279  decode.loss_dice: 1.6657  decode.d0.loss_cls: 0.5397  decode.d0.loss_mask: 1.6851  decode.d0.loss_dice: 1.8398  decode.d1.loss_cls: 0.5116  decode.d1.loss_mask: 1.6627  decode.d1.loss_dice: 1.6957  decode.d2.loss_cls: 0.5379  decode.d2.loss_mask: 1.6435  decode.d2.loss_dice: 1.6698  decode.d3.loss_cls: 0.4976  decode.d3.loss_mask: 1.6575  decode.d3.loss_dice: 1.6507  decode.d4.loss_cls: 0.4881  decode.d4.loss_mask: 1.6629  decode.d4.loss_dice: 1.6790  decode.d5.loss_cls: 0.5281  decode.d5.loss_mask: 1.6192  decode.d5.loss_dice: 1.6365  decode.d6.loss_cls: 0.5332  decode.d6.loss_mask: 1.6710  decode.d6.loss_dice: 1.6924  decode.d7.loss_cls: 0.5318  decode.d7.loss_mask: 1.6920  decode.d7.loss_dice: 1.7031  decode.d8.loss_cls: 0.4764  decode.d8.loss_mask: 1.6720  decode.d8.loss_dice: 1.6447
2025/03/29 15:49:31 - mmengine - INFO - Iter(train) [ 6150/20000]  base_lr: 7.1845e-05 lr: 7.1845e-05  eta: 6:28:16  time: 1.6674  data_time: 0.0153  memory: 9686  loss: 40.2762  decode.loss_cls: 0.4613  decode.loss_mask: 1.8735  decode.loss_dice: 1.6910  decode.d0.loss_cls: 0.4970  decode.d0.loss_mask: 1.8832  decode.d0.loss_dice: 1.7894  decode.d1.loss_cls: 0.4300  decode.d1.loss_mask: 1.8840  decode.d1.loss_dice: 1.7194  decode.d2.loss_cls: 0.3864  decode.d2.loss_mask: 1.9200  decode.d2.loss_dice: 1.6941  decode.d3.loss_cls: 0.4217  decode.d3.loss_mask: 1.8941  decode.d3.loss_dice: 1.7187  decode.d4.loss_cls: 0.4064  decode.d4.loss_mask: 1.8774  decode.d4.loss_dice: 1.6985  decode.d5.loss_cls: 0.4363  decode.d5.loss_mask: 1.8924  decode.d5.loss_dice: 1.6901  decode.d6.loss_cls: 0.4230  decode.d6.loss_mask: 1.8811  decode.d6.loss_dice: 1.7012  decode.d7.loss_cls: 0.4513  decode.d7.loss_mask: 1.8793  decode.d7.loss_dice: 1.6822  decode.d8.loss_cls: 0.4455  decode.d8.loss_mask: 1.8798  decode.d8.loss_dice: 1.6680
2025/03/29 15:50:55 - mmengine - INFO - Iter(train) [ 6200/20000]  base_lr: 7.1612e-05 lr: 7.1612e-05  eta: 6:26:50  time: 1.6696  data_time: 0.0154  memory: 9684  loss: 39.7399  decode.loss_cls: 0.4534  decode.loss_mask: 1.8511  decode.loss_dice: 1.6352  decode.d0.loss_cls: 0.5171  decode.d0.loss_mask: 1.9392  decode.d0.loss_dice: 1.7257  decode.d1.loss_cls: 0.4122  decode.d1.loss_mask: 1.8774  decode.d1.loss_dice: 1.6689  decode.d2.loss_cls: 0.4151  decode.d2.loss_mask: 1.8888  decode.d2.loss_dice: 1.6541  decode.d3.loss_cls: 0.4400  decode.d3.loss_mask: 1.8693  decode.d3.loss_dice: 1.6614  decode.d4.loss_cls: 0.4120  decode.d4.loss_mask: 1.9045  decode.d4.loss_dice: 1.6835  decode.d5.loss_cls: 0.4098  decode.d5.loss_mask: 1.8720  decode.d5.loss_dice: 1.6263  decode.d6.loss_cls: 0.4362  decode.d6.loss_mask: 1.8615  decode.d6.loss_dice: 1.6399  decode.d7.loss_cls: 0.4612  decode.d7.loss_mask: 1.8471  decode.d7.loss_dice: 1.6572  decode.d8.loss_cls: 0.4486  decode.d8.loss_mask: 1.8537  decode.d8.loss_dice: 1.6174
2025/03/29 15:52:19 - mmengine - INFO - Iter(train) [ 6250/20000]  base_lr: 7.1378e-05 lr: 7.1378e-05  eta: 6:25:26  time: 1.6760  data_time: 0.0159  memory: 9677  loss: 42.0343  decode.loss_cls: 0.3086  decode.loss_mask: 2.1004  decode.loss_dice: 1.7586  decode.d0.loss_cls: 0.4606  decode.d0.loss_mask: 2.0860  decode.d0.loss_dice: 1.8037  decode.d1.loss_cls: 0.3091  decode.d1.loss_mask: 2.1153  decode.d1.loss_dice: 1.7795  decode.d2.loss_cls: 0.3174  decode.d2.loss_mask: 2.1169  decode.d2.loss_dice: 1.7479  decode.d3.loss_cls: 0.3058  decode.d3.loss_mask: 2.1138  decode.d3.loss_dice: 1.7505  decode.d4.loss_cls: 0.3274  decode.d4.loss_mask: 2.1202  decode.d4.loss_dice: 1.7493  decode.d5.loss_cls: 0.3140  decode.d5.loss_mask: 2.1226  decode.d5.loss_dice: 1.7449  decode.d6.loss_cls: 0.3360  decode.d6.loss_mask: 2.0975  decode.d6.loss_dice: 1.7319  decode.d7.loss_cls: 0.3289  decode.d7.loss_mask: 2.1151  decode.d7.loss_dice: 1.7590  decode.d8.loss_cls: 0.3312  decode.d8.loss_mask: 2.1146  decode.d8.loss_dice: 1.7676
2025/03/29 15:53:53 - mmengine - INFO - Iter(train) [ 6300/20000]  base_lr: 7.1144e-05 lr: 7.1144e-05  eta: 6:24:24  time: 1.6605  data_time: 0.0155  memory: 9681  loss: 39.7984  decode.loss_cls: 0.3574  decode.loss_mask: 1.8260  decode.loss_dice: 1.7749  decode.d0.loss_cls: 0.5157  decode.d0.loss_mask: 1.8519  decode.d0.loss_dice: 1.7929  decode.d1.loss_cls: 0.3290  decode.d1.loss_mask: 1.8751  decode.d1.loss_dice: 1.7921  decode.d2.loss_cls: 0.3542  decode.d2.loss_mask: 1.8350  decode.d2.loss_dice: 1.7645  decode.d3.loss_cls: 0.3554  decode.d3.loss_mask: 1.8284  decode.d3.loss_dice: 1.7640  decode.d4.loss_cls: 0.3938  decode.d4.loss_mask: 1.8066  decode.d4.loss_dice: 1.7625  decode.d5.loss_cls: 0.3895  decode.d5.loss_mask: 1.7922  decode.d5.loss_dice: 1.7732  decode.d6.loss_cls: 0.3728  decode.d6.loss_mask: 1.8015  decode.d6.loss_dice: 1.7854  decode.d7.loss_cls: 0.3815  decode.d7.loss_mask: 1.7944  decode.d7.loss_dice: 1.7631  decode.d8.loss_cls: 0.3509  decode.d8.loss_mask: 1.8303  decode.d8.loss_dice: 1.7843
2025/03/29 15:55:16 - mmengine - INFO - Iter(train) [ 6350/20000]  base_lr: 7.0911e-05 lr: 7.0911e-05  eta: 6:22:58  time: 1.6669  data_time: 0.0158  memory: 9700  loss: 41.6861  decode.loss_cls: 0.2737  decode.loss_mask: 2.0134  decode.loss_dice: 1.8355  decode.d0.loss_cls: 0.4267  decode.d0.loss_mask: 2.0041  decode.d0.loss_dice: 1.8333  decode.d1.loss_cls: 0.2370  decode.d1.loss_mask: 2.0269  decode.d1.loss_dice: 1.8356  decode.d2.loss_cls: 0.2969  decode.d2.loss_mask: 2.0413  decode.d2.loss_dice: 1.8358  decode.d3.loss_cls: 0.2726  decode.d3.loss_mask: 2.0868  decode.d3.loss_dice: 1.8719  decode.d4.loss_cls: 0.2673  decode.d4.loss_mask: 2.0622  decode.d4.loss_dice: 1.8541  decode.d5.loss_cls: 0.3117  decode.d5.loss_mask: 2.0391  decode.d5.loss_dice: 1.8245  decode.d6.loss_cls: 0.2743  decode.d6.loss_mask: 2.0335  decode.d6.loss_dice: 1.8259  decode.d7.loss_cls: 0.2988  decode.d7.loss_mask: 2.0441  decode.d7.loss_dice: 1.8260  decode.d8.loss_cls: 0.2638  decode.d8.loss_mask: 2.0348  decode.d8.loss_dice: 1.8344
2025/03/29 15:56:40 - mmengine - INFO - Iter(train) [ 6400/20000]  base_lr: 7.0677e-05 lr: 7.0677e-05  eta: 6:21:33  time: 1.6777  data_time: 0.0165  memory: 9694  loss: 39.7131  decode.loss_cls: 0.3541  decode.loss_mask: 1.9345  decode.loss_dice: 1.6701  decode.d0.loss_cls: 0.4449  decode.d0.loss_mask: 1.9728  decode.d0.loss_dice: 1.7311  decode.d1.loss_cls: 0.3447  decode.d1.loss_mask: 1.9149  decode.d1.loss_dice: 1.6668  decode.d2.loss_cls: 0.2955  decode.d2.loss_mask: 1.9570  decode.d2.loss_dice: 1.7218  decode.d3.loss_cls: 0.3123  decode.d3.loss_mask: 1.9180  decode.d3.loss_dice: 1.6632  decode.d4.loss_cls: 0.3166  decode.d4.loss_mask: 1.9488  decode.d4.loss_dice: 1.6622  decode.d5.loss_cls: 0.3377  decode.d5.loss_mask: 1.9374  decode.d5.loss_dice: 1.6593  decode.d6.loss_cls: 0.3894  decode.d6.loss_mask: 1.9419  decode.d6.loss_dice: 1.6629  decode.d7.loss_cls: 0.3494  decode.d7.loss_mask: 1.9475  decode.d7.loss_dice: 1.6842  decode.d8.loss_cls: 0.3281  decode.d8.loss_mask: 1.9507  decode.d8.loss_dice: 1.6955
2025/03/29 15:58:04 - mmengine - INFO - Iter(train) [ 6450/20000]  base_lr: 7.0443e-05 lr: 7.0443e-05  eta: 6:20:07  time: 1.6713  data_time: 0.0166  memory: 9678  loss: 41.4004  decode.loss_cls: 0.5151  decode.loss_mask: 1.8101  decode.loss_dice: 1.8050  decode.d0.loss_cls: 0.5755  decode.d0.loss_mask: 1.8426  decode.d0.loss_dice: 1.9095  decode.d1.loss_cls: 0.4882  decode.d1.loss_mask: 1.8057  decode.d1.loss_dice: 1.8320  decode.d2.loss_cls: 0.5417  decode.d2.loss_mask: 1.8173  decode.d2.loss_dice: 1.7956  decode.d3.loss_cls: 0.5620  decode.d3.loss_mask: 1.8266  decode.d3.loss_dice: 1.7409  decode.d4.loss_cls: 0.4610  decode.d4.loss_mask: 1.8073  decode.d4.loss_dice: 1.8070  decode.d5.loss_cls: 0.5107  decode.d5.loss_mask: 1.7845  decode.d5.loss_dice: 1.7946  decode.d6.loss_cls: 0.5641  decode.d6.loss_mask: 1.7691  decode.d6.loss_dice: 1.7634  decode.d7.loss_cls: 0.5433  decode.d7.loss_mask: 1.7930  decode.d7.loss_dice: 1.8046  decode.d8.loss_cls: 0.5524  decode.d8.loss_mask: 1.7902  decode.d8.loss_dice: 1.7875
2025/03/29 15:59:27 - mmengine - INFO - Iter(train) [ 6500/20000]  base_lr: 7.0209e-05 lr: 7.0209e-05  eta: 6:18:43  time: 1.6838  data_time: 0.0221  memory: 9673  loss: 42.6441  decode.loss_cls: 0.4621  decode.loss_mask: 1.9892  decode.loss_dice: 1.8089  decode.d0.loss_cls: 0.4714  decode.d0.loss_mask: 2.0532  decode.d0.loss_dice: 1.8613  decode.d1.loss_cls: 0.4159  decode.d1.loss_mask: 1.9958  decode.d1.loss_dice: 1.7899  decode.d2.loss_cls: 0.4500  decode.d2.loss_mask: 1.9795  decode.d2.loss_dice: 1.8095  decode.d3.loss_cls: 0.4454  decode.d3.loss_mask: 2.0321  decode.d3.loss_dice: 1.7917  decode.d4.loss_cls: 0.5153  decode.d4.loss_mask: 1.9755  decode.d4.loss_dice: 1.7667  decode.d5.loss_cls: 0.4438  decode.d5.loss_mask: 2.0369  decode.d5.loss_dice: 1.7727  decode.d6.loss_cls: 0.4561  decode.d6.loss_mask: 2.0317  decode.d6.loss_dice: 1.7652  decode.d7.loss_cls: 0.4712  decode.d7.loss_mask: 2.0453  decode.d7.loss_dice: 1.7847  decode.d8.loss_cls: 0.4457  decode.d8.loss_mask: 1.9988  decode.d8.loss_dice: 1.7787
2025/03/29 16:00:51 - mmengine - INFO - Iter(train) [ 6550/20000]  base_lr: 6.9975e-05 lr: 6.9975e-05  eta: 6:17:18  time: 1.6710  data_time: 0.0161  memory: 9689  loss: 38.4664  decode.loss_cls: 0.4304  decode.loss_mask: 1.7641  decode.loss_dice: 1.6237  decode.d0.loss_cls: 0.5165  decode.d0.loss_mask: 1.7540  decode.d0.loss_dice: 1.6819  decode.d1.loss_cls: 0.4413  decode.d1.loss_mask: 1.7744  decode.d1.loss_dice: 1.6337  decode.d2.loss_cls: 0.3954  decode.d2.loss_mask: 1.7996  decode.d2.loss_dice: 1.6372  decode.d3.loss_cls: 0.4295  decode.d3.loss_mask: 1.7626  decode.d3.loss_dice: 1.6224  decode.d4.loss_cls: 0.4273  decode.d4.loss_mask: 1.7619  decode.d4.loss_dice: 1.6378  decode.d5.loss_cls: 0.4794  decode.d5.loss_mask: 1.7367  decode.d5.loss_dice: 1.6215  decode.d6.loss_cls: 0.4550  decode.d6.loss_mask: 1.7692  decode.d6.loss_dice: 1.6171  decode.d7.loss_cls: 0.4792  decode.d7.loss_mask: 1.7289  decode.d7.loss_dice: 1.6451  decode.d8.loss_cls: 0.4073  decode.d8.loss_mask: 1.7773  decode.d8.loss_dice: 1.6561
2025/03/29 16:02:15 - mmengine - INFO - Iter(train) [ 6600/20000]  base_lr: 6.9741e-05 lr: 6.9741e-05  eta: 6:15:53  time: 1.6732  data_time: 0.0165  memory: 9686  loss: 37.8856  decode.loss_cls: 0.2747  decode.loss_mask: 1.8439  decode.loss_dice: 1.6776  decode.d0.loss_cls: 0.3693  decode.d0.loss_mask: 1.8316  decode.d0.loss_dice: 1.8000  decode.d1.loss_cls: 0.3173  decode.d1.loss_mask: 1.7981  decode.d1.loss_dice: 1.6795  decode.d2.loss_cls: 0.3089  decode.d2.loss_mask: 1.7759  decode.d2.loss_dice: 1.6276  decode.d3.loss_cls: 0.2970  decode.d3.loss_mask: 1.7799  decode.d3.loss_dice: 1.6834  decode.d4.loss_cls: 0.3182  decode.d4.loss_mask: 1.7734  decode.d4.loss_dice: 1.6646  decode.d5.loss_cls: 0.3200  decode.d5.loss_mask: 1.7708  decode.d5.loss_dice: 1.6497  decode.d6.loss_cls: 0.3125  decode.d6.loss_mask: 1.8161  decode.d6.loss_dice: 1.6665  decode.d7.loss_cls: 0.3336  decode.d7.loss_mask: 1.7738  decode.d7.loss_dice: 1.6478  decode.d8.loss_cls: 0.2686  decode.d8.loss_mask: 1.8197  decode.d8.loss_dice: 1.6854
2025/03/29 16:03:39 - mmengine - INFO - Iter(train) [ 6650/20000]  base_lr: 6.9507e-05 lr: 6.9507e-05  eta: 6:14:28  time: 1.6818  data_time: 0.0170  memory: 9694  loss: 40.0172  decode.loss_cls: 0.5046  decode.loss_mask: 1.7656  decode.loss_dice: 1.7068  decode.d0.loss_cls: 0.4836  decode.d0.loss_mask: 1.7494  decode.d0.loss_dice: 1.7849  decode.d1.loss_cls: 0.5144  decode.d1.loss_mask: 1.7556  decode.d1.loss_dice: 1.6919  decode.d2.loss_cls: 0.5298  decode.d2.loss_mask: 1.7627  decode.d2.loss_dice: 1.6830  decode.d3.loss_cls: 0.5522  decode.d3.loss_mask: 1.7888  decode.d3.loss_dice: 1.6575  decode.d4.loss_cls: 0.5107  decode.d4.loss_mask: 1.8278  decode.d4.loss_dice: 1.6963  decode.d5.loss_cls: 0.5515  decode.d5.loss_mask: 1.8113  decode.d5.loss_dice: 1.6971  decode.d6.loss_cls: 0.4775  decode.d6.loss_mask: 1.7961  decode.d6.loss_dice: 1.6946  decode.d7.loss_cls: 0.4870  decode.d7.loss_mask: 1.8240  decode.d7.loss_dice: 1.7189  decode.d8.loss_cls: 0.4850  decode.d8.loss_mask: 1.7845  decode.d8.loss_dice: 1.7239
2025/03/29 16:05:02 - mmengine - INFO - Iter(train) [ 6700/20000]  base_lr: 6.9272e-05 lr: 6.9272e-05  eta: 6:13:02  time: 1.6700  data_time: 0.0157  memory: 9693  loss: 37.7941  decode.loss_cls: 0.2792  decode.loss_mask: 1.8038  decode.loss_dice: 1.6624  decode.d0.loss_cls: 0.4185  decode.d0.loss_mask: 1.8108  decode.d0.loss_dice: 1.7450  decode.d1.loss_cls: 0.3108  decode.d1.loss_mask: 1.8125  decode.d1.loss_dice: 1.6766  decode.d2.loss_cls: 0.3258  decode.d2.loss_mask: 1.7972  decode.d2.loss_dice: 1.6245  decode.d3.loss_cls: 0.2981  decode.d3.loss_mask: 1.7929  decode.d3.loss_dice: 1.6468  decode.d4.loss_cls: 0.3541  decode.d4.loss_mask: 1.7764  decode.d4.loss_dice: 1.6575  decode.d5.loss_cls: 0.3498  decode.d5.loss_mask: 1.8028  decode.d5.loss_dice: 1.6784  decode.d6.loss_cls: 0.3480  decode.d6.loss_mask: 1.7613  decode.d6.loss_dice: 1.6209  decode.d7.loss_cls: 0.2684  decode.d7.loss_mask: 1.8043  decode.d7.loss_dice: 1.6625  decode.d8.loss_cls: 0.3137  decode.d8.loss_mask: 1.7788  decode.d8.loss_dice: 1.6123
2025/03/29 16:06:26 - mmengine - INFO - Iter(train) [ 6750/20000]  base_lr: 6.9038e-05 lr: 6.9038e-05  eta: 6:11:37  time: 1.6717  data_time: 0.0165  memory: 9689  loss: 42.5068  decode.loss_cls: 0.3685  decode.loss_mask: 2.0479  decode.loss_dice: 1.8698  decode.d0.loss_cls: 0.4177  decode.d0.loss_mask: 2.0297  decode.d0.loss_dice: 1.9148  decode.d1.loss_cls: 0.3499  decode.d1.loss_mask: 1.9877  decode.d1.loss_dice: 1.8722  decode.d2.loss_cls: 0.4009  decode.d2.loss_mask: 1.9682  decode.d2.loss_dice: 1.8313  decode.d3.loss_cls: 0.3981  decode.d3.loss_mask: 1.9903  decode.d3.loss_dice: 1.8146  decode.d4.loss_cls: 0.3564  decode.d4.loss_mask: 2.0186  decode.d4.loss_dice: 1.8485  decode.d5.loss_cls: 0.3640  decode.d5.loss_mask: 2.0672  decode.d5.loss_dice: 1.8714  decode.d6.loss_cls: 0.4062  decode.d6.loss_mask: 1.9924  decode.d6.loss_dice: 1.8620  decode.d7.loss_cls: 0.3887  decode.d7.loss_mask: 1.9871  decode.d7.loss_dice: 1.8539  decode.d8.loss_cls: 0.3642  decode.d8.loss_mask: 2.0193  decode.d8.loss_dice: 1.8453
2025/03/29 16:07:50 - mmengine - INFO - Iter(train) [ 6800/20000]  base_lr: 6.8803e-05 lr: 6.8803e-05  eta: 6:10:13  time: 1.6696  data_time: 0.0158  memory: 9681  loss: 40.1555  decode.loss_cls: 0.3892  decode.loss_mask: 1.8405  decode.loss_dice: 1.7693  decode.d0.loss_cls: 0.4892  decode.d0.loss_mask: 1.8924  decode.d0.loss_dice: 1.7870  decode.d1.loss_cls: 0.3758  decode.d1.loss_mask: 1.8158  decode.d1.loss_dice: 1.7503  decode.d2.loss_cls: 0.3563  decode.d2.loss_mask: 1.8436  decode.d2.loss_dice: 1.7486  decode.d3.loss_cls: 0.3888  decode.d3.loss_mask: 1.8482  decode.d3.loss_dice: 1.7381  decode.d4.loss_cls: 0.3599  decode.d4.loss_mask: 1.8365  decode.d4.loss_dice: 1.7614  decode.d5.loss_cls: 0.4039  decode.d5.loss_mask: 1.8644  decode.d5.loss_dice: 1.7686  decode.d6.loss_cls: 0.4096  decode.d6.loss_mask: 1.8432  decode.d6.loss_dice: 1.7757  decode.d7.loss_cls: 0.4039  decode.d7.loss_mask: 1.8633  decode.d7.loss_dice: 1.7804  decode.d8.loss_cls: 0.3801  decode.d8.loss_mask: 1.8809  decode.d8.loss_dice: 1.7903
2025/03/29 16:09:13 - mmengine - INFO - Iter(train) [ 6850/20000]  base_lr: 6.8569e-05 lr: 6.8569e-05  eta: 6:08:47  time: 1.6703  data_time: 0.0164  memory: 9680  loss: 39.7352  decode.loss_cls: 0.3391  decode.loss_mask: 1.8414  decode.loss_dice: 1.7589  decode.d0.loss_cls: 0.5084  decode.d0.loss_mask: 1.8279  decode.d0.loss_dice: 1.7688  decode.d1.loss_cls: 0.4302  decode.d1.loss_mask: 1.8410  decode.d1.loss_dice: 1.7488  decode.d2.loss_cls: 0.3644  decode.d2.loss_mask: 1.8522  decode.d2.loss_dice: 1.7285  decode.d3.loss_cls: 0.3346  decode.d3.loss_mask: 1.8665  decode.d3.loss_dice: 1.7185  decode.d4.loss_cls: 0.4666  decode.d4.loss_mask: 1.8480  decode.d4.loss_dice: 1.7285  decode.d5.loss_cls: 0.3715  decode.d5.loss_mask: 1.8602  decode.d5.loss_dice: 1.7279  decode.d6.loss_cls: 0.4107  decode.d6.loss_mask: 1.8592  decode.d6.loss_dice: 1.6986  decode.d7.loss_cls: 0.3444  decode.d7.loss_mask: 1.8557  decode.d7.loss_dice: 1.7200  decode.d8.loss_cls: 0.3735  decode.d8.loss_mask: 1.8639  decode.d8.loss_dice: 1.6774
2025/03/29 16:10:37 - mmengine - INFO - Iter(train) [ 6900/20000]  base_lr: 6.8334e-05 lr: 6.8334e-05  eta: 6:07:22  time: 1.6684  data_time: 0.0162  memory: 9692  loss: 38.1430  decode.loss_cls: 0.4158  decode.loss_mask: 1.7989  decode.loss_dice: 1.5704  decode.d0.loss_cls: 0.5087  decode.d0.loss_mask: 1.7881  decode.d0.loss_dice: 1.6517  decode.d1.loss_cls: 0.4623  decode.d1.loss_mask: 1.8091  decode.d1.loss_dice: 1.6003  decode.d2.loss_cls: 0.4208  decode.d2.loss_mask: 1.8078  decode.d2.loss_dice: 1.6095  decode.d3.loss_cls: 0.4101  decode.d3.loss_mask: 1.7996  decode.d3.loss_dice: 1.5907  decode.d4.loss_cls: 0.4418  decode.d4.loss_mask: 1.7928  decode.d4.loss_dice: 1.5792  decode.d5.loss_cls: 0.4314  decode.d5.loss_mask: 1.7864  decode.d5.loss_dice: 1.5843  decode.d6.loss_cls: 0.4276  decode.d6.loss_mask: 1.7824  decode.d6.loss_dice: 1.5688  decode.d7.loss_cls: 0.4003  decode.d7.loss_mask: 1.7786  decode.d7.loss_dice: 1.5743  decode.d8.loss_cls: 0.4357  decode.d8.loss_mask: 1.7721  decode.d8.loss_dice: 1.5434
2025/03/29 16:12:00 - mmengine - INFO - Iter(train) [ 6950/20000]  base_lr: 6.8099e-05 lr: 6.8099e-05  eta: 6:05:57  time: 1.6675  data_time: 0.0160  memory: 9696  loss: 39.9793  decode.loss_cls: 0.3472  decode.loss_mask: 1.8524  decode.loss_dice: 1.8313  decode.d0.loss_cls: 0.4243  decode.d0.loss_mask: 1.8668  decode.d0.loss_dice: 1.8306  decode.d1.loss_cls: 0.3082  decode.d1.loss_mask: 1.8772  decode.d1.loss_dice: 1.8063  decode.d2.loss_cls: 0.3080  decode.d2.loss_mask: 1.8459  decode.d2.loss_dice: 1.7930  decode.d3.loss_cls: 0.3257  decode.d3.loss_mask: 1.8406  decode.d3.loss_dice: 1.7882  decode.d4.loss_cls: 0.3326  decode.d4.loss_mask: 1.8295  decode.d4.loss_dice: 1.7738  decode.d5.loss_cls: 0.3330  decode.d5.loss_mask: 1.8185  decode.d5.loss_dice: 1.8026  decode.d6.loss_cls: 0.3705  decode.d6.loss_mask: 1.8076  decode.d6.loss_dice: 1.7995  decode.d7.loss_cls: 0.4205  decode.d7.loss_mask: 1.8149  decode.d7.loss_dice: 1.8048  decode.d8.loss_cls: 0.3305  decode.d8.loss_mask: 1.8567  decode.d8.loss_dice: 1.8388
2025/03/29 16:13:24 - mmengine - INFO - Exp name: u2r_20250329_122454
2025/03/29 16:13:24 - mmengine - INFO - Iter(train) [ 7000/20000]  base_lr: 6.7864e-05 lr: 6.7864e-05  eta: 6:04:31  time: 1.6773  data_time: 0.0166  memory: 9688  loss: 39.5375  decode.loss_cls: 0.2859  decode.loss_mask: 1.8170  decode.loss_dice: 1.8160  decode.d0.loss_cls: 0.3650  decode.d0.loss_mask: 1.8330  decode.d0.loss_dice: 1.8859  decode.d1.loss_cls: 0.3334  decode.d1.loss_mask: 1.7967  decode.d1.loss_dice: 1.8233  decode.d2.loss_cls: 0.3015  decode.d2.loss_mask: 1.8104  decode.d2.loss_dice: 1.8318  decode.d3.loss_cls: 0.3141  decode.d3.loss_mask: 1.7861  decode.d3.loss_dice: 1.8196  decode.d4.loss_cls: 0.2851  decode.d4.loss_mask: 1.7998  decode.d4.loss_dice: 1.8276  decode.d5.loss_cls: 0.3130  decode.d5.loss_mask: 1.8065  decode.d5.loss_dice: 1.8260  decode.d6.loss_cls: 0.2991  decode.d6.loss_mask: 1.8146  decode.d6.loss_dice: 1.8398  decode.d7.loss_cls: 0.2821  decode.d7.loss_mask: 1.8185  decode.d7.loss_dice: 1.8584  decode.d8.loss_cls: 0.3171  decode.d8.loss_mask: 1.7958  decode.d8.loss_dice: 1.8342
2025/03/29 16:14:47 - mmengine - INFO - Iter(train) [ 7050/20000]  base_lr: 6.7629e-05 lr: 6.7629e-05  eta: 6:03:06  time: 1.6676  data_time: 0.0157  memory: 9688  loss: 38.4133  decode.loss_cls: 0.3826  decode.loss_mask: 1.7625  decode.loss_dice: 1.6678  decode.d0.loss_cls: 0.4184  decode.d0.loss_mask: 1.7740  decode.d0.loss_dice: 1.7652  decode.d1.loss_cls: 0.3895  decode.d1.loss_mask: 1.7660  decode.d1.loss_dice: 1.6798  decode.d2.loss_cls: 0.3580  decode.d2.loss_mask: 1.8360  decode.d2.loss_dice: 1.6893  decode.d3.loss_cls: 0.3644  decode.d3.loss_mask: 1.8362  decode.d3.loss_dice: 1.7039  decode.d4.loss_cls: 0.3927  decode.d4.loss_mask: 1.7623  decode.d4.loss_dice: 1.6702  decode.d5.loss_cls: 0.3491  decode.d5.loss_mask: 1.7878  decode.d5.loss_dice: 1.6440  decode.d6.loss_cls: 0.3529  decode.d6.loss_mask: 1.7548  decode.d6.loss_dice: 1.6489  decode.d7.loss_cls: 0.3826  decode.d7.loss_mask: 1.7728  decode.d7.loss_dice: 1.6752  decode.d8.loss_cls: 0.3770  decode.d8.loss_mask: 1.7711  decode.d8.loss_dice: 1.6782
2025/03/29 16:16:11 - mmengine - INFO - Iter(train) [ 7100/20000]  base_lr: 6.7394e-05 lr: 6.7394e-05  eta: 6:01:41  time: 1.6749  data_time: 0.0163  memory: 9674  loss: 39.5423  decode.loss_cls: 0.5183  decode.loss_mask: 1.7202  decode.loss_dice: 1.7301  decode.d0.loss_cls: 0.5890  decode.d0.loss_mask: 1.7075  decode.d0.loss_dice: 1.7528  decode.d1.loss_cls: 0.5444  decode.d1.loss_mask: 1.7140  decode.d1.loss_dice: 1.7044  decode.d2.loss_cls: 0.5262  decode.d2.loss_mask: 1.7123  decode.d2.loss_dice: 1.6917  decode.d3.loss_cls: 0.5251  decode.d3.loss_mask: 1.7229  decode.d3.loss_dice: 1.7139  decode.d4.loss_cls: 0.5081  decode.d4.loss_mask: 1.7050  decode.d4.loss_dice: 1.6747  decode.d5.loss_cls: 0.5097  decode.d5.loss_mask: 1.7151  decode.d5.loss_dice: 1.6938  decode.d6.loss_cls: 0.4732  decode.d6.loss_mask: 1.7098  decode.d6.loss_dice: 1.7253  decode.d7.loss_cls: 0.5431  decode.d7.loss_mask: 1.7772  decode.d7.loss_dice: 1.7120  decode.d8.loss_cls: 0.5038  decode.d8.loss_mask: 1.7309  decode.d8.loss_dice: 1.6877
2025/03/29 16:17:35 - mmengine - INFO - Iter(train) [ 7150/20000]  base_lr: 6.7159e-05 lr: 6.7159e-05  eta: 6:00:17  time: 1.6752  data_time: 0.0175  memory: 9745  loss: 40.7018  decode.loss_cls: 0.3040  decode.loss_mask: 1.9444  decode.loss_dice: 1.8484  decode.d0.loss_cls: 0.3440  decode.d0.loss_mask: 1.9967  decode.d0.loss_dice: 1.8510  decode.d1.loss_cls: 0.2878  decode.d1.loss_mask: 1.9483  decode.d1.loss_dice: 1.7649  decode.d2.loss_cls: 0.3195  decode.d2.loss_mask: 1.9481  decode.d2.loss_dice: 1.7868  decode.d3.loss_cls: 0.2897  decode.d3.loss_mask: 1.9223  decode.d3.loss_dice: 1.8018  decode.d4.loss_cls: 0.3099  decode.d4.loss_mask: 1.9635  decode.d4.loss_dice: 1.8318  decode.d5.loss_cls: 0.3571  decode.d5.loss_mask: 1.8979  decode.d5.loss_dice: 1.7922  decode.d6.loss_cls: 0.2911  decode.d6.loss_mask: 1.9520  decode.d6.loss_dice: 1.8097  decode.d7.loss_cls: 0.2643  decode.d7.loss_mask: 1.9736  decode.d7.loss_dice: 1.8216  decode.d8.loss_cls: 0.2626  decode.d8.loss_mask: 1.9753  decode.d8.loss_dice: 1.8414
2025/03/29 16:18:59 - mmengine - INFO - Iter(train) [ 7200/20000]  base_lr: 6.6924e-05 lr: 6.6924e-05  eta: 5:58:52  time: 1.6727  data_time: 0.0162  memory: 9686  loss: 42.4169  decode.loss_cls: 0.5757  decode.loss_mask: 1.8621  decode.loss_dice: 1.7959  decode.d0.loss_cls: 0.5123  decode.d0.loss_mask: 1.8607  decode.d0.loss_dice: 1.9063  decode.d1.loss_cls: 0.6777  decode.d1.loss_mask: 1.8386  decode.d1.loss_dice: 1.8280  decode.d2.loss_cls: 0.5981  decode.d2.loss_mask: 1.8711  decode.d2.loss_dice: 1.8352  decode.d3.loss_cls: 0.6131  decode.d3.loss_mask: 1.8035  decode.d3.loss_dice: 1.7803  decode.d4.loss_cls: 0.6210  decode.d4.loss_mask: 1.8294  decode.d4.loss_dice: 1.7986  decode.d5.loss_cls: 0.6265  decode.d5.loss_mask: 1.8002  decode.d5.loss_dice: 1.7757  decode.d6.loss_cls: 0.5850  decode.d6.loss_mask: 1.7912  decode.d6.loss_dice: 1.8013  decode.d7.loss_cls: 0.5560  decode.d7.loss_mask: 1.8409  decode.d7.loss_dice: 1.8000  decode.d8.loss_cls: 0.5674  decode.d8.loss_mask: 1.8620  decode.d8.loss_dice: 1.8032
2025/03/29 16:20:22 - mmengine - INFO - Iter(train) [ 7250/20000]  base_lr: 6.6689e-05 lr: 6.6689e-05  eta: 5:57:27  time: 1.6707  data_time: 0.0173  memory: 9694  loss: 37.5537  decode.loss_cls: 0.3715  decode.loss_mask: 1.7179  decode.loss_dice: 1.6400  decode.d0.loss_cls: 0.4919  decode.d0.loss_mask: 1.6986  decode.d0.loss_dice: 1.6627  decode.d1.loss_cls: 0.3723  decode.d1.loss_mask: 1.7104  decode.d1.loss_dice: 1.6501  decode.d2.loss_cls: 0.3708  decode.d2.loss_mask: 1.7465  decode.d2.loss_dice: 1.6683  decode.d3.loss_cls: 0.3226  decode.d3.loss_mask: 1.7436  decode.d3.loss_dice: 1.6696  decode.d4.loss_cls: 0.3578  decode.d4.loss_mask: 1.7298  decode.d4.loss_dice: 1.6506  decode.d5.loss_cls: 0.3938  decode.d5.loss_mask: 1.6873  decode.d5.loss_dice: 1.6365  decode.d6.loss_cls: 0.3932  decode.d6.loss_mask: 1.7254  decode.d6.loss_dice: 1.6507  decode.d7.loss_cls: 0.3853  decode.d7.loss_mask: 1.7126  decode.d7.loss_dice: 1.6216  decode.d8.loss_cls: 0.3564  decode.d8.loss_mask: 1.7528  decode.d8.loss_dice: 1.6628
2025/03/29 16:21:46 - mmengine - INFO - Iter(train) [ 7300/20000]  base_lr: 6.6453e-05 lr: 6.6453e-05  eta: 5:56:02  time: 1.6712  data_time: 0.0158  memory: 9679  loss: 40.7860  decode.loss_cls: 0.3706  decode.loss_mask: 1.9179  decode.loss_dice: 1.8017  decode.d0.loss_cls: 0.4253  decode.d0.loss_mask: 1.9126  decode.d0.loss_dice: 1.8778  decode.d1.loss_cls: 0.3711  decode.d1.loss_mask: 1.8731  decode.d1.loss_dice: 1.7868  decode.d2.loss_cls: 0.3462  decode.d2.loss_mask: 1.8774  decode.d2.loss_dice: 1.7785  decode.d3.loss_cls: 0.3446  decode.d3.loss_mask: 1.8994  decode.d3.loss_dice: 1.8112  decode.d4.loss_cls: 0.3977  decode.d4.loss_mask: 1.8772  decode.d4.loss_dice: 1.8226  decode.d5.loss_cls: 0.4186  decode.d5.loss_mask: 1.8757  decode.d5.loss_dice: 1.8116  decode.d6.loss_cls: 0.4074  decode.d6.loss_mask: 1.8941  decode.d6.loss_dice: 1.7811  decode.d7.loss_cls: 0.3820  decode.d7.loss_mask: 1.9070  decode.d7.loss_dice: 1.7623  decode.d8.loss_cls: 0.3977  decode.d8.loss_mask: 1.8805  decode.d8.loss_dice: 1.7763
2025/03/29 16:23:09 - mmengine - INFO - Iter(train) [ 7350/20000]  base_lr: 6.6218e-05 lr: 6.6218e-05  eta: 5:54:37  time: 1.6832  data_time: 0.0162  memory: 9681  loss: 35.4995  decode.loss_cls: 0.3872  decode.loss_mask: 1.6460  decode.loss_dice: 1.5110  decode.d0.loss_cls: 0.4958  decode.d0.loss_mask: 1.6665  decode.d0.loss_dice: 1.6127  decode.d1.loss_cls: 0.3723  decode.d1.loss_mask: 1.6592  decode.d1.loss_dice: 1.4955  decode.d2.loss_cls: 0.3846  decode.d2.loss_mask: 1.6956  decode.d2.loss_dice: 1.5194  decode.d3.loss_cls: 0.3623  decode.d3.loss_mask: 1.6759  decode.d3.loss_dice: 1.5193  decode.d4.loss_cls: 0.3681  decode.d4.loss_mask: 1.6381  decode.d4.loss_dice: 1.4778  decode.d5.loss_cls: 0.3814  decode.d5.loss_mask: 1.6417  decode.d5.loss_dice: 1.4654  decode.d6.loss_cls: 0.3660  decode.d6.loss_mask: 1.6272  decode.d6.loss_dice: 1.4746  decode.d7.loss_cls: 0.4371  decode.d7.loss_mask: 1.6246  decode.d7.loss_dice: 1.4780  decode.d8.loss_cls: 0.4137  decode.d8.loss_mask: 1.6174  decode.d8.loss_dice: 1.4853
2025/03/29 16:24:33 - mmengine - INFO - Iter(train) [ 7400/20000]  base_lr: 6.5982e-05 lr: 6.5982e-05  eta: 5:53:12  time: 1.6787  data_time: 0.0162  memory: 9688  loss: 39.8267  decode.loss_cls: 0.3592  decode.loss_mask: 1.8612  decode.loss_dice: 1.7214  decode.d0.loss_cls: 0.3619  decode.d0.loss_mask: 1.9022  decode.d0.loss_dice: 1.8356  decode.d1.loss_cls: 0.3730  decode.d1.loss_mask: 1.8697  decode.d1.loss_dice: 1.7857  decode.d2.loss_cls: 0.3389  decode.d2.loss_mask: 1.8696  decode.d2.loss_dice: 1.7690  decode.d3.loss_cls: 0.3194  decode.d3.loss_mask: 1.8449  decode.d3.loss_dice: 1.7648  decode.d4.loss_cls: 0.3344  decode.d4.loss_mask: 1.8524  decode.d4.loss_dice: 1.7601  decode.d5.loss_cls: 0.3103  decode.d5.loss_mask: 1.8627  decode.d5.loss_dice: 1.7541  decode.d6.loss_cls: 0.3507  decode.d6.loss_mask: 1.8590  decode.d6.loss_dice: 1.7530  decode.d7.loss_cls: 0.3585  decode.d7.loss_mask: 1.8532  decode.d7.loss_dice: 1.8056  decode.d8.loss_cls: 0.3385  decode.d8.loss_mask: 1.8712  decode.d8.loss_dice: 1.7868
2025/03/29 16:25:56 - mmengine - INFO - Iter(train) [ 7450/20000]  base_lr: 6.5746e-05 lr: 6.5746e-05  eta: 5:51:47  time: 1.6421  data_time: 0.0156  memory: 9700  loss: 39.2727  decode.loss_cls: 0.4266  decode.loss_mask: 1.6926  decode.loss_dice: 1.7785  decode.d0.loss_cls: 0.4585  decode.d0.loss_mask: 1.6934  decode.d0.loss_dice: 1.8748  decode.d1.loss_cls: 0.3922  decode.d1.loss_mask: 1.7190  decode.d1.loss_dice: 1.7828  decode.d2.loss_cls: 0.3817  decode.d2.loss_mask: 1.7386  decode.d2.loss_dice: 1.7689  decode.d3.loss_cls: 0.3802  decode.d3.loss_mask: 1.7219  decode.d3.loss_dice: 1.7951  decode.d4.loss_cls: 0.4564  decode.d4.loss_mask: 1.7043  decode.d4.loss_dice: 1.7434  decode.d5.loss_cls: 0.4752  decode.d5.loss_mask: 1.7114  decode.d5.loss_dice: 1.7697  decode.d6.loss_cls: 0.4338  decode.d6.loss_mask: 1.7347  decode.d6.loss_dice: 1.7597  decode.d7.loss_cls: 0.4695  decode.d7.loss_mask: 1.7136  decode.d7.loss_dice: 1.8013  decode.d8.loss_cls: 0.4520  decode.d8.loss_mask: 1.7060  decode.d8.loss_dice: 1.7370
2025/03/29 16:27:24 - mmengine - INFO - Iter(train) [ 7500/20000]  base_lr: 6.5511e-05 lr: 6.5511e-05  eta: 5:50:28  time: 1.7788  data_time: 0.0157  memory: 9685  loss: 36.2207  decode.loss_cls: 0.2462  decode.loss_mask: 1.7693  decode.loss_dice: 1.5852  decode.d0.loss_cls: 0.3588  decode.d0.loss_mask: 1.7860  decode.d0.loss_dice: 1.6116  decode.d1.loss_cls: 0.2643  decode.d1.loss_mask: 1.7804  decode.d1.loss_dice: 1.5540  decode.d2.loss_cls: 0.2385  decode.d2.loss_mask: 1.7822  decode.d2.loss_dice: 1.5721  decode.d3.loss_cls: 0.2608  decode.d3.loss_mask: 1.7578  decode.d3.loss_dice: 1.5552  decode.d4.loss_cls: 0.2666  decode.d4.loss_mask: 1.7679  decode.d4.loss_dice: 1.5774  decode.d5.loss_cls: 0.2905  decode.d5.loss_mask: 1.7733  decode.d5.loss_dice: 1.5662  decode.d6.loss_cls: 0.2835  decode.d6.loss_mask: 1.7670  decode.d6.loss_dice: 1.5645  decode.d7.loss_cls: 0.2605  decode.d7.loss_mask: 1.7879  decode.d7.loss_dice: 1.5937  decode.d8.loss_cls: 0.2943  decode.d8.loss_mask: 1.7501  decode.d8.loss_dice: 1.5551
2025/03/29 16:28:53 - mmengine - INFO - Iter(train) [ 7550/20000]  base_lr: 6.5275e-05 lr: 6.5275e-05  eta: 5:49:13  time: 1.7797  data_time: 0.0162  memory: 9681  loss: 36.6964  decode.loss_cls: 0.2409  decode.loss_mask: 1.7982  decode.loss_dice: 1.6304  decode.d0.loss_cls: 0.3346  decode.d0.loss_mask: 1.8448  decode.d0.loss_dice: 1.7047  decode.d1.loss_cls: 0.2146  decode.d1.loss_mask: 1.8029  decode.d1.loss_dice: 1.6360  decode.d2.loss_cls: 0.2301  decode.d2.loss_mask: 1.7748  decode.d2.loss_dice: 1.6251  decode.d3.loss_cls: 0.2700  decode.d3.loss_mask: 1.7367  decode.d3.loss_dice: 1.5968  decode.d4.loss_cls: 0.2990  decode.d4.loss_mask: 1.7429  decode.d4.loss_dice: 1.6001  decode.d5.loss_cls: 0.2776  decode.d5.loss_mask: 1.7648  decode.d5.loss_dice: 1.6027  decode.d6.loss_cls: 0.2586  decode.d6.loss_mask: 1.7768  decode.d6.loss_dice: 1.6021  decode.d7.loss_cls: 0.2039  decode.d7.loss_mask: 1.8168  decode.d7.loss_dice: 1.6475  decode.d8.loss_cls: 0.2841  decode.d8.loss_mask: 1.7670  decode.d8.loss_dice: 1.6119
2025/03/29 16:30:23 - mmengine - INFO - Iter(train) [ 7600/20000]  base_lr: 6.5039e-05 lr: 6.5039e-05  eta: 5:47:58  time: 1.7799  data_time: 0.0169  memory: 9684  loss: 36.8849  decode.loss_cls: 0.4013  decode.loss_mask: 1.6960  decode.loss_dice: 1.6154  decode.d0.loss_cls: 0.4748  decode.d0.loss_mask: 1.7262  decode.d0.loss_dice: 1.6750  decode.d1.loss_cls: 0.4080  decode.d1.loss_mask: 1.6335  decode.d1.loss_dice: 1.6135  decode.d2.loss_cls: 0.3479  decode.d2.loss_mask: 1.6954  decode.d2.loss_dice: 1.6147  decode.d3.loss_cls: 0.3535  decode.d3.loss_mask: 1.7026  decode.d3.loss_dice: 1.6084  decode.d4.loss_cls: 0.3893  decode.d4.loss_mask: 1.6756  decode.d4.loss_dice: 1.6134  decode.d5.loss_cls: 0.3654  decode.d5.loss_mask: 1.6822  decode.d5.loss_dice: 1.6253  decode.d6.loss_cls: 0.3353  decode.d6.loss_mask: 1.6745  decode.d6.loss_dice: 1.6010  decode.d7.loss_cls: 0.4259  decode.d7.loss_mask: 1.6846  decode.d7.loss_dice: 1.6106  decode.d8.loss_cls: 0.3859  decode.d8.loss_mask: 1.6564  decode.d8.loss_dice: 1.5930
2025/03/29 16:31:52 - mmengine - INFO - Iter(train) [ 7650/20000]  base_lr: 6.4803e-05 lr: 6.4803e-05  eta: 5:46:42  time: 1.7804  data_time: 0.0153  memory: 9684  loss: 39.1367  decode.loss_cls: 0.3941  decode.loss_mask: 1.9014  decode.loss_dice: 1.6128  decode.d0.loss_cls: 0.5525  decode.d0.loss_mask: 1.8696  decode.d0.loss_dice: 1.6366  decode.d1.loss_cls: 0.4019  decode.d1.loss_mask: 1.8483  decode.d1.loss_dice: 1.6075  decode.d2.loss_cls: 0.4466  decode.d2.loss_mask: 1.8685  decode.d2.loss_dice: 1.5871  decode.d3.loss_cls: 0.4238  decode.d3.loss_mask: 1.8469  decode.d3.loss_dice: 1.5607  decode.d4.loss_cls: 0.4651  decode.d4.loss_mask: 1.8892  decode.d4.loss_dice: 1.5919  decode.d5.loss_cls: 0.4069  decode.d5.loss_mask: 1.8808  decode.d5.loss_dice: 1.5980  decode.d6.loss_cls: 0.4494  decode.d6.loss_mask: 1.8663  decode.d6.loss_dice: 1.5997  decode.d7.loss_cls: 0.4132  decode.d7.loss_mask: 1.9145  decode.d7.loss_dice: 1.6133  decode.d8.loss_cls: 0.3738  decode.d8.loss_mask: 1.9243  decode.d8.loss_dice: 1.5922
2025/03/29 16:33:18 - mmengine - INFO - Iter(train) [ 7700/20000]  base_lr: 6.4566e-05 lr: 6.4566e-05  eta: 5:45:21  time: 1.4938  data_time: 0.0158  memory: 9678  loss: 41.6666  decode.loss_cls: 0.3833  decode.loss_mask: 1.9419  decode.loss_dice: 1.8276  decode.d0.loss_cls: 0.4832  decode.d0.loss_mask: 1.9666  decode.d0.loss_dice: 1.8822  decode.d1.loss_cls: 0.3960  decode.d1.loss_mask: 1.9386  decode.d1.loss_dice: 1.8211  decode.d2.loss_cls: 0.3942  decode.d2.loss_mask: 1.9390  decode.d2.loss_dice: 1.8191  decode.d3.loss_cls: 0.3397  decode.d3.loss_mask: 1.9446  decode.d3.loss_dice: 1.8235  decode.d4.loss_cls: 0.3796  decode.d4.loss_mask: 1.9521  decode.d4.loss_dice: 1.8596  decode.d5.loss_cls: 0.3819  decode.d5.loss_mask: 1.9641  decode.d5.loss_dice: 1.8286  decode.d6.loss_cls: 0.3595  decode.d6.loss_mask: 1.9348  decode.d6.loss_dice: 1.8000  decode.d7.loss_cls: 0.3644  decode.d7.loss_mask: 1.9275  decode.d7.loss_dice: 1.8362  decode.d8.loss_cls: 0.4187  decode.d8.loss_mask: 1.9348  decode.d8.loss_dice: 1.8243
2025/03/29 16:34:42 - mmengine - INFO - Iter(train) [ 7750/20000]  base_lr: 6.4330e-05 lr: 6.4330e-05  eta: 5:43:55  time: 1.6702  data_time: 0.0155  memory: 9697  loss: 38.7799  decode.loss_cls: 0.4628  decode.loss_mask: 1.6827  decode.loss_dice: 1.7553  decode.d0.loss_cls: 0.5226  decode.d0.loss_mask: 1.7298  decode.d0.loss_dice: 1.7864  decode.d1.loss_cls: 0.4262  decode.d1.loss_mask: 1.7065  decode.d1.loss_dice: 1.7566  decode.d2.loss_cls: 0.4135  decode.d2.loss_mask: 1.7035  decode.d2.loss_dice: 1.7850  decode.d3.loss_cls: 0.4113  decode.d3.loss_mask: 1.7222  decode.d3.loss_dice: 1.7597  decode.d4.loss_cls: 0.4396  decode.d4.loss_mask: 1.7012  decode.d4.loss_dice: 1.7416  decode.d5.loss_cls: 0.4398  decode.d5.loss_mask: 1.6856  decode.d5.loss_dice: 1.7107  decode.d6.loss_cls: 0.4210  decode.d6.loss_mask: 1.6922  decode.d6.loss_dice: 1.6822  decode.d7.loss_cls: 0.4705  decode.d7.loss_mask: 1.6632  decode.d7.loss_dice: 1.6882  decode.d8.loss_cls: 0.4482  decode.d8.loss_mask: 1.6644  decode.d8.loss_dice: 1.7074
2025/03/29 16:36:05 - mmengine - INFO - Iter(train) [ 7800/20000]  base_lr: 6.4094e-05 lr: 6.4094e-05  eta: 5:42:30  time: 1.6731  data_time: 0.0165  memory: 9685  loss: 40.3735  decode.loss_cls: 0.2903  decode.loss_mask: 1.9011  decode.loss_dice: 1.8478  decode.d0.loss_cls: 0.4044  decode.d0.loss_mask: 1.8822  decode.d0.loss_dice: 1.8986  decode.d1.loss_cls: 0.2928  decode.d1.loss_mask: 1.9215  decode.d1.loss_dice: 1.8766  decode.d2.loss_cls: 0.2542  decode.d2.loss_mask: 1.9123  decode.d2.loss_dice: 1.8684  decode.d3.loss_cls: 0.2765  decode.d3.loss_mask: 1.8909  decode.d3.loss_dice: 1.8185  decode.d4.loss_cls: 0.2583  decode.d4.loss_mask: 1.8879  decode.d4.loss_dice: 1.8581  decode.d5.loss_cls: 0.2549  decode.d5.loss_mask: 1.8991  decode.d5.loss_dice: 1.8863  decode.d6.loss_cls: 0.2501  decode.d6.loss_mask: 1.8933  decode.d6.loss_dice: 1.8792  decode.d7.loss_cls: 0.2378  decode.d7.loss_mask: 1.8945  decode.d7.loss_dice: 1.8506  decode.d8.loss_cls: 0.2573  decode.d8.loss_mask: 1.8925  decode.d8.loss_dice: 1.8377
2025/03/29 16:37:29 - mmengine - INFO - Iter(train) [ 7850/20000]  base_lr: 6.3857e-05 lr: 6.3857e-05  eta: 5:41:04  time: 1.6665  data_time: 0.0154  memory: 9694  loss: 38.2931  decode.loss_cls: 0.4790  decode.loss_mask: 1.7621  decode.loss_dice: 1.6385  decode.d0.loss_cls: 0.5591  decode.d0.loss_mask: 1.6889  decode.d0.loss_dice: 1.7494  decode.d1.loss_cls: 0.4345  decode.d1.loss_mask: 1.6957  decode.d1.loss_dice: 1.6538  decode.d2.loss_cls: 0.4433  decode.d2.loss_mask: 1.7246  decode.d2.loss_dice: 1.6152  decode.d3.loss_cls: 0.4685  decode.d3.loss_mask: 1.6934  decode.d3.loss_dice: 1.6260  decode.d4.loss_cls: 0.4684  decode.d4.loss_mask: 1.6784  decode.d4.loss_dice: 1.6427  decode.d5.loss_cls: 0.4476  decode.d5.loss_mask: 1.7302  decode.d5.loss_dice: 1.7035  decode.d6.loss_cls: 0.4669  decode.d6.loss_mask: 1.6611  decode.d6.loss_dice: 1.6529  decode.d7.loss_cls: 0.4734  decode.d7.loss_mask: 1.6857  decode.d7.loss_dice: 1.6296  decode.d8.loss_cls: 0.4989  decode.d8.loss_mask: 1.7066  decode.d8.loss_dice: 1.6149
2025/03/29 16:38:52 - mmengine - INFO - Iter(train) [ 7900/20000]  base_lr: 6.3621e-05 lr: 6.3621e-05  eta: 5:39:39  time: 1.6687  data_time: 0.0164  memory: 9747  loss: 40.6041  decode.loss_cls: 0.3640  decode.loss_mask: 1.9055  decode.loss_dice: 1.7863  decode.d0.loss_cls: 0.3785  decode.d0.loss_mask: 1.9210  decode.d0.loss_dice: 1.8399  decode.d1.loss_cls: 0.3397  decode.d1.loss_mask: 1.9362  decode.d1.loss_dice: 1.8259  decode.d2.loss_cls: 0.3591  decode.d2.loss_mask: 1.8777  decode.d2.loss_dice: 1.8037  decode.d3.loss_cls: 0.3483  decode.d3.loss_mask: 1.8618  decode.d3.loss_dice: 1.7977  decode.d4.loss_cls: 0.3366  decode.d4.loss_mask: 1.8958  decode.d4.loss_dice: 1.7727  decode.d5.loss_cls: 0.3849  decode.d5.loss_mask: 1.8733  decode.d5.loss_dice: 1.8073  decode.d6.loss_cls: 0.3592  decode.d6.loss_mask: 1.8866  decode.d6.loss_dice: 1.8012  decode.d7.loss_cls: 0.3603  decode.d7.loss_mask: 1.9147  decode.d7.loss_dice: 1.7984  decode.d8.loss_cls: 0.3419  decode.d8.loss_mask: 1.9422  decode.d8.loss_dice: 1.7836
2025/03/29 16:40:16 - mmengine - INFO - Iter(train) [ 7950/20000]  base_lr: 6.3384e-05 lr: 6.3384e-05  eta: 5:38:15  time: 1.6693  data_time: 0.0156  memory: 9689  loss: 39.7070  decode.loss_cls: 0.4079  decode.loss_mask: 1.8644  decode.loss_dice: 1.7255  decode.d0.loss_cls: 0.4527  decode.d0.loss_mask: 1.8423  decode.d0.loss_dice: 1.7498  decode.d1.loss_cls: 0.3857  decode.d1.loss_mask: 1.8453  decode.d1.loss_dice: 1.6928  decode.d2.loss_cls: 0.3723  decode.d2.loss_mask: 1.8289  decode.d2.loss_dice: 1.7337  decode.d3.loss_cls: 0.4068  decode.d3.loss_mask: 1.8222  decode.d3.loss_dice: 1.7103  decode.d4.loss_cls: 0.4175  decode.d4.loss_mask: 1.8168  decode.d4.loss_dice: 1.7146  decode.d5.loss_cls: 0.3711  decode.d5.loss_mask: 1.8555  decode.d5.loss_dice: 1.7411  decode.d6.loss_cls: 0.4172  decode.d6.loss_mask: 1.8350  decode.d6.loss_dice: 1.7057  decode.d7.loss_cls: 0.4150  decode.d7.loss_mask: 1.8694  decode.d7.loss_dice: 1.7392  decode.d8.loss_cls: 0.4033  decode.d8.loss_mask: 1.8692  decode.d8.loss_dice: 1.6962
2025/03/29 16:41:40 - mmengine - INFO - Exp name: u2r_20250329_122454
2025/03/29 16:41:40 - mmengine - INFO - Iter(train) [ 8000/20000]  base_lr: 6.3147e-05 lr: 6.3147e-05  eta: 5:36:50  time: 1.6808  data_time: 0.0158  memory: 9692  loss: 41.5568  decode.loss_cls: 0.3438  decode.loss_mask: 2.0134  decode.loss_dice: 1.7687  decode.d0.loss_cls: 0.4824  decode.d0.loss_mask: 2.0047  decode.d0.loss_dice: 1.8106  decode.d1.loss_cls: 0.3281  decode.d1.loss_mask: 2.0004  decode.d1.loss_dice: 1.7674  decode.d2.loss_cls: 0.4093  decode.d2.loss_mask: 2.0032  decode.d2.loss_dice: 1.7823  decode.d3.loss_cls: 0.3639  decode.d3.loss_mask: 1.9974  decode.d3.loss_dice: 1.7677  decode.d4.loss_cls: 0.3668  decode.d4.loss_mask: 2.0151  decode.d4.loss_dice: 1.7727  decode.d5.loss_cls: 0.4179  decode.d5.loss_mask: 1.9844  decode.d5.loss_dice: 1.7246  decode.d6.loss_cls: 0.3752  decode.d6.loss_mask: 2.0090  decode.d6.loss_dice: 1.7276  decode.d7.loss_cls: 0.4383  decode.d7.loss_mask: 1.9795  decode.d7.loss_dice: 1.7663  decode.d8.loss_cls: 0.3726  decode.d8.loss_mask: 2.0056  decode.d8.loss_dice: 1.7582
2025/03/29 16:41:40 - mmengine - INFO - Saving checkpoint at 8000 iterations
2025/03/29 16:41:50 - mmengine - INFO - Iter(val) [  50/3968]    eta: 0:10:12  time: 0.1605  data_time: 0.0013  memory: 1849  
2025/03/29 16:41:58 - mmengine - INFO - Iter(val) [ 100/3968]    eta: 0:10:13  time: 0.1580  data_time: 0.0013  memory: 1849  
2025/03/29 16:42:06 - mmengine - INFO - Iter(val) [ 150/3968]    eta: 0:10:06  time: 0.1673  data_time: 0.0015  memory: 1849  
2025/03/29 16:42:14 - mmengine - INFO - Iter(val) [ 200/3968]    eta: 0:09:57  time: 0.1511  data_time: 0.0013  memory: 1849  
2025/03/29 16:42:22 - mmengine - INFO - Iter(val) [ 250/3968]    eta: 0:09:51  time: 0.1549  data_time: 0.0012  memory: 1849  
2025/03/29 16:42:29 - mmengine - INFO - Iter(val) [ 300/3968]    eta: 0:09:41  time: 0.1676  data_time: 0.0013  memory: 1849  
2025/03/29 16:42:37 - mmengine - INFO - Iter(val) [ 350/3968]    eta: 0:09:34  time: 0.1536  data_time: 0.0013  memory: 1849  
2025/03/29 16:42:45 - mmengine - INFO - Iter(val) [ 400/3968]    eta: 0:09:27  time: 0.1653  data_time: 0.0012  memory: 1849  
2025/03/29 16:42:53 - mmengine - INFO - Iter(val) [ 450/3968]    eta: 0:09:17  time: 0.1544  data_time: 0.0012  memory: 1849  
2025/03/29 16:43:01 - mmengine - INFO - Iter(val) [ 500/3968]    eta: 0:09:10  time: 0.1545  data_time: 0.0012  memory: 1849  
2025/03/29 16:43:09 - mmengine - INFO - Iter(val) [ 550/3968]    eta: 0:09:02  time: 0.1647  data_time: 0.0013  memory: 1849  
2025/03/29 16:43:17 - mmengine - INFO - Iter(val) [ 600/3968]    eta: 0:08:53  time: 0.1542  data_time: 0.0012  memory: 1849  
2025/03/29 16:43:25 - mmengine - INFO - Iter(val) [ 650/3968]    eta: 0:08:46  time: 0.1551  data_time: 0.0012  memory: 1849  
2025/03/29 16:43:33 - mmengine - INFO - Iter(val) [ 700/3968]    eta: 0:08:38  time: 0.1660  data_time: 0.0013  memory: 1849  
2025/03/29 16:43:41 - mmengine - INFO - Iter(val) [ 750/3968]    eta: 0:08:30  time: 0.1524  data_time: 0.0013  memory: 1849  
2025/03/29 16:43:49 - mmengine - INFO - Iter(val) [ 800/3968]    eta: 0:08:23  time: 0.1637  data_time: 0.0013  memory: 1849  
2025/03/29 16:43:57 - mmengine - INFO - Iter(val) [ 850/3968]    eta: 0:08:14  time: 0.1577  data_time: 0.0013  memory: 1849  
2025/03/29 16:44:05 - mmengine - INFO - Iter(val) [ 900/3968]    eta: 0:08:07  time: 0.1538  data_time: 0.0013  memory: 1849  
2025/03/29 16:44:13 - mmengine - INFO - Iter(val) [ 950/3968]    eta: 0:07:59  time: 0.1665  data_time: 0.0013  memory: 1849  
2025/03/29 16:44:21 - mmengine - INFO - Iter(val) [1000/3968]    eta: 0:07:51  time: 0.1540  data_time: 0.0013  memory: 1849  
2025/03/29 16:44:29 - mmengine - INFO - Iter(val) [1050/3968]    eta: 0:07:43  time: 0.1661  data_time: 0.0013  memory: 1849  
2025/03/29 16:44:37 - mmengine - INFO - Iter(val) [1100/3968]    eta: 0:07:35  time: 0.1533  data_time: 0.0012  memory: 1849  
2025/03/29 16:44:45 - mmengine - INFO - Iter(val) [1150/3968]    eta: 0:07:27  time: 0.1581  data_time: 0.0013  memory: 1849  
2025/03/29 16:44:53 - mmengine - INFO - Iter(val) [1200/3968]    eta: 0:07:19  time: 0.1665  data_time: 0.0013  memory: 1849  
2025/03/29 16:45:00 - mmengine - INFO - Iter(val) [1250/3968]    eta: 0:07:11  time: 0.1542  data_time: 0.0013  memory: 1849  
2025/03/29 16:45:08 - mmengine - INFO - Iter(val) [1300/3968]    eta: 0:07:03  time: 0.1521  data_time: 0.0013  memory: 1849  
2025/03/29 16:45:16 - mmengine - INFO - Iter(val) [1350/3968]    eta: 0:06:55  time: 0.1675  data_time: 0.0013  memory: 1849  
2025/03/29 16:45:24 - mmengine - INFO - Iter(val) [1400/3968]    eta: 0:06:47  time: 0.1529  data_time: 0.0012  memory: 1849  
2025/03/29 16:45:32 - mmengine - INFO - Iter(val) [1450/3968]    eta: 0:06:40  time: 0.1652  data_time: 0.0013  memory: 1849  
2025/03/29 16:45:40 - mmengine - INFO - Iter(val) [1500/3968]    eta: 0:06:31  time: 0.1552  data_time: 0.0013  memory: 1849  
2025/03/29 16:45:48 - mmengine - INFO - Iter(val) [1550/3968]    eta: 0:06:24  time: 0.1644  data_time: 0.0013  memory: 1849  
2025/03/29 16:45:56 - mmengine - INFO - Iter(val) [1600/3968]    eta: 0:06:16  time: 0.1573  data_time: 0.0013  memory: 1849  
2025/03/29 16:46:04 - mmengine - INFO - Iter(val) [1650/3968]    eta: 0:06:08  time: 0.1547  data_time: 0.0013  memory: 1849  
2025/03/29 16:46:12 - mmengine - INFO - Iter(val) [1700/3968]    eta: 0:06:00  time: 0.1655  data_time: 0.0013  memory: 1849  
2025/03/29 16:46:20 - mmengine - INFO - Iter(val) [1750/3968]    eta: 0:05:52  time: 0.1527  data_time: 0.0013  memory: 1849  
2025/03/29 16:46:28 - mmengine - INFO - Iter(val) [1800/3968]    eta: 0:05:44  time: 0.1568  data_time: 0.0013  memory: 1849  
2025/03/29 16:46:36 - mmengine - INFO - Iter(val) [1850/3968]    eta: 0:05:36  time: 0.1628  data_time: 0.0013  memory: 1849  
2025/03/29 16:46:44 - mmengine - INFO - Iter(val) [1900/3968]    eta: 0:05:28  time: 0.1552  data_time: 0.0014  memory: 1849  
2025/03/29 16:46:52 - mmengine - INFO - Iter(val) [1950/3968]    eta: 0:05:20  time: 0.1657  data_time: 0.0013  memory: 1849  
2025/03/29 16:47:00 - mmengine - INFO - Iter(val) [2000/3968]    eta: 0:05:12  time: 0.1571  data_time: 0.0013  memory: 1849  
2025/03/29 16:47:08 - mmengine - INFO - Iter(val) [2050/3968]    eta: 0:05:05  time: 0.1638  data_time: 0.0012  memory: 1849  
2025/03/29 16:47:16 - mmengine - INFO - Iter(val) [2100/3968]    eta: 0:04:56  time: 0.1656  data_time: 0.0013  memory: 1849  
2025/03/29 16:47:24 - mmengine - INFO - Iter(val) [2150/3968]    eta: 0:04:48  time: 0.1551  data_time: 0.0013  memory: 1849  
2025/03/29 16:47:32 - mmengine - INFO - Iter(val) [2200/3968]    eta: 0:04:40  time: 0.1569  data_time: 0.0012  memory: 1849  
2025/03/29 16:47:40 - mmengine - INFO - Iter(val) [2250/3968]    eta: 0:04:32  time: 0.1676  data_time: 0.0013  memory: 1849  
2025/03/29 16:47:47 - mmengine - INFO - Iter(val) [2300/3968]    eta: 0:04:24  time: 0.1526  data_time: 0.0013  memory: 1849  
2025/03/29 16:47:56 - mmengine - INFO - Iter(val) [2350/3968]    eta: 0:04:17  time: 0.1564  data_time: 0.0012  memory: 1849  
2025/03/29 16:48:03 - mmengine - INFO - Iter(val) [2400/3968]    eta: 0:04:09  time: 0.1633  data_time: 0.0012  memory: 1849  
2025/03/29 16:48:12 - mmengine - INFO - Iter(val) [2450/3968]    eta: 0:04:01  time: 0.1557  data_time: 0.0013  memory: 1849  
2025/03/29 16:48:19 - mmengine - INFO - Iter(val) [2500/3968]    eta: 0:03:53  time: 0.1659  data_time: 0.0013  memory: 1849  
2025/03/29 16:48:27 - mmengine - INFO - Iter(val) [2550/3968]    eta: 0:03:45  time: 0.1574  data_time: 0.0013  memory: 1849  
2025/03/29 16:48:36 - mmengine - INFO - Iter(val) [2600/3968]    eta: 0:03:37  time: 0.1659  data_time: 0.0013  memory: 1849  
2025/03/29 16:48:43 - mmengine - INFO - Iter(val) [2650/3968]    eta: 0:03:29  time: 0.1559  data_time: 0.0012  memory: 1849  
2025/03/29 16:48:52 - mmengine - INFO - Iter(val) [2700/3968]    eta: 0:03:21  time: 0.1641  data_time: 0.0013  memory: 1849  
2025/03/29 16:48:59 - mmengine - INFO - Iter(val) [2750/3968]    eta: 0:03:13  time: 0.1590  data_time: 0.0013  memory: 1849  
2025/03/29 16:49:08 - mmengine - INFO - Iter(val) [2800/3968]    eta: 0:03:05  time: 0.1574  data_time: 0.0012  memory: 1849  
2025/03/29 16:49:15 - mmengine - INFO - Iter(val) [2850/3968]    eta: 0:02:57  time: 0.1637  data_time: 0.0013  memory: 1849  
2025/03/29 16:49:24 - mmengine - INFO - Iter(val) [2900/3968]    eta: 0:02:49  time: 0.1572  data_time: 0.0012  memory: 1849  
2025/03/29 16:49:31 - mmengine - INFO - Iter(val) [2950/3968]    eta: 0:02:41  time: 0.1667  data_time: 0.0013  memory: 1849  
2025/03/29 16:49:39 - mmengine - INFO - Iter(val) [3000/3968]    eta: 0:02:33  time: 0.1536  data_time: 0.0013  memory: 1849  
2025/03/29 16:49:48 - mmengine - INFO - Iter(val) [3050/3968]    eta: 0:02:26  time: 0.1659  data_time: 0.0012  memory: 1849  
2025/03/29 16:49:56 - mmengine - INFO - Iter(val) [3100/3968]    eta: 0:02:18  time: 0.1576  data_time: 0.0013  memory: 1849  
2025/03/29 16:50:04 - mmengine - INFO - Iter(val) [3150/3968]    eta: 0:02:10  time: 0.1665  data_time: 0.0013  memory: 1849  
2025/03/29 16:50:12 - mmengine - INFO - Iter(val) [3200/3968]    eta: 0:02:02  time: 0.1534  data_time: 0.0012  memory: 1849  
2025/03/29 16:50:20 - mmengine - INFO - Iter(val) [3250/3968]    eta: 0:01:54  time: 0.1666  data_time: 0.0013  memory: 1849  
2025/03/29 16:50:28 - mmengine - INFO - Iter(val) [3300/3968]    eta: 0:01:46  time: 0.1550  data_time: 0.0013  memory: 1849  
2025/03/29 16:50:36 - mmengine - INFO - Iter(val) [3350/3968]    eta: 0:01:38  time: 0.1651  data_time: 0.0013  memory: 1849  
2025/03/29 16:50:44 - mmengine - INFO - Iter(val) [3400/3968]    eta: 0:01:30  time: 0.1533  data_time: 0.0012  memory: 1849  
2025/03/29 16:50:52 - mmengine - INFO - Iter(val) [3450/3968]    eta: 0:01:22  time: 0.1553  data_time: 0.0012  memory: 1849  
2025/03/29 16:51:00 - mmengine - INFO - Iter(val) [3500/3968]    eta: 0:01:14  time: 0.1665  data_time: 0.0013  memory: 1849  
2025/03/29 16:51:08 - mmengine - INFO - Iter(val) [3550/3968]    eta: 0:01:06  time: 0.1582  data_time: 0.0013  memory: 1849  
2025/03/29 16:51:16 - mmengine - INFO - Iter(val) [3600/3968]    eta: 0:00:58  time: 0.1668  data_time: 0.0020  memory: 1849  
2025/03/29 16:51:24 - mmengine - INFO - Iter(val) [3650/3968]    eta: 0:00:50  time: 0.1626  data_time: 0.0019  memory: 1849  
2025/03/29 16:51:32 - mmengine - INFO - Iter(val) [3700/3968]    eta: 0:00:42  time: 0.1602  data_time: 0.0015  memory: 1849  
2025/03/29 16:51:40 - mmengine - INFO - Iter(val) [3750/3968]    eta: 0:00:34  time: 0.1655  data_time: 0.0015  memory: 1849  
2025/03/29 16:51:48 - mmengine - INFO - Iter(val) [3800/3968]    eta: 0:00:26  time: 0.1577  data_time: 0.0015  memory: 1849  
2025/03/29 16:51:56 - mmengine - INFO - Iter(val) [3850/3968]    eta: 0:00:18  time: 0.1663  data_time: 0.0015  memory: 1849  
2025/03/29 16:52:04 - mmengine - INFO - Iter(val) [3900/3968]    eta: 0:00:10  time: 0.1598  data_time: 0.0016  memory: 1849  
2025/03/29 16:52:12 - mmengine - INFO - Iter(val) [3950/3968]    eta: 0:00:02  time: 0.1665  data_time: 0.0015  memory: 1849  
2025/03/29 16:52:15 - mmengine - INFO - per class results:
2025/03/29 16:52:15 - mmengine - INFO - 
+--------------+-------+-------+
|    Class     |  IoU  |  Acc  |
+--------------+-------+-------+
|  background  | 54.33 | 76.93 |
|   building   |  43.1 | 70.21 |
|     road     | 45.01 | 48.88 |
|    water     | 63.06 |  75.7 |
|    barren    | 13.03 | 26.25 |
|    forest    | 26.36 | 31.72 |
| agricultural | 53.83 | 62.93 |
+--------------+-------+-------+
2025/03/29 16:52:15 - mmengine - INFO - Iter(val) [3968/3968]    aAcc: 67.4100  mIoU: 42.6700  mAcc: 56.0900  data_time: 0.0013  time: 0.1594
2025/03/29 16:52:15 - mmengine - INFO - The previous best checkpoint /home/face/kaichengyang/xiaoxinghu/Earth_Adapter/work_dirs/u2r/DG_spatial_64_cutoff_0.3_fft_suf3/ee2e4_seed0/best_mIoU_iter_6000.pth is removed
2025/03/29 16:52:17 - mmengine - INFO - The best checkpoint with 42.6700 mIoU at 8000 iter is saved to best_mIoU_iter_8000.pth.
2025/03/29 16:53:42 - mmengine - INFO - Iter(train) [ 8050/20000]  base_lr: 6.2911e-05 lr: 6.2911e-05  eta: 5:35:29  time: 1.6722  data_time: 0.0172  memory: 9688  loss: 38.3962  decode.loss_cls: 0.5079  decode.loss_mask: 1.6721  decode.loss_dice: 1.6502  decode.d0.loss_cls: 0.5504  decode.d0.loss_mask: 1.7111  decode.d0.loss_dice: 1.7737  decode.d1.loss_cls: 0.5019  decode.d1.loss_mask: 1.7036  decode.d1.loss_dice: 1.6628  decode.d2.loss_cls: 0.4942  decode.d2.loss_mask: 1.7023  decode.d2.loss_dice: 1.6625  decode.d3.loss_cls: 0.4522  decode.d3.loss_mask: 1.6901  decode.d3.loss_dice: 1.6581  decode.d4.loss_cls: 0.3981  decode.d4.loss_mask: 1.6945  decode.d4.loss_dice: 1.6544  decode.d5.loss_cls: 0.4257  decode.d5.loss_mask: 1.6983  decode.d5.loss_dice: 1.6818  decode.d6.loss_cls: 0.4351  decode.d6.loss_mask: 1.6966  decode.d6.loss_dice: 1.6585  decode.d7.loss_cls: 0.4936  decode.d7.loss_mask: 1.6895  decode.d7.loss_dice: 1.6523  decode.d8.loss_cls: 0.4777  decode.d8.loss_mask: 1.6862  decode.d8.loss_dice: 1.6608
2025/03/29 16:55:06 - mmengine - INFO - Iter(train) [ 8100/20000]  base_lr: 6.2674e-05 lr: 6.2674e-05  eta: 5:34:04  time: 1.6737  data_time: 0.0178  memory: 9692  loss: 40.1985  decode.loss_cls: 0.3504  decode.loss_mask: 1.9248  decode.loss_dice: 1.7605  decode.d0.loss_cls: 0.4211  decode.d0.loss_mask: 1.8918  decode.d0.loss_dice: 1.7059  decode.d1.loss_cls: 0.3337  decode.d1.loss_mask: 1.9079  decode.d1.loss_dice: 1.7556  decode.d2.loss_cls: 0.3901  decode.d2.loss_mask: 1.9007  decode.d2.loss_dice: 1.7485  decode.d3.loss_cls: 0.3294  decode.d3.loss_mask: 1.9185  decode.d3.loss_dice: 1.7002  decode.d4.loss_cls: 0.3621  decode.d4.loss_mask: 1.9442  decode.d4.loss_dice: 1.7222  decode.d5.loss_cls: 0.3748  decode.d5.loss_mask: 1.9484  decode.d5.loss_dice: 1.7209  decode.d6.loss_cls: 0.3611  decode.d6.loss_mask: 1.9380  decode.d6.loss_dice: 1.7435  decode.d7.loss_cls: 0.3792  decode.d7.loss_mask: 1.9197  decode.d7.loss_dice: 1.7309  decode.d8.loss_cls: 0.3718  decode.d8.loss_mask: 1.9222  decode.d8.loss_dice: 1.7200
2025/03/29 16:56:29 - mmengine - INFO - Iter(train) [ 8150/20000]  base_lr: 6.2437e-05 lr: 6.2437e-05  eta: 5:32:39  time: 1.6723  data_time: 0.0177  memory: 9694  loss: 40.5159  decode.loss_cls: 0.4102  decode.loss_mask: 1.8739  decode.loss_dice: 1.7630  decode.d0.loss_cls: 0.5053  decode.d0.loss_mask: 1.8543  decode.d0.loss_dice: 1.8485  decode.d1.loss_cls: 0.3963  decode.d1.loss_mask: 1.8998  decode.d1.loss_dice: 1.7799  decode.d2.loss_cls: 0.3932  decode.d2.loss_mask: 1.8633  decode.d2.loss_dice: 1.7982  decode.d3.loss_cls: 0.3760  decode.d3.loss_mask: 1.8933  decode.d3.loss_dice: 1.8251  decode.d4.loss_cls: 0.3879  decode.d4.loss_mask: 1.8713  decode.d4.loss_dice: 1.7618  decode.d5.loss_cls: 0.4422  decode.d5.loss_mask: 1.8179  decode.d5.loss_dice: 1.7345  decode.d6.loss_cls: 0.4047  decode.d6.loss_mask: 1.8590  decode.d6.loss_dice: 1.7466  decode.d7.loss_cls: 0.3973  decode.d7.loss_mask: 1.8586  decode.d7.loss_dice: 1.7623  decode.d8.loss_cls: 0.4301  decode.d8.loss_mask: 1.8264  decode.d8.loss_dice: 1.7351
2025/03/29 16:57:53 - mmengine - INFO - Iter(train) [ 8200/20000]  base_lr: 6.2199e-05 lr: 6.2199e-05  eta: 5:31:14  time: 1.6771  data_time: 0.0175  memory: 9692  loss: 44.1013  decode.loss_cls: 0.4218  decode.loss_mask: 2.0666  decode.loss_dice: 1.8982  decode.d0.loss_cls: 0.4392  decode.d0.loss_mask: 2.0841  decode.d0.loss_dice: 2.0282  decode.d1.loss_cls: 0.4588  decode.d1.loss_mask: 2.0440  decode.d1.loss_dice: 1.9318  decode.d2.loss_cls: 0.3935  decode.d2.loss_mask: 2.0289  decode.d2.loss_dice: 1.9603  decode.d3.loss_cls: 0.4215  decode.d3.loss_mask: 2.0314  decode.d3.loss_dice: 1.9303  decode.d4.loss_cls: 0.3886  decode.d4.loss_mask: 2.0140  decode.d4.loss_dice: 1.9312  decode.d5.loss_cls: 0.4082  decode.d5.loss_mask: 2.0372  decode.d5.loss_dice: 1.9278  decode.d6.loss_cls: 0.4088  decode.d6.loss_mask: 2.0743  decode.d6.loss_dice: 1.9367  decode.d7.loss_cls: 0.4401  decode.d7.loss_mask: 2.0393  decode.d7.loss_dice: 1.9410  decode.d8.loss_cls: 0.4506  decode.d8.loss_mask: 2.0598  decode.d8.loss_dice: 1.9050
2025/03/29 16:59:16 - mmengine - INFO - Iter(train) [ 8250/20000]  base_lr: 6.1962e-05 lr: 6.1962e-05  eta: 5:29:49  time: 1.6697  data_time: 0.0172  memory: 9753  loss: 37.8677  decode.loss_cls: 0.2613  decode.loss_mask: 1.7797  decode.loss_dice: 1.6941  decode.d0.loss_cls: 0.3750  decode.d0.loss_mask: 1.8021  decode.d0.loss_dice: 1.7536  decode.d1.loss_cls: 0.2961  decode.d1.loss_mask: 1.7841  decode.d1.loss_dice: 1.6753  decode.d2.loss_cls: 0.2499  decode.d2.loss_mask: 1.8217  decode.d2.loss_dice: 1.6736  decode.d3.loss_cls: 0.2987  decode.d3.loss_mask: 1.8149  decode.d3.loss_dice: 1.6655  decode.d4.loss_cls: 0.2953  decode.d4.loss_mask: 1.8028  decode.d4.loss_dice: 1.6731  decode.d5.loss_cls: 0.2709  decode.d5.loss_mask: 1.8421  decode.d5.loss_dice: 1.6958  decode.d6.loss_cls: 0.2863  decode.d6.loss_mask: 1.8123  decode.d6.loss_dice: 1.7015  decode.d7.loss_cls: 0.2695  decode.d7.loss_mask: 1.8138  decode.d7.loss_dice: 1.7138  decode.d8.loss_cls: 0.2512  decode.d8.loss_mask: 1.7949  decode.d8.loss_dice: 1.6990
2025/03/29 17:00:40 - mmengine - INFO - Iter(train) [ 8300/20000]  base_lr: 6.1725e-05 lr: 6.1725e-05  eta: 5:28:23  time: 1.6674  data_time: 0.0173  memory: 9694  loss: 39.2056  decode.loss_cls: 0.3756  decode.loss_mask: 1.7517  decode.loss_dice: 1.7624  decode.d0.loss_cls: 0.4918  decode.d0.loss_mask: 1.7808  decode.d0.loss_dice: 1.7985  decode.d1.loss_cls: 0.3598  decode.d1.loss_mask: 1.7532  decode.d1.loss_dice: 1.7726  decode.d2.loss_cls: 0.3805  decode.d2.loss_mask: 1.7396  decode.d2.loss_dice: 1.7353  decode.d3.loss_cls: 0.4018  decode.d3.loss_mask: 1.7396  decode.d3.loss_dice: 1.7596  decode.d4.loss_cls: 0.3599  decode.d4.loss_mask: 1.7535  decode.d4.loss_dice: 1.7566  decode.d5.loss_cls: 0.3907  decode.d5.loss_mask: 1.7803  decode.d5.loss_dice: 1.7786  decode.d6.loss_cls: 0.3569  decode.d6.loss_mask: 1.7866  decode.d6.loss_dice: 1.7778  decode.d7.loss_cls: 0.3658  decode.d7.loss_mask: 1.7704  decode.d7.loss_dice: 1.7767  decode.d8.loss_cls: 0.4214  decode.d8.loss_mask: 1.7490  decode.d8.loss_dice: 1.7788
2025/03/29 17:02:03 - mmengine - INFO - Iter(train) [ 8350/20000]  base_lr: 6.1487e-05 lr: 6.1487e-05  eta: 5:26:58  time: 1.6714  data_time: 0.0173  memory: 9745  loss: 41.6608  decode.loss_cls: 0.5008  decode.loss_mask: 1.8246  decode.loss_dice: 1.7826  decode.d0.loss_cls: 0.5180  decode.d0.loss_mask: 1.8730  decode.d0.loss_dice: 1.9018  decode.d1.loss_cls: 0.4368  decode.d1.loss_mask: 1.8753  decode.d1.loss_dice: 1.8482  decode.d2.loss_cls: 0.4764  decode.d2.loss_mask: 1.8465  decode.d2.loss_dice: 1.8228  decode.d3.loss_cls: 0.4987  decode.d3.loss_mask: 1.8458  decode.d3.loss_dice: 1.8097  decode.d4.loss_cls: 0.4808  decode.d4.loss_mask: 1.8263  decode.d4.loss_dice: 1.8190  decode.d5.loss_cls: 0.4961  decode.d5.loss_mask: 1.8343  decode.d5.loss_dice: 1.8217  decode.d6.loss_cls: 0.5050  decode.d6.loss_mask: 1.8411  decode.d6.loss_dice: 1.8125  decode.d7.loss_cls: 0.4625  decode.d7.loss_mask: 1.8890  decode.d7.loss_dice: 1.8698  decode.d8.loss_cls: 0.4614  decode.d8.loss_mask: 1.8714  decode.d8.loss_dice: 1.8088
2025/03/29 17:03:27 - mmengine - INFO - Iter(train) [ 8400/20000]  base_lr: 6.1250e-05 lr: 6.1250e-05  eta: 5:25:34  time: 1.6698  data_time: 0.0182  memory: 9701  loss: 38.8760  decode.loss_cls: 0.3023  decode.loss_mask: 1.8451  decode.loss_dice: 1.6859  decode.d0.loss_cls: 0.4184  decode.d0.loss_mask: 1.8737  decode.d0.loss_dice: 1.7813  decode.d1.loss_cls: 0.3339  decode.d1.loss_mask: 1.8749  decode.d1.loss_dice: 1.7243  decode.d2.loss_cls: 0.3566  decode.d2.loss_mask: 1.8221  decode.d2.loss_dice: 1.6873  decode.d3.loss_cls: 0.3693  decode.d3.loss_mask: 1.8291  decode.d3.loss_dice: 1.6676  decode.d4.loss_cls: 0.3750  decode.d4.loss_mask: 1.8072  decode.d4.loss_dice: 1.6706  decode.d5.loss_cls: 0.3698  decode.d5.loss_mask: 1.7994  decode.d5.loss_dice: 1.6574  decode.d6.loss_cls: 0.3916  decode.d6.loss_mask: 1.7941  decode.d6.loss_dice: 1.6756  decode.d7.loss_cls: 0.3846  decode.d7.loss_mask: 1.8123  decode.d7.loss_dice: 1.6805  decode.d8.loss_cls: 0.4084  decode.d8.loss_mask: 1.7837  decode.d8.loss_dice: 1.6941
2025/03/29 17:04:51 - mmengine - INFO - Iter(train) [ 8450/20000]  base_lr: 6.1012e-05 lr: 6.1012e-05  eta: 5:24:09  time: 1.6794  data_time: 0.0175  memory: 9696  loss: 39.5273  decode.loss_cls: 0.3886  decode.loss_mask: 1.8882  decode.loss_dice: 1.7044  decode.d0.loss_cls: 0.3869  decode.d0.loss_mask: 1.9036  decode.d0.loss_dice: 1.7743  decode.d1.loss_cls: 0.3934  decode.d1.loss_mask: 1.8626  decode.d1.loss_dice: 1.7266  decode.d2.loss_cls: 0.3552  decode.d2.loss_mask: 1.8969  decode.d2.loss_dice: 1.7083  decode.d3.loss_cls: 0.3519  decode.d3.loss_mask: 1.9002  decode.d3.loss_dice: 1.6852  decode.d4.loss_cls: 0.3401  decode.d4.loss_mask: 1.8970  decode.d4.loss_dice: 1.6820  decode.d5.loss_cls: 0.3363  decode.d5.loss_mask: 1.9059  decode.d5.loss_dice: 1.6761  decode.d6.loss_cls: 0.3576  decode.d6.loss_mask: 1.8888  decode.d6.loss_dice: 1.6529  decode.d7.loss_cls: 0.3379  decode.d7.loss_mask: 1.8981  decode.d7.loss_dice: 1.6813  decode.d8.loss_cls: 0.3732  decode.d8.loss_mask: 1.9048  decode.d8.loss_dice: 1.6690
2025/03/29 17:06:15 - mmengine - INFO - Iter(train) [ 8500/20000]  base_lr: 6.0774e-05 lr: 6.0774e-05  eta: 5:22:44  time: 1.6691  data_time: 0.0183  memory: 9701  loss: 39.5046  decode.loss_cls: 0.3377  decode.loss_mask: 1.8835  decode.loss_dice: 1.7299  decode.d0.loss_cls: 0.4303  decode.d0.loss_mask: 1.8807  decode.d0.loss_dice: 1.7498  decode.d1.loss_cls: 0.3525  decode.d1.loss_mask: 1.8827  decode.d1.loss_dice: 1.7128  decode.d2.loss_cls: 0.3419  decode.d2.loss_mask: 1.8528  decode.d2.loss_dice: 1.7019  decode.d3.loss_cls: 0.3546  decode.d3.loss_mask: 1.8398  decode.d3.loss_dice: 1.7377  decode.d4.loss_cls: 0.3436  decode.d4.loss_mask: 1.8600  decode.d4.loss_dice: 1.7070  decode.d5.loss_cls: 0.3009  decode.d5.loss_mask: 1.8772  decode.d5.loss_dice: 1.7474  decode.d6.loss_cls: 0.3074  decode.d6.loss_mask: 1.8930  decode.d6.loss_dice: 1.7505  decode.d7.loss_cls: 0.3374  decode.d7.loss_mask: 1.8895  decode.d7.loss_dice: 1.7074  decode.d8.loss_cls: 0.3445  decode.d8.loss_mask: 1.9019  decode.d8.loss_dice: 1.7482
2025/03/29 17:07:38 - mmengine - INFO - Iter(train) [ 8550/20000]  base_lr: 6.0537e-05 lr: 6.0537e-05  eta: 5:21:19  time: 1.6727  data_time: 0.0172  memory: 9686  loss: 39.2329  decode.loss_cls: 0.3734  decode.loss_mask: 1.8297  decode.loss_dice: 1.6783  decode.d0.loss_cls: 0.4681  decode.d0.loss_mask: 1.8642  decode.d0.loss_dice: 1.7272  decode.d1.loss_cls: 0.3949  decode.d1.loss_mask: 1.8091  decode.d1.loss_dice: 1.6911  decode.d2.loss_cls: 0.4063  decode.d2.loss_mask: 1.8031  decode.d2.loss_dice: 1.6751  decode.d3.loss_cls: 0.3935  decode.d3.loss_mask: 1.8296  decode.d3.loss_dice: 1.6839  decode.d4.loss_cls: 0.3874  decode.d4.loss_mask: 1.8447  decode.d4.loss_dice: 1.6824  decode.d5.loss_cls: 0.3988  decode.d5.loss_mask: 1.8297  decode.d5.loss_dice: 1.6822  decode.d6.loss_cls: 0.3889  decode.d6.loss_mask: 1.8623  decode.d6.loss_dice: 1.7010  decode.d7.loss_cls: 0.3984  decode.d7.loss_mask: 1.8255  decode.d7.loss_dice: 1.6846  decode.d8.loss_cls: 0.3933  decode.d8.loss_mask: 1.8313  decode.d8.loss_dice: 1.6948
2025/03/29 17:09:02 - mmengine - INFO - Iter(train) [ 8600/20000]  base_lr: 6.0299e-05 lr: 6.0299e-05  eta: 5:19:54  time: 1.6733  data_time: 0.0170  memory: 9688  loss: 40.3235  decode.loss_cls: 0.3455  decode.loss_mask: 1.8761  decode.loss_dice: 1.7635  decode.d0.loss_cls: 0.4538  decode.d0.loss_mask: 1.8425  decode.d0.loss_dice: 1.8630  decode.d1.loss_cls: 0.4322  decode.d1.loss_mask: 1.8206  decode.d1.loss_dice: 1.7512  decode.d2.loss_cls: 0.3834  decode.d2.loss_mask: 1.8780  decode.d2.loss_dice: 1.7862  decode.d3.loss_cls: 0.3782  decode.d3.loss_mask: 1.8522  decode.d3.loss_dice: 1.7679  decode.d4.loss_cls: 0.3723  decode.d4.loss_mask: 1.8800  decode.d4.loss_dice: 1.7615  decode.d5.loss_cls: 0.4074  decode.d5.loss_mask: 1.8552  decode.d5.loss_dice: 1.7707  decode.d6.loss_cls: 0.4368  decode.d6.loss_mask: 1.8583  decode.d6.loss_dice: 1.7786  decode.d7.loss_cls: 0.3796  decode.d7.loss_mask: 1.8695  decode.d7.loss_dice: 1.7771  decode.d8.loss_cls: 0.3736  decode.d8.loss_mask: 1.8480  decode.d8.loss_dice: 1.7606
2025/03/29 17:10:25 - mmengine - INFO - Iter(train) [ 8650/20000]  base_lr: 6.0060e-05 lr: 6.0060e-05  eta: 5:18:29  time: 1.6711  data_time: 0.0174  memory: 9688  loss: 40.7603  decode.loss_cls: 0.4248  decode.loss_mask: 1.8579  decode.loss_dice: 1.7732  decode.d0.loss_cls: 0.4555  decode.d0.loss_mask: 1.9034  decode.d0.loss_dice: 1.8373  decode.d1.loss_cls: 0.3900  decode.d1.loss_mask: 1.8962  decode.d1.loss_dice: 1.7570  decode.d2.loss_cls: 0.4647  decode.d2.loss_mask: 1.8479  decode.d2.loss_dice: 1.7340  decode.d3.loss_cls: 0.3962  decode.d3.loss_mask: 1.8765  decode.d3.loss_dice: 1.7670  decode.d4.loss_cls: 0.3821  decode.d4.loss_mask: 1.9111  decode.d4.loss_dice: 1.7954  decode.d5.loss_cls: 0.4207  decode.d5.loss_mask: 1.8444  decode.d5.loss_dice: 1.7669  decode.d6.loss_cls: 0.4113  decode.d6.loss_mask: 1.8734  decode.d6.loss_dice: 1.8034  decode.d7.loss_cls: 0.4121  decode.d7.loss_mask: 1.8897  decode.d7.loss_dice: 1.7998  decode.d8.loss_cls: 0.4181  decode.d8.loss_mask: 1.8639  decode.d8.loss_dice: 1.7865
2025/03/29 17:11:49 - mmengine - INFO - Iter(train) [ 8700/20000]  base_lr: 5.9822e-05 lr: 5.9822e-05  eta: 5:17:04  time: 1.6723  data_time: 0.0189  memory: 9696  loss: 39.6969  decode.loss_cls: 0.4746  decode.loss_mask: 1.7863  decode.loss_dice: 1.7433  decode.d0.loss_cls: 0.4811  decode.d0.loss_mask: 1.7720  decode.d0.loss_dice: 1.8414  decode.d1.loss_cls: 0.4449  decode.d1.loss_mask: 1.7524  decode.d1.loss_dice: 1.7440  decode.d2.loss_cls: 0.4164  decode.d2.loss_mask: 1.7795  decode.d2.loss_dice: 1.7825  decode.d3.loss_cls: 0.4108  decode.d3.loss_mask: 1.7745  decode.d3.loss_dice: 1.7805  decode.d4.loss_cls: 0.4029  decode.d4.loss_mask: 1.7648  decode.d4.loss_dice: 1.7689  decode.d5.loss_cls: 0.4035  decode.d5.loss_mask: 1.7671  decode.d5.loss_dice: 1.7333  decode.d6.loss_cls: 0.4281  decode.d6.loss_mask: 1.7639  decode.d6.loss_dice: 1.7445  decode.d7.loss_cls: 0.4756  decode.d7.loss_mask: 1.7447  decode.d7.loss_dice: 1.7360  decode.d8.loss_cls: 0.4280  decode.d8.loss_mask: 1.8020  decode.d8.loss_dice: 1.7493
2025/03/29 17:13:12 - mmengine - INFO - Iter(train) [ 8750/20000]  base_lr: 5.9584e-05 lr: 5.9584e-05  eta: 5:15:39  time: 1.6704  data_time: 0.0180  memory: 9693  loss: 39.5080  decode.loss_cls: 0.3466  decode.loss_mask: 1.8971  decode.loss_dice: 1.7254  decode.d0.loss_cls: 0.3825  decode.d0.loss_mask: 1.9006  decode.d0.loss_dice: 1.7206  decode.d1.loss_cls: 0.3410  decode.d1.loss_mask: 1.8897  decode.d1.loss_dice: 1.7038  decode.d2.loss_cls: 0.3395  decode.d2.loss_mask: 1.8877  decode.d2.loss_dice: 1.7231  decode.d3.loss_cls: 0.3394  decode.d3.loss_mask: 1.8681  decode.d3.loss_dice: 1.6860  decode.d4.loss_cls: 0.3277  decode.d4.loss_mask: 1.9184  decode.d4.loss_dice: 1.7109  decode.d5.loss_cls: 0.3018  decode.d5.loss_mask: 1.9324  decode.d5.loss_dice: 1.7319  decode.d6.loss_cls: 0.3381  decode.d6.loss_mask: 1.9025  decode.d6.loss_dice: 1.6663  decode.d7.loss_cls: 0.3245  decode.d7.loss_mask: 1.9200  decode.d7.loss_dice: 1.7109  decode.d8.loss_cls: 0.3316  decode.d8.loss_mask: 1.9010  decode.d8.loss_dice: 1.7390
2025/03/29 17:14:36 - mmengine - INFO - Iter(train) [ 8800/20000]  base_lr: 5.9346e-05 lr: 5.9346e-05  eta: 5:14:14  time: 1.6669  data_time: 0.0176  memory: 9696  loss: 38.0197  decode.loss_cls: 0.3296  decode.loss_mask: 1.7583  decode.loss_dice: 1.6731  decode.d0.loss_cls: 0.4958  decode.d0.loss_mask: 1.7642  decode.d0.loss_dice: 1.7122  decode.d1.loss_cls: 0.3590  decode.d1.loss_mask: 1.7701  decode.d1.loss_dice: 1.6622  decode.d2.loss_cls: 0.3625  decode.d2.loss_mask: 1.7704  decode.d2.loss_dice: 1.6536  decode.d3.loss_cls: 0.3739  decode.d3.loss_mask: 1.7315  decode.d3.loss_dice: 1.6354  decode.d4.loss_cls: 0.3464  decode.d4.loss_mask: 1.7719  decode.d4.loss_dice: 1.6704  decode.d5.loss_cls: 0.3597  decode.d5.loss_mask: 1.7792  decode.d5.loss_dice: 1.6646  decode.d6.loss_cls: 0.3756  decode.d6.loss_mask: 1.7517  decode.d6.loss_dice: 1.6694  decode.d7.loss_cls: 0.3285  decode.d7.loss_mask: 1.7594  decode.d7.loss_dice: 1.6799  decode.d8.loss_cls: 0.3303  decode.d8.loss_mask: 1.7810  decode.d8.loss_dice: 1.6999
2025/03/29 17:15:59 - mmengine - INFO - Iter(train) [ 8850/20000]  base_lr: 5.9107e-05 lr: 5.9107e-05  eta: 5:12:49  time: 1.6703  data_time: 0.0175  memory: 9688  loss: 40.7110  decode.loss_cls: 0.3318  decode.loss_mask: 1.8856  decode.loss_dice: 1.8205  decode.d0.loss_cls: 0.3808  decode.d0.loss_mask: 1.9054  decode.d0.loss_dice: 1.8777  decode.d1.loss_cls: 0.3143  decode.d1.loss_mask: 1.8721  decode.d1.loss_dice: 1.8461  decode.d2.loss_cls: 0.2941  decode.d2.loss_mask: 1.8912  decode.d2.loss_dice: 1.8695  decode.d3.loss_cls: 0.3379  decode.d3.loss_mask: 1.8694  decode.d3.loss_dice: 1.8243  decode.d4.loss_cls: 0.2965  decode.d4.loss_mask: 1.8924  decode.d4.loss_dice: 1.8900  decode.d5.loss_cls: 0.2946  decode.d5.loss_mask: 1.9154  decode.d5.loss_dice: 1.8847  decode.d6.loss_cls: 0.3527  decode.d6.loss_mask: 1.9028  decode.d6.loss_dice: 1.8626  decode.d7.loss_cls: 0.3002  decode.d7.loss_mask: 1.9058  decode.d7.loss_dice: 1.8500  decode.d8.loss_cls: 0.3122  decode.d8.loss_mask: 1.8895  decode.d8.loss_dice: 1.8409
2025/03/29 17:17:23 - mmengine - INFO - Iter(train) [ 8900/20000]  base_lr: 5.8869e-05 lr: 5.8869e-05  eta: 5:11:24  time: 1.6700  data_time: 0.0175  memory: 9684  loss: 36.9574  decode.loss_cls: 0.3412  decode.loss_mask: 1.7325  decode.loss_dice: 1.5682  decode.d0.loss_cls: 0.4781  decode.d0.loss_mask: 1.7253  decode.d0.loss_dice: 1.5755  decode.d1.loss_cls: 0.3411  decode.d1.loss_mask: 1.7933  decode.d1.loss_dice: 1.6187  decode.d2.loss_cls: 0.3107  decode.d2.loss_mask: 1.7787  decode.d2.loss_dice: 1.6129  decode.d3.loss_cls: 0.3206  decode.d3.loss_mask: 1.7530  decode.d3.loss_dice: 1.5896  decode.d4.loss_cls: 0.2985  decode.d4.loss_mask: 1.7563  decode.d4.loss_dice: 1.6313  decode.d5.loss_cls: 0.3102  decode.d5.loss_mask: 1.7728  decode.d5.loss_dice: 1.6269  decode.d6.loss_cls: 0.3303  decode.d6.loss_mask: 1.7679  decode.d6.loss_dice: 1.5939  decode.d7.loss_cls: 0.3195  decode.d7.loss_mask: 1.7577  decode.d7.loss_dice: 1.5795  decode.d8.loss_cls: 0.3873  decode.d8.loss_mask: 1.7227  decode.d8.loss_dice: 1.5630
2025/03/29 17:18:46 - mmengine - INFO - Iter(train) [ 8950/20000]  base_lr: 5.8630e-05 lr: 5.8630e-05  eta: 5:09:59  time: 1.6705  data_time: 0.0176  memory: 9688  loss: 38.4543  decode.loss_cls: 0.3699  decode.loss_mask: 1.8151  decode.loss_dice: 1.6495  decode.d0.loss_cls: 0.4930  decode.d0.loss_mask: 1.8008  decode.d0.loss_dice: 1.6925  decode.d1.loss_cls: 0.4318  decode.d1.loss_mask: 1.7803  decode.d1.loss_dice: 1.6010  decode.d2.loss_cls: 0.4214  decode.d2.loss_mask: 1.7994  decode.d2.loss_dice: 1.6183  decode.d3.loss_cls: 0.4234  decode.d3.loss_mask: 1.8000  decode.d3.loss_dice: 1.6164  decode.d4.loss_cls: 0.4159  decode.d4.loss_mask: 1.7774  decode.d4.loss_dice: 1.6262  decode.d5.loss_cls: 0.4277  decode.d5.loss_mask: 1.7847  decode.d5.loss_dice: 1.6372  decode.d6.loss_cls: 0.3609  decode.d6.loss_mask: 1.8273  decode.d6.loss_dice: 1.6532  decode.d7.loss_cls: 0.4079  decode.d7.loss_mask: 1.7701  decode.d7.loss_dice: 1.6292  decode.d8.loss_cls: 0.3687  decode.d8.loss_mask: 1.8031  decode.d8.loss_dice: 1.6520
2025/03/29 17:20:10 - mmengine - INFO - Exp name: u2r_20250329_122454
2025/03/29 17:20:10 - mmengine - INFO - Iter(train) [ 9000/20000]  base_lr: 5.8391e-05 lr: 5.8391e-05  eta: 5:08:34  time: 1.6680  data_time: 0.0177  memory: 9745  loss: 36.9162  decode.loss_cls: 0.1732  decode.loss_mask: 1.8116  decode.loss_dice: 1.6603  decode.d0.loss_cls: 0.2787  decode.d0.loss_mask: 1.8523  decode.d0.loss_dice: 1.6819  decode.d1.loss_cls: 0.2000  decode.d1.loss_mask: 1.8151  decode.d1.loss_dice: 1.6661  decode.d2.loss_cls: 0.2286  decode.d2.loss_mask: 1.8231  decode.d2.loss_dice: 1.6539  decode.d3.loss_cls: 0.2031  decode.d3.loss_mask: 1.8257  decode.d3.loss_dice: 1.6494  decode.d4.loss_cls: 0.2065  decode.d4.loss_mask: 1.8293  decode.d4.loss_dice: 1.6575  decode.d5.loss_cls: 0.2206  decode.d5.loss_mask: 1.8045  decode.d5.loss_dice: 1.6261  decode.d6.loss_cls: 0.1913  decode.d6.loss_mask: 1.8258  decode.d6.loss_dice: 1.7057  decode.d7.loss_cls: 0.2048  decode.d7.loss_mask: 1.8064  decode.d7.loss_dice: 1.6547  decode.d8.loss_cls: 0.1943  decode.d8.loss_mask: 1.8094  decode.d8.loss_dice: 1.6565
2025/03/29 17:21:33 - mmengine - INFO - Iter(train) [ 9050/20000]  base_lr: 5.8152e-05 lr: 5.8152e-05  eta: 5:07:09  time: 1.6707  data_time: 0.0174  memory: 9679  loss: 38.4261  decode.loss_cls: 0.3306  decode.loss_mask: 1.8215  decode.loss_dice: 1.6823  decode.d0.loss_cls: 0.4344  decode.d0.loss_mask: 1.8398  decode.d0.loss_dice: 1.6865  decode.d1.loss_cls: 0.3761  decode.d1.loss_mask: 1.7800  decode.d1.loss_dice: 1.6262  decode.d2.loss_cls: 0.3188  decode.d2.loss_mask: 1.8286  decode.d2.loss_dice: 1.6781  decode.d3.loss_cls: 0.3935  decode.d3.loss_mask: 1.8053  decode.d3.loss_dice: 1.6785  decode.d4.loss_cls: 0.3291  decode.d4.loss_mask: 1.8111  decode.d4.loss_dice: 1.6834  decode.d5.loss_cls: 0.3335  decode.d5.loss_mask: 1.8240  decode.d5.loss_dice: 1.6677  decode.d6.loss_cls: 0.3134  decode.d6.loss_mask: 1.8486  decode.d6.loss_dice: 1.6619  decode.d7.loss_cls: 0.3619  decode.d7.loss_mask: 1.8007  decode.d7.loss_dice: 1.6584  decode.d8.loss_cls: 0.3580  decode.d8.loss_mask: 1.8243  decode.d8.loss_dice: 1.6697
2025/03/29 17:22:57 - mmengine - INFO - Iter(train) [ 9100/20000]  base_lr: 5.7913e-05 lr: 5.7913e-05  eta: 5:05:44  time: 1.6725  data_time: 0.0178  memory: 9677  loss: 39.7407  decode.loss_cls: 0.3581  decode.loss_mask: 1.8980  decode.loss_dice: 1.7046  decode.d0.loss_cls: 0.4651  decode.d0.loss_mask: 1.8838  decode.d0.loss_dice: 1.7930  decode.d1.loss_cls: 0.4119  decode.d1.loss_mask: 1.8655  decode.d1.loss_dice: 1.7490  decode.d2.loss_cls: 0.3766  decode.d2.loss_mask: 1.8589  decode.d2.loss_dice: 1.7050  decode.d3.loss_cls: 0.3627  decode.d3.loss_mask: 1.8722  decode.d3.loss_dice: 1.6848  decode.d4.loss_cls: 0.3446  decode.d4.loss_mask: 1.8620  decode.d4.loss_dice: 1.7064  decode.d5.loss_cls: 0.3792  decode.d5.loss_mask: 1.8689  decode.d5.loss_dice: 1.6995  decode.d6.loss_cls: 0.3589  decode.d6.loss_mask: 1.8877  decode.d6.loss_dice: 1.7202  decode.d7.loss_cls: 0.3681  decode.d7.loss_mask: 1.8890  decode.d7.loss_dice: 1.7224  decode.d8.loss_cls: 0.3356  decode.d8.loss_mask: 1.8861  decode.d8.loss_dice: 1.7229
2025/03/29 17:24:21 - mmengine - INFO - Iter(train) [ 9150/20000]  base_lr: 5.7674e-05 lr: 5.7674e-05  eta: 5:04:19  time: 1.6723  data_time: 0.0179  memory: 9688  loss: 35.7469  decode.loss_cls: 0.3272  decode.loss_mask: 1.5936  decode.loss_dice: 1.6287  decode.d0.loss_cls: 0.4088  decode.d0.loss_mask: 1.6709  decode.d0.loss_dice: 1.7010  decode.d1.loss_cls: 0.3801  decode.d1.loss_mask: 1.5590  decode.d1.loss_dice: 1.6145  decode.d2.loss_cls: 0.3521  decode.d2.loss_mask: 1.5880  decode.d2.loss_dice: 1.6365  decode.d3.loss_cls: 0.3389  decode.d3.loss_mask: 1.5857  decode.d3.loss_dice: 1.6170  decode.d4.loss_cls: 0.3157  decode.d4.loss_mask: 1.5869  decode.d4.loss_dice: 1.6394  decode.d5.loss_cls: 0.3162  decode.d5.loss_mask: 1.5963  decode.d5.loss_dice: 1.6363  decode.d6.loss_cls: 0.3234  decode.d6.loss_mask: 1.5973  decode.d6.loss_dice: 1.6112  decode.d7.loss_cls: 0.3275  decode.d7.loss_mask: 1.6036  decode.d7.loss_dice: 1.6239  decode.d8.loss_cls: 0.3451  decode.d8.loss_mask: 1.6056  decode.d8.loss_dice: 1.6164
2025/03/29 17:25:44 - mmengine - INFO - Iter(train) [ 9200/20000]  base_lr: 5.7435e-05 lr: 5.7435e-05  eta: 5:02:54  time: 1.6695  data_time: 0.0170  memory: 9693  loss: 38.0861  decode.loss_cls: 0.3802  decode.loss_mask: 1.7990  decode.loss_dice: 1.6222  decode.d0.loss_cls: 0.4800  decode.d0.loss_mask: 1.8037  decode.d0.loss_dice: 1.6548  decode.d1.loss_cls: 0.4059  decode.d1.loss_mask: 1.7439  decode.d1.loss_dice: 1.6501  decode.d2.loss_cls: 0.3766  decode.d2.loss_mask: 1.7852  decode.d2.loss_dice: 1.6143  decode.d3.loss_cls: 0.4059  decode.d3.loss_mask: 1.7775  decode.d3.loss_dice: 1.5956  decode.d4.loss_cls: 0.4218  decode.d4.loss_mask: 1.7784  decode.d4.loss_dice: 1.5938  decode.d5.loss_cls: 0.4018  decode.d5.loss_mask: 1.7771  decode.d5.loss_dice: 1.6045  decode.d6.loss_cls: 0.4104  decode.d6.loss_mask: 1.8071  decode.d6.loss_dice: 1.6182  decode.d7.loss_cls: 0.4510  decode.d7.loss_mask: 1.7756  decode.d7.loss_dice: 1.6106  decode.d8.loss_cls: 0.4251  decode.d8.loss_mask: 1.7403  decode.d8.loss_dice: 1.5756
2025/03/29 17:27:08 - mmengine - INFO - Iter(train) [ 9250/20000]  base_lr: 5.7195e-05 lr: 5.7195e-05  eta: 5:01:30  time: 1.6729  data_time: 0.0184  memory: 9694  loss: 37.3513  decode.loss_cls: 0.3540  decode.loss_mask: 1.6413  decode.loss_dice: 1.6731  decode.d0.loss_cls: 0.4521  decode.d0.loss_mask: 1.6371  decode.d0.loss_dice: 1.6989  decode.d1.loss_cls: 0.4237  decode.d1.loss_mask: 1.6578  decode.d1.loss_dice: 1.6970  decode.d2.loss_cls: 0.4084  decode.d2.loss_mask: 1.6533  decode.d2.loss_dice: 1.6638  decode.d3.loss_cls: 0.4054  decode.d3.loss_mask: 1.6393  decode.d3.loss_dice: 1.6736  decode.d4.loss_cls: 0.4034  decode.d4.loss_mask: 1.6618  decode.d4.loss_dice: 1.6957  decode.d5.loss_cls: 0.4431  decode.d5.loss_mask: 1.6460  decode.d5.loss_dice: 1.7083  decode.d6.loss_cls: 0.3746  decode.d6.loss_mask: 1.6336  decode.d6.loss_dice: 1.6937  decode.d7.loss_cls: 0.3754  decode.d7.loss_mask: 1.6433  decode.d7.loss_dice: 1.6884  decode.d8.loss_cls: 0.4032  decode.d8.loss_mask: 1.6485  decode.d8.loss_dice: 1.6532
2025/03/29 17:28:31 - mmengine - INFO - Iter(train) [ 9300/20000]  base_lr: 5.6956e-05 lr: 5.6956e-05  eta: 5:00:05  time: 1.6723  data_time: 0.0174  memory: 9674  loss: 43.3865  decode.loss_cls: 0.4341  decode.loss_mask: 2.0615  decode.loss_dice: 1.8127  decode.d0.loss_cls: 0.5669  decode.d0.loss_mask: 2.0793  decode.d0.loss_dice: 1.8997  decode.d1.loss_cls: 0.4495  decode.d1.loss_mask: 2.1001  decode.d1.loss_dice: 1.8269  decode.d2.loss_cls: 0.4325  decode.d2.loss_mask: 2.0793  decode.d2.loss_dice: 1.8181  decode.d3.loss_cls: 0.3773  decode.d3.loss_mask: 2.0832  decode.d3.loss_dice: 1.8490  decode.d4.loss_cls: 0.4076  decode.d4.loss_mask: 2.0582  decode.d4.loss_dice: 1.8124  decode.d5.loss_cls: 0.3666  decode.d5.loss_mask: 2.0868  decode.d5.loss_dice: 1.8165  decode.d6.loss_cls: 0.3861  decode.d6.loss_mask: 2.1039  decode.d6.loss_dice: 1.8078  decode.d7.loss_cls: 0.3523  decode.d7.loss_mask: 2.1038  decode.d7.loss_dice: 1.8463  decode.d8.loss_cls: 0.4414  decode.d8.loss_mask: 2.0988  decode.d8.loss_dice: 1.8279
2025/03/29 17:29:54 - mmengine - INFO - Iter(train) [ 9350/20000]  base_lr: 5.6716e-05 lr: 5.6716e-05  eta: 4:58:39  time: 1.5511  data_time: 0.0176  memory: 9697  loss: 37.4159  decode.loss_cls: 0.3265  decode.loss_mask: 1.7062  decode.loss_dice: 1.7269  decode.d0.loss_cls: 0.3741  decode.d0.loss_mask: 1.7169  decode.d0.loss_dice: 1.7121  decode.d1.loss_cls: 0.3681  decode.d1.loss_mask: 1.6643  decode.d1.loss_dice: 1.7038  decode.d2.loss_cls: 0.3749  decode.d2.loss_mask: 1.6878  decode.d2.loss_dice: 1.6649  decode.d3.loss_cls: 0.3516  decode.d3.loss_mask: 1.6810  decode.d3.loss_dice: 1.6587  decode.d4.loss_cls: 0.3263  decode.d4.loss_mask: 1.6907  decode.d4.loss_dice: 1.6730  decode.d5.loss_cls: 0.3420  decode.d5.loss_mask: 1.6974  decode.d5.loss_dice: 1.6457  decode.d6.loss_cls: 0.3917  decode.d6.loss_mask: 1.7096  decode.d6.loss_dice: 1.6908  decode.d7.loss_cls: 0.3365  decode.d7.loss_mask: 1.7258  decode.d7.loss_dice: 1.7063  decode.d8.loss_cls: 0.3502  decode.d8.loss_mask: 1.7059  decode.d8.loss_dice: 1.7063
2025/03/29 17:31:23 - mmengine - INFO - Iter(train) [ 9400/20000]  base_lr: 5.6477e-05 lr: 5.6477e-05  eta: 4:57:21  time: 1.7933  data_time: 0.0175  memory: 9681  loss: 41.4453  decode.loss_cls: 0.4195  decode.loss_mask: 1.9042  decode.loss_dice: 1.8445  decode.d0.loss_cls: 0.5408  decode.d0.loss_mask: 1.8979  decode.d0.loss_dice: 1.8969  decode.d1.loss_cls: 0.4642  decode.d1.loss_mask: 1.8652  decode.d1.loss_dice: 1.7876  decode.d2.loss_cls: 0.4060  decode.d2.loss_mask: 1.8933  decode.d2.loss_dice: 1.7948  decode.d3.loss_cls: 0.4531  decode.d3.loss_mask: 1.8831  decode.d3.loss_dice: 1.7954  decode.d4.loss_cls: 0.4662  decode.d4.loss_mask: 1.9011  decode.d4.loss_dice: 1.7920  decode.d5.loss_cls: 0.4277  decode.d5.loss_mask: 1.8880  decode.d5.loss_dice: 1.7808  decode.d6.loss_cls: 0.4338  decode.d6.loss_mask: 1.8734  decode.d6.loss_dice: 1.7796  decode.d7.loss_cls: 0.4598  decode.d7.loss_mask: 1.8877  decode.d7.loss_dice: 1.8068  decode.d8.loss_cls: 0.4631  decode.d8.loss_mask: 1.8610  decode.d8.loss_dice: 1.7779
2025/03/29 17:32:52 - mmengine - INFO - Iter(train) [ 9450/20000]  base_lr: 5.6237e-05 lr: 5.6237e-05  eta: 4:56:02  time: 1.7517  data_time: 0.0178  memory: 9692  loss: 38.2112  decode.loss_cls: 0.3125  decode.loss_mask: 1.7556  decode.loss_dice: 1.7394  decode.d0.loss_cls: 0.4748  decode.d0.loss_mask: 1.7371  decode.d0.loss_dice: 1.8135  decode.d1.loss_cls: 0.3962  decode.d1.loss_mask: 1.7241  decode.d1.loss_dice: 1.7126  decode.d2.loss_cls: 0.3442  decode.d2.loss_mask: 1.7411  decode.d2.loss_dice: 1.7038  decode.d3.loss_cls: 0.3066  decode.d3.loss_mask: 1.7470  decode.d3.loss_dice: 1.7177  decode.d4.loss_cls: 0.2754  decode.d4.loss_mask: 1.7693  decode.d4.loss_dice: 1.7435  decode.d5.loss_cls: 0.3450  decode.d5.loss_mask: 1.7201  decode.d5.loss_dice: 1.7072  decode.d6.loss_cls: 0.3519  decode.d6.loss_mask: 1.7389  decode.d6.loss_dice: 1.7005  decode.d7.loss_cls: 0.3985  decode.d7.loss_mask: 1.7321  decode.d7.loss_dice: 1.7414  decode.d8.loss_cls: 0.3088  decode.d8.loss_mask: 1.7380  decode.d8.loss_dice: 1.7142
2025/03/29 17:34:21 - mmengine - INFO - Iter(train) [ 9500/20000]  base_lr: 5.5997e-05 lr: 5.5997e-05  eta: 4:54:43  time: 1.7825  data_time: 0.0170  memory: 9694  loss: 36.1675  decode.loss_cls: 0.2664  decode.loss_mask: 1.7437  decode.loss_dice: 1.5888  decode.d0.loss_cls: 0.3590  decode.d0.loss_mask: 1.7381  decode.d0.loss_dice: 1.6826  decode.d1.loss_cls: 0.2943  decode.d1.loss_mask: 1.7346  decode.d1.loss_dice: 1.5602  decode.d2.loss_cls: 0.2961  decode.d2.loss_mask: 1.7189  decode.d2.loss_dice: 1.5746  decode.d3.loss_cls: 0.2676  decode.d3.loss_mask: 1.7337  decode.d3.loss_dice: 1.5723  decode.d4.loss_cls: 0.2986  decode.d4.loss_mask: 1.7370  decode.d4.loss_dice: 1.5484  decode.d5.loss_cls: 0.2773  decode.d5.loss_mask: 1.7562  decode.d5.loss_dice: 1.5751  decode.d6.loss_cls: 0.2973  decode.d6.loss_mask: 1.7411  decode.d6.loss_dice: 1.5630  decode.d7.loss_cls: 0.3058  decode.d7.loss_mask: 1.7307  decode.d7.loss_dice: 1.5953  decode.d8.loss_cls: 0.2906  decode.d8.loss_mask: 1.7446  decode.d8.loss_dice: 1.5758
2025/03/29 17:35:50 - mmengine - INFO - Iter(train) [ 9550/20000]  base_lr: 5.5757e-05 lr: 5.5757e-05  eta: 4:53:24  time: 1.7872  data_time: 0.0174  memory: 9688  loss: 39.2245  decode.loss_cls: 0.4112  decode.loss_mask: 1.8299  decode.loss_dice: 1.6915  decode.d0.loss_cls: 0.4610  decode.d0.loss_mask: 1.8441  decode.d0.loss_dice: 1.7523  decode.d1.loss_cls: 0.3713  decode.d1.loss_mask: 1.8289  decode.d1.loss_dice: 1.6602  decode.d2.loss_cls: 0.3904  decode.d2.loss_mask: 1.8518  decode.d2.loss_dice: 1.6843  decode.d3.loss_cls: 0.3998  decode.d3.loss_mask: 1.8371  decode.d3.loss_dice: 1.6381  decode.d4.loss_cls: 0.3894  decode.d4.loss_mask: 1.8427  decode.d4.loss_dice: 1.6982  decode.d5.loss_cls: 0.3940  decode.d5.loss_mask: 1.8321  decode.d5.loss_dice: 1.6680  decode.d6.loss_cls: 0.4080  decode.d6.loss_mask: 1.8409  decode.d6.loss_dice: 1.6569  decode.d7.loss_cls: 0.3904  decode.d7.loss_mask: 1.8453  decode.d7.loss_dice: 1.6995  decode.d8.loss_cls: 0.4032  decode.d8.loss_mask: 1.8513  decode.d8.loss_dice: 1.6530
2025/03/29 17:37:16 - mmengine - INFO - Iter(train) [ 9600/20000]  base_lr: 5.5517e-05 lr: 5.5517e-05  eta: 4:52:01  time: 1.4691  data_time: 0.0170  memory: 9680  loss: 40.9091  decode.loss_cls: 0.3484  decode.loss_mask: 1.9494  decode.loss_dice: 1.7773  decode.d0.loss_cls: 0.4681  decode.d0.loss_mask: 1.9306  decode.d0.loss_dice: 1.8258  decode.d1.loss_cls: 0.3578  decode.d1.loss_mask: 1.9298  decode.d1.loss_dice: 1.8148  decode.d2.loss_cls: 0.3668  decode.d2.loss_mask: 1.9235  decode.d2.loss_dice: 1.7778  decode.d3.loss_cls: 0.3790  decode.d3.loss_mask: 1.9372  decode.d3.loss_dice: 1.7567  decode.d4.loss_cls: 0.3738  decode.d4.loss_mask: 1.9174  decode.d4.loss_dice: 1.7685  decode.d5.loss_cls: 0.3622  decode.d5.loss_mask: 1.9417  decode.d5.loss_dice: 1.7916  decode.d6.loss_cls: 0.3898  decode.d6.loss_mask: 1.9430  decode.d6.loss_dice: 1.7691  decode.d7.loss_cls: 0.3464  decode.d7.loss_mask: 1.9200  decode.d7.loss_dice: 1.7634  decode.d8.loss_cls: 0.3872  decode.d8.loss_mask: 1.9221  decode.d8.loss_dice: 1.7698
2025/03/29 17:38:39 - mmengine - INFO - Iter(train) [ 9650/20000]  base_lr: 5.5276e-05 lr: 5.5276e-05  eta: 4:50:36  time: 1.6619  data_time: 0.0173  memory: 9686  loss: 37.3367  decode.loss_cls: 0.3827  decode.loss_mask: 1.8041  decode.loss_dice: 1.5482  decode.d0.loss_cls: 0.3741  decode.d0.loss_mask: 1.8392  decode.d0.loss_dice: 1.6391  decode.d1.loss_cls: 0.3629  decode.d1.loss_mask: 1.8010  decode.d1.loss_dice: 1.5741  decode.d2.loss_cls: 0.3861  decode.d2.loss_mask: 1.8067  decode.d2.loss_dice: 1.5375  decode.d3.loss_cls: 0.4040  decode.d3.loss_mask: 1.8199  decode.d3.loss_dice: 1.5270  decode.d4.loss_cls: 0.3569  decode.d4.loss_mask: 1.8136  decode.d4.loss_dice: 1.5250  decode.d5.loss_cls: 0.3607  decode.d5.loss_mask: 1.8316  decode.d5.loss_dice: 1.5412  decode.d6.loss_cls: 0.3302  decode.d6.loss_mask: 1.8418  decode.d6.loss_dice: 1.5367  decode.d7.loss_cls: 0.3655  decode.d7.loss_mask: 1.7880  decode.d7.loss_dice: 1.5389  decode.d8.loss_cls: 0.3563  decode.d8.loss_mask: 1.8111  decode.d8.loss_dice: 1.5327
2025/03/29 17:40:03 - mmengine - INFO - Iter(train) [ 9700/20000]  base_lr: 5.5036e-05 lr: 5.5036e-05  eta: 4:49:12  time: 1.6716  data_time: 0.0173  memory: 9746  loss: 36.7621  decode.loss_cls: 0.3497  decode.loss_mask: 1.7719  decode.loss_dice: 1.5346  decode.d0.loss_cls: 0.4316  decode.d0.loss_mask: 1.7913  decode.d0.loss_dice: 1.5877  decode.d1.loss_cls: 0.4223  decode.d1.loss_mask: 1.7372  decode.d1.loss_dice: 1.5207  decode.d2.loss_cls: 0.3864  decode.d2.loss_mask: 1.7601  decode.d2.loss_dice: 1.5451  decode.d3.loss_cls: 0.3951  decode.d3.loss_mask: 1.7432  decode.d3.loss_dice: 1.5437  decode.d4.loss_cls: 0.3849  decode.d4.loss_mask: 1.7500  decode.d4.loss_dice: 1.5361  decode.d5.loss_cls: 0.3331  decode.d5.loss_mask: 1.7887  decode.d5.loss_dice: 1.5371  decode.d6.loss_cls: 0.3477  decode.d6.loss_mask: 1.8064  decode.d6.loss_dice: 1.5523  decode.d7.loss_cls: 0.3713  decode.d7.loss_mask: 1.7633  decode.d7.loss_dice: 1.5131  decode.d8.loss_cls: 0.3427  decode.d8.loss_mask: 1.7263  decode.d8.loss_dice: 1.4886
2025/03/29 17:41:27 - mmengine - INFO - Iter(train) [ 9750/20000]  base_lr: 5.4795e-05 lr: 5.4795e-05  eta: 4:47:46  time: 1.6688  data_time: 0.0177  memory: 9686  loss: 39.4117  decode.loss_cls: 0.5005  decode.loss_mask: 1.8800  decode.loss_dice: 1.5630  decode.d0.loss_cls: 0.5006  decode.d0.loss_mask: 1.8967  decode.d0.loss_dice: 1.6554  decode.d1.loss_cls: 0.4869  decode.d1.loss_mask: 1.8580  decode.d1.loss_dice: 1.5304  decode.d2.loss_cls: 0.4956  decode.d2.loss_mask: 1.8730  decode.d2.loss_dice: 1.5461  decode.d3.loss_cls: 0.4776  decode.d3.loss_mask: 1.9146  decode.d3.loss_dice: 1.5468  decode.d4.loss_cls: 0.4917  decode.d4.loss_mask: 1.8791  decode.d4.loss_dice: 1.5362  decode.d5.loss_cls: 0.5173  decode.d5.loss_mask: 1.9203  decode.d5.loss_dice: 1.5741  decode.d6.loss_cls: 0.4708  decode.d6.loss_mask: 1.9421  decode.d6.loss_dice: 1.5710  decode.d7.loss_cls: 0.4628  decode.d7.loss_mask: 1.8832  decode.d7.loss_dice: 1.5234  decode.d8.loss_cls: 0.4935  decode.d8.loss_mask: 1.8880  decode.d8.loss_dice: 1.5332
2025/03/29 17:42:50 - mmengine - INFO - Iter(train) [ 9800/20000]  base_lr: 5.4555e-05 lr: 5.4555e-05  eta: 4:46:22  time: 1.6831  data_time: 0.0179  memory: 9693  loss: 37.0473  decode.loss_cls: 0.3240  decode.loss_mask: 1.7285  decode.loss_dice: 1.6379  decode.d0.loss_cls: 0.3823  decode.d0.loss_mask: 1.6763  decode.d0.loss_dice: 1.6931  decode.d1.loss_cls: 0.3631  decode.d1.loss_mask: 1.7219  decode.d1.loss_dice: 1.6595  decode.d2.loss_cls: 0.3127  decode.d2.loss_mask: 1.7218  decode.d2.loss_dice: 1.6500  decode.d3.loss_cls: 0.3410  decode.d3.loss_mask: 1.7292  decode.d3.loss_dice: 1.6580  decode.d4.loss_cls: 0.3174  decode.d4.loss_mask: 1.7081  decode.d4.loss_dice: 1.6460  decode.d5.loss_cls: 0.3598  decode.d5.loss_mask: 1.7002  decode.d5.loss_dice: 1.6161  decode.d6.loss_cls: 0.3194  decode.d6.loss_mask: 1.7191  decode.d6.loss_dice: 1.6208  decode.d7.loss_cls: 0.3686  decode.d7.loss_mask: 1.7468  decode.d7.loss_dice: 1.6226  decode.d8.loss_cls: 0.3353  decode.d8.loss_mask: 1.7323  decode.d8.loss_dice: 1.6353
2025/03/29 17:44:14 - mmengine - INFO - Iter(train) [ 9850/20000]  base_lr: 5.4314e-05 lr: 5.4314e-05  eta: 4:44:57  time: 1.6708  data_time: 0.0177  memory: 9692  loss: 36.2595  decode.loss_cls: 0.3155  decode.loss_mask: 1.6990  decode.loss_dice: 1.6124  decode.d0.loss_cls: 0.4163  decode.d0.loss_mask: 1.6765  decode.d0.loss_dice: 1.6223  decode.d1.loss_cls: 0.3154  decode.d1.loss_mask: 1.6936  decode.d1.loss_dice: 1.6162  decode.d2.loss_cls: 0.3117  decode.d2.loss_mask: 1.6885  decode.d2.loss_dice: 1.6271  decode.d3.loss_cls: 0.3022  decode.d3.loss_mask: 1.7075  decode.d3.loss_dice: 1.6100  decode.d4.loss_cls: 0.2943  decode.d4.loss_mask: 1.6949  decode.d4.loss_dice: 1.6031  decode.d5.loss_cls: 0.3269  decode.d5.loss_mask: 1.6856  decode.d5.loss_dice: 1.5858  decode.d6.loss_cls: 0.3055  decode.d6.loss_mask: 1.6760  decode.d6.loss_dice: 1.5962  decode.d7.loss_cls: 0.3226  decode.d7.loss_mask: 1.6938  decode.d7.loss_dice: 1.6432  decode.d8.loss_cls: 0.3063  decode.d8.loss_mask: 1.6994  decode.d8.loss_dice: 1.6116
2025/03/29 17:45:38 - mmengine - INFO - Iter(train) [ 9900/20000]  base_lr: 5.4073e-05 lr: 5.4073e-05  eta: 4:43:32  time: 1.6732  data_time: 0.0177  memory: 9680  loss: 37.3416  decode.loss_cls: 0.3714  decode.loss_mask: 1.7258  decode.loss_dice: 1.6396  decode.d0.loss_cls: 0.4548  decode.d0.loss_mask: 1.8111  decode.d0.loss_dice: 1.6928  decode.d1.loss_cls: 0.2804  decode.d1.loss_mask: 1.7839  decode.d1.loss_dice: 1.6309  decode.d2.loss_cls: 0.3109  decode.d2.loss_mask: 1.7504  decode.d2.loss_dice: 1.6317  decode.d3.loss_cls: 0.3405  decode.d3.loss_mask: 1.7442  decode.d3.loss_dice: 1.6274  decode.d4.loss_cls: 0.3383  decode.d4.loss_mask: 1.7628  decode.d4.loss_dice: 1.6461  decode.d5.loss_cls: 0.3419  decode.d5.loss_mask: 1.7390  decode.d5.loss_dice: 1.6130  decode.d6.loss_cls: 0.3531  decode.d6.loss_mask: 1.7260  decode.d6.loss_dice: 1.6119  decode.d7.loss_cls: 0.3680  decode.d7.loss_mask: 1.7114  decode.d7.loss_dice: 1.6118  decode.d8.loss_cls: 0.3370  decode.d8.loss_mask: 1.7582  decode.d8.loss_dice: 1.6272
2025/03/29 17:47:01 - mmengine - INFO - Iter(train) [ 9950/20000]  base_lr: 5.3832e-05 lr: 5.3832e-05  eta: 4:42:07  time: 1.6729  data_time: 0.0175  memory: 9684  loss: 39.7259  decode.loss_cls: 0.2686  decode.loss_mask: 1.9589  decode.loss_dice: 1.7352  decode.d0.loss_cls: 0.4069  decode.d0.loss_mask: 1.9583  decode.d0.loss_dice: 1.7818  decode.d1.loss_cls: 0.2194  decode.d1.loss_mask: 1.9507  decode.d1.loss_dice: 1.7803  decode.d2.loss_cls: 0.2986  decode.d2.loss_mask: 1.9284  decode.d2.loss_dice: 1.7435  decode.d3.loss_cls: 0.2262  decode.d3.loss_mask: 1.9760  decode.d3.loss_dice: 1.7577  decode.d4.loss_cls: 0.2403  decode.d4.loss_mask: 1.9515  decode.d4.loss_dice: 1.7743  decode.d5.loss_cls: 0.2191  decode.d5.loss_mask: 1.9712  decode.d5.loss_dice: 1.7526  decode.d6.loss_cls: 0.2475  decode.d6.loss_mask: 1.9256  decode.d6.loss_dice: 1.7348  decode.d7.loss_cls: 0.2232  decode.d7.loss_mask: 1.9574  decode.d7.loss_dice: 1.7517  decode.d8.loss_cls: 0.2640  decode.d8.loss_mask: 1.9656  decode.d8.loss_dice: 1.7565
2025/03/29 17:48:25 - mmengine - INFO - Exp name: u2r_20250329_122454
2025/03/29 17:48:25 - mmengine - INFO - Iter(train) [10000/20000]  base_lr: 5.3591e-05 lr: 5.3591e-05  eta: 4:40:42  time: 1.6726  data_time: 0.0177  memory: 9689  loss: 38.2758  decode.loss_cls: 0.3502  decode.loss_mask: 1.8308  decode.loss_dice: 1.6319  decode.d0.loss_cls: 0.4006  decode.d0.loss_mask: 1.8615  decode.d0.loss_dice: 1.7770  decode.d1.loss_cls: 0.3157  decode.d1.loss_mask: 1.7899  decode.d1.loss_dice: 1.6796  decode.d2.loss_cls: 0.3272  decode.d2.loss_mask: 1.7860  decode.d2.loss_dice: 1.6681  decode.d3.loss_cls: 0.3534  decode.d3.loss_mask: 1.8231  decode.d3.loss_dice: 1.6580  decode.d4.loss_cls: 0.3515  decode.d4.loss_mask: 1.8182  decode.d4.loss_dice: 1.6444  decode.d5.loss_cls: 0.3398  decode.d5.loss_mask: 1.8063  decode.d5.loss_dice: 1.6426  decode.d6.loss_cls: 0.3570  decode.d6.loss_mask: 1.8052  decode.d6.loss_dice: 1.6279  decode.d7.loss_cls: 0.3546  decode.d7.loss_mask: 1.7982  decode.d7.loss_dice: 1.6354  decode.d8.loss_cls: 0.3547  decode.d8.loss_mask: 1.8240  decode.d8.loss_dice: 1.6632
2025/03/29 17:48:25 - mmengine - INFO - Saving checkpoint at 10000 iterations
2025/03/29 17:48:35 - mmengine - INFO - Iter(val) [  50/3968]    eta: 0:10:42  time: 0.1639  data_time: 0.0014  memory: 1849  
2025/03/29 17:48:43 - mmengine - INFO - Iter(val) [ 100/3968]    eta: 0:10:16  time: 0.1536  data_time: 0.0013  memory: 1849  
2025/03/29 17:48:51 - mmengine - INFO - Iter(val) [ 150/3968]    eta: 0:10:10  time: 0.1548  data_time: 0.0013  memory: 1849  
2025/03/29 17:48:59 - mmengine - INFO - Iter(val) [ 200/3968]    eta: 0:10:00  time: 0.1654  data_time: 0.0012  memory: 1849  
2025/03/29 17:49:06 - mmengine - INFO - Iter(val) [ 250/3968]    eta: 0:09:49  time: 0.1504  data_time: 0.0012  memory: 1849  
2025/03/29 17:49:14 - mmengine - INFO - Iter(val) [ 300/3968]    eta: 0:09:43  time: 0.1545  data_time: 0.0013  memory: 1849  
2025/03/29 17:49:22 - mmengine - INFO - Iter(val) [ 350/3968]    eta: 0:09:34  time: 0.1661  data_time: 0.0012  memory: 1849  
2025/03/29 17:49:30 - mmengine - INFO - Iter(val) [ 400/3968]    eta: 0:09:25  time: 0.1536  data_time: 0.0013  memory: 1849  
2025/03/29 17:49:38 - mmengine - INFO - Iter(val) [ 450/3968]    eta: 0:09:19  time: 0.1626  data_time: 0.0013  memory: 1849  
2025/03/29 17:49:46 - mmengine - INFO - Iter(val) [ 500/3968]    eta: 0:09:09  time: 0.1592  data_time: 0.0013  memory: 1849  
2025/03/29 17:49:54 - mmengine - INFO - Iter(val) [ 550/3968]    eta: 0:09:01  time: 0.1528  data_time: 0.0014  memory: 1849  
2025/03/29 17:50:02 - mmengine - INFO - Iter(val) [ 600/3968]    eta: 0:08:54  time: 0.1664  data_time: 0.0013  memory: 1849  
2025/03/29 17:50:10 - mmengine - INFO - Iter(val) [ 650/3968]    eta: 0:08:45  time: 0.1518  data_time: 0.0013  memory: 1849  
2025/03/29 17:50:18 - mmengine - INFO - Iter(val) [ 700/3968]    eta: 0:08:38  time: 0.1524  data_time: 0.0013  memory: 1849  
2025/03/29 17:50:26 - mmengine - INFO - Iter(val) [ 750/3968]    eta: 0:08:30  time: 0.1625  data_time: 0.0013  memory: 1849  
2025/03/29 17:50:34 - mmengine - INFO - Iter(val) [ 800/3968]    eta: 0:08:22  time: 0.1583  data_time: 0.0013  memory: 1849  
2025/03/29 17:50:42 - mmengine - INFO - Iter(val) [ 850/3968]    eta: 0:08:15  time: 0.1655  data_time: 0.0013  memory: 1849  
2025/03/29 17:50:50 - mmengine - INFO - Iter(val) [ 900/3968]    eta: 0:08:06  time: 0.1540  data_time: 0.0013  memory: 1849  
2025/03/29 17:50:58 - mmengine - INFO - Iter(val) [ 950/3968]    eta: 0:07:59  time: 0.1558  data_time: 0.0013  memory: 1849  
2025/03/29 17:51:05 - mmengine - INFO - Iter(val) [1000/3968]    eta: 0:07:50  time: 0.1624  data_time: 0.0013  memory: 1849  
2025/03/29 17:51:13 - mmengine - INFO - Iter(val) [1050/3968]    eta: 0:07:42  time: 0.1527  data_time: 0.0013  memory: 1849  
2025/03/29 17:51:21 - mmengine - INFO - Iter(val) [1100/3968]    eta: 0:07:35  time: 0.1614  data_time: 0.0013  memory: 1849  
2025/03/29 17:51:29 - mmengine - INFO - Iter(val) [1150/3968]    eta: 0:07:26  time: 0.1624  data_time: 0.0013  memory: 1849  
2025/03/29 17:51:37 - mmengine - INFO - Iter(val) [1200/3968]    eta: 0:07:19  time: 0.1592  data_time: 0.0014  memory: 1849  
2025/03/29 17:51:45 - mmengine - INFO - Iter(val) [1250/3968]    eta: 0:07:11  time: 0.1659  data_time: 0.0013  memory: 1849  
2025/03/29 17:51:53 - mmengine - INFO - Iter(val) [1300/3968]    eta: 0:07:02  time: 0.1538  data_time: 0.0013  memory: 1849  
2025/03/29 17:52:01 - mmengine - INFO - Iter(val) [1350/3968]    eta: 0:06:55  time: 0.1515  data_time: 0.0012  memory: 1849  
2025/03/29 17:52:09 - mmengine - INFO - Iter(val) [1400/3968]    eta: 0:06:47  time: 0.1664  data_time: 0.0012  memory: 1849  
2025/03/29 17:52:17 - mmengine - INFO - Iter(val) [1450/3968]    eta: 0:06:39  time: 0.1521  data_time: 0.0013  memory: 1849  
2025/03/29 17:52:25 - mmengine - INFO - Iter(val) [1500/3968]    eta: 0:06:31  time: 0.1588  data_time: 0.0013  memory: 1849  
2025/03/29 17:52:33 - mmengine - INFO - Iter(val) [1550/3968]    eta: 0:06:23  time: 0.1551  data_time: 0.0013  memory: 1849  
2025/03/29 17:52:41 - mmengine - INFO - Iter(val) [1600/3968]    eta: 0:06:15  time: 0.1576  data_time: 0.0013  memory: 1849  
2025/03/29 17:52:49 - mmengine - INFO - Iter(val) [1650/3968]    eta: 0:06:07  time: 0.1658  data_time: 0.0013  memory: 1849  
2025/03/29 17:52:57 - mmengine - INFO - Iter(val) [1700/3968]    eta: 0:05:59  time: 0.1533  data_time: 0.0013  memory: 1849  
2025/03/29 17:53:05 - mmengine - INFO - Iter(val) [1750/3968]    eta: 0:05:51  time: 0.1586  data_time: 0.0013  memory: 1849  
2025/03/29 17:53:12 - mmengine - INFO - Iter(val) [1800/3968]    eta: 0:05:43  time: 0.1600  data_time: 0.0012  memory: 1849  
2025/03/29 17:53:20 - mmengine - INFO - Iter(val) [1850/3968]    eta: 0:05:35  time: 0.1563  data_time: 0.0013  memory: 1849  
2025/03/29 17:53:28 - mmengine - INFO - Iter(val) [1900/3968]    eta: 0:05:28  time: 0.1649  data_time: 0.0013  memory: 1849  
2025/03/29 17:53:36 - mmengine - INFO - Iter(val) [1950/3968]    eta: 0:05:19  time: 0.1526  data_time: 0.0012  memory: 1849  
2025/03/29 17:53:44 - mmengine - INFO - Iter(val) [2000/3968]    eta: 0:05:12  time: 0.1562  data_time: 0.0013  memory: 1849  
2025/03/29 17:53:52 - mmengine - INFO - Iter(val) [2050/3968]    eta: 0:05:04  time: 0.1658  data_time: 0.0013  memory: 1849  
2025/03/29 17:54:00 - mmengine - INFO - Iter(val) [2100/3968]    eta: 0:04:56  time: 0.1566  data_time: 0.0012  memory: 1849  
2025/03/29 17:54:08 - mmengine - INFO - Iter(val) [2150/3968]    eta: 0:04:48  time: 0.1655  data_time: 0.0013  memory: 1849  
2025/03/29 17:54:16 - mmengine - INFO - Iter(val) [2200/3968]    eta: 0:04:40  time: 0.1500  data_time: 0.0012  memory: 1849  
2025/03/29 17:54:24 - mmengine - INFO - Iter(val) [2250/3968]    eta: 0:04:32  time: 0.1552  data_time: 0.0012  memory: 1849  
2025/03/29 17:54:32 - mmengine - INFO - Iter(val) [2300/3968]    eta: 0:04:24  time: 0.1652  data_time: 0.0012  memory: 1849  
2025/03/29 17:54:40 - mmengine - INFO - Iter(val) [2350/3968]    eta: 0:04:16  time: 0.1504  data_time: 0.0012  memory: 1849  
2025/03/29 17:54:48 - mmengine - INFO - Iter(val) [2400/3968]    eta: 0:04:08  time: 0.1541  data_time: 0.0012  memory: 1849  
2025/03/29 17:54:56 - mmengine - INFO - Iter(val) [2450/3968]    eta: 0:04:00  time: 0.1640  data_time: 0.0012  memory: 1849  
2025/03/29 17:55:04 - mmengine - INFO - Iter(val) [2500/3968]    eta: 0:03:52  time: 0.1620  data_time: 0.0012  memory: 1849  
2025/03/29 17:55:12 - mmengine - INFO - Iter(val) [2550/3968]    eta: 0:03:44  time: 0.1656  data_time: 0.0013  memory: 1849  
2025/03/29 17:55:19 - mmengine - INFO - Iter(val) [2600/3968]    eta: 0:03:36  time: 0.1546  data_time: 0.0012  memory: 1849  
2025/03/29 17:55:28 - mmengine - INFO - Iter(val) [2650/3968]    eta: 0:03:29  time: 0.1543  data_time: 0.0012  memory: 1849  
2025/03/29 17:55:35 - mmengine - INFO - Iter(val) [2700/3968]    eta: 0:03:21  time: 0.1665  data_time: 0.0012  memory: 1849  
2025/03/29 17:55:43 - mmengine - INFO - Iter(val) [2750/3968]    eta: 0:03:13  time: 0.1549  data_time: 0.0012  memory: 1849  
2025/03/29 17:55:51 - mmengine - INFO - Iter(val) [2800/3968]    eta: 0:03:05  time: 0.1630  data_time: 0.0012  memory: 1849  
2025/03/29 17:55:59 - mmengine - INFO - Iter(val) [2850/3968]    eta: 0:02:57  time: 0.1536  data_time: 0.0013  memory: 1849  
2025/03/29 17:56:07 - mmengine - INFO - Iter(val) [2900/3968]    eta: 0:02:49  time: 0.1554  data_time: 0.0012  memory: 1849  
2025/03/29 17:56:15 - mmengine - INFO - Iter(val) [2950/3968]    eta: 0:02:41  time: 0.1676  data_time: 0.0013  memory: 1849  
2025/03/29 17:56:23 - mmengine - INFO - Iter(val) [3000/3968]    eta: 0:02:33  time: 0.1524  data_time: 0.0012  memory: 1849  
2025/03/29 17:56:31 - mmengine - INFO - Iter(val) [3050/3968]    eta: 0:02:25  time: 0.1644  data_time: 0.0012  memory: 1849  
2025/03/29 17:56:39 - mmengine - INFO - Iter(val) [3100/3968]    eta: 0:02:17  time: 0.1556  data_time: 0.0012  memory: 1849  
2025/03/29 17:56:47 - mmengine - INFO - Iter(val) [3150/3968]    eta: 0:02:09  time: 0.1569  data_time: 0.0012  memory: 1849  
2025/03/29 17:56:55 - mmengine - INFO - Iter(val) [3200/3968]    eta: 0:02:01  time: 0.1627  data_time: 0.0012  memory: 1849  
2025/03/29 17:57:03 - mmengine - INFO - Iter(val) [3250/3968]    eta: 0:01:53  time: 0.1569  data_time: 0.0012  memory: 1849  
2025/03/29 17:57:11 - mmengine - INFO - Iter(val) [3300/3968]    eta: 0:01:45  time: 0.1664  data_time: 0.0013  memory: 1849  
2025/03/29 17:57:19 - mmengine - INFO - Iter(val) [3350/3968]    eta: 0:01:38  time: 0.1405  data_time: 0.0013  memory: 1849  
2025/03/29 17:57:27 - mmengine - INFO - Iter(val) [3400/3968]    eta: 0:01:30  time: 0.1587  data_time: 0.0012  memory: 1849  
2025/03/29 17:57:35 - mmengine - INFO - Iter(val) [3450/3968]    eta: 0:01:22  time: 0.1535  data_time: 0.0012  memory: 1849  
2025/03/29 17:57:43 - mmengine - INFO - Iter(val) [3500/3968]    eta: 0:01:14  time: 0.1545  data_time: 0.0012  memory: 1849  
2025/03/29 17:57:51 - mmengine - INFO - Iter(val) [3550/3968]    eta: 0:01:06  time: 0.1664  data_time: 0.0013  memory: 1849  
2025/03/29 17:57:59 - mmengine - INFO - Iter(val) [3600/3968]    eta: 0:00:58  time: 0.1628  data_time: 0.0013  memory: 1849  
2025/03/29 17:58:07 - mmengine - INFO - Iter(val) [3650/3968]    eta: 0:00:50  time: 0.1660  data_time: 0.0012  memory: 1849  
2025/03/29 17:58:15 - mmengine - INFO - Iter(val) [3700/3968]    eta: 0:00:42  time: 0.1521  data_time: 0.0012  memory: 1849  
2025/03/29 17:58:23 - mmengine - INFO - Iter(val) [3750/3968]    eta: 0:00:34  time: 0.1616  data_time: 0.0012  memory: 1849  
2025/03/29 17:58:31 - mmengine - INFO - Iter(val) [3800/3968]    eta: 0:00:26  time: 0.1532  data_time: 0.0013  memory: 1849  
2025/03/29 17:58:39 - mmengine - INFO - Iter(val) [3850/3968]    eta: 0:00:18  time: 0.1526  data_time: 0.0012  memory: 1849  
2025/03/29 17:58:47 - mmengine - INFO - Iter(val) [3900/3968]    eta: 0:00:10  time: 0.1661  data_time: 0.0013  memory: 1849  
2025/03/29 17:58:55 - mmengine - INFO - Iter(val) [3950/3968]    eta: 0:00:02  time: 0.1554  data_time: 0.0012  memory: 1849  
2025/03/29 17:58:57 - mmengine - INFO - per class results:
2025/03/29 17:58:57 - mmengine - INFO - 
+--------------+-------+-------+
|    Class     |  IoU  |  Acc  |
+--------------+-------+-------+
|  background  | 51.82 | 71.26 |
|   building   | 59.56 | 70.08 |
|     road     | 45.46 | 49.29 |
|    water     | 60.41 | 67.78 |
|    barren    | 12.92 |  15.8 |
|    forest    | 18.07 | 19.95 |
| agricultural | 54.89 | 77.71 |
+--------------+-------+-------+
2025/03/29 17:58:57 - mmengine - INFO - Iter(val) [3968/3968]    aAcc: 67.6100  mIoU: 43.3100  mAcc: 53.1200  data_time: 0.0013  time: 0.1587
2025/03/29 17:58:58 - mmengine - INFO - The previous best checkpoint /home/face/kaichengyang/xiaoxinghu/Earth_Adapter/work_dirs/u2r/DG_spatial_64_cutoff_0.3_fft_suf3/ee2e4_seed0/best_mIoU_iter_8000.pth is removed
2025/03/29 17:58:58 - mmengine - INFO - The best checkpoint with 43.3100 mIoU at 10000 iter is saved to best_mIoU_iter_10000.pth.
2025/03/29 18:00:23 - mmengine - INFO - Iter(train) [10050/20000]  base_lr: 5.3350e-05 lr: 5.3350e-05  eta: 4:39:20  time: 1.6711  data_time: 0.0169  memory: 9689  loss: 39.7695  decode.loss_cls: 0.3551  decode.loss_mask: 1.9234  decode.loss_dice: 1.6562  decode.d0.loss_cls: 0.4571  decode.d0.loss_mask: 1.9711  decode.d0.loss_dice: 1.7116  decode.d1.loss_cls: 0.3551  decode.d1.loss_mask: 1.9713  decode.d1.loss_dice: 1.6701  decode.d2.loss_cls: 0.3305  decode.d2.loss_mask: 1.9746  decode.d2.loss_dice: 1.6739  decode.d3.loss_cls: 0.3645  decode.d3.loss_mask: 1.9458  decode.d3.loss_dice: 1.6464  decode.d4.loss_cls: 0.3989  decode.d4.loss_mask: 1.9259  decode.d4.loss_dice: 1.6532  decode.d5.loss_cls: 0.3416  decode.d5.loss_mask: 1.9472  decode.d5.loss_dice: 1.6662  decode.d6.loss_cls: 0.3312  decode.d6.loss_mask: 1.9475  decode.d6.loss_dice: 1.6639  decode.d7.loss_cls: 0.3628  decode.d7.loss_mask: 1.9542  decode.d7.loss_dice: 1.6530  decode.d8.loss_cls: 0.3078  decode.d8.loss_mask: 1.9456  decode.d8.loss_dice: 1.6639
2025/03/29 18:01:47 - mmengine - INFO - Iter(train) [10100/20000]  base_lr: 5.3109e-05 lr: 5.3109e-05  eta: 4:37:55  time: 1.6725  data_time: 0.0164  memory: 9695  loss: 40.9858  decode.loss_cls: 0.3989  decode.loss_mask: 1.9488  decode.loss_dice: 1.7632  decode.d0.loss_cls: 0.4916  decode.d0.loss_mask: 1.9410  decode.d0.loss_dice: 1.8108  decode.d1.loss_cls: 0.4431  decode.d1.loss_mask: 1.9445  decode.d1.loss_dice: 1.7707  decode.d2.loss_cls: 0.4692  decode.d2.loss_mask: 1.9044  decode.d2.loss_dice: 1.7288  decode.d3.loss_cls: 0.4404  decode.d3.loss_mask: 1.8818  decode.d3.loss_dice: 1.7137  decode.d4.loss_cls: 0.3823  decode.d4.loss_mask: 1.8697  decode.d4.loss_dice: 1.7500  decode.d5.loss_cls: 0.4175  decode.d5.loss_mask: 1.8910  decode.d5.loss_dice: 1.7468  decode.d6.loss_cls: 0.4837  decode.d6.loss_mask: 1.9015  decode.d6.loss_dice: 1.7470  decode.d7.loss_cls: 0.4459  decode.d7.loss_mask: 1.8952  decode.d7.loss_dice: 1.7420  decode.d8.loss_cls: 0.3661  decode.d8.loss_mask: 1.9311  decode.d8.loss_dice: 1.7652
2025/03/29 18:03:11 - mmengine - INFO - Iter(train) [10150/20000]  base_lr: 5.2867e-05 lr: 5.2867e-05  eta: 4:36:30  time: 1.6735  data_time: 0.0160  memory: 9690  loss: 40.0376  decode.loss_cls: 0.3494  decode.loss_mask: 1.9541  decode.loss_dice: 1.6828  decode.d0.loss_cls: 0.3960  decode.d0.loss_mask: 1.9939  decode.d0.loss_dice: 1.7346  decode.d1.loss_cls: 0.3601  decode.d1.loss_mask: 1.9274  decode.d1.loss_dice: 1.6989  decode.d2.loss_cls: 0.3893  decode.d2.loss_mask: 1.9285  decode.d2.loss_dice: 1.6580  decode.d3.loss_cls: 0.3368  decode.d3.loss_mask: 1.9410  decode.d3.loss_dice: 1.7052  decode.d4.loss_cls: 0.3122  decode.d4.loss_mask: 1.9451  decode.d4.loss_dice: 1.7093  decode.d5.loss_cls: 0.3709  decode.d5.loss_mask: 1.9386  decode.d5.loss_dice: 1.7117  decode.d6.loss_cls: 0.3420  decode.d6.loss_mask: 1.9494  decode.d6.loss_dice: 1.7096  decode.d7.loss_cls: 0.3734  decode.d7.loss_mask: 1.9298  decode.d7.loss_dice: 1.6787  decode.d8.loss_cls: 0.4087  decode.d8.loss_mask: 1.9284  decode.d8.loss_dice: 1.6740
2025/03/29 18:04:35 - mmengine - INFO - Iter(train) [10200/20000]  base_lr: 5.2625e-05 lr: 5.2625e-05  eta: 4:35:06  time: 1.6751  data_time: 0.0168  memory: 9698  loss: 38.1168  decode.loss_cls: 0.2986  decode.loss_mask: 1.8534  decode.loss_dice: 1.6257  decode.d0.loss_cls: 0.3755  decode.d0.loss_mask: 1.8767  decode.d0.loss_dice: 1.7020  decode.d1.loss_cls: 0.2831  decode.d1.loss_mask: 1.8501  decode.d1.loss_dice: 1.6891  decode.d2.loss_cls: 0.2822  decode.d2.loss_mask: 1.8523  decode.d2.loss_dice: 1.6481  decode.d3.loss_cls: 0.2971  decode.d3.loss_mask: 1.8581  decode.d3.loss_dice: 1.6399  decode.d4.loss_cls: 0.3019  decode.d4.loss_mask: 1.8434  decode.d4.loss_dice: 1.6413  decode.d5.loss_cls: 0.3121  decode.d5.loss_mask: 1.8623  decode.d5.loss_dice: 1.6405  decode.d6.loss_cls: 0.2699  decode.d6.loss_mask: 1.8728  decode.d6.loss_dice: 1.6625  decode.d7.loss_cls: 0.2913  decode.d7.loss_mask: 1.8469  decode.d7.loss_dice: 1.6589  decode.d8.loss_cls: 0.3164  decode.d8.loss_mask: 1.8335  decode.d8.loss_dice: 1.6311
2025/03/29 18:05:58 - mmengine - INFO - Iter(train) [10250/20000]  base_lr: 5.2384e-05 lr: 5.2384e-05  eta: 4:33:41  time: 1.6734  data_time: 0.0161  memory: 9681  loss: 35.0387  decode.loss_cls: 0.2150  decode.loss_mask: 1.6612  decode.loss_dice: 1.5842  decode.d0.loss_cls: 0.4256  decode.d0.loss_mask: 1.6714  decode.d0.loss_dice: 1.5760  decode.d1.loss_cls: 0.2532  decode.d1.loss_mask: 1.6705  decode.d1.loss_dice: 1.5965  decode.d2.loss_cls: 0.2518  decode.d2.loss_mask: 1.6564  decode.d2.loss_dice: 1.5584  decode.d3.loss_cls: 0.2576  decode.d3.loss_mask: 1.6531  decode.d3.loss_dice: 1.5544  decode.d4.loss_cls: 0.2417  decode.d4.loss_mask: 1.6654  decode.d4.loss_dice: 1.5795  decode.d5.loss_cls: 0.2826  decode.d5.loss_mask: 1.6590  decode.d5.loss_dice: 1.5612  decode.d6.loss_cls: 0.2472  decode.d6.loss_mask: 1.6523  decode.d6.loss_dice: 1.5926  decode.d7.loss_cls: 0.2758  decode.d7.loss_mask: 1.6602  decode.d7.loss_dice: 1.5691  decode.d8.loss_cls: 0.2508  decode.d8.loss_mask: 1.6619  decode.d8.loss_dice: 1.5541
2025/03/29 18:07:22 - mmengine - INFO - Iter(train) [10300/20000]  base_lr: 5.2142e-05 lr: 5.2142e-05  eta: 4:32:16  time: 1.6734  data_time: 0.0164  memory: 9686  loss: 39.5125  decode.loss_cls: 0.4039  decode.loss_mask: 1.7453  decode.loss_dice: 1.8203  decode.d0.loss_cls: 0.4768  decode.d0.loss_mask: 1.7413  decode.d0.loss_dice: 1.8651  decode.d1.loss_cls: 0.3526  decode.d1.loss_mask: 1.7105  decode.d1.loss_dice: 1.8323  decode.d2.loss_cls: 0.3280  decode.d2.loss_mask: 1.7529  decode.d2.loss_dice: 1.8085  decode.d3.loss_cls: 0.3869  decode.d3.loss_mask: 1.7423  decode.d3.loss_dice: 1.8284  decode.d4.loss_cls: 0.4114  decode.d4.loss_mask: 1.7564  decode.d4.loss_dice: 1.8369  decode.d5.loss_cls: 0.3882  decode.d5.loss_mask: 1.7381  decode.d5.loss_dice: 1.8317  decode.d6.loss_cls: 0.3571  decode.d6.loss_mask: 1.7294  decode.d6.loss_dice: 1.8217  decode.d7.loss_cls: 0.3487  decode.d7.loss_mask: 1.7501  decode.d7.loss_dice: 1.8339  decode.d8.loss_cls: 0.3727  decode.d8.loss_mask: 1.7338  decode.d8.loss_dice: 1.8074
2025/03/29 18:08:44 - mmengine - INFO - Iter(train) [10350/20000]  base_lr: 5.1900e-05 lr: 5.1900e-05  eta: 4:30:51  time: 1.6729  data_time: 0.0157  memory: 9688  loss: 39.2002  decode.loss_cls: 0.3782  decode.loss_mask: 1.8214  decode.loss_dice: 1.6859  decode.d0.loss_cls: 0.4993  decode.d0.loss_mask: 1.8316  decode.d0.loss_dice: 1.7012  decode.d1.loss_cls: 0.4165  decode.d1.loss_mask: 1.8228  decode.d1.loss_dice: 1.6606  decode.d2.loss_cls: 0.4218  decode.d2.loss_mask: 1.8570  decode.d2.loss_dice: 1.6605  decode.d3.loss_cls: 0.4403  decode.d3.loss_mask: 1.8426  decode.d3.loss_dice: 1.6557  decode.d4.loss_cls: 0.4051  decode.d4.loss_mask: 1.8465  decode.d4.loss_dice: 1.6655  decode.d5.loss_cls: 0.4168  decode.d5.loss_mask: 1.8034  decode.d5.loss_dice: 1.6467  decode.d6.loss_cls: 0.4245  decode.d6.loss_mask: 1.8215  decode.d6.loss_dice: 1.6466  decode.d7.loss_cls: 0.4005  decode.d7.loss_mask: 1.8562  decode.d7.loss_dice: 1.6571  decode.d8.loss_cls: 0.3930  decode.d8.loss_mask: 1.8515  decode.d8.loss_dice: 1.6699
2025/03/29 18:10:08 - mmengine - INFO - Iter(train) [10400/20000]  base_lr: 5.1658e-05 lr: 5.1658e-05  eta: 4:29:26  time: 1.6882  data_time: 0.0165  memory: 9689  loss: 39.2088  decode.loss_cls: 0.3022  decode.loss_mask: 1.9249  decode.loss_dice: 1.6932  decode.d0.loss_cls: 0.4404  decode.d0.loss_mask: 1.9365  decode.d0.loss_dice: 1.7254  decode.d1.loss_cls: 0.2948  decode.d1.loss_mask: 1.9306  decode.d1.loss_dice: 1.7098  decode.d2.loss_cls: 0.3428  decode.d2.loss_mask: 1.8982  decode.d2.loss_dice: 1.6533  decode.d3.loss_cls: 0.3321  decode.d3.loss_mask: 1.9097  decode.d3.loss_dice: 1.6487  decode.d4.loss_cls: 0.3238  decode.d4.loss_mask: 1.9055  decode.d4.loss_dice: 1.6230  decode.d5.loss_cls: 0.3252  decode.d5.loss_mask: 1.9467  decode.d5.loss_dice: 1.6335  decode.d6.loss_cls: 0.3493  decode.d6.loss_mask: 1.9195  decode.d6.loss_dice: 1.6282  decode.d7.loss_cls: 0.3369  decode.d7.loss_mask: 1.9186  decode.d7.loss_dice: 1.6544  decode.d8.loss_cls: 0.3122  decode.d8.loss_mask: 1.9122  decode.d8.loss_dice: 1.6771
2025/03/29 18:11:33 - mmengine - INFO - Iter(train) [10450/20000]  base_lr: 5.1416e-05 lr: 5.1416e-05  eta: 4:28:02  time: 1.6833  data_time: 0.0158  memory: 9680  loss: 37.8381  decode.loss_cls: 0.3164  decode.loss_mask: 1.8215  decode.loss_dice: 1.6374  decode.d0.loss_cls: 0.3752  decode.d0.loss_mask: 1.8030  decode.d0.loss_dice: 1.6768  decode.d1.loss_cls: 0.2670  decode.d1.loss_mask: 1.8326  decode.d1.loss_dice: 1.6593  decode.d2.loss_cls: 0.3315  decode.d2.loss_mask: 1.8268  decode.d2.loss_dice: 1.6540  decode.d3.loss_cls: 0.3236  decode.d3.loss_mask: 1.8003  decode.d3.loss_dice: 1.6277  decode.d4.loss_cls: 0.3273  decode.d4.loss_mask: 1.8079  decode.d4.loss_dice: 1.6348  decode.d5.loss_cls: 0.3282  decode.d5.loss_mask: 1.8007  decode.d5.loss_dice: 1.6259  decode.d6.loss_cls: 0.3444  decode.d6.loss_mask: 1.8080  decode.d6.loss_dice: 1.6197  decode.d7.loss_cls: 0.3130  decode.d7.loss_mask: 1.8260  decode.d7.loss_dice: 1.6607  decode.d8.loss_cls: 0.3223  decode.d8.loss_mask: 1.8108  decode.d8.loss_dice: 1.6555
2025/03/29 18:12:57 - mmengine - INFO - Iter(train) [10500/20000]  base_lr: 5.1173e-05 lr: 5.1173e-05  eta: 4:26:38  time: 1.6771  data_time: 0.0164  memory: 9693  loss: 43.8172  decode.loss_cls: 0.4755  decode.loss_mask: 2.0577  decode.loss_dice: 1.8974  decode.d0.loss_cls: 0.5852  decode.d0.loss_mask: 2.0462  decode.d0.loss_dice: 1.8877  decode.d1.loss_cls: 0.4939  decode.d1.loss_mask: 2.0392  decode.d1.loss_dice: 1.8600  decode.d2.loss_cls: 0.4056  decode.d2.loss_mask: 2.0537  decode.d2.loss_dice: 1.8811  decode.d3.loss_cls: 0.4431  decode.d3.loss_mask: 2.0308  decode.d3.loss_dice: 1.8595  decode.d4.loss_cls: 0.4520  decode.d4.loss_mask: 1.9977  decode.d4.loss_dice: 1.8440  decode.d5.loss_cls: 0.4661  decode.d5.loss_mask: 2.0451  decode.d5.loss_dice: 1.8842  decode.d6.loss_cls: 0.5141  decode.d6.loss_mask: 1.9679  decode.d6.loss_dice: 1.8275  decode.d7.loss_cls: 0.4947  decode.d7.loss_mask: 2.0403  decode.d7.loss_dice: 1.8827  decode.d8.loss_cls: 0.5018  decode.d8.loss_mask: 2.0173  decode.d8.loss_dice: 1.8653
2025/03/29 18:14:20 - mmengine - INFO - Iter(train) [10550/20000]  base_lr: 5.0931e-05 lr: 5.0931e-05  eta: 4:25:13  time: 1.6763  data_time: 0.0161  memory: 9686  loss: 38.1251  decode.loss_cls: 0.3476  decode.loss_mask: 1.7844  decode.loss_dice: 1.6811  decode.d0.loss_cls: 0.4264  decode.d0.loss_mask: 1.7289  decode.d0.loss_dice: 1.6728  decode.d1.loss_cls: 0.3049  decode.d1.loss_mask: 1.8087  decode.d1.loss_dice: 1.7216  decode.d2.loss_cls: 0.2964  decode.d2.loss_mask: 1.7705  decode.d2.loss_dice: 1.6778  decode.d3.loss_cls: 0.3378  decode.d3.loss_mask: 1.7872  decode.d3.loss_dice: 1.6866  decode.d4.loss_cls: 0.3408  decode.d4.loss_mask: 1.7689  decode.d4.loss_dice: 1.6983  decode.d5.loss_cls: 0.3264  decode.d5.loss_mask: 1.8153  decode.d5.loss_dice: 1.7013  decode.d6.loss_cls: 0.3450  decode.d6.loss_mask: 1.7869  decode.d6.loss_dice: 1.6779  decode.d7.loss_cls: 0.3217  decode.d7.loss_mask: 1.8171  decode.d7.loss_dice: 1.6800  decode.d8.loss_cls: 0.3420  decode.d8.loss_mask: 1.8018  decode.d8.loss_dice: 1.6688
2025/03/29 18:15:44 - mmengine - INFO - Iter(train) [10600/20000]  base_lr: 5.0688e-05 lr: 5.0688e-05  eta: 4:23:48  time: 1.6771  data_time: 0.0163  memory: 9688  loss: 41.3120  decode.loss_cls: 0.3311  decode.loss_mask: 2.0177  decode.loss_dice: 1.7328  decode.d0.loss_cls: 0.4929  decode.d0.loss_mask: 2.0457  decode.d0.loss_dice: 1.7668  decode.d1.loss_cls: 0.3578  decode.d1.loss_mask: 2.0266  decode.d1.loss_dice: 1.7175  decode.d2.loss_cls: 0.3272  decode.d2.loss_mask: 2.0429  decode.d2.loss_dice: 1.7266  decode.d3.loss_cls: 0.3269  decode.d3.loss_mask: 2.0467  decode.d3.loss_dice: 1.7619  decode.d4.loss_cls: 0.3422  decode.d4.loss_mask: 2.0294  decode.d4.loss_dice: 1.7221  decode.d5.loss_cls: 0.3410  decode.d5.loss_mask: 2.0232  decode.d5.loss_dice: 1.7187  decode.d6.loss_cls: 0.3431  decode.d6.loss_mask: 2.0648  decode.d6.loss_dice: 1.7535  decode.d7.loss_cls: 0.3429  decode.d7.loss_mask: 2.0442  decode.d7.loss_dice: 1.7374  decode.d8.loss_cls: 0.3367  decode.d8.loss_mask: 2.0304  decode.d8.loss_dice: 1.7615
2025/03/29 18:17:08 - mmengine - INFO - Iter(train) [10650/20000]  base_lr: 5.0446e-05 lr: 5.0446e-05  eta: 4:22:24  time: 1.6750  data_time: 0.0161  memory: 9681  loss: 38.4560  decode.loss_cls: 0.3050  decode.loss_mask: 1.8475  decode.loss_dice: 1.6711  decode.d0.loss_cls: 0.4612  decode.d0.loss_mask: 1.8755  decode.d0.loss_dice: 1.7560  decode.d1.loss_cls: 0.3027  decode.d1.loss_mask: 1.8333  decode.d1.loss_dice: 1.7020  decode.d2.loss_cls: 0.3239  decode.d2.loss_mask: 1.8132  decode.d2.loss_dice: 1.6672  decode.d3.loss_cls: 0.2878  decode.d3.loss_mask: 1.8436  decode.d3.loss_dice: 1.7072  decode.d4.loss_cls: 0.3192  decode.d4.loss_mask: 1.8390  decode.d4.loss_dice: 1.6690  decode.d5.loss_cls: 0.3309  decode.d5.loss_mask: 1.8189  decode.d5.loss_dice: 1.6822  decode.d6.loss_cls: 0.3571  decode.d6.loss_mask: 1.7845  decode.d6.loss_dice: 1.6364  decode.d7.loss_cls: 0.3513  decode.d7.loss_mask: 1.8034  decode.d7.loss_dice: 1.6622  decode.d8.loss_cls: 0.3273  decode.d8.loss_mask: 1.8225  decode.d8.loss_dice: 1.6547
2025/03/29 18:18:32 - mmengine - INFO - Iter(train) [10700/20000]  base_lr: 5.0203e-05 lr: 5.0203e-05  eta: 4:20:59  time: 1.6872  data_time: 0.0161  memory: 9698  loss: 39.4664  decode.loss_cls: 0.3112  decode.loss_mask: 1.8357  decode.loss_dice: 1.7706  decode.d0.loss_cls: 0.4053  decode.d0.loss_mask: 1.8534  decode.d0.loss_dice: 1.8887  decode.d1.loss_cls: 0.3209  decode.d1.loss_mask: 1.8305  decode.d1.loss_dice: 1.7708  decode.d2.loss_cls: 0.3245  decode.d2.loss_mask: 1.8265  decode.d2.loss_dice: 1.7167  decode.d3.loss_cls: 0.3206  decode.d3.loss_mask: 1.8277  decode.d3.loss_dice: 1.7493  decode.d4.loss_cls: 0.3282  decode.d4.loss_mask: 1.8577  decode.d4.loss_dice: 1.7706  decode.d5.loss_cls: 0.3655  decode.d5.loss_mask: 1.8569  decode.d5.loss_dice: 1.7862  decode.d6.loss_cls: 0.3379  decode.d6.loss_mask: 1.8379  decode.d6.loss_dice: 1.7597  decode.d7.loss_cls: 0.3449  decode.d7.loss_mask: 1.8012  decode.d7.loss_dice: 1.7384  decode.d8.loss_cls: 0.3259  decode.d8.loss_mask: 1.8127  decode.d8.loss_dice: 1.7903
2025/03/29 18:19:56 - mmengine - INFO - Iter(train) [10750/20000]  base_lr: 4.9960e-05 lr: 4.9960e-05  eta: 4:19:35  time: 1.6746  data_time: 0.0158  memory: 9694  loss: 39.1218  decode.loss_cls: 0.5347  decode.loss_mask: 1.7157  decode.loss_dice: 1.6623  decode.d0.loss_cls: 0.5527  decode.d0.loss_mask: 1.6678  decode.d0.loss_dice: 1.7631  decode.d1.loss_cls: 0.5354  decode.d1.loss_mask: 1.7206  decode.d1.loss_dice: 1.6980  decode.d2.loss_cls: 0.5541  decode.d2.loss_mask: 1.7289  decode.d2.loss_dice: 1.6340  decode.d3.loss_cls: 0.5132  decode.d3.loss_mask: 1.7034  decode.d3.loss_dice: 1.6621  decode.d4.loss_cls: 0.5247  decode.d4.loss_mask: 1.7207  decode.d4.loss_dice: 1.6795  decode.d5.loss_cls: 0.4921  decode.d5.loss_mask: 1.7224  decode.d5.loss_dice: 1.6772  decode.d6.loss_cls: 0.5225  decode.d6.loss_mask: 1.7100  decode.d6.loss_dice: 1.6557  decode.d7.loss_cls: 0.5395  decode.d7.loss_mask: 1.6993  decode.d7.loss_dice: 1.6568  decode.d8.loss_cls: 0.5344  decode.d8.loss_mask: 1.6739  decode.d8.loss_dice: 1.6670
2025/03/29 18:21:19 - mmengine - INFO - Iter(train) [10800/20000]  base_lr: 4.9717e-05 lr: 4.9717e-05  eta: 4:18:10  time: 1.6742  data_time: 0.0159  memory: 9688  loss: 37.1642  decode.loss_cls: 0.3785  decode.loss_mask: 1.7961  decode.loss_dice: 1.5236  decode.d0.loss_cls: 0.4854  decode.d0.loss_mask: 1.8034  decode.d0.loss_dice: 1.6295  decode.d1.loss_cls: 0.3727  decode.d1.loss_mask: 1.7845  decode.d1.loss_dice: 1.5196  decode.d2.loss_cls: 0.3883  decode.d2.loss_mask: 1.7782  decode.d2.loss_dice: 1.5281  decode.d3.loss_cls: 0.4078  decode.d3.loss_mask: 1.7843  decode.d3.loss_dice: 1.5420  decode.d4.loss_cls: 0.3966  decode.d4.loss_mask: 1.7865  decode.d4.loss_dice: 1.5298  decode.d5.loss_cls: 0.3535  decode.d5.loss_mask: 1.7839  decode.d5.loss_dice: 1.5326  decode.d6.loss_cls: 0.4088  decode.d6.loss_mask: 1.7593  decode.d6.loss_dice: 1.5138  decode.d7.loss_cls: 0.4387  decode.d7.loss_mask: 1.7583  decode.d7.loss_dice: 1.5141  decode.d8.loss_cls: 0.3955  decode.d8.loss_mask: 1.7746  decode.d8.loss_dice: 1.4960
2025/03/29 18:22:43 - mmengine - INFO - Iter(train) [10850/20000]  base_lr: 4.9473e-05 lr: 4.9473e-05  eta: 4:16:46  time: 1.6727  data_time: 0.0176  memory: 9685  loss: 37.7239  decode.loss_cls: 0.2814  decode.loss_mask: 1.8408  decode.loss_dice: 1.6267  decode.d0.loss_cls: 0.3878  decode.d0.loss_mask: 1.8603  decode.d0.loss_dice: 1.6317  decode.d1.loss_cls: 0.3030  decode.d1.loss_mask: 1.8567  decode.d1.loss_dice: 1.6298  decode.d2.loss_cls: 0.3255  decode.d2.loss_mask: 1.8206  decode.d2.loss_dice: 1.5710  decode.d3.loss_cls: 0.3605  decode.d3.loss_mask: 1.8242  decode.d3.loss_dice: 1.5909  decode.d4.loss_cls: 0.2962  decode.d4.loss_mask: 1.8297  decode.d4.loss_dice: 1.5996  decode.d5.loss_cls: 0.3258  decode.d5.loss_mask: 1.8564  decode.d5.loss_dice: 1.6138  decode.d6.loss_cls: 0.2990  decode.d6.loss_mask: 1.8375  decode.d6.loss_dice: 1.6016  decode.d7.loss_cls: 0.3250  decode.d7.loss_mask: 1.8572  decode.d7.loss_dice: 1.6202  decode.d8.loss_cls: 0.3068  decode.d8.loss_mask: 1.8376  decode.d8.loss_dice: 1.6065
2025/03/29 18:24:07 - mmengine - INFO - Iter(train) [10900/20000]  base_lr: 4.9230e-05 lr: 4.9230e-05  eta: 4:15:21  time: 1.6693  data_time: 0.0158  memory: 9686  loss: 34.3128  decode.loss_cls: 0.3809  decode.loss_mask: 1.6365  decode.loss_dice: 1.4250  decode.d0.loss_cls: 0.5137  decode.d0.loss_mask: 1.6158  decode.d0.loss_dice: 1.4895  decode.d1.loss_cls: 0.3936  decode.d1.loss_mask: 1.6237  decode.d1.loss_dice: 1.3985  decode.d2.loss_cls: 0.3771  decode.d2.loss_mask: 1.6182  decode.d2.loss_dice: 1.4153  decode.d3.loss_cls: 0.3773  decode.d3.loss_mask: 1.6194  decode.d3.loss_dice: 1.4090  decode.d4.loss_cls: 0.3807  decode.d4.loss_mask: 1.6269  decode.d4.loss_dice: 1.4237  decode.d5.loss_cls: 0.4027  decode.d5.loss_mask: 1.6049  decode.d5.loss_dice: 1.3750  decode.d6.loss_cls: 0.3940  decode.d6.loss_mask: 1.6155  decode.d6.loss_dice: 1.3905  decode.d7.loss_cls: 0.3459  decode.d7.loss_mask: 1.6296  decode.d7.loss_dice: 1.4000  decode.d8.loss_cls: 0.3984  decode.d8.loss_mask: 1.6102  decode.d8.loss_dice: 1.4214
2025/03/29 18:25:30 - mmengine - INFO - Iter(train) [10950/20000]  base_lr: 4.8986e-05 lr: 4.8986e-05  eta: 4:13:57  time: 1.6789  data_time: 0.0158  memory: 9686  loss: 36.0873  decode.loss_cls: 0.3320  decode.loss_mask: 1.7552  decode.loss_dice: 1.5513  decode.d0.loss_cls: 0.4191  decode.d0.loss_mask: 1.7338  decode.d0.loss_dice: 1.6027  decode.d1.loss_cls: 0.3421  decode.d1.loss_mask: 1.7541  decode.d1.loss_dice: 1.5233  decode.d2.loss_cls: 0.3592  decode.d2.loss_mask: 1.7475  decode.d2.loss_dice: 1.4885  decode.d3.loss_cls: 0.3346  decode.d3.loss_mask: 1.7472  decode.d3.loss_dice: 1.5006  decode.d4.loss_cls: 0.3712  decode.d4.loss_mask: 1.7397  decode.d4.loss_dice: 1.4857  decode.d5.loss_cls: 0.3752  decode.d5.loss_mask: 1.7151  decode.d5.loss_dice: 1.4821  decode.d6.loss_cls: 0.3583  decode.d6.loss_mask: 1.7428  decode.d6.loss_dice: 1.5117  decode.d7.loss_cls: 0.3619  decode.d7.loss_mask: 1.7258  decode.d7.loss_dice: 1.4641  decode.d8.loss_cls: 0.3671  decode.d8.loss_mask: 1.7251  decode.d8.loss_dice: 1.4703
2025/03/29 18:26:55 - mmengine - INFO - Exp name: u2r_20250329_122454
2025/03/29 18:26:55 - mmengine - INFO - Iter(train) [11000/20000]  base_lr: 4.8743e-05 lr: 4.8743e-05  eta: 4:12:32  time: 1.6800  data_time: 0.0155  memory: 9693  loss: 37.6333  decode.loss_cls: 0.2701  decode.loss_mask: 1.8234  decode.loss_dice: 1.6463  decode.d0.loss_cls: 0.3572  decode.d0.loss_mask: 1.8364  decode.d0.loss_dice: 1.6963  decode.d1.loss_cls: 0.2623  decode.d1.loss_mask: 1.8173  decode.d1.loss_dice: 1.6602  decode.d2.loss_cls: 0.2732  decode.d2.loss_mask: 1.8126  decode.d2.loss_dice: 1.6492  decode.d3.loss_cls: 0.2663  decode.d3.loss_mask: 1.8097  decode.d3.loss_dice: 1.6544  decode.d4.loss_cls: 0.2762  decode.d4.loss_mask: 1.8167  decode.d4.loss_dice: 1.6611  decode.d5.loss_cls: 0.2863  decode.d5.loss_mask: 1.8322  decode.d5.loss_dice: 1.6654  decode.d6.loss_cls: 0.2975  decode.d6.loss_mask: 1.8156  decode.d6.loss_dice: 1.6482  decode.d7.loss_cls: 0.2751  decode.d7.loss_mask: 1.8102  decode.d7.loss_dice: 1.6696  decode.d8.loss_cls: 0.2573  decode.d8.loss_mask: 1.8163  decode.d8.loss_dice: 1.6704
2025/03/29 18:28:19 - mmengine - INFO - Iter(train) [11050/20000]  base_lr: 4.8499e-05 lr: 4.8499e-05  eta: 4:11:08  time: 1.6780  data_time: 0.0159  memory: 9696  loss: 40.6417  decode.loss_cls: 0.4486  decode.loss_mask: 1.7999  decode.loss_dice: 1.8371  decode.d0.loss_cls: 0.3407  decode.d0.loss_mask: 1.8126  decode.d0.loss_dice: 1.9293  decode.d1.loss_cls: 0.4294  decode.d1.loss_mask: 1.8049  decode.d1.loss_dice: 1.8424  decode.d2.loss_cls: 0.4116  decode.d2.loss_mask: 1.7984  decode.d2.loss_dice: 1.8451  decode.d3.loss_cls: 0.3606  decode.d3.loss_mask: 1.8141  decode.d3.loss_dice: 1.8243  decode.d4.loss_cls: 0.4300  decode.d4.loss_mask: 1.7848  decode.d4.loss_dice: 1.8413  decode.d5.loss_cls: 0.4668  decode.d5.loss_mask: 1.7981  decode.d5.loss_dice: 1.8788  decode.d6.loss_cls: 0.3531  decode.d6.loss_mask: 1.8346  decode.d6.loss_dice: 1.8649  decode.d7.loss_cls: 0.3990  decode.d7.loss_mask: 1.7886  decode.d7.loss_dice: 1.8285  decode.d8.loss_cls: 0.4464  decode.d8.loss_mask: 1.7931  decode.d8.loss_dice: 1.8349
2025/03/29 18:29:43 - mmengine - INFO - Iter(train) [11100/20000]  base_lr: 4.8255e-05 lr: 4.8255e-05  eta: 4:09:44  time: 1.6784  data_time: 0.0161  memory: 9688  loss: 35.6707  decode.loss_cls: 0.2078  decode.loss_mask: 1.7198  decode.loss_dice: 1.6086  decode.d0.loss_cls: 0.2531  decode.d0.loss_mask: 1.7538  decode.d0.loss_dice: 1.6618  decode.d1.loss_cls: 0.1979  decode.d1.loss_mask: 1.7267  decode.d1.loss_dice: 1.6449  decode.d2.loss_cls: 0.1835  decode.d2.loss_mask: 1.7198  decode.d2.loss_dice: 1.6452  decode.d3.loss_cls: 0.1906  decode.d3.loss_mask: 1.7169  decode.d3.loss_dice: 1.6719  decode.d4.loss_cls: 0.2156  decode.d4.loss_mask: 1.7210  decode.d4.loss_dice: 1.6609  decode.d5.loss_cls: 0.2038  decode.d5.loss_mask: 1.7267  decode.d5.loss_dice: 1.6387  decode.d6.loss_cls: 0.1766  decode.d6.loss_mask: 1.7097  decode.d6.loss_dice: 1.6139  decode.d7.loss_cls: 0.2086  decode.d7.loss_mask: 1.7168  decode.d7.loss_dice: 1.6329  decode.d8.loss_cls: 0.2023  decode.d8.loss_mask: 1.7071  decode.d8.loss_dice: 1.6341
2025/03/29 18:31:06 - mmengine - INFO - Iter(train) [11150/20000]  base_lr: 4.8011e-05 lr: 4.8011e-05  eta: 4:08:19  time: 1.6758  data_time: 0.0157  memory: 9688  loss: 39.3177  decode.loss_cls: 0.3322  decode.loss_mask: 1.8667  decode.loss_dice: 1.6640  decode.d0.loss_cls: 0.4434  decode.d0.loss_mask: 1.8719  decode.d0.loss_dice: 1.7188  decode.d1.loss_cls: 0.4351  decode.d1.loss_mask: 1.8336  decode.d1.loss_dice: 1.6599  decode.d2.loss_cls: 0.3951  decode.d2.loss_mask: 1.8955  decode.d2.loss_dice: 1.6707  decode.d3.loss_cls: 0.4019  decode.d3.loss_mask: 1.8727  decode.d3.loss_dice: 1.6793  decode.d4.loss_cls: 0.3871  decode.d4.loss_mask: 1.8439  decode.d4.loss_dice: 1.6587  decode.d5.loss_cls: 0.3931  decode.d5.loss_mask: 1.8548  decode.d5.loss_dice: 1.6530  decode.d6.loss_cls: 0.3755  decode.d6.loss_mask: 1.8703  decode.d6.loss_dice: 1.6678  decode.d7.loss_cls: 0.3960  decode.d7.loss_mask: 1.8713  decode.d7.loss_dice: 1.6532  decode.d8.loss_cls: 0.4009  decode.d8.loss_mask: 1.8703  decode.d8.loss_dice: 1.6807
2025/03/29 18:32:30 - mmengine - INFO - Iter(train) [11200/20000]  base_lr: 4.7767e-05 lr: 4.7767e-05  eta: 4:06:55  time: 1.6756  data_time: 0.0157  memory: 9689  loss: 38.1394  decode.loss_cls: 0.2799  decode.loss_mask: 1.8685  decode.loss_dice: 1.6495  decode.d0.loss_cls: 0.2804  decode.d0.loss_mask: 1.8747  decode.d0.loss_dice: 1.6831  decode.d1.loss_cls: 0.2352  decode.d1.loss_mask: 1.8934  decode.d1.loss_dice: 1.6916  decode.d2.loss_cls: 0.2316  decode.d2.loss_mask: 1.8713  decode.d2.loss_dice: 1.6693  decode.d3.loss_cls: 0.2735  decode.d3.loss_mask: 1.8579  decode.d3.loss_dice: 1.6425  decode.d4.loss_cls: 0.2645  decode.d4.loss_mask: 1.8883  decode.d4.loss_dice: 1.6588  decode.d5.loss_cls: 0.2578  decode.d5.loss_mask: 1.8760  decode.d5.loss_dice: 1.6682  decode.d6.loss_cls: 0.2851  decode.d6.loss_mask: 1.9233  decode.d6.loss_dice: 1.6915  decode.d7.loss_cls: 0.2670  decode.d7.loss_mask: 1.8885  decode.d7.loss_dice: 1.6750  decode.d8.loss_cls: 0.2587  decode.d8.loss_mask: 1.8661  decode.d8.loss_dice: 1.6684
2025/03/29 18:33:52 - mmengine - INFO - Iter(train) [11250/20000]  base_lr: 4.7523e-05 lr: 4.7523e-05  eta: 4:05:29  time: 1.4699  data_time: 0.0159  memory: 9693  loss: 39.4595  decode.loss_cls: 0.2919  decode.loss_mask: 1.8938  decode.loss_dice: 1.7820  decode.d0.loss_cls: 0.3526  decode.d0.loss_mask: 1.9057  decode.d0.loss_dice: 1.8111  decode.d1.loss_cls: 0.2949  decode.d1.loss_mask: 1.8628  decode.d1.loss_dice: 1.7734  decode.d2.loss_cls: 0.2737  decode.d2.loss_mask: 1.8653  decode.d2.loss_dice: 1.7645  decode.d3.loss_cls: 0.2566  decode.d3.loss_mask: 1.8804  decode.d3.loss_dice: 1.7598  decode.d4.loss_cls: 0.2677  decode.d4.loss_mask: 1.8782  decode.d4.loss_dice: 1.7806  decode.d5.loss_cls: 0.2507  decode.d5.loss_mask: 1.9169  decode.d5.loss_dice: 1.7794  decode.d6.loss_cls: 0.2501  decode.d6.loss_mask: 1.8970  decode.d6.loss_dice: 1.7604  decode.d7.loss_cls: 0.2619  decode.d7.loss_mask: 1.9140  decode.d7.loss_dice: 1.7791  decode.d8.loss_cls: 0.2764  decode.d8.loss_mask: 1.9049  decode.d8.loss_dice: 1.7736
2025/03/29 18:35:21 - mmengine - INFO - Iter(train) [11300/20000]  base_lr: 4.7278e-05 lr: 4.7278e-05  eta: 4:04:08  time: 1.7890  data_time: 0.0158  memory: 9692  loss: 38.1299  decode.loss_cls: 0.2626  decode.loss_mask: 1.9571  decode.loss_dice: 1.5766  decode.d0.loss_cls: 0.4343  decode.d0.loss_mask: 1.9324  decode.d0.loss_dice: 1.6640  decode.d1.loss_cls: 0.2805  decode.d1.loss_mask: 1.9613  decode.d1.loss_dice: 1.6099  decode.d2.loss_cls: 0.2794  decode.d2.loss_mask: 1.9100  decode.d2.loss_dice: 1.5622  decode.d3.loss_cls: 0.2731  decode.d3.loss_mask: 1.9361  decode.d3.loss_dice: 1.5409  decode.d4.loss_cls: 0.2853  decode.d4.loss_mask: 1.9297  decode.d4.loss_dice: 1.5408  decode.d5.loss_cls: 0.2460  decode.d5.loss_mask: 1.9333  decode.d5.loss_dice: 1.5696  decode.d6.loss_cls: 0.2629  decode.d6.loss_mask: 1.9653  decode.d6.loss_dice: 1.5803  decode.d7.loss_cls: 0.2984  decode.d7.loss_mask: 1.9534  decode.d7.loss_dice: 1.5897  decode.d8.loss_cls: 0.2730  decode.d8.loss_mask: 1.9512  decode.d8.loss_dice: 1.5706
2025/03/29 18:36:52 - mmengine - INFO - Iter(train) [11350/20000]  base_lr: 4.7033e-05 lr: 4.7033e-05  eta: 4:02:49  time: 1.8197  data_time: 0.0162  memory: 9680  loss: 37.4374  decode.loss_cls: 0.2387  decode.loss_mask: 1.7406  decode.loss_dice: 1.7347  decode.d0.loss_cls: 0.3943  decode.d0.loss_mask: 1.7330  decode.d0.loss_dice: 1.7894  decode.d1.loss_cls: 0.2501  decode.d1.loss_mask: 1.7405  decode.d1.loss_dice: 1.7133  decode.d2.loss_cls: 0.2548  decode.d2.loss_mask: 1.7608  decode.d2.loss_dice: 1.7226  decode.d3.loss_cls: 0.2393  decode.d3.loss_mask: 1.7691  decode.d3.loss_dice: 1.6873  decode.d4.loss_cls: 0.2535  decode.d4.loss_mask: 1.7665  decode.d4.loss_dice: 1.6836  decode.d5.loss_cls: 0.2462  decode.d5.loss_mask: 1.7486  decode.d5.loss_dice: 1.7285  decode.d6.loss_cls: 0.2550  decode.d6.loss_mask: 1.7579  decode.d6.loss_dice: 1.7391  decode.d7.loss_cls: 0.2419  decode.d7.loss_mask: 1.7564  decode.d7.loss_dice: 1.7350  decode.d8.loss_cls: 0.2711  decode.d8.loss_mask: 1.7536  decode.d8.loss_dice: 1.7321
2025/03/29 18:38:21 - mmengine - INFO - Iter(train) [11400/20000]  base_lr: 4.6789e-05 lr: 4.6789e-05  eta: 4:01:28  time: 1.7804  data_time: 0.0160  memory: 9684  loss: 37.0938  decode.loss_cls: 0.3525  decode.loss_mask: 1.7413  decode.loss_dice: 1.6112  decode.d0.loss_cls: 0.4145  decode.d0.loss_mask: 1.7409  decode.d0.loss_dice: 1.7367  decode.d1.loss_cls: 0.2864  decode.d1.loss_mask: 1.7355  decode.d1.loss_dice: 1.6427  decode.d2.loss_cls: 0.3060  decode.d2.loss_mask: 1.7484  decode.d2.loss_dice: 1.6225  decode.d3.loss_cls: 0.3137  decode.d3.loss_mask: 1.7460  decode.d3.loss_dice: 1.5983  decode.d4.loss_cls: 0.2968  decode.d4.loss_mask: 1.7502  decode.d4.loss_dice: 1.6319  decode.d5.loss_cls: 0.3476  decode.d5.loss_mask: 1.7255  decode.d5.loss_dice: 1.6183  decode.d6.loss_cls: 0.3630  decode.d6.loss_mask: 1.7206  decode.d6.loss_dice: 1.6345  decode.d7.loss_cls: 0.3570  decode.d7.loss_mask: 1.7467  decode.d7.loss_dice: 1.6209  decode.d8.loss_cls: 0.3587  decode.d8.loss_mask: 1.7355  decode.d8.loss_dice: 1.5900
2025/03/29 18:39:50 - mmengine - INFO - Iter(train) [11450/20000]  base_lr: 4.6544e-05 lr: 4.6544e-05  eta: 4:00:08  time: 1.7811  data_time: 0.0161  memory: 9759  loss: 37.8058  decode.loss_cls: 0.2869  decode.loss_mask: 1.8513  decode.loss_dice: 1.6137  decode.d0.loss_cls: 0.3946  decode.d0.loss_mask: 1.8869  decode.d0.loss_dice: 1.6657  decode.d1.loss_cls: 0.2843  decode.d1.loss_mask: 1.8267  decode.d1.loss_dice: 1.6026  decode.d2.loss_cls: 0.2802  decode.d2.loss_mask: 1.8547  decode.d2.loss_dice: 1.6234  decode.d3.loss_cls: 0.3188  decode.d3.loss_mask: 1.8480  decode.d3.loss_dice: 1.6362  decode.d4.loss_cls: 0.2970  decode.d4.loss_mask: 1.8495  decode.d4.loss_dice: 1.6204  decode.d5.loss_cls: 0.3270  decode.d5.loss_mask: 1.8243  decode.d5.loss_dice: 1.6015  decode.d6.loss_cls: 0.3080  decode.d6.loss_mask: 1.8617  decode.d6.loss_dice: 1.6205  decode.d7.loss_cls: 0.2965  decode.d7.loss_mask: 1.8356  decode.d7.loss_dice: 1.6322  decode.d8.loss_cls: 0.3026  decode.d8.loss_mask: 1.8513  decode.d8.loss_dice: 1.6036
2025/03/29 18:41:16 - mmengine - INFO - Iter(train) [11500/20000]  base_lr: 4.6299e-05 lr: 4.6299e-05  eta: 3:58:45  time: 1.3925  data_time: 0.0158  memory: 9745  loss: 37.0560  decode.loss_cls: 0.3430  decode.loss_mask: 1.7458  decode.loss_dice: 1.6130  decode.d0.loss_cls: 0.3709  decode.d0.loss_mask: 1.7829  decode.d0.loss_dice: 1.6565  decode.d1.loss_cls: 0.3135  decode.d1.loss_mask: 1.7615  decode.d1.loss_dice: 1.6229  decode.d2.loss_cls: 0.3327  decode.d2.loss_mask: 1.7649  decode.d2.loss_dice: 1.6346  decode.d3.loss_cls: 0.3587  decode.d3.loss_mask: 1.7460  decode.d3.loss_dice: 1.6298  decode.d4.loss_cls: 0.2967  decode.d4.loss_mask: 1.7545  decode.d4.loss_dice: 1.6214  decode.d5.loss_cls: 0.3261  decode.d5.loss_mask: 1.7419  decode.d5.loss_dice: 1.6094  decode.d6.loss_cls: 0.3174  decode.d6.loss_mask: 1.7536  decode.d6.loss_dice: 1.6238  decode.d7.loss_cls: 0.2764  decode.d7.loss_mask: 1.7654  decode.d7.loss_dice: 1.6416  decode.d8.loss_cls: 0.2838  decode.d8.loss_mask: 1.7342  decode.d8.loss_dice: 1.6330
2025/03/29 18:42:39 - mmengine - INFO - Iter(train) [11550/20000]  base_lr: 4.6054e-05 lr: 4.6054e-05  eta: 3:57:20  time: 1.6713  data_time: 0.0160  memory: 9686  loss: 39.2049  decode.loss_cls: 0.3515  decode.loss_mask: 1.8206  decode.loss_dice: 1.7117  decode.d0.loss_cls: 0.4901  decode.d0.loss_mask: 1.7889  decode.d0.loss_dice: 1.7831  decode.d1.loss_cls: 0.4405  decode.d1.loss_mask: 1.7812  decode.d1.loss_dice: 1.6782  decode.d2.loss_cls: 0.4096  decode.d2.loss_mask: 1.7912  decode.d2.loss_dice: 1.6704  decode.d3.loss_cls: 0.4209  decode.d3.loss_mask: 1.7900  decode.d3.loss_dice: 1.7214  decode.d4.loss_cls: 0.4123  decode.d4.loss_mask: 1.7857  decode.d4.loss_dice: 1.7045  decode.d5.loss_cls: 0.4196  decode.d5.loss_mask: 1.8094  decode.d5.loss_dice: 1.6639  decode.d6.loss_cls: 0.4050  decode.d6.loss_mask: 1.8333  decode.d6.loss_dice: 1.7043  decode.d7.loss_cls: 0.3700  decode.d7.loss_mask: 1.8280  decode.d7.loss_dice: 1.7064  decode.d8.loss_cls: 0.4230  decode.d8.loss_mask: 1.7961  decode.d8.loss_dice: 1.6942
2025/03/29 18:44:02 - mmengine - INFO - Iter(train) [11600/20000]  base_lr: 4.5808e-05 lr: 4.5808e-05  eta: 3:55:55  time: 1.6767  data_time: 0.0158  memory: 9690  loss: 39.0792  decode.loss_cls: 0.2819  decode.loss_mask: 1.8908  decode.loss_dice: 1.7188  decode.d0.loss_cls: 0.4301  decode.d0.loss_mask: 1.8928  decode.d0.loss_dice: 1.7122  decode.d1.loss_cls: 0.3228  decode.d1.loss_mask: 1.8780  decode.d1.loss_dice: 1.6980  decode.d2.loss_cls: 0.3207  decode.d2.loss_mask: 1.8930  decode.d2.loss_dice: 1.6811  decode.d3.loss_cls: 0.2957  decode.d3.loss_mask: 1.8910  decode.d3.loss_dice: 1.6894  decode.d4.loss_cls: 0.3144  decode.d4.loss_mask: 1.9022  decode.d4.loss_dice: 1.6710  decode.d5.loss_cls: 0.3194  decode.d5.loss_mask: 1.8605  decode.d5.loss_dice: 1.6617  decode.d6.loss_cls: 0.3041  decode.d6.loss_mask: 1.8718  decode.d6.loss_dice: 1.6886  decode.d7.loss_cls: 0.3285  decode.d7.loss_mask: 1.9030  decode.d7.loss_dice: 1.7195  decode.d8.loss_cls: 0.3102  decode.d8.loss_mask: 1.8936  decode.d8.loss_dice: 1.7343
2025/03/29 18:45:26 - mmengine - INFO - Iter(train) [11650/20000]  base_lr: 4.5563e-05 lr: 4.5563e-05  eta: 3:54:30  time: 1.6732  data_time: 0.0159  memory: 9681  loss: 36.4142  decode.loss_cls: 0.3266  decode.loss_mask: 1.7226  decode.loss_dice: 1.5807  decode.d0.loss_cls: 0.4097  decode.d0.loss_mask: 1.7609  decode.d0.loss_dice: 1.5865  decode.d1.loss_cls: 0.2884  decode.d1.loss_mask: 1.7282  decode.d1.loss_dice: 1.5930  decode.d2.loss_cls: 0.2890  decode.d2.loss_mask: 1.7610  decode.d2.loss_dice: 1.5827  decode.d3.loss_cls: 0.3283  decode.d3.loss_mask: 1.7227  decode.d3.loss_dice: 1.5724  decode.d4.loss_cls: 0.3524  decode.d4.loss_mask: 1.7237  decode.d4.loss_dice: 1.5842  decode.d5.loss_cls: 0.3591  decode.d5.loss_mask: 1.7213  decode.d5.loss_dice: 1.5810  decode.d6.loss_cls: 0.3117  decode.d6.loss_mask: 1.7199  decode.d6.loss_dice: 1.5827  decode.d7.loss_cls: 0.3180  decode.d7.loss_mask: 1.7164  decode.d7.loss_dice: 1.5606  decode.d8.loss_cls: 0.3481  decode.d8.loss_mask: 1.7123  decode.d8.loss_dice: 1.5702
2025/03/29 18:46:50 - mmengine - INFO - Iter(train) [11700/20000]  base_lr: 4.5317e-05 lr: 4.5317e-05  eta: 3:53:06  time: 1.6755  data_time: 0.0163  memory: 9687  loss: 35.8715  decode.loss_cls: 0.3712  decode.loss_mask: 1.7131  decode.loss_dice: 1.4655  decode.d0.loss_cls: 0.5211  decode.d0.loss_mask: 1.7469  decode.d0.loss_dice: 1.5163  decode.d1.loss_cls: 0.3788  decode.d1.loss_mask: 1.7303  decode.d1.loss_dice: 1.4857  decode.d2.loss_cls: 0.4102  decode.d2.loss_mask: 1.7246  decode.d2.loss_dice: 1.4788  decode.d3.loss_cls: 0.3464  decode.d3.loss_mask: 1.7294  decode.d3.loss_dice: 1.4750  decode.d4.loss_cls: 0.3619  decode.d4.loss_mask: 1.7289  decode.d4.loss_dice: 1.4823  decode.d5.loss_cls: 0.3993  decode.d5.loss_mask: 1.7024  decode.d5.loss_dice: 1.4348  decode.d6.loss_cls: 0.3878  decode.d6.loss_mask: 1.7195  decode.d6.loss_dice: 1.4571  decode.d7.loss_cls: 0.3794  decode.d7.loss_mask: 1.7347  decode.d7.loss_dice: 1.4720  decode.d8.loss_cls: 0.4228  decode.d8.loss_mask: 1.6717  decode.d8.loss_dice: 1.4239
2025/03/29 18:48:14 - mmengine - INFO - Iter(train) [11750/20000]  base_lr: 4.5071e-05 lr: 4.5071e-05  eta: 3:51:41  time: 1.6847  data_time: 0.0161  memory: 9694  loss: 40.6744  decode.loss_cls: 0.4446  decode.loss_mask: 1.8624  decode.loss_dice: 1.7204  decode.d0.loss_cls: 0.5462  decode.d0.loss_mask: 1.9121  decode.d0.loss_dice: 1.7515  decode.d1.loss_cls: 0.4566  decode.d1.loss_mask: 1.8640  decode.d1.loss_dice: 1.7301  decode.d2.loss_cls: 0.4333  decode.d2.loss_mask: 1.8879  decode.d2.loss_dice: 1.7659  decode.d3.loss_cls: 0.4403  decode.d3.loss_mask: 1.8741  decode.d3.loss_dice: 1.7450  decode.d4.loss_cls: 0.4477  decode.d4.loss_mask: 1.9070  decode.d4.loss_dice: 1.7267  decode.d5.loss_cls: 0.4077  decode.d5.loss_mask: 1.9036  decode.d5.loss_dice: 1.7259  decode.d6.loss_cls: 0.4718  decode.d6.loss_mask: 1.8755  decode.d6.loss_dice: 1.6847  decode.d7.loss_cls: 0.3972  decode.d7.loss_mask: 1.8855  decode.d7.loss_dice: 1.7186  decode.d8.loss_cls: 0.4506  decode.d8.loss_mask: 1.9157  decode.d8.loss_dice: 1.7219
2025/03/29 18:49:38 - mmengine - INFO - Iter(train) [11800/20000]  base_lr: 4.4825e-05 lr: 4.4825e-05  eta: 3:50:17  time: 1.6786  data_time: 0.0160  memory: 9693  loss: 43.1286  decode.loss_cls: 0.4211  decode.loss_mask: 2.0001  decode.loss_dice: 1.8661  decode.d0.loss_cls: 0.5206  decode.d0.loss_mask: 2.0094  decode.d0.loss_dice: 1.9520  decode.d1.loss_cls: 0.4664  decode.d1.loss_mask: 1.9732  decode.d1.loss_dice: 1.8759  decode.d2.loss_cls: 0.4396  decode.d2.loss_mask: 1.9859  decode.d2.loss_dice: 1.8549  decode.d3.loss_cls: 0.4670  decode.d3.loss_mask: 1.9444  decode.d3.loss_dice: 1.8638  decode.d4.loss_cls: 0.4851  decode.d4.loss_mask: 1.9555  decode.d4.loss_dice: 1.8692  decode.d5.loss_cls: 0.4758  decode.d5.loss_mask: 1.9427  decode.d5.loss_dice: 1.8578  decode.d6.loss_cls: 0.4488  decode.d6.loss_mask: 1.9750  decode.d6.loss_dice: 1.8684  decode.d7.loss_cls: 0.4703  decode.d7.loss_mask: 1.9623  decode.d7.loss_dice: 1.8752  decode.d8.loss_cls: 0.4580  decode.d8.loss_mask: 1.9672  decode.d8.loss_dice: 1.8770
2025/03/29 18:51:01 - mmengine - INFO - Iter(train) [11850/20000]  base_lr: 4.4579e-05 lr: 4.4579e-05  eta: 3:48:52  time: 1.6752  data_time: 0.0158  memory: 9664  loss: 40.0974  decode.loss_cls: 0.3620  decode.loss_mask: 1.8423  decode.loss_dice: 1.7953  decode.d0.loss_cls: 0.4376  decode.d0.loss_mask: 1.8493  decode.d0.loss_dice: 1.8178  decode.d1.loss_cls: 0.2956  decode.d1.loss_mask: 1.8597  decode.d1.loss_dice: 1.8281  decode.d2.loss_cls: 0.3236  decode.d2.loss_mask: 1.8701  decode.d2.loss_dice: 1.7972  decode.d3.loss_cls: 0.3652  decode.d3.loss_mask: 1.8490  decode.d3.loss_dice: 1.7698  decode.d4.loss_cls: 0.3124  decode.d4.loss_mask: 1.8734  decode.d4.loss_dice: 1.7979  decode.d5.loss_cls: 0.3169  decode.d5.loss_mask: 1.8894  decode.d5.loss_dice: 1.7747  decode.d6.loss_cls: 0.2771  decode.d6.loss_mask: 1.8921  decode.d6.loss_dice: 1.7941  decode.d7.loss_cls: 0.3419  decode.d7.loss_mask: 1.8826  decode.d7.loss_dice: 1.8267  decode.d8.loss_cls: 0.3236  decode.d8.loss_mask: 1.8946  decode.d8.loss_dice: 1.8376
2025/03/29 18:52:25 - mmengine - INFO - Iter(train) [11900/20000]  base_lr: 4.4333e-05 lr: 4.4333e-05  eta: 3:47:27  time: 1.6717  data_time: 0.0158  memory: 9684  loss: 37.3212  decode.loss_cls: 0.2597  decode.loss_mask: 1.7782  decode.loss_dice: 1.6171  decode.d0.loss_cls: 0.3981  decode.d0.loss_mask: 1.8358  decode.d0.loss_dice: 1.7078  decode.d1.loss_cls: 0.2703  decode.d1.loss_mask: 1.8344  decode.d1.loss_dice: 1.6595  decode.d2.loss_cls: 0.2567  decode.d2.loss_mask: 1.8382  decode.d2.loss_dice: 1.6366  decode.d3.loss_cls: 0.2812  decode.d3.loss_mask: 1.7989  decode.d3.loss_dice: 1.6218  decode.d4.loss_cls: 0.2769  decode.d4.loss_mask: 1.7997  decode.d4.loss_dice: 1.6276  decode.d5.loss_cls: 0.2620  decode.d5.loss_mask: 1.8060  decode.d5.loss_dice: 1.6243  decode.d6.loss_cls: 0.2415  decode.d6.loss_mask: 1.8299  decode.d6.loss_dice: 1.6674  decode.d7.loss_cls: 0.2521  decode.d7.loss_mask: 1.8386  decode.d7.loss_dice: 1.6362  decode.d8.loss_cls: 0.2628  decode.d8.loss_mask: 1.7707  decode.d8.loss_dice: 1.6312
2025/03/29 18:53:49 - mmengine - INFO - Iter(train) [11950/20000]  base_lr: 4.4087e-05 lr: 4.4087e-05  eta: 3:46:03  time: 1.6765  data_time: 0.0158  memory: 9681  loss: 37.3326  decode.loss_cls: 0.4051  decode.loss_mask: 1.7001  decode.loss_dice: 1.6344  decode.d0.loss_cls: 0.4154  decode.d0.loss_mask: 1.7138  decode.d0.loss_dice: 1.7367  decode.d1.loss_cls: 0.3535  decode.d1.loss_mask: 1.7083  decode.d1.loss_dice: 1.6394  decode.d2.loss_cls: 0.3642  decode.d2.loss_mask: 1.7018  decode.d2.loss_dice: 1.6203  decode.d3.loss_cls: 0.3334  decode.d3.loss_mask: 1.7226  decode.d3.loss_dice: 1.6295  decode.d4.loss_cls: 0.3299  decode.d4.loss_mask: 1.7272  decode.d4.loss_dice: 1.6436  decode.d5.loss_cls: 0.3652  decode.d5.loss_mask: 1.7202  decode.d5.loss_dice: 1.6330  decode.d6.loss_cls: 0.3326  decode.d6.loss_mask: 1.7328  decode.d6.loss_dice: 1.6906  decode.d7.loss_cls: 0.3654  decode.d7.loss_mask: 1.7161  decode.d7.loss_dice: 1.6648  decode.d8.loss_cls: 0.3906  decode.d8.loss_mask: 1.7039  decode.d8.loss_dice: 1.6384
2025/03/29 18:55:12 - mmengine - INFO - Exp name: u2r_20250329_122454
2025/03/29 18:55:12 - mmengine - INFO - Iter(train) [12000/20000]  base_lr: 4.3840e-05 lr: 4.3840e-05  eta: 3:44:38  time: 1.6745  data_time: 0.0157  memory: 9698  loss: 34.9119  decode.loss_cls: 0.2952  decode.loss_mask: 1.6236  decode.loss_dice: 1.4907  decode.d0.loss_cls: 0.4402  decode.d0.loss_mask: 1.6410  decode.d0.loss_dice: 1.5253  decode.d1.loss_cls: 0.3020  decode.d1.loss_mask: 1.6453  decode.d1.loss_dice: 1.5336  decode.d2.loss_cls: 0.3165  decode.d2.loss_mask: 1.6400  decode.d2.loss_dice: 1.5058  decode.d3.loss_cls: 0.2941  decode.d3.loss_mask: 1.6501  decode.d3.loss_dice: 1.5365  decode.d4.loss_cls: 0.3279  decode.d4.loss_mask: 1.6371  decode.d4.loss_dice: 1.5338  decode.d5.loss_cls: 0.3352  decode.d5.loss_mask: 1.6413  decode.d5.loss_dice: 1.5356  decode.d6.loss_cls: 0.3281  decode.d6.loss_mask: 1.6556  decode.d6.loss_dice: 1.5217  decode.d7.loss_cls: 0.3010  decode.d7.loss_mask: 1.6594  decode.d7.loss_dice: 1.5282  decode.d8.loss_cls: 0.3340  decode.d8.loss_mask: 1.6339  decode.d8.loss_dice: 1.4992
2025/03/29 18:55:13 - mmengine - INFO - Saving checkpoint at 12000 iterations
2025/03/29 18:55:23 - mmengine - INFO - Iter(val) [  50/3968]    eta: 0:10:32  time: 0.1637  data_time: 0.0012  memory: 1849  
2025/03/29 18:55:30 - mmengine - INFO - Iter(val) [ 100/3968]    eta: 0:10:10  time: 0.1627  data_time: 0.0012  memory: 1849  
2025/03/29 18:55:38 - mmengine - INFO - Iter(val) [ 150/3968]    eta: 0:10:05  time: 0.1578  data_time: 0.0012  memory: 1849  
2025/03/29 18:55:46 - mmengine - INFO - Iter(val) [ 200/3968]    eta: 0:09:59  time: 0.1654  data_time: 0.0012  memory: 1849  
2025/03/29 18:55:54 - mmengine - INFO - Iter(val) [ 250/3968]    eta: 0:09:47  time: 0.1555  data_time: 0.0012  memory: 1849  
2025/03/29 18:56:02 - mmengine - INFO - Iter(val) [ 300/3968]    eta: 0:09:41  time: 0.1563  data_time: 0.0013  memory: 1849  
2025/03/29 18:56:10 - mmengine - INFO - Iter(val) [ 350/3968]    eta: 0:09:34  time: 0.1658  data_time: 0.0012  memory: 1849  
2025/03/29 18:56:18 - mmengine - INFO - Iter(val) [ 400/3968]    eta: 0:09:24  time: 0.1545  data_time: 0.0012  memory: 1849  
2025/03/29 18:56:26 - mmengine - INFO - Iter(val) [ 450/3968]    eta: 0:09:17  time: 0.1563  data_time: 0.0013  memory: 1849  
2025/03/29 18:56:34 - mmengine - INFO - Iter(val) [ 500/3968]    eta: 0:09:09  time: 0.1626  data_time: 0.0012  memory: 1849  
2025/03/29 18:56:42 - mmengine - INFO - Iter(val) [ 550/3968]    eta: 0:09:00  time: 0.1603  data_time: 0.0013  memory: 1849  
2025/03/29 18:56:50 - mmengine - INFO - Iter(val) [ 600/3968]    eta: 0:08:53  time: 0.1535  data_time: 0.0012  memory: 1849  
2025/03/29 18:56:58 - mmengine - INFO - Iter(val) [ 650/3968]    eta: 0:08:45  time: 0.1650  data_time: 0.0012  memory: 1849  
2025/03/29 18:57:05 - mmengine - INFO - Iter(val) [ 700/3968]    eta: 0:08:36  time: 0.1544  data_time: 0.0012  memory: 1849  
2025/03/29 18:57:13 - mmengine - INFO - Iter(val) [ 750/3968]    eta: 0:08:29  time: 0.1542  data_time: 0.0011  memory: 1849  
2025/03/29 18:57:21 - mmengine - INFO - Iter(val) [ 800/3968]    eta: 0:08:21  time: 0.1649  data_time: 0.0012  memory: 1849  
2025/03/29 18:57:29 - mmengine - INFO - Iter(val) [ 850/3968]    eta: 0:08:12  time: 0.1654  data_time: 0.0012  memory: 1849  
2025/03/29 18:57:37 - mmengine - INFO - Iter(val) [ 900/3968]    eta: 0:08:04  time: 0.1548  data_time: 0.0012  memory: 1849  
2025/03/29 18:57:45 - mmengine - INFO - Iter(val) [ 950/3968]    eta: 0:07:57  time: 0.1513  data_time: 0.0013  memory: 1849  
2025/03/29 18:57:53 - mmengine - INFO - Iter(val) [1000/3968]    eta: 0:07:49  time: 0.1666  data_time: 0.0013  memory: 1849  
2025/03/29 18:58:01 - mmengine - INFO - Iter(val) [1050/3968]    eta: 0:07:40  time: 0.1505  data_time: 0.0012  memory: 1849  
2025/03/29 18:58:08 - mmengine - INFO - Iter(val) [1100/3968]    eta: 0:07:33  time: 0.1565  data_time: 0.0013  memory: 1849  
2025/03/29 18:58:16 - mmengine - INFO - Iter(val) [1150/3968]    eta: 0:07:25  time: 0.1667  data_time: 0.0012  memory: 1849  
2025/03/29 18:58:24 - mmengine - INFO - Iter(val) [1200/3968]    eta: 0:07:17  time: 0.1560  data_time: 0.0014  memory: 1849  
2025/03/29 18:58:32 - mmengine - INFO - Iter(val) [1250/3968]    eta: 0:07:09  time: 0.1512  data_time: 0.0012  memory: 1849  
2025/03/29 18:58:40 - mmengine - INFO - Iter(val) [1300/3968]    eta: 0:07:01  time: 0.1657  data_time: 0.0013  memory: 1849  
2025/03/29 18:58:48 - mmengine - INFO - Iter(val) [1350/3968]    eta: 0:06:53  time: 0.1478  data_time: 0.0012  memory: 1849  
2025/03/29 18:58:56 - mmengine - INFO - Iter(val) [1400/3968]    eta: 0:06:45  time: 0.1506  data_time: 0.0011  memory: 1849  
2025/03/29 18:59:04 - mmengine - INFO - Iter(val) [1450/3968]    eta: 0:06:37  time: 0.1656  data_time: 0.0012  memory: 1849  
2025/03/29 18:59:12 - mmengine - INFO - Iter(val) [1500/3968]    eta: 0:06:29  time: 0.1510  data_time: 0.0017  memory: 1849  
2025/03/29 18:59:20 - mmengine - INFO - Iter(val) [1550/3968]    eta: 0:06:22  time: 0.1543  data_time: 0.0013  memory: 1849  
2025/03/29 18:59:28 - mmengine - INFO - Iter(val) [1600/3968]    eta: 0:06:14  time: 0.1636  data_time: 0.0011  memory: 1849  
2025/03/29 18:59:36 - mmengine - INFO - Iter(val) [1650/3968]    eta: 0:06:06  time: 0.1503  data_time: 0.0012  memory: 1849  
2025/03/29 18:59:44 - mmengine - INFO - Iter(val) [1700/3968]    eta: 0:05:58  time: 0.1572  data_time: 0.0013  memory: 1849  
2025/03/29 18:59:51 - mmengine - INFO - Iter(val) [1750/3968]    eta: 0:05:50  time: 0.1603  data_time: 0.0012  memory: 1849  
2025/03/29 18:59:59 - mmengine - INFO - Iter(val) [1800/3968]    eta: 0:05:42  time: 0.1526  data_time: 0.0012  memory: 1849  
2025/03/29 19:00:07 - mmengine - INFO - Iter(val) [1850/3968]    eta: 0:05:34  time: 0.1583  data_time: 0.0012  memory: 1849  
2025/03/29 19:00:15 - mmengine - INFO - Iter(val) [1900/3968]    eta: 0:05:26  time: 0.1624  data_time: 0.0013  memory: 1849  
2025/03/29 19:00:23 - mmengine - INFO - Iter(val) [1950/3968]    eta: 0:05:18  time: 0.1488  data_time: 0.0012  memory: 1849  
2025/03/29 19:00:31 - mmengine - INFO - Iter(val) [2000/3968]    eta: 0:05:11  time: 0.1642  data_time: 0.0014  memory: 1849  
2025/03/29 19:00:39 - mmengine - INFO - Iter(val) [2050/3968]    eta: 0:05:03  time: 0.1604  data_time: 0.0011  memory: 1849  
2025/03/29 19:00:47 - mmengine - INFO - Iter(val) [2100/3968]    eta: 0:04:55  time: 0.1520  data_time: 0.0012  memory: 1849  
2025/03/29 19:00:55 - mmengine - INFO - Iter(val) [2150/3968]    eta: 0:04:47  time: 0.1641  data_time: 0.0013  memory: 1849  
2025/03/29 19:01:03 - mmengine - INFO - Iter(val) [2200/3968]    eta: 0:04:39  time: 0.1606  data_time: 0.0012  memory: 1849  
2025/03/29 19:01:11 - mmengine - INFO - Iter(val) [2250/3968]    eta: 0:04:31  time: 0.1482  data_time: 0.0011  memory: 1849  
2025/03/29 19:01:19 - mmengine - INFO - Iter(val) [2300/3968]    eta: 0:04:23  time: 0.1576  data_time: 0.0012  memory: 1849  
2025/03/29 19:01:26 - mmengine - INFO - Iter(val) [2350/3968]    eta: 0:04:15  time: 0.1629  data_time: 0.0012  memory: 1849  
2025/03/29 19:01:34 - mmengine - INFO - Iter(val) [2400/3968]    eta: 0:04:07  time: 0.1593  data_time: 0.0012  memory: 1849  
2025/03/29 19:01:42 - mmengine - INFO - Iter(val) [2450/3968]    eta: 0:04:00  time: 0.1667  data_time: 0.0012  memory: 1849  
2025/03/29 19:01:50 - mmengine - INFO - Iter(val) [2500/3968]    eta: 0:03:52  time: 0.1549  data_time: 0.0013  memory: 1849  
2025/03/29 19:01:58 - mmengine - INFO - Iter(val) [2550/3968]    eta: 0:03:44  time: 0.1516  data_time: 0.0012  memory: 1849  
2025/03/29 19:02:06 - mmengine - INFO - Iter(val) [2600/3968]    eta: 0:03:36  time: 0.1666  data_time: 0.0012  memory: 1849  
2025/03/29 19:02:14 - mmengine - INFO - Iter(val) [2650/3968]    eta: 0:03:28  time: 0.1558  data_time: 0.0014  memory: 1849  
2025/03/29 19:02:22 - mmengine - INFO - Iter(val) [2700/3968]    eta: 0:03:20  time: 0.1556  data_time: 0.0012  memory: 1849  
2025/03/29 19:02:30 - mmengine - INFO - Iter(val) [2750/3968]    eta: 0:03:12  time: 0.1538  data_time: 0.0012  memory: 1849  
2025/03/29 19:02:38 - mmengine - INFO - Iter(val) [2800/3968]    eta: 0:03:04  time: 0.1585  data_time: 0.0013  memory: 1849  
2025/03/29 19:02:46 - mmengine - INFO - Iter(val) [2850/3968]    eta: 0:02:56  time: 0.1666  data_time: 0.0012  memory: 1849  
2025/03/29 19:02:54 - mmengine - INFO - Iter(val) [2900/3968]    eta: 0:02:48  time: 0.1578  data_time: 0.0013  memory: 1849  
2025/03/29 19:03:02 - mmengine - INFO - Iter(val) [2950/3968]    eta: 0:02:41  time: 0.1549  data_time: 0.0010  memory: 1849  
2025/03/29 19:03:10 - mmengine - INFO - Iter(val) [3000/3968]    eta: 0:02:33  time: 0.1648  data_time: 0.0012  memory: 1849  
2025/03/29 19:03:17 - mmengine - INFO - Iter(val) [3050/3968]    eta: 0:02:25  time: 0.1529  data_time: 0.0013  memory: 1849  
2025/03/29 19:03:26 - mmengine - INFO - Iter(val) [3100/3968]    eta: 0:02:17  time: 0.1550  data_time: 0.0012  memory: 1849  
2025/03/29 19:03:33 - mmengine - INFO - Iter(val) [3150/3968]    eta: 0:02:09  time: 0.1667  data_time: 0.0012  memory: 1849  
2025/03/29 19:03:41 - mmengine - INFO - Iter(val) [3200/3968]    eta: 0:02:01  time: 0.1532  data_time: 0.0012  memory: 1849  
2025/03/29 19:03:50 - mmengine - INFO - Iter(val) [3250/3968]    eta: 0:01:53  time: 0.1655  data_time: 0.0012  memory: 1849  
2025/03/29 19:03:57 - mmengine - INFO - Iter(val) [3300/3968]    eta: 0:01:45  time: 0.1558  data_time: 0.0013  memory: 1849  
2025/03/29 19:04:05 - mmengine - INFO - Iter(val) [3350/3968]    eta: 0:01:37  time: 0.1579  data_time: 0.0012  memory: 1849  
2025/03/29 19:04:13 - mmengine - INFO - Iter(val) [3400/3968]    eta: 0:01:29  time: 0.1624  data_time: 0.0012  memory: 1849  
2025/03/29 19:04:21 - mmengine - INFO - Iter(val) [3450/3968]    eta: 0:01:21  time: 0.1541  data_time: 0.0012  memory: 1849  
2025/03/29 19:04:29 - mmengine - INFO - Iter(val) [3500/3968]    eta: 0:01:14  time: 0.1551  data_time: 0.0012  memory: 1849  
2025/03/29 19:04:37 - mmengine - INFO - Iter(val) [3550/3968]    eta: 0:01:06  time: 0.1659  data_time: 0.0013  memory: 1849  
2025/03/29 19:04:45 - mmengine - INFO - Iter(val) [3600/3968]    eta: 0:00:58  time: 0.1612  data_time: 0.0013  memory: 1849  
2025/03/29 19:04:53 - mmengine - INFO - Iter(val) [3650/3968]    eta: 0:00:50  time: 0.1513  data_time: 0.0012  memory: 1849  
2025/03/29 19:05:01 - mmengine - INFO - Iter(val) [3700/3968]    eta: 0:00:42  time: 0.1669  data_time: 0.0014  memory: 1849  
2025/03/29 19:05:09 - mmengine - INFO - Iter(val) [3750/3968]    eta: 0:00:34  time: 0.1555  data_time: 0.0012  memory: 1849  
2025/03/29 19:05:17 - mmengine - INFO - Iter(val) [3800/3968]    eta: 0:00:26  time: 0.1547  data_time: 0.0012  memory: 1849  
2025/03/29 19:05:25 - mmengine - INFO - Iter(val) [3850/3968]    eta: 0:00:18  time: 0.1657  data_time: 0.0012  memory: 1849  
2025/03/29 19:05:32 - mmengine - INFO - Iter(val) [3900/3968]    eta: 0:00:10  time: 0.1523  data_time: 0.0012  memory: 1849  
2025/03/29 19:05:40 - mmengine - INFO - Iter(val) [3950/3968]    eta: 0:00:02  time: 0.1530  data_time: 0.0013  memory: 1849  
2025/03/29 19:05:43 - mmengine - INFO - per class results:
2025/03/29 19:05:43 - mmengine - INFO - 
+--------------+-------+-------+
|    Class     |  IoU  |  Acc  |
+--------------+-------+-------+
|  background  | 52.56 | 72.24 |
|   building   | 55.73 | 64.17 |
|     road     | 44.09 | 46.69 |
|    water     | 64.55 |  76.6 |
|    barren    | 17.04 | 30.36 |
|    forest    | 29.56 | 37.63 |
| agricultural | 56.09 |  71.7 |
+--------------+-------+-------+
2025/03/29 19:05:43 - mmengine - INFO - Iter(val) [3968/3968]    aAcc: 68.3500  mIoU: 45.6600  mAcc: 57.0500  data_time: 0.0012  time: 0.1582
2025/03/29 19:05:43 - mmengine - INFO - The previous best checkpoint /home/face/kaichengyang/xiaoxinghu/Earth_Adapter/work_dirs/u2r/DG_spatial_64_cutoff_0.3_fft_suf3/ee2e4_seed0/best_mIoU_iter_10000.pth is removed
2025/03/29 19:05:44 - mmengine - INFO - The best checkpoint with 45.6600 mIoU at 12000 iter is saved to best_mIoU_iter_12000.pth.
2025/03/29 19:07:09 - mmengine - INFO - Iter(train) [12050/20000]  base_lr: 4.3594e-05 lr: 4.3594e-05  eta: 3:43:15  time: 1.6746  data_time: 0.0156  memory: 9682  loss: 37.3853  decode.loss_cls: 0.2584  decode.loss_mask: 1.8202  decode.loss_dice: 1.6583  decode.d0.loss_cls: 0.3408  decode.d0.loss_mask: 1.8413  decode.d0.loss_dice: 1.6519  decode.d1.loss_cls: 0.2312  decode.d1.loss_mask: 1.8167  decode.d1.loss_dice: 1.6574  decode.d2.loss_cls: 0.2343  decode.d2.loss_mask: 1.8250  decode.d2.loss_dice: 1.6512  decode.d3.loss_cls: 0.2797  decode.d3.loss_mask: 1.8198  decode.d3.loss_dice: 1.6488  decode.d4.loss_cls: 0.1996  decode.d4.loss_mask: 1.8290  decode.d4.loss_dice: 1.6794  decode.d5.loss_cls: 0.2891  decode.d5.loss_mask: 1.8070  decode.d5.loss_dice: 1.6635  decode.d6.loss_cls: 0.2398  decode.d6.loss_mask: 1.8411  decode.d6.loss_dice: 1.6632  decode.d7.loss_cls: 0.2215  decode.d7.loss_mask: 1.8443  decode.d7.loss_dice: 1.6392  decode.d8.loss_cls: 0.2500  decode.d8.loss_mask: 1.8289  decode.d8.loss_dice: 1.6547
2025/03/29 19:08:33 - mmengine - INFO - Iter(train) [12100/20000]  base_lr: 4.3347e-05 lr: 4.3347e-05  eta: 3:41:51  time: 1.6760  data_time: 0.0159  memory: 9694  loss: 39.1239  decode.loss_cls: 0.3973  decode.loss_mask: 1.7918  decode.loss_dice: 1.6269  decode.d0.loss_cls: 0.5492  decode.d0.loss_mask: 1.8574  decode.d0.loss_dice: 1.7181  decode.d1.loss_cls: 0.4081  decode.d1.loss_mask: 1.8124  decode.d1.loss_dice: 1.6620  decode.d2.loss_cls: 0.3902  decode.d2.loss_mask: 1.8943  decode.d2.loss_dice: 1.6769  decode.d3.loss_cls: 0.4191  decode.d3.loss_mask: 1.8387  decode.d3.loss_dice: 1.6260  decode.d4.loss_cls: 0.4432  decode.d4.loss_mask: 1.8504  decode.d4.loss_dice: 1.6583  decode.d5.loss_cls: 0.4328  decode.d5.loss_mask: 1.8225  decode.d5.loss_dice: 1.6503  decode.d6.loss_cls: 0.3816  decode.d6.loss_mask: 1.8603  decode.d6.loss_dice: 1.6520  decode.d7.loss_cls: 0.4354  decode.d7.loss_mask: 1.7948  decode.d7.loss_dice: 1.6364  decode.d8.loss_cls: 0.4103  decode.d8.loss_mask: 1.8055  decode.d8.loss_dice: 1.6220
2025/03/29 19:09:57 - mmengine - INFO - Iter(train) [12150/20000]  base_lr: 4.3100e-05 lr: 4.3100e-05  eta: 3:40:26  time: 1.6743  data_time: 0.0165  memory: 9686  loss: 41.0206  decode.loss_cls: 0.3821  decode.loss_mask: 1.9511  decode.loss_dice: 1.7080  decode.d0.loss_cls: 0.5618  decode.d0.loss_mask: 1.8869  decode.d0.loss_dice: 1.7151  decode.d1.loss_cls: 0.4562  decode.d1.loss_mask: 1.9153  decode.d1.loss_dice: 1.7186  decode.d2.loss_cls: 0.4302  decode.d2.loss_mask: 1.9298  decode.d2.loss_dice: 1.7309  decode.d3.loss_cls: 0.4563  decode.d3.loss_mask: 1.8886  decode.d3.loss_dice: 1.6829  decode.d4.loss_cls: 0.4460  decode.d4.loss_mask: 1.9394  decode.d4.loss_dice: 1.7031  decode.d5.loss_cls: 0.4904  decode.d5.loss_mask: 1.9387  decode.d5.loss_dice: 1.7295  decode.d6.loss_cls: 0.4961  decode.d6.loss_mask: 1.9441  decode.d6.loss_dice: 1.7310  decode.d7.loss_cls: 0.4385  decode.d7.loss_mask: 1.9555  decode.d7.loss_dice: 1.7141  decode.d8.loss_cls: 0.4749  decode.d8.loss_mask: 1.9071  decode.d8.loss_dice: 1.6985
2025/03/29 19:11:21 - mmengine - INFO - Iter(train) [12200/20000]  base_lr: 4.2853e-05 lr: 4.2853e-05  eta: 3:39:01  time: 1.6745  data_time: 0.0164  memory: 9692  loss: 35.9372  decode.loss_cls: 0.4026  decode.loss_mask: 1.5828  decode.loss_dice: 1.5829  decode.d0.loss_cls: 0.5229  decode.d0.loss_mask: 1.6001  decode.d0.loss_dice: 1.7119  decode.d1.loss_cls: 0.3967  decode.d1.loss_mask: 1.5542  decode.d1.loss_dice: 1.5711  decode.d2.loss_cls: 0.4008  decode.d2.loss_mask: 1.5792  decode.d2.loss_dice: 1.5999  decode.d3.loss_cls: 0.4262  decode.d3.loss_mask: 1.5671  decode.d3.loss_dice: 1.6101  decode.d4.loss_cls: 0.3693  decode.d4.loss_mask: 1.5771  decode.d4.loss_dice: 1.6285  decode.d5.loss_cls: 0.4326  decode.d5.loss_mask: 1.5607  decode.d5.loss_dice: 1.5884  decode.d6.loss_cls: 0.4098  decode.d6.loss_mask: 1.5601  decode.d6.loss_dice: 1.5911  decode.d7.loss_cls: 0.4338  decode.d7.loss_mask: 1.5577  decode.d7.loss_dice: 1.5668  decode.d8.loss_cls: 0.4059  decode.d8.loss_mask: 1.5770  decode.d8.loss_dice: 1.5700
2025/03/29 19:12:44 - mmengine - INFO - Iter(train) [12250/20000]  base_lr: 4.2605e-05 lr: 4.2605e-05  eta: 3:37:37  time: 1.6736  data_time: 0.0164  memory: 9691  loss: 35.1321  decode.loss_cls: 0.3365  decode.loss_mask: 1.6111  decode.loss_dice: 1.5524  decode.d0.loss_cls: 0.4257  decode.d0.loss_mask: 1.6506  decode.d0.loss_dice: 1.6450  decode.d1.loss_cls: 0.2821  decode.d1.loss_mask: 1.6551  decode.d1.loss_dice: 1.5497  decode.d2.loss_cls: 0.2827  decode.d2.loss_mask: 1.6849  decode.d2.loss_dice: 1.5342  decode.d3.loss_cls: 0.3204  decode.d3.loss_mask: 1.6646  decode.d3.loss_dice: 1.5190  decode.d4.loss_cls: 0.3258  decode.d4.loss_mask: 1.6412  decode.d4.loss_dice: 1.5163  decode.d5.loss_cls: 0.2999  decode.d5.loss_mask: 1.6385  decode.d5.loss_dice: 1.5170  decode.d6.loss_cls: 0.3038  decode.d6.loss_mask: 1.6300  decode.d6.loss_dice: 1.5259  decode.d7.loss_cls: 0.3119  decode.d7.loss_mask: 1.6460  decode.d7.loss_dice: 1.5328  decode.d8.loss_cls: 0.2940  decode.d8.loss_mask: 1.6546  decode.d8.loss_dice: 1.5804
2025/03/29 19:14:08 - mmengine - INFO - Iter(train) [12300/20000]  base_lr: 4.2358e-05 lr: 4.2358e-05  eta: 3:36:12  time: 1.6755  data_time: 0.0161  memory: 9689  loss: 40.1792  decode.loss_cls: 0.4117  decode.loss_mask: 1.8243  decode.loss_dice: 1.7798  decode.d0.loss_cls: 0.4565  decode.d0.loss_mask: 1.8537  decode.d0.loss_dice: 1.7584  decode.d1.loss_cls: 0.4749  decode.d1.loss_mask: 1.8240  decode.d1.loss_dice: 1.7285  decode.d2.loss_cls: 0.4105  decode.d2.loss_mask: 1.8377  decode.d2.loss_dice: 1.7534  decode.d3.loss_cls: 0.4445  decode.d3.loss_mask: 1.8265  decode.d3.loss_dice: 1.7472  decode.d4.loss_cls: 0.4176  decode.d4.loss_mask: 1.8273  decode.d4.loss_dice: 1.7435  decode.d5.loss_cls: 0.4300  decode.d5.loss_mask: 1.8456  decode.d5.loss_dice: 1.7316  decode.d6.loss_cls: 0.4405  decode.d6.loss_mask: 1.8355  decode.d6.loss_dice: 1.7180  decode.d7.loss_cls: 0.4334  decode.d7.loss_mask: 1.8444  decode.d7.loss_dice: 1.7585  decode.d8.loss_cls: 0.3784  decode.d8.loss_mask: 1.8518  decode.d8.loss_dice: 1.7917
2025/03/29 19:15:32 - mmengine - INFO - Iter(train) [12350/20000]  base_lr: 4.2110e-05 lr: 4.2110e-05  eta: 3:34:48  time: 1.6731  data_time: 0.0162  memory: 9692  loss: 38.5976  decode.loss_cls: 0.3659  decode.loss_mask: 1.7268  decode.loss_dice: 1.7512  decode.d0.loss_cls: 0.4327  decode.d0.loss_mask: 1.7693  decode.d0.loss_dice: 1.8457  decode.d1.loss_cls: 0.3993  decode.d1.loss_mask: 1.6980  decode.d1.loss_dice: 1.7546  decode.d2.loss_cls: 0.3879  decode.d2.loss_mask: 1.7373  decode.d2.loss_dice: 1.7484  decode.d3.loss_cls: 0.3654  decode.d3.loss_mask: 1.7221  decode.d3.loss_dice: 1.7401  decode.d4.loss_cls: 0.3408  decode.d4.loss_mask: 1.7108  decode.d4.loss_dice: 1.7361  decode.d5.loss_cls: 0.3782  decode.d5.loss_mask: 1.7176  decode.d5.loss_dice: 1.7336  decode.d6.loss_cls: 0.3657  decode.d6.loss_mask: 1.7388  decode.d6.loss_dice: 1.7328  decode.d7.loss_cls: 0.3945  decode.d7.loss_mask: 1.7137  decode.d7.loss_dice: 1.7380  decode.d8.loss_cls: 0.3836  decode.d8.loss_mask: 1.7315  decode.d8.loss_dice: 1.7372
2025/03/29 19:16:55 - mmengine - INFO - Iter(train) [12400/20000]  base_lr: 4.1862e-05 lr: 4.1862e-05  eta: 3:33:23  time: 1.6730  data_time: 0.0158  memory: 9692  loss: 36.1404  decode.loss_cls: 0.3093  decode.loss_mask: 1.6915  decode.loss_dice: 1.6146  decode.d0.loss_cls: 0.4199  decode.d0.loss_mask: 1.7000  decode.d0.loss_dice: 1.6741  decode.d1.loss_cls: 0.3288  decode.d1.loss_mask: 1.6933  decode.d1.loss_dice: 1.6004  decode.d2.loss_cls: 0.2738  decode.d2.loss_mask: 1.6934  decode.d2.loss_dice: 1.6242  decode.d3.loss_cls: 0.3016  decode.d3.loss_mask: 1.6980  decode.d3.loss_dice: 1.5962  decode.d4.loss_cls: 0.3046  decode.d4.loss_mask: 1.6950  decode.d4.loss_dice: 1.5769  decode.d5.loss_cls: 0.2660  decode.d5.loss_mask: 1.6865  decode.d5.loss_dice: 1.6233  decode.d6.loss_cls: 0.2979  decode.d6.loss_mask: 1.6817  decode.d6.loss_dice: 1.5992  decode.d7.loss_cls: 0.3435  decode.d7.loss_mask: 1.6869  decode.d7.loss_dice: 1.5619  decode.d8.loss_cls: 0.3071  decode.d8.loss_mask: 1.6957  decode.d8.loss_dice: 1.5950
2025/03/29 19:18:19 - mmengine - INFO - Iter(train) [12450/20000]  base_lr: 4.1615e-05 lr: 4.1615e-05  eta: 3:31:58  time: 1.6742  data_time: 0.0164  memory: 9690  loss: 34.9430  decode.loss_cls: 0.2063  decode.loss_mask: 1.7338  decode.loss_dice: 1.5436  decode.d0.loss_cls: 0.3597  decode.d0.loss_mask: 1.7168  decode.d0.loss_dice: 1.5236  decode.d1.loss_cls: 0.2011  decode.d1.loss_mask: 1.7222  decode.d1.loss_dice: 1.5589  decode.d2.loss_cls: 0.2020  decode.d2.loss_mask: 1.7047  decode.d2.loss_dice: 1.5474  decode.d3.loss_cls: 0.2045  decode.d3.loss_mask: 1.7307  decode.d3.loss_dice: 1.5472  decode.d4.loss_cls: 0.2165  decode.d4.loss_mask: 1.7223  decode.d4.loss_dice: 1.5529  decode.d5.loss_cls: 0.1898  decode.d5.loss_mask: 1.7286  decode.d5.loss_dice: 1.5531  decode.d6.loss_cls: 0.1940  decode.d6.loss_mask: 1.7281  decode.d6.loss_dice: 1.5435  decode.d7.loss_cls: 0.2278  decode.d7.loss_mask: 1.7152  decode.d7.loss_dice: 1.5281  decode.d8.loss_cls: 0.2074  decode.d8.loss_mask: 1.7584  decode.d8.loss_dice: 1.5751
2025/03/29 19:19:43 - mmengine - INFO - Iter(train) [12500/20000]  base_lr: 4.1366e-05 lr: 4.1366e-05  eta: 3:30:34  time: 1.6716  data_time: 0.0160  memory: 9690  loss: 33.8992  decode.loss_cls: 0.3252  decode.loss_mask: 1.5095  decode.loss_dice: 1.5139  decode.d0.loss_cls: 0.3662  decode.d0.loss_mask: 1.5567  decode.d0.loss_dice: 1.5922  decode.d1.loss_cls: 0.3394  decode.d1.loss_mask: 1.5011  decode.d1.loss_dice: 1.5306  decode.d2.loss_cls: 0.3336  decode.d2.loss_mask: 1.5312  decode.d2.loss_dice: 1.5555  decode.d3.loss_cls: 0.3175  decode.d3.loss_mask: 1.5229  decode.d3.loss_dice: 1.5486  decode.d4.loss_cls: 0.3161  decode.d4.loss_mask: 1.5085  decode.d4.loss_dice: 1.5163  decode.d5.loss_cls: 0.3337  decode.d5.loss_mask: 1.4896  decode.d5.loss_dice: 1.5295  decode.d6.loss_cls: 0.3131  decode.d6.loss_mask: 1.5152  decode.d6.loss_dice: 1.5401  decode.d7.loss_cls: 0.3331  decode.d7.loss_mask: 1.5113  decode.d7.loss_dice: 1.5519  decode.d8.loss_cls: 0.3035  decode.d8.loss_mask: 1.5537  decode.d8.loss_dice: 1.5398
2025/03/29 19:21:06 - mmengine - INFO - Iter(train) [12550/20000]  base_lr: 4.1118e-05 lr: 4.1118e-05  eta: 3:29:09  time: 1.6712  data_time: 0.0159  memory: 9680  loss: 39.4273  decode.loss_cls: 0.4813  decode.loss_mask: 1.7675  decode.loss_dice: 1.7462  decode.d0.loss_cls: 0.4783  decode.d0.loss_mask: 1.8188  decode.d0.loss_dice: 1.7924  decode.d1.loss_cls: 0.4561  decode.d1.loss_mask: 1.7564  decode.d1.loss_dice: 1.7431  decode.d2.loss_cls: 0.4046  decode.d2.loss_mask: 1.7668  decode.d2.loss_dice: 1.7272  decode.d3.loss_cls: 0.4533  decode.d3.loss_mask: 1.7518  decode.d3.loss_dice: 1.6607  decode.d4.loss_cls: 0.4247  decode.d4.loss_mask: 1.7702  decode.d4.loss_dice: 1.6994  decode.d5.loss_cls: 0.4310  decode.d5.loss_mask: 1.7675  decode.d5.loss_dice: 1.7000  decode.d6.loss_cls: 0.4368  decode.d6.loss_mask: 1.7717  decode.d6.loss_dice: 1.7094  decode.d7.loss_cls: 0.4753  decode.d7.loss_mask: 1.7635  decode.d7.loss_dice: 1.7248  decode.d8.loss_cls: 0.4889  decode.d8.loss_mask: 1.7396  decode.d8.loss_dice: 1.7201
2025/03/29 19:22:30 - mmengine - INFO - Iter(train) [12600/20000]  base_lr: 4.0870e-05 lr: 4.0870e-05  eta: 3:27:45  time: 1.6746  data_time: 0.0160  memory: 9674  loss: 38.2267  decode.loss_cls: 0.2275  decode.loss_mask: 1.9012  decode.loss_dice: 1.7159  decode.d0.loss_cls: 0.3857  decode.d0.loss_mask: 1.8587  decode.d0.loss_dice: 1.6713  decode.d1.loss_cls: 0.2633  decode.d1.loss_mask: 1.8634  decode.d1.loss_dice: 1.6486  decode.d2.loss_cls: 0.2890  decode.d2.loss_mask: 1.8645  decode.d2.loss_dice: 1.6588  decode.d3.loss_cls: 0.2498  decode.d3.loss_mask: 1.8685  decode.d3.loss_dice: 1.6358  decode.d4.loss_cls: 0.2789  decode.d4.loss_mask: 1.8752  decode.d4.loss_dice: 1.6585  decode.d5.loss_cls: 0.2733  decode.d5.loss_mask: 1.8887  decode.d5.loss_dice: 1.6781  decode.d6.loss_cls: 0.2759  decode.d6.loss_mask: 1.8709  decode.d6.loss_dice: 1.6823  decode.d7.loss_cls: 0.2203  decode.d7.loss_mask: 1.8954  decode.d7.loss_dice: 1.7026  decode.d8.loss_cls: 0.2435  decode.d8.loss_mask: 1.8909  decode.d8.loss_dice: 1.6904
2025/03/29 19:23:53 - mmengine - INFO - Iter(train) [12650/20000]  base_lr: 4.0621e-05 lr: 4.0621e-05  eta: 3:26:20  time: 1.6752  data_time: 0.0156  memory: 9681  loss: 35.8759  decode.loss_cls: 0.2217  decode.loss_mask: 1.8255  decode.loss_dice: 1.5775  decode.d0.loss_cls: 0.4192  decode.d0.loss_mask: 1.7807  decode.d0.loss_dice: 1.5398  decode.d1.loss_cls: 0.2495  decode.d1.loss_mask: 1.7991  decode.d1.loss_dice: 1.5216  decode.d2.loss_cls: 0.2550  decode.d2.loss_mask: 1.7996  decode.d2.loss_dice: 1.5044  decode.d3.loss_cls: 0.2298  decode.d3.loss_mask: 1.7811  decode.d3.loss_dice: 1.4932  decode.d4.loss_cls: 0.2120  decode.d4.loss_mask: 1.8077  decode.d4.loss_dice: 1.5635  decode.d5.loss_cls: 0.2490  decode.d5.loss_mask: 1.8128  decode.d5.loss_dice: 1.5169  decode.d6.loss_cls: 0.2477  decode.d6.loss_mask: 1.8086  decode.d6.loss_dice: 1.5191  decode.d7.loss_cls: 0.2339  decode.d7.loss_mask: 1.8079  decode.d7.loss_dice: 1.5182  decode.d8.loss_cls: 0.2232  decode.d8.loss_mask: 1.8186  decode.d8.loss_dice: 1.5388
2025/03/29 19:25:17 - mmengine - INFO - Iter(train) [12700/20000]  base_lr: 4.0372e-05 lr: 4.0372e-05  eta: 3:24:56  time: 1.6743  data_time: 0.0159  memory: 9684  loss: 37.2797  decode.loss_cls: 0.2721  decode.loss_mask: 1.8444  decode.loss_dice: 1.6060  decode.d0.loss_cls: 0.4031  decode.d0.loss_mask: 1.8548  decode.d0.loss_dice: 1.6346  decode.d1.loss_cls: 0.2720  decode.d1.loss_mask: 1.8358  decode.d1.loss_dice: 1.6107  decode.d2.loss_cls: 0.2570  decode.d2.loss_mask: 1.8139  decode.d2.loss_dice: 1.5979  decode.d3.loss_cls: 0.2939  decode.d3.loss_mask: 1.8253  decode.d3.loss_dice: 1.5742  decode.d4.loss_cls: 0.3049  decode.d4.loss_mask: 1.8216  decode.d4.loss_dice: 1.5853  decode.d5.loss_cls: 0.3322  decode.d5.loss_mask: 1.8418  decode.d5.loss_dice: 1.5860  decode.d6.loss_cls: 0.3085  decode.d6.loss_mask: 1.8438  decode.d6.loss_dice: 1.5705  decode.d7.loss_cls: 0.2869  decode.d7.loss_mask: 1.8466  decode.d7.loss_dice: 1.5752  decode.d8.loss_cls: 0.2567  decode.d8.loss_mask: 1.8316  decode.d8.loss_dice: 1.5922
2025/03/29 19:26:41 - mmengine - INFO - Iter(train) [12750/20000]  base_lr: 4.0123e-05 lr: 4.0123e-05  eta: 3:23:31  time: 1.6710  data_time: 0.0159  memory: 9677  loss: 38.7262  decode.loss_cls: 0.2523  decode.loss_mask: 1.9126  decode.loss_dice: 1.6820  decode.d0.loss_cls: 0.4466  decode.d0.loss_mask: 1.8749  decode.d0.loss_dice: 1.6233  decode.d1.loss_cls: 0.2865  decode.d1.loss_mask: 1.9608  decode.d1.loss_dice: 1.6554  decode.d2.loss_cls: 0.2643  decode.d2.loss_mask: 1.9122  decode.d2.loss_dice: 1.6794  decode.d3.loss_cls: 0.2787  decode.d3.loss_mask: 1.9243  decode.d3.loss_dice: 1.6560  decode.d4.loss_cls: 0.2957  decode.d4.loss_mask: 1.9125  decode.d4.loss_dice: 1.6612  decode.d5.loss_cls: 0.3069  decode.d5.loss_mask: 1.9052  decode.d5.loss_dice: 1.6841  decode.d6.loss_cls: 0.2798  decode.d6.loss_mask: 1.8887  decode.d6.loss_dice: 1.6517  decode.d7.loss_cls: 0.2677  decode.d7.loss_mask: 1.9050  decode.d7.loss_dice: 1.6677  decode.d8.loss_cls: 0.2913  decode.d8.loss_mask: 1.9162  decode.d8.loss_dice: 1.6833
2025/03/29 19:28:04 - mmengine - INFO - Iter(train) [12800/20000]  base_lr: 3.9874e-05 lr: 3.9874e-05  eta: 3:22:06  time: 1.6765  data_time: 0.0161  memory: 9697  loss: 38.2436  decode.loss_cls: 0.2059  decode.loss_mask: 1.8782  decode.loss_dice: 1.6958  decode.d0.loss_cls: 0.2989  decode.d0.loss_mask: 1.9195  decode.d0.loss_dice: 1.7533  decode.d1.loss_cls: 0.2689  decode.d1.loss_mask: 1.8918  decode.d1.loss_dice: 1.7066  decode.d2.loss_cls: 0.2643  decode.d2.loss_mask: 1.8827  decode.d2.loss_dice: 1.6645  decode.d3.loss_cls: 0.2247  decode.d3.loss_mask: 1.8947  decode.d3.loss_dice: 1.6880  decode.d4.loss_cls: 0.2465  decode.d4.loss_mask: 1.8669  decode.d4.loss_dice: 1.7121  decode.d5.loss_cls: 0.2337  decode.d5.loss_mask: 1.8830  decode.d5.loss_dice: 1.6931  decode.d6.loss_cls: 0.2381  decode.d6.loss_mask: 1.8735  decode.d6.loss_dice: 1.7009  decode.d7.loss_cls: 0.2536  decode.d7.loss_mask: 1.8599  decode.d7.loss_dice: 1.6795  decode.d8.loss_cls: 0.2275  decode.d8.loss_mask: 1.8605  decode.d8.loss_dice: 1.6769
2025/03/29 19:29:28 - mmengine - INFO - Iter(train) [12850/20000]  base_lr: 3.9625e-05 lr: 3.9625e-05  eta: 3:20:42  time: 1.6774  data_time: 0.0161  memory: 9693  loss: 40.1885  decode.loss_cls: 0.3423  decode.loss_mask: 1.9159  decode.loss_dice: 1.7318  decode.d0.loss_cls: 0.5068  decode.d0.loss_mask: 1.8789  decode.d0.loss_dice: 1.7758  decode.d1.loss_cls: 0.4096  decode.d1.loss_mask: 1.8912  decode.d1.loss_dice: 1.7030  decode.d2.loss_cls: 0.3545  decode.d2.loss_mask: 1.9098  decode.d2.loss_dice: 1.7140  decode.d3.loss_cls: 0.3935  decode.d3.loss_mask: 1.9024  decode.d3.loss_dice: 1.6990  decode.d4.loss_cls: 0.4023  decode.d4.loss_mask: 1.9090  decode.d4.loss_dice: 1.6995  decode.d5.loss_cls: 0.4096  decode.d5.loss_mask: 1.9245  decode.d5.loss_dice: 1.7002  decode.d6.loss_cls: 0.4277  decode.d6.loss_mask: 1.9136  decode.d6.loss_dice: 1.6898  decode.d7.loss_cls: 0.3966  decode.d7.loss_mask: 1.8974  decode.d7.loss_dice: 1.7011  decode.d8.loss_cls: 0.3633  decode.d8.loss_mask: 1.9062  decode.d8.loss_dice: 1.7192
2025/03/29 19:30:52 - mmengine - INFO - Iter(train) [12900/20000]  base_lr: 3.9375e-05 lr: 3.9375e-05  eta: 3:19:17  time: 1.6738  data_time: 0.0159  memory: 9670  loss: 37.5830  decode.loss_cls: 0.3050  decode.loss_mask: 1.7905  decode.loss_dice: 1.6493  decode.d0.loss_cls: 0.3430  decode.d0.loss_mask: 1.8430  decode.d0.loss_dice: 1.7442  decode.d1.loss_cls: 0.2872  decode.d1.loss_mask: 1.8246  decode.d1.loss_dice: 1.6604  decode.d2.loss_cls: 0.3014  decode.d2.loss_mask: 1.7799  decode.d2.loss_dice: 1.6273  decode.d3.loss_cls: 0.3104  decode.d3.loss_mask: 1.7959  decode.d3.loss_dice: 1.6124  decode.d4.loss_cls: 0.3252  decode.d4.loss_mask: 1.7996  decode.d4.loss_dice: 1.6128  decode.d5.loss_cls: 0.3117  decode.d5.loss_mask: 1.7989  decode.d5.loss_dice: 1.6168  decode.d6.loss_cls: 0.2709  decode.d6.loss_mask: 1.8044  decode.d6.loss_dice: 1.6491  decode.d7.loss_cls: 0.2860  decode.d7.loss_mask: 1.8084  decode.d7.loss_dice: 1.6443  decode.d8.loss_cls: 0.3205  decode.d8.loss_mask: 1.8309  decode.d8.loss_dice: 1.6289
2025/03/29 19:32:16 - mmengine - INFO - Iter(train) [12950/20000]  base_lr: 3.9126e-05 lr: 3.9126e-05  eta: 3:17:53  time: 1.6788  data_time: 0.0158  memory: 9681  loss: 34.6106  decode.loss_cls: 0.3140  decode.loss_mask: 1.5398  decode.loss_dice: 1.5695  decode.d0.loss_cls: 0.4231  decode.d0.loss_mask: 1.5822  decode.d0.loss_dice: 1.6687  decode.d1.loss_cls: 0.3822  decode.d1.loss_mask: 1.5536  decode.d1.loss_dice: 1.5488  decode.d2.loss_cls: 0.3938  decode.d2.loss_mask: 1.5294  decode.d2.loss_dice: 1.5179  decode.d3.loss_cls: 0.3756  decode.d3.loss_mask: 1.5296  decode.d3.loss_dice: 1.5219  decode.d4.loss_cls: 0.3771  decode.d4.loss_mask: 1.5372  decode.d4.loss_dice: 1.5221  decode.d5.loss_cls: 0.3727  decode.d5.loss_mask: 1.5307  decode.d5.loss_dice: 1.5521  decode.d6.loss_cls: 0.3799  decode.d6.loss_mask: 1.5314  decode.d6.loss_dice: 1.5441  decode.d7.loss_cls: 0.3756  decode.d7.loss_mask: 1.5141  decode.d7.loss_dice: 1.5435  decode.d8.loss_cls: 0.2910  decode.d8.loss_mask: 1.5391  decode.d8.loss_dice: 1.5497
2025/03/29 19:33:39 - mmengine - INFO - Exp name: u2r_20250329_122454
2025/03/29 19:33:39 - mmengine - INFO - Iter(train) [13000/20000]  base_lr: 3.8876e-05 lr: 3.8876e-05  eta: 3:16:29  time: 1.6743  data_time: 0.0159  memory: 9690  loss: 36.1838  decode.loss_cls: 0.4275  decode.loss_mask: 1.6582  decode.loss_dice: 1.5314  decode.d0.loss_cls: 0.3660  decode.d0.loss_mask: 1.7621  decode.d0.loss_dice: 1.6211  decode.d1.loss_cls: 0.4156  decode.d1.loss_mask: 1.7218  decode.d1.loss_dice: 1.5527  decode.d2.loss_cls: 0.3915  decode.d2.loss_mask: 1.6928  decode.d2.loss_dice: 1.5279  decode.d3.loss_cls: 0.3546  decode.d3.loss_mask: 1.6988  decode.d3.loss_dice: 1.5062  decode.d4.loss_cls: 0.3914  decode.d4.loss_mask: 1.6979  decode.d4.loss_dice: 1.4863  decode.d5.loss_cls: 0.3822  decode.d5.loss_mask: 1.6730  decode.d5.loss_dice: 1.5225  decode.d6.loss_cls: 0.4066  decode.d6.loss_mask: 1.6639  decode.d6.loss_dice: 1.4888  decode.d7.loss_cls: 0.3947  decode.d7.loss_mask: 1.6969  decode.d7.loss_dice: 1.5309  decode.d8.loss_cls: 0.4256  decode.d8.loss_mask: 1.6770  decode.d8.loss_dice: 1.5178
2025/03/29 19:35:03 - mmengine - INFO - Iter(train) [13050/20000]  base_lr: 3.8626e-05 lr: 3.8626e-05  eta: 3:15:04  time: 1.6726  data_time: 0.0158  memory: 9681  loss: 37.5650  decode.loss_cls: 0.3207  decode.loss_mask: 1.6976  decode.loss_dice: 1.6928  decode.d0.loss_cls: 0.3868  decode.d0.loss_mask: 1.7099  decode.d0.loss_dice: 1.7716  decode.d1.loss_cls: 0.3520  decode.d1.loss_mask: 1.6921  decode.d1.loss_dice: 1.7091  decode.d2.loss_cls: 0.3154  decode.d2.loss_mask: 1.7104  decode.d2.loss_dice: 1.7076  decode.d3.loss_cls: 0.3256  decode.d3.loss_mask: 1.7074  decode.d3.loss_dice: 1.7095  decode.d4.loss_cls: 0.2979  decode.d4.loss_mask: 1.7093  decode.d4.loss_dice: 1.7264  decode.d5.loss_cls: 0.3283  decode.d5.loss_mask: 1.7133  decode.d5.loss_dice: 1.7231  decode.d6.loss_cls: 0.3071  decode.d6.loss_mask: 1.7336  decode.d6.loss_dice: 1.7333  decode.d7.loss_cls: 0.2448  decode.d7.loss_mask: 1.7552  decode.d7.loss_dice: 1.7166  decode.d8.loss_cls: 0.2954  decode.d8.loss_mask: 1.7232  decode.d8.loss_dice: 1.7490
2025/03/29 19:36:27 - mmengine - INFO - Iter(train) [13100/20000]  base_lr: 3.8376e-05 lr: 3.8376e-05  eta: 3:13:40  time: 1.6743  data_time: 0.0158  memory: 9677  loss: 35.2791  decode.loss_cls: 0.3081  decode.loss_mask: 1.6885  decode.loss_dice: 1.5676  decode.d0.loss_cls: 0.4020  decode.d0.loss_mask: 1.6894  decode.d0.loss_dice: 1.5700  decode.d1.loss_cls: 0.3556  decode.d1.loss_mask: 1.6474  decode.d1.loss_dice: 1.5234  decode.d2.loss_cls: 0.2976  decode.d2.loss_mask: 1.6730  decode.d2.loss_dice: 1.5434  decode.d3.loss_cls: 0.3375  decode.d3.loss_mask: 1.6423  decode.d3.loss_dice: 1.5245  decode.d4.loss_cls: 0.3173  decode.d4.loss_mask: 1.6404  decode.d4.loss_dice: 1.5654  decode.d5.loss_cls: 0.2993  decode.d5.loss_mask: 1.6704  decode.d5.loss_dice: 1.5189  decode.d6.loss_cls: 0.2717  decode.d6.loss_mask: 1.6728  decode.d6.loss_dice: 1.5533  decode.d7.loss_cls: 0.3314  decode.d7.loss_mask: 1.6586  decode.d7.loss_dice: 1.5289  decode.d8.loss_cls: 0.3199  decode.d8.loss_mask: 1.6672  decode.d8.loss_dice: 1.4931
2025/03/29 19:37:49 - mmengine - INFO - Iter(train) [13150/20000]  base_lr: 3.8125e-05 lr: 3.8125e-05  eta: 3:12:14  time: 1.5492  data_time: 0.0160  memory: 9692  loss: 36.9665  decode.loss_cls: 0.3042  decode.loss_mask: 1.7725  decode.loss_dice: 1.5951  decode.d0.loss_cls: 0.4318  decode.d0.loss_mask: 1.7323  decode.d0.loss_dice: 1.6545  decode.d1.loss_cls: 0.3410  decode.d1.loss_mask: 1.7389  decode.d1.loss_dice: 1.5589  decode.d2.loss_cls: 0.3306  decode.d2.loss_mask: 1.7743  decode.d2.loss_dice: 1.6073  decode.d3.loss_cls: 0.3624  decode.d3.loss_mask: 1.7289  decode.d3.loss_dice: 1.5837  decode.d4.loss_cls: 0.3549  decode.d4.loss_mask: 1.7315  decode.d4.loss_dice: 1.6004  decode.d5.loss_cls: 0.4005  decode.d5.loss_mask: 1.7316  decode.d5.loss_dice: 1.5992  decode.d6.loss_cls: 0.3061  decode.d6.loss_mask: 1.7717  decode.d6.loss_dice: 1.5913  decode.d7.loss_cls: 0.3404  decode.d7.loss_mask: 1.7639  decode.d7.loss_dice: 1.5821  decode.d8.loss_cls: 0.3614  decode.d8.loss_mask: 1.7389  decode.d8.loss_dice: 1.5763
2025/03/29 19:39:19 - mmengine - INFO - Iter(train) [13200/20000]  base_lr: 3.7875e-05 lr: 3.7875e-05  eta: 3:10:53  time: 1.8346  data_time: 0.0162  memory: 9680  loss: 37.3347  decode.loss_cls: 0.2911  decode.loss_mask: 1.7510  decode.loss_dice: 1.6517  decode.d0.loss_cls: 0.3160  decode.d0.loss_mask: 1.8072  decode.d0.loss_dice: 1.7265  decode.d1.loss_cls: 0.2696  decode.d1.loss_mask: 1.7677  decode.d1.loss_dice: 1.6622  decode.d2.loss_cls: 0.3003  decode.d2.loss_mask: 1.7596  decode.d2.loss_dice: 1.6718  decode.d3.loss_cls: 0.2815  decode.d3.loss_mask: 1.7789  decode.d3.loss_dice: 1.6727  decode.d4.loss_cls: 0.3410  decode.d4.loss_mask: 1.7624  decode.d4.loss_dice: 1.6548  decode.d5.loss_cls: 0.3364  decode.d5.loss_mask: 1.7704  decode.d5.loss_dice: 1.6438  decode.d6.loss_cls: 0.3415  decode.d6.loss_mask: 1.7317  decode.d6.loss_dice: 1.6419  decode.d7.loss_cls: 0.2817  decode.d7.loss_mask: 1.7614  decode.d7.loss_dice: 1.6597  decode.d8.loss_cls: 0.3102  decode.d8.loss_mask: 1.7360  decode.d8.loss_dice: 1.6539
2025/03/29 19:40:48 - mmengine - INFO - Iter(train) [13250/20000]  base_lr: 3.7624e-05 lr: 3.7624e-05  eta: 3:09:32  time: 1.7438  data_time: 0.0160  memory: 9686  loss: 38.5315  decode.loss_cls: 0.4369  decode.loss_mask: 1.7286  decode.loss_dice: 1.6632  decode.d0.loss_cls: 0.4749  decode.d0.loss_mask: 1.7536  decode.d0.loss_dice: 1.7788  decode.d1.loss_cls: 0.4093  decode.d1.loss_mask: 1.7292  decode.d1.loss_dice: 1.6826  decode.d2.loss_cls: 0.4085  decode.d2.loss_mask: 1.7305  decode.d2.loss_dice: 1.7021  decode.d3.loss_cls: 0.3835  decode.d3.loss_mask: 1.7275  decode.d3.loss_dice: 1.6940  decode.d4.loss_cls: 0.4612  decode.d4.loss_mask: 1.7007  decode.d4.loss_dice: 1.6762  decode.d5.loss_cls: 0.4399  decode.d5.loss_mask: 1.7258  decode.d5.loss_dice: 1.7000  decode.d6.loss_cls: 0.3707  decode.d6.loss_mask: 1.7371  decode.d6.loss_dice: 1.7369  decode.d7.loss_cls: 0.4069  decode.d7.loss_mask: 1.7128  decode.d7.loss_dice: 1.6972  decode.d8.loss_cls: 0.4394  decode.d8.loss_mask: 1.7135  decode.d8.loss_dice: 1.7099
2025/03/29 19:42:17 - mmengine - INFO - Iter(train) [13300/20000]  base_lr: 3.7373e-05 lr: 3.7373e-05  eta: 3:08:10  time: 1.7788  data_time: 0.0159  memory: 9692  loss: 36.5885  decode.loss_cls: 0.3202  decode.loss_mask: 1.7143  decode.loss_dice: 1.6260  decode.d0.loss_cls: 0.3999  decode.d0.loss_mask: 1.7277  decode.d0.loss_dice: 1.6601  decode.d1.loss_cls: 0.3341  decode.d1.loss_mask: 1.7133  decode.d1.loss_dice: 1.6424  decode.d2.loss_cls: 0.2934  decode.d2.loss_mask: 1.7470  decode.d2.loss_dice: 1.6038  decode.d3.loss_cls: 0.3242  decode.d3.loss_mask: 1.7042  decode.d3.loss_dice: 1.6182  decode.d4.loss_cls: 0.3140  decode.d4.loss_mask: 1.7016  decode.d4.loss_dice: 1.5926  decode.d5.loss_cls: 0.3233  decode.d5.loss_mask: 1.7061  decode.d5.loss_dice: 1.5969  decode.d6.loss_cls: 0.3007  decode.d6.loss_mask: 1.7074  decode.d6.loss_dice: 1.6167  decode.d7.loss_cls: 0.2883  decode.d7.loss_mask: 1.7118  decode.d7.loss_dice: 1.6216  decode.d8.loss_cls: 0.3097  decode.d8.loss_mask: 1.7405  decode.d8.loss_dice: 1.6284
2025/03/29 19:43:45 - mmengine - INFO - Iter(train) [13350/20000]  base_lr: 3.7122e-05 lr: 3.7122e-05  eta: 3:06:47  time: 1.7806  data_time: 0.0157  memory: 9677  loss: 33.5726  decode.loss_cls: 0.2646  decode.loss_mask: 1.6442  decode.loss_dice: 1.4494  decode.d0.loss_cls: 0.3496  decode.d0.loss_mask: 1.6539  decode.d0.loss_dice: 1.5344  decode.d1.loss_cls: 0.3058  decode.d1.loss_mask: 1.6224  decode.d1.loss_dice: 1.4171  decode.d2.loss_cls: 0.2977  decode.d2.loss_mask: 1.6240  decode.d2.loss_dice: 1.4282  decode.d3.loss_cls: 0.2794  decode.d3.loss_mask: 1.6336  decode.d3.loss_dice: 1.4239  decode.d4.loss_cls: 0.2766  decode.d4.loss_mask: 1.6268  decode.d4.loss_dice: 1.4402  decode.d5.loss_cls: 0.3199  decode.d5.loss_mask: 1.5949  decode.d5.loss_dice: 1.3819  decode.d6.loss_cls: 0.2764  decode.d6.loss_mask: 1.6279  decode.d6.loss_dice: 1.4111  decode.d7.loss_cls: 0.2456  decode.d7.loss_mask: 1.6304  decode.d7.loss_dice: 1.4528  decode.d8.loss_cls: 0.2497  decode.d8.loss_mask: 1.6421  decode.d8.loss_dice: 1.4680
2025/03/29 19:45:14 - mmengine - INFO - Iter(train) [13400/20000]  base_lr: 3.6871e-05 lr: 3.6871e-05  eta: 3:05:25  time: 1.6926  data_time: 0.0160  memory: 9696  loss: 35.3167  decode.loss_cls: 0.3089  decode.loss_mask: 1.7419  decode.loss_dice: 1.5164  decode.d0.loss_cls: 0.4459  decode.d0.loss_mask: 1.7237  decode.d0.loss_dice: 1.5145  decode.d1.loss_cls: 0.3191  decode.d1.loss_mask: 1.6878  decode.d1.loss_dice: 1.4697  decode.d2.loss_cls: 0.3369  decode.d2.loss_mask: 1.6972  decode.d2.loss_dice: 1.4713  decode.d3.loss_cls: 0.3314  decode.d3.loss_mask: 1.6967  decode.d3.loss_dice: 1.4480  decode.d4.loss_cls: 0.3244  decode.d4.loss_mask: 1.7264  decode.d4.loss_dice: 1.4739  decode.d5.loss_cls: 0.3265  decode.d5.loss_mask: 1.7286  decode.d5.loss_dice: 1.4804  decode.d6.loss_cls: 0.3357  decode.d6.loss_mask: 1.7254  decode.d6.loss_dice: 1.4796  decode.d7.loss_cls: 0.3086  decode.d7.loss_mask: 1.7110  decode.d7.loss_dice: 1.4667  decode.d8.loss_cls: 0.2940  decode.d8.loss_mask: 1.7486  decode.d8.loss_dice: 1.4776
2025/03/29 19:46:37 - mmengine - INFO - Iter(train) [13450/20000]  base_lr: 3.6619e-05 lr: 3.6619e-05  eta: 3:04:01  time: 1.6718  data_time: 0.0159  memory: 9681  loss: 34.8236  decode.loss_cls: 0.3725  decode.loss_mask: 1.6574  decode.loss_dice: 1.4505  decode.d0.loss_cls: 0.4691  decode.d0.loss_mask: 1.6876  decode.d0.loss_dice: 1.4868  decode.d1.loss_cls: 0.3093  decode.d1.loss_mask: 1.6940  decode.d1.loss_dice: 1.4694  decode.d2.loss_cls: 0.3456  decode.d2.loss_mask: 1.6737  decode.d2.loss_dice: 1.4501  decode.d3.loss_cls: 0.3432  decode.d3.loss_mask: 1.6724  decode.d3.loss_dice: 1.4418  decode.d4.loss_cls: 0.3155  decode.d4.loss_mask: 1.6646  decode.d4.loss_dice: 1.4742  decode.d5.loss_cls: 0.3497  decode.d5.loss_mask: 1.6570  decode.d5.loss_dice: 1.4458  decode.d6.loss_cls: 0.3544  decode.d6.loss_mask: 1.6600  decode.d6.loss_dice: 1.4522  decode.d7.loss_cls: 0.3482  decode.d7.loss_mask: 1.6564  decode.d7.loss_dice: 1.4696  decode.d8.loss_cls: 0.3298  decode.d8.loss_mask: 1.6535  decode.d8.loss_dice: 1.4693
2025/03/29 19:48:01 - mmengine - INFO - Iter(train) [13500/20000]  base_lr: 3.6368e-05 lr: 3.6368e-05  eta: 3:02:36  time: 1.6847  data_time: 0.0161  memory: 9681  loss: 40.6295  decode.loss_cls: 0.2687  decode.loss_mask: 1.9966  decode.loss_dice: 1.8043  decode.d0.loss_cls: 0.5047  decode.d0.loss_mask: 1.9521  decode.d0.loss_dice: 1.7278  decode.d1.loss_cls: 0.3093  decode.d1.loss_mask: 1.9770  decode.d1.loss_dice: 1.7462  decode.d2.loss_cls: 0.3252  decode.d2.loss_mask: 1.9643  decode.d2.loss_dice: 1.7425  decode.d3.loss_cls: 0.3361  decode.d3.loss_mask: 1.9916  decode.d3.loss_dice: 1.7330  decode.d4.loss_cls: 0.2525  decode.d4.loss_mask: 2.0170  decode.d4.loss_dice: 1.7837  decode.d5.loss_cls: 0.3379  decode.d5.loss_mask: 1.9730  decode.d5.loss_dice: 1.7452  decode.d6.loss_cls: 0.2982  decode.d6.loss_mask: 1.9782  decode.d6.loss_dice: 1.7790  decode.d7.loss_cls: 0.2987  decode.d7.loss_mask: 1.9829  decode.d7.loss_dice: 1.7570  decode.d8.loss_cls: 0.3297  decode.d8.loss_mask: 1.9753  decode.d8.loss_dice: 1.7419
2025/03/29 19:49:25 - mmengine - INFO - Iter(train) [13550/20000]  base_lr: 3.6116e-05 lr: 3.6116e-05  eta: 3:01:12  time: 1.6755  data_time: 0.0160  memory: 9686  loss: 36.2944  decode.loss_cls: 0.2854  decode.loss_mask: 1.7030  decode.loss_dice: 1.5920  decode.d0.loss_cls: 0.4970  decode.d0.loss_mask: 1.7021  decode.d0.loss_dice: 1.6757  decode.d1.loss_cls: 0.3062  decode.d1.loss_mask: 1.7217  decode.d1.loss_dice: 1.6305  decode.d2.loss_cls: 0.2898  decode.d2.loss_mask: 1.7119  decode.d2.loss_dice: 1.5756  decode.d3.loss_cls: 0.2810  decode.d3.loss_mask: 1.7110  decode.d3.loss_dice: 1.5794  decode.d4.loss_cls: 0.3035  decode.d4.loss_mask: 1.6947  decode.d4.loss_dice: 1.5657  decode.d5.loss_cls: 0.3122  decode.d5.loss_mask: 1.7109  decode.d5.loss_dice: 1.6278  decode.d6.loss_cls: 0.3101  decode.d6.loss_mask: 1.7085  decode.d6.loss_dice: 1.5715  decode.d7.loss_cls: 0.3060  decode.d7.loss_mask: 1.7105  decode.d7.loss_dice: 1.6000  decode.d8.loss_cls: 0.3223  decode.d8.loss_mask: 1.7098  decode.d8.loss_dice: 1.5783
2025/03/29 19:50:49 - mmengine - INFO - Iter(train) [13600/20000]  base_lr: 3.5864e-05 lr: 3.5864e-05  eta: 2:59:47  time: 1.6736  data_time: 0.0161  memory: 9684  loss: 37.9805  decode.loss_cls: 0.3302  decode.loss_mask: 1.7758  decode.loss_dice: 1.6926  decode.d0.loss_cls: 0.4377  decode.d0.loss_mask: 1.7581  decode.d0.loss_dice: 1.7792  decode.d1.loss_cls: 0.3661  decode.d1.loss_mask: 1.7611  decode.d1.loss_dice: 1.6812  decode.d2.loss_cls: 0.3721  decode.d2.loss_mask: 1.7353  decode.d2.loss_dice: 1.6570  decode.d3.loss_cls: 0.3334  decode.d3.loss_mask: 1.7670  decode.d3.loss_dice: 1.6752  decode.d4.loss_cls: 0.3477  decode.d4.loss_mask: 1.7481  decode.d4.loss_dice: 1.6778  decode.d5.loss_cls: 0.3201  decode.d5.loss_mask: 1.7728  decode.d5.loss_dice: 1.6945  decode.d6.loss_cls: 0.3435  decode.d6.loss_mask: 1.7634  decode.d6.loss_dice: 1.6455  decode.d7.loss_cls: 0.3069  decode.d7.loss_mask: 1.7666  decode.d7.loss_dice: 1.6869  decode.d8.loss_cls: 0.3393  decode.d8.loss_mask: 1.7526  decode.d8.loss_dice: 1.6929
2025/03/29 19:52:12 - mmengine - INFO - Iter(train) [13650/20000]  base_lr: 3.5611e-05 lr: 3.5611e-05  eta: 2:58:22  time: 1.6718  data_time: 0.0156  memory: 9692  loss: 38.3156  decode.loss_cls: 0.2761  decode.loss_mask: 1.8196  decode.loss_dice: 1.7102  decode.d0.loss_cls: 0.4010  decode.d0.loss_mask: 1.8753  decode.d0.loss_dice: 1.7256  decode.d1.loss_cls: 0.2701  decode.d1.loss_mask: 1.8696  decode.d1.loss_dice: 1.7166  decode.d2.loss_cls: 0.3222  decode.d2.loss_mask: 1.8402  decode.d2.loss_dice: 1.7140  decode.d3.loss_cls: 0.3027  decode.d3.loss_mask: 1.7893  decode.d3.loss_dice: 1.6915  decode.d4.loss_cls: 0.2961  decode.d4.loss_mask: 1.7830  decode.d4.loss_dice: 1.6935  decode.d5.loss_cls: 0.2865  decode.d5.loss_mask: 1.8221  decode.d5.loss_dice: 1.7192  decode.d6.loss_cls: 0.2832  decode.d6.loss_mask: 1.8219  decode.d6.loss_dice: 1.7291  decode.d7.loss_cls: 0.2955  decode.d7.loss_mask: 1.7803  decode.d7.loss_dice: 1.6952  decode.d8.loss_cls: 0.3035  decode.d8.loss_mask: 1.7947  decode.d8.loss_dice: 1.6876
2025/03/29 19:53:36 - mmengine - INFO - Iter(train) [13700/20000]  base_lr: 3.5359e-05 lr: 3.5359e-05  eta: 2:56:58  time: 1.6724  data_time: 0.0161  memory: 9685  loss: 37.0494  decode.loss_cls: 0.3679  decode.loss_mask: 1.7307  decode.loss_dice: 1.5909  decode.d0.loss_cls: 0.3899  decode.d0.loss_mask: 1.8104  decode.d0.loss_dice: 1.7292  decode.d1.loss_cls: 0.3203  decode.d1.loss_mask: 1.7646  decode.d1.loss_dice: 1.5914  decode.d2.loss_cls: 0.3887  decode.d2.loss_mask: 1.7367  decode.d2.loss_dice: 1.5450  decode.d3.loss_cls: 0.3855  decode.d3.loss_mask: 1.7448  decode.d3.loss_dice: 1.5680  decode.d4.loss_cls: 0.3731  decode.d4.loss_mask: 1.7240  decode.d4.loss_dice: 1.5746  decode.d5.loss_cls: 0.3491  decode.d5.loss_mask: 1.7354  decode.d5.loss_dice: 1.5228  decode.d6.loss_cls: 0.3591  decode.d6.loss_mask: 1.7576  decode.d6.loss_dice: 1.5628  decode.d7.loss_cls: 0.3668  decode.d7.loss_mask: 1.7755  decode.d7.loss_dice: 1.6043  decode.d8.loss_cls: 0.3601  decode.d8.loss_mask: 1.7420  decode.d8.loss_dice: 1.5780
2025/03/29 19:55:00 - mmengine - INFO - Iter(train) [13750/20000]  base_lr: 3.5106e-05 lr: 3.5106e-05  eta: 2:55:33  time: 1.6720  data_time: 0.0158  memory: 9692  loss: 37.7140  decode.loss_cls: 0.2733  decode.loss_mask: 1.7556  decode.loss_dice: 1.7257  decode.d0.loss_cls: 0.3837  decode.d0.loss_mask: 1.7486  decode.d0.loss_dice: 1.7500  decode.d1.loss_cls: 0.3219  decode.d1.loss_mask: 1.7456  decode.d1.loss_dice: 1.7076  decode.d2.loss_cls: 0.3318  decode.d2.loss_mask: 1.7494  decode.d2.loss_dice: 1.6963  decode.d3.loss_cls: 0.3060  decode.d3.loss_mask: 1.7562  decode.d3.loss_dice: 1.6984  decode.d4.loss_cls: 0.3195  decode.d4.loss_mask: 1.7394  decode.d4.loss_dice: 1.6904  decode.d5.loss_cls: 0.2968  decode.d5.loss_mask: 1.7482  decode.d5.loss_dice: 1.6982  decode.d6.loss_cls: 0.3143  decode.d6.loss_mask: 1.7564  decode.d6.loss_dice: 1.6856  decode.d7.loss_cls: 0.3143  decode.d7.loss_mask: 1.7393  decode.d7.loss_dice: 1.6933  decode.d8.loss_cls: 0.3106  decode.d8.loss_mask: 1.7342  decode.d8.loss_dice: 1.7233
2025/03/29 19:56:24 - mmengine - INFO - Iter(train) [13800/20000]  base_lr: 3.4853e-05 lr: 3.4853e-05  eta: 2:54:09  time: 1.6764  data_time: 0.0158  memory: 9753  loss: 32.4611  decode.loss_cls: 0.3348  decode.loss_mask: 1.5060  decode.loss_dice: 1.4430  decode.d0.loss_cls: 0.4358  decode.d0.loss_mask: 1.5328  decode.d0.loss_dice: 1.5305  decode.d1.loss_cls: 0.2987  decode.d1.loss_mask: 1.4838  decode.d1.loss_dice: 1.4423  decode.d2.loss_cls: 0.3279  decode.d2.loss_mask: 1.4889  decode.d2.loss_dice: 1.4083  decode.d3.loss_cls: 0.3078  decode.d3.loss_mask: 1.4826  decode.d3.loss_dice: 1.3818  decode.d4.loss_cls: 0.3057  decode.d4.loss_mask: 1.4798  decode.d4.loss_dice: 1.3918  decode.d5.loss_cls: 0.3105  decode.d5.loss_mask: 1.4853  decode.d5.loss_dice: 1.4105  decode.d6.loss_cls: 0.2905  decode.d6.loss_mask: 1.4880  decode.d6.loss_dice: 1.4177  decode.d7.loss_cls: 0.3143  decode.d7.loss_mask: 1.4698  decode.d7.loss_dice: 1.4228  decode.d8.loss_cls: 0.3524  decode.d8.loss_mask: 1.4980  decode.d8.loss_dice: 1.4188
2025/03/29 19:57:47 - mmengine - INFO - Iter(train) [13850/20000]  base_lr: 3.4600e-05 lr: 3.4600e-05  eta: 2:52:44  time: 1.6794  data_time: 0.0170  memory: 9687  loss: 38.8261  decode.loss_cls: 0.2528  decode.loss_mask: 1.8822  decode.loss_dice: 1.7375  decode.d0.loss_cls: 0.3380  decode.d0.loss_mask: 1.8804  decode.d0.loss_dice: 1.7713  decode.d1.loss_cls: 0.2677  decode.d1.loss_mask: 1.8752  decode.d1.loss_dice: 1.7354  decode.d2.loss_cls: 0.2690  decode.d2.loss_mask: 1.8920  decode.d2.loss_dice: 1.7524  decode.d3.loss_cls: 0.2944  decode.d3.loss_mask: 1.8783  decode.d3.loss_dice: 1.7108  decode.d4.loss_cls: 0.2938  decode.d4.loss_mask: 1.8700  decode.d4.loss_dice: 1.7075  decode.d5.loss_cls: 0.2556  decode.d5.loss_mask: 1.8802  decode.d5.loss_dice: 1.6925  decode.d6.loss_cls: 0.2604  decode.d6.loss_mask: 1.8720  decode.d6.loss_dice: 1.7259  decode.d7.loss_cls: 0.2767  decode.d7.loss_mask: 1.8662  decode.d7.loss_dice: 1.7337  decode.d8.loss_cls: 0.2464  decode.d8.loss_mask: 1.8796  decode.d8.loss_dice: 1.7282
2025/03/29 19:59:11 - mmengine - INFO - Iter(train) [13900/20000]  base_lr: 3.4347e-05 lr: 3.4347e-05  eta: 2:51:20  time: 1.6722  data_time: 0.0160  memory: 9693  loss: 37.1720  decode.loss_cls: 0.4020  decode.loss_mask: 1.7184  decode.loss_dice: 1.5720  decode.d0.loss_cls: 0.4757  decode.d0.loss_mask: 1.7937  decode.d0.loss_dice: 1.7048  decode.d1.loss_cls: 0.4042  decode.d1.loss_mask: 1.7188  decode.d1.loss_dice: 1.5633  decode.d2.loss_cls: 0.3874  decode.d2.loss_mask: 1.7398  decode.d2.loss_dice: 1.5518  decode.d3.loss_cls: 0.4072  decode.d3.loss_mask: 1.7144  decode.d3.loss_dice: 1.5695  decode.d4.loss_cls: 0.3921  decode.d4.loss_mask: 1.7194  decode.d4.loss_dice: 1.5726  decode.d5.loss_cls: 0.4259  decode.d5.loss_mask: 1.7254  decode.d5.loss_dice: 1.5606  decode.d6.loss_cls: 0.3768  decode.d6.loss_mask: 1.7190  decode.d6.loss_dice: 1.5900  decode.d7.loss_cls: 0.3718  decode.d7.loss_mask: 1.7485  decode.d7.loss_dice: 1.5980  decode.d8.loss_cls: 0.3761  decode.d8.loss_mask: 1.7082  decode.d8.loss_dice: 1.5646
2025/03/29 20:00:35 - mmengine - INFO - Iter(train) [13950/20000]  base_lr: 3.4094e-05 lr: 3.4094e-05  eta: 2:49:56  time: 1.6756  data_time: 0.0164  memory: 9686  loss: 35.4442  decode.loss_cls: 0.2532  decode.loss_mask: 1.7168  decode.loss_dice: 1.5805  decode.d0.loss_cls: 0.3827  decode.d0.loss_mask: 1.6775  decode.d0.loss_dice: 1.6095  decode.d1.loss_cls: 0.2622  decode.d1.loss_mask: 1.7071  decode.d1.loss_dice: 1.5815  decode.d2.loss_cls: 0.2461  decode.d2.loss_mask: 1.6968  decode.d2.loss_dice: 1.5854  decode.d3.loss_cls: 0.2475  decode.d3.loss_mask: 1.6985  decode.d3.loss_dice: 1.5528  decode.d4.loss_cls: 0.2499  decode.d4.loss_mask: 1.7027  decode.d4.loss_dice: 1.5592  decode.d5.loss_cls: 0.2488  decode.d5.loss_mask: 1.7084  decode.d5.loss_dice: 1.5489  decode.d6.loss_cls: 0.2483  decode.d6.loss_mask: 1.7106  decode.d6.loss_dice: 1.5598  decode.d7.loss_cls: 0.2732  decode.d7.loss_mask: 1.7145  decode.d7.loss_dice: 1.5607  decode.d8.loss_cls: 0.2430  decode.d8.loss_mask: 1.7271  decode.d8.loss_dice: 1.5910
2025/03/29 20:01:59 - mmengine - INFO - Exp name: u2r_20250329_122454
2025/03/29 20:01:59 - mmengine - INFO - Iter(train) [14000/20000]  base_lr: 3.3840e-05 lr: 3.3840e-05  eta: 2:48:31  time: 1.6725  data_time: 0.0162  memory: 9705  loss: 37.9971  decode.loss_cls: 0.3945  decode.loss_mask: 1.7925  decode.loss_dice: 1.5939  decode.d0.loss_cls: 0.4953  decode.d0.loss_mask: 1.8553  decode.d0.loss_dice: 1.6815  decode.d1.loss_cls: 0.4089  decode.d1.loss_mask: 1.7935  decode.d1.loss_dice: 1.5805  decode.d2.loss_cls: 0.4179  decode.d2.loss_mask: 1.8145  decode.d2.loss_dice: 1.5590  decode.d3.loss_cls: 0.4263  decode.d3.loss_mask: 1.7992  decode.d3.loss_dice: 1.5407  decode.d4.loss_cls: 0.3880  decode.d4.loss_mask: 1.8094  decode.d4.loss_dice: 1.5659  decode.d5.loss_cls: 0.4209  decode.d5.loss_mask: 1.7813  decode.d5.loss_dice: 1.5610  decode.d6.loss_cls: 0.3577  decode.d6.loss_mask: 1.8086  decode.d6.loss_dice: 1.5974  decode.d7.loss_cls: 0.3498  decode.d7.loss_mask: 1.8217  decode.d7.loss_dice: 1.6298  decode.d8.loss_cls: 0.3598  decode.d8.loss_mask: 1.8028  decode.d8.loss_dice: 1.5893
2025/03/29 20:01:59 - mmengine - INFO - Saving checkpoint at 14000 iterations
2025/03/29 20:02:09 - mmengine - INFO - Iter(val) [  50/3968]    eta: 0:10:30  time: 0.1671  data_time: 0.0015  memory: 1849  
2025/03/29 20:02:17 - mmengine - INFO - Iter(val) [ 100/3968]    eta: 0:10:22  time: 0.1575  data_time: 0.0014  memory: 1849  
2025/03/29 20:02:25 - mmengine - INFO - Iter(val) [ 150/3968]    eta: 0:10:13  time: 0.1668  data_time: 0.0016  memory: 1849  
2025/03/29 20:02:33 - mmengine - INFO - Iter(val) [ 200/3968]    eta: 0:10:06  time: 0.1568  data_time: 0.0014  memory: 1849  
2025/03/29 20:02:41 - mmengine - INFO - Iter(val) [ 250/3968]    eta: 0:09:58  time: 0.1669  data_time: 0.0015  memory: 1849  
2025/03/29 20:02:49 - mmengine - INFO - Iter(val) [ 300/3968]    eta: 0:09:49  time: 0.1530  data_time: 0.0017  memory: 1849  
2025/03/29 20:02:57 - mmengine - INFO - Iter(val) [ 350/3968]    eta: 0:09:41  time: 0.1652  data_time: 0.0013  memory: 1849  
2025/03/29 20:03:05 - mmengine - INFO - Iter(val) [ 400/3968]    eta: 0:09:30  time: 0.1540  data_time: 0.0014  memory: 1849  
2025/03/29 20:03:13 - mmengine - INFO - Iter(val) [ 450/3968]    eta: 0:09:23  time: 0.1438  data_time: 0.0014  memory: 1849  
2025/03/29 20:03:21 - mmengine - INFO - Iter(val) [ 500/3968]    eta: 0:09:15  time: 0.1670  data_time: 0.0014  memory: 1849  
2025/03/29 20:03:29 - mmengine - INFO - Iter(val) [ 550/3968]    eta: 0:09:08  time: 0.1609  data_time: 0.0018  memory: 1849  
2025/03/29 20:03:37 - mmengine - INFO - Iter(val) [ 600/3968]    eta: 0:08:59  time: 0.1581  data_time: 0.0014  memory: 1849  
2025/03/29 20:03:45 - mmengine - INFO - Iter(val) [ 650/3968]    eta: 0:08:52  time: 0.1557  data_time: 0.0014  memory: 1849  
2025/03/29 20:03:53 - mmengine - INFO - Iter(val) [ 700/3968]    eta: 0:08:43  time: 0.1673  data_time: 0.0015  memory: 1849  
2025/03/29 20:04:01 - mmengine - INFO - Iter(val) [ 750/3968]    eta: 0:08:35  time: 0.1522  data_time: 0.0013  memory: 1849  
2025/03/29 20:04:10 - mmengine - INFO - Iter(val) [ 800/3968]    eta: 0:08:28  time: 0.1672  data_time: 0.0013  memory: 1849  
2025/03/29 20:04:18 - mmengine - INFO - Iter(val) [ 850/3968]    eta: 0:08:19  time: 0.1571  data_time: 0.0013  memory: 1849  
2025/03/29 20:04:26 - mmengine - INFO - Iter(val) [ 900/3968]    eta: 0:08:12  time: 0.1665  data_time: 0.0015  memory: 1849  
2025/03/29 20:04:34 - mmengine - INFO - Iter(val) [ 950/3968]    eta: 0:08:04  time: 0.1570  data_time: 0.0014  memory: 1849  
2025/03/29 20:04:42 - mmengine - INFO - Iter(val) [1000/3968]    eta: 0:07:56  time: 0.1652  data_time: 0.0014  memory: 1849  
2025/03/29 20:04:50 - mmengine - INFO - Iter(val) [1050/3968]    eta: 0:07:47  time: 0.1658  data_time: 0.0018  memory: 1849  
2025/03/29 20:04:58 - mmengine - INFO - Iter(val) [1100/3968]    eta: 0:07:40  time: 0.1667  data_time: 0.0014  memory: 1849  
2025/03/29 20:05:06 - mmengine - INFO - Iter(val) [1150/3968]    eta: 0:07:31  time: 0.1591  data_time: 0.0014  memory: 1849  
2025/03/29 20:05:14 - mmengine - INFO - Iter(val) [1200/3968]    eta: 0:07:24  time: 0.1611  data_time: 0.0013  memory: 1849  
2025/03/29 20:05:22 - mmengine - INFO - Iter(val) [1250/3968]    eta: 0:07:15  time: 0.1576  data_time: 0.0014  memory: 1849  
2025/03/29 20:05:30 - mmengine - INFO - Iter(val) [1300/3968]    eta: 0:07:07  time: 0.1549  data_time: 0.0014  memory: 1849  
2025/03/29 20:05:38 - mmengine - INFO - Iter(val) [1350/3968]    eta: 0:06:59  time: 0.1591  data_time: 0.0015  memory: 1849  
2025/03/29 20:05:46 - mmengine - INFO - Iter(val) [1400/3968]    eta: 0:06:52  time: 0.1585  data_time: 0.0015  memory: 1849  
2025/03/29 20:05:54 - mmengine - INFO - Iter(val) [1450/3968]    eta: 0:06:43  time: 0.1586  data_time: 0.0014  memory: 1849  
2025/03/29 20:06:02 - mmengine - INFO - Iter(val) [1500/3968]    eta: 0:06:35  time: 0.1529  data_time: 0.0014  memory: 1849  
2025/03/29 20:06:10 - mmengine - INFO - Iter(val) [1550/3968]    eta: 0:06:27  time: 0.1631  data_time: 0.0013  memory: 1849  
2025/03/29 20:06:18 - mmengine - INFO - Iter(val) [1600/3968]    eta: 0:06:19  time: 0.1545  data_time: 0.0014  memory: 1849  
2025/03/29 20:06:26 - mmengine - INFO - Iter(val) [1650/3968]    eta: 0:06:11  time: 0.1663  data_time: 0.0018  memory: 1849  
2025/03/29 20:06:34 - mmengine - INFO - Iter(val) [1700/3968]    eta: 0:06:03  time: 0.1507  data_time: 0.0014  memory: 1849  
2025/03/29 20:06:42 - mmengine - INFO - Iter(val) [1750/3968]    eta: 0:05:55  time: 0.1567  data_time: 0.0015  memory: 1849  
2025/03/29 20:06:50 - mmengine - INFO - Iter(val) [1800/3968]    eta: 0:05:47  time: 0.1587  data_time: 0.0017  memory: 1849  
2025/03/29 20:06:58 - mmengine - INFO - Iter(val) [1850/3968]    eta: 0:05:39  time: 0.1576  data_time: 0.0014  memory: 1849  
2025/03/29 20:07:06 - mmengine - INFO - Iter(val) [1900/3968]    eta: 0:05:31  time: 0.1586  data_time: 0.0014  memory: 1849  
2025/03/29 20:07:14 - mmengine - INFO - Iter(val) [1950/3968]    eta: 0:05:23  time: 0.1574  data_time: 0.0015  memory: 1849  
2025/03/29 20:07:22 - mmengine - INFO - Iter(val) [2000/3968]    eta: 0:05:15  time: 0.1534  data_time: 0.0015  memory: 1849  
2025/03/29 20:07:30 - mmengine - INFO - Iter(val) [2050/3968]    eta: 0:05:07  time: 0.1602  data_time: 0.0014  memory: 1849  
2025/03/29 20:07:38 - mmengine - INFO - Iter(val) [2100/3968]    eta: 0:04:59  time: 0.1569  data_time: 0.0014  memory: 1849  
2025/03/29 20:07:46 - mmengine - INFO - Iter(val) [2150/3968]    eta: 0:04:51  time: 0.1520  data_time: 0.0014  memory: 1849  
2025/03/29 20:07:54 - mmengine - INFO - Iter(val) [2200/3968]    eta: 0:04:43  time: 0.1677  data_time: 0.0013  memory: 1849  
2025/03/29 20:08:02 - mmengine - INFO - Iter(val) [2250/3968]    eta: 0:04:35  time: 0.1614  data_time: 0.0014  memory: 1849  
2025/03/29 20:08:10 - mmengine - INFO - Iter(val) [2300/3968]    eta: 0:04:27  time: 0.1664  data_time: 0.0014  memory: 1849  
2025/03/29 20:08:18 - mmengine - INFO - Iter(val) [2350/3968]    eta: 0:04:19  time: 0.1568  data_time: 0.0015  memory: 1849  
2025/03/29 20:08:27 - mmengine - INFO - Iter(val) [2400/3968]    eta: 0:04:11  time: 0.1668  data_time: 0.0014  memory: 1849  
2025/03/29 20:08:35 - mmengine - INFO - Iter(val) [2450/3968]    eta: 0:04:03  time: 0.1587  data_time: 0.0014  memory: 1849  
2025/03/29 20:08:43 - mmengine - INFO - Iter(val) [2500/3968]    eta: 0:03:55  time: 0.1669  data_time: 0.0014  memory: 1849  
2025/03/29 20:08:51 - mmengine - INFO - Iter(val) [2550/3968]    eta: 0:03:47  time: 0.1594  data_time: 0.0015  memory: 1849  
2025/03/29 20:08:59 - mmengine - INFO - Iter(val) [2600/3968]    eta: 0:03:39  time: 0.1662  data_time: 0.0014  memory: 1849  
2025/03/29 20:09:07 - mmengine - INFO - Iter(val) [2650/3968]    eta: 0:03:31  time: 0.1618  data_time: 0.0014  memory: 1849  
2025/03/29 20:09:15 - mmengine - INFO - Iter(val) [2700/3968]    eta: 0:03:23  time: 0.1661  data_time: 0.0013  memory: 1849  
2025/03/29 20:09:23 - mmengine - INFO - Iter(val) [2750/3968]    eta: 0:03:15  time: 0.1574  data_time: 0.0014  memory: 1849  
2025/03/29 20:09:31 - mmengine - INFO - Iter(val) [2800/3968]    eta: 0:03:07  time: 0.1676  data_time: 0.0017  memory: 1849  
2025/03/29 20:09:39 - mmengine - INFO - Iter(val) [2850/3968]    eta: 0:02:59  time: 0.1572  data_time: 0.0014  memory: 1849  
2025/03/29 20:09:47 - mmengine - INFO - Iter(val) [2900/3968]    eta: 0:02:51  time: 0.1666  data_time: 0.0014  memory: 1849  
2025/03/29 20:09:55 - mmengine - INFO - Iter(val) [2950/3968]    eta: 0:02:43  time: 0.1667  data_time: 0.0016  memory: 1849  
2025/03/29 20:10:03 - mmengine - INFO - Iter(val) [3000/3968]    eta: 0:02:35  time: 0.1663  data_time: 0.0014  memory: 1849  
2025/03/29 20:10:11 - mmengine - INFO - Iter(val) [3050/3968]    eta: 0:02:27  time: 0.1605  data_time: 0.0014  memory: 1849  
2025/03/29 20:10:19 - mmengine - INFO - Iter(val) [3100/3968]    eta: 0:02:19  time: 0.1670  data_time: 0.0015  memory: 1849  
2025/03/29 20:10:27 - mmengine - INFO - Iter(val) [3150/3968]    eta: 0:02:11  time: 0.1600  data_time: 0.0014  memory: 1849  
2025/03/29 20:10:35 - mmengine - INFO - Iter(val) [3200/3968]    eta: 0:02:03  time: 0.1668  data_time: 0.0015  memory: 1849  
2025/03/29 20:10:43 - mmengine - INFO - Iter(val) [3250/3968]    eta: 0:01:55  time: 0.1585  data_time: 0.0013  memory: 1849  
2025/03/29 20:10:51 - mmengine - INFO - Iter(val) [3300/3968]    eta: 0:01:47  time: 0.1660  data_time: 0.0015  memory: 1849  
2025/03/29 20:11:00 - mmengine - INFO - Iter(val) [3350/3968]    eta: 0:01:39  time: 0.1585  data_time: 0.0015  memory: 1849  
2025/03/29 20:11:08 - mmengine - INFO - Iter(val) [3400/3968]    eta: 0:01:31  time: 0.1679  data_time: 0.0014  memory: 1849  
2025/03/29 20:11:16 - mmengine - INFO - Iter(val) [3450/3968]    eta: 0:01:23  time: 0.1638  data_time: 0.0015  memory: 1849  
2025/03/29 20:11:24 - mmengine - INFO - Iter(val) [3500/3968]    eta: 0:01:15  time: 0.1660  data_time: 0.0018  memory: 1849  
2025/03/29 20:11:32 - mmengine - INFO - Iter(val) [3550/3968]    eta: 0:01:07  time: 0.1557  data_time: 0.0014  memory: 1849  
2025/03/29 20:11:40 - mmengine - INFO - Iter(val) [3600/3968]    eta: 0:00:59  time: 0.1663  data_time: 0.0013  memory: 1849  
2025/03/29 20:11:48 - mmengine - INFO - Iter(val) [3650/3968]    eta: 0:00:51  time: 0.1617  data_time: 0.0014  memory: 1849  
2025/03/29 20:11:56 - mmengine - INFO - Iter(val) [3700/3968]    eta: 0:00:42  time: 0.1661  data_time: 0.0014  memory: 1849  
2025/03/29 20:12:04 - mmengine - INFO - Iter(val) [3750/3968]    eta: 0:00:34  time: 0.1587  data_time: 0.0013  memory: 1849  
2025/03/29 20:12:12 - mmengine - INFO - Iter(val) [3800/3968]    eta: 0:00:26  time: 0.1657  data_time: 0.0014  memory: 1849  
2025/03/29 20:12:20 - mmengine - INFO - Iter(val) [3850/3968]    eta: 0:00:18  time: 0.1552  data_time: 0.0015  memory: 1849  
2025/03/29 20:12:28 - mmengine - INFO - Iter(val) [3900/3968]    eta: 0:00:10  time: 0.1667  data_time: 0.0013  memory: 1849  
2025/03/29 20:12:36 - mmengine - INFO - Iter(val) [3950/3968]    eta: 0:00:02  time: 0.1556  data_time: 0.0014  memory: 1849  
2025/03/29 20:12:39 - mmengine - INFO - per class results:
2025/03/29 20:12:39 - mmengine - INFO - 
+--------------+-------+-------+
|    Class     |  IoU  |  Acc  |
+--------------+-------+-------+
|  background  | 58.59 | 85.77 |
|   building   | 59.25 | 68.84 |
|     road     | 45.58 | 49.89 |
|    water     | 65.27 | 75.02 |
|    barren    |  9.23 |  9.51 |
|    forest    | 13.58 | 14.32 |
| agricultural | 59.79 |  70.2 |
+--------------+-------+-------+
2025/03/29 20:12:39 - mmengine - INFO - Iter(val) [3968/3968]    aAcc: 71.8300  mIoU: 44.4700  mAcc: 53.3600  data_time: 0.0015  time: 0.1604
2025/03/29 20:14:02 - mmengine - INFO - Iter(train) [14050/20000]  base_lr: 3.3586e-05 lr: 3.3586e-05  eta: 2:47:07  time: 1.6769  data_time: 0.0179  memory: 9678  loss: 32.6450  decode.loss_cls: 0.2635  decode.loss_mask: 1.4900  decode.loss_dice: 1.5014  decode.d0.loss_cls: 0.3848  decode.d0.loss_mask: 1.4853  decode.d0.loss_dice: 1.5684  decode.d1.loss_cls: 0.3000  decode.d1.loss_mask: 1.4676  decode.d1.loss_dice: 1.4946  decode.d2.loss_cls: 0.2941  decode.d2.loss_mask: 1.4808  decode.d2.loss_dice: 1.4704  decode.d3.loss_cls: 0.3207  decode.d3.loss_mask: 1.4609  decode.d3.loss_dice: 1.4620  decode.d4.loss_cls: 0.3163  decode.d4.loss_mask: 1.4459  decode.d4.loss_dice: 1.4544  decode.d5.loss_cls: 0.2866  decode.d5.loss_mask: 1.4591  decode.d5.loss_dice: 1.4773  decode.d6.loss_cls: 0.2782  decode.d6.loss_mask: 1.4684  decode.d6.loss_dice: 1.5095  decode.d7.loss_cls: 0.2712  decode.d7.loss_mask: 1.4876  decode.d7.loss_dice: 1.5117  decode.d8.loss_cls: 0.2773  decode.d8.loss_mask: 1.4626  decode.d8.loss_dice: 1.4946
2025/03/29 20:15:26 - mmengine - INFO - Iter(train) [14100/20000]  base_lr: 3.3332e-05 lr: 3.3332e-05  eta: 2:45:42  time: 1.6723  data_time: 0.0164  memory: 9693  loss: 34.8633  decode.loss_cls: 0.2753  decode.loss_mask: 1.6083  decode.loss_dice: 1.5319  decode.d0.loss_cls: 0.3742  decode.d0.loss_mask: 1.6589  decode.d0.loss_dice: 1.6257  decode.d1.loss_cls: 0.2727  decode.d1.loss_mask: 1.6355  decode.d1.loss_dice: 1.5811  decode.d2.loss_cls: 0.2995  decode.d2.loss_mask: 1.6412  decode.d2.loss_dice: 1.5674  decode.d3.loss_cls: 0.2959  decode.d3.loss_mask: 1.6329  decode.d3.loss_dice: 1.5275  decode.d4.loss_cls: 0.3088  decode.d4.loss_mask: 1.6435  decode.d4.loss_dice: 1.5527  decode.d5.loss_cls: 0.2987  decode.d5.loss_mask: 1.6176  decode.d5.loss_dice: 1.5339  decode.d6.loss_cls: 0.2654  decode.d6.loss_mask: 1.6216  decode.d6.loss_dice: 1.5552  decode.d7.loss_cls: 0.3018  decode.d7.loss_mask: 1.6191  decode.d7.loss_dice: 1.5540  decode.d8.loss_cls: 0.3251  decode.d8.loss_mask: 1.6202  decode.d8.loss_dice: 1.5181
2025/03/29 20:16:50 - mmengine - INFO - Iter(train) [14150/20000]  base_lr: 3.3078e-05 lr: 3.3078e-05  eta: 2:44:18  time: 1.6770  data_time: 0.0169  memory: 9684  loss: 34.4503  decode.loss_cls: 0.1690  decode.loss_mask: 1.7153  decode.loss_dice: 1.5358  decode.d0.loss_cls: 0.3012  decode.d0.loss_mask: 1.7599  decode.d0.loss_dice: 1.5943  decode.d1.loss_cls: 0.1791  decode.d1.loss_mask: 1.7182  decode.d1.loss_dice: 1.5394  decode.d2.loss_cls: 0.2153  decode.d2.loss_mask: 1.6833  decode.d2.loss_dice: 1.5223  decode.d3.loss_cls: 0.2021  decode.d3.loss_mask: 1.6872  decode.d3.loss_dice: 1.5036  decode.d4.loss_cls: 0.1538  decode.d4.loss_mask: 1.7198  decode.d4.loss_dice: 1.5654  decode.d5.loss_cls: 0.1671  decode.d5.loss_mask: 1.7081  decode.d5.loss_dice: 1.5399  decode.d6.loss_cls: 0.1455  decode.d6.loss_mask: 1.7140  decode.d6.loss_dice: 1.5191  decode.d7.loss_cls: 0.2113  decode.d7.loss_mask: 1.6844  decode.d7.loss_dice: 1.5323  decode.d8.loss_cls: 0.1954  decode.d8.loss_mask: 1.7065  decode.d8.loss_dice: 1.5617
2025/03/29 20:18:14 - mmengine - INFO - Iter(train) [14200/20000]  base_lr: 3.2823e-05 lr: 3.2823e-05  eta: 2:42:53  time: 1.6762  data_time: 0.0168  memory: 9688  loss: 35.8529  decode.loss_cls: 0.2734  decode.loss_mask: 1.6931  decode.loss_dice: 1.5684  decode.d0.loss_cls: 0.4054  decode.d0.loss_mask: 1.6831  decode.d0.loss_dice: 1.6207  decode.d1.loss_cls: 0.2612  decode.d1.loss_mask: 1.6929  decode.d1.loss_dice: 1.6055  decode.d2.loss_cls: 0.2715  decode.d2.loss_mask: 1.6916  decode.d2.loss_dice: 1.6161  decode.d3.loss_cls: 0.3139  decode.d3.loss_mask: 1.7054  decode.d3.loss_dice: 1.6064  decode.d4.loss_cls: 0.2849  decode.d4.loss_mask: 1.6981  decode.d4.loss_dice: 1.6111  decode.d5.loss_cls: 0.2642  decode.d5.loss_mask: 1.7082  decode.d5.loss_dice: 1.6023  decode.d6.loss_cls: 0.2769  decode.d6.loss_mask: 1.7010  decode.d6.loss_dice: 1.5947  decode.d7.loss_cls: 0.2830  decode.d7.loss_mask: 1.6871  decode.d7.loss_dice: 1.5844  decode.d8.loss_cls: 0.2928  decode.d8.loss_mask: 1.6971  decode.d8.loss_dice: 1.5586
2025/03/29 20:19:38 - mmengine - INFO - Iter(train) [14250/20000]  base_lr: 3.2568e-05 lr: 3.2568e-05  eta: 2:41:29  time: 1.6768  data_time: 0.0168  memory: 9678  loss: 36.2750  decode.loss_cls: 0.2963  decode.loss_mask: 1.6840  decode.loss_dice: 1.5921  decode.d0.loss_cls: 0.3992  decode.d0.loss_mask: 1.7228  decode.d0.loss_dice: 1.6474  decode.d1.loss_cls: 0.2996  decode.d1.loss_mask: 1.7033  decode.d1.loss_dice: 1.6172  decode.d2.loss_cls: 0.3037  decode.d2.loss_mask: 1.7129  decode.d2.loss_dice: 1.6326  decode.d3.loss_cls: 0.2745  decode.d3.loss_mask: 1.7112  decode.d3.loss_dice: 1.6098  decode.d4.loss_cls: 0.3024  decode.d4.loss_mask: 1.6957  decode.d4.loss_dice: 1.6056  decode.d5.loss_cls: 0.2387  decode.d5.loss_mask: 1.7268  decode.d5.loss_dice: 1.6386  decode.d6.loss_cls: 0.2849  decode.d6.loss_mask: 1.7273  decode.d6.loss_dice: 1.6115  decode.d7.loss_cls: 0.2898  decode.d7.loss_mask: 1.7224  decode.d7.loss_dice: 1.6129  decode.d8.loss_cls: 0.2957  decode.d8.loss_mask: 1.7180  decode.d8.loss_dice: 1.5982
2025/03/29 20:21:04 - mmengine - INFO - Iter(train) [14300/20000]  base_lr: 3.2313e-05 lr: 3.2313e-05  eta: 2:40:05  time: 1.7475  data_time: 0.0288  memory: 9693  loss: 36.9022  decode.loss_cls: 0.3140  decode.loss_mask: 1.7900  decode.loss_dice: 1.5533  decode.d0.loss_cls: 0.5180  decode.d0.loss_mask: 1.8284  decode.d0.loss_dice: 1.6374  decode.d1.loss_cls: 0.3697  decode.d1.loss_mask: 1.7528  decode.d1.loss_dice: 1.5451  decode.d2.loss_cls: 0.3470  decode.d2.loss_mask: 1.7634  decode.d2.loss_dice: 1.5250  decode.d3.loss_cls: 0.3488  decode.d3.loss_mask: 1.7763  decode.d3.loss_dice: 1.5428  decode.d4.loss_cls: 0.3671  decode.d4.loss_mask: 1.7550  decode.d4.loss_dice: 1.5450  decode.d5.loss_cls: 0.3354  decode.d5.loss_mask: 1.7588  decode.d5.loss_dice: 1.5265  decode.d6.loss_cls: 0.3458  decode.d6.loss_mask: 1.7757  decode.d6.loss_dice: 1.5254  decode.d7.loss_cls: 0.3429  decode.d7.loss_mask: 1.7759  decode.d7.loss_dice: 1.5675  decode.d8.loss_cls: 0.3498  decode.d8.loss_mask: 1.7567  decode.d8.loss_dice: 1.5626
2025/03/29 20:22:30 - mmengine - INFO - Iter(train) [14350/20000]  base_lr: 3.2058e-05 lr: 3.2058e-05  eta: 2:38:42  time: 1.7437  data_time: 0.0295  memory: 9673  loss: 33.9417  decode.loss_cls: 0.2949  decode.loss_mask: 1.5792  decode.loss_dice: 1.4892  decode.d0.loss_cls: 0.3862  decode.d0.loss_mask: 1.6139  decode.d0.loss_dice: 1.5741  decode.d1.loss_cls: 0.2749  decode.d1.loss_mask: 1.5940  decode.d1.loss_dice: 1.5383  decode.d2.loss_cls: 0.3228  decode.d2.loss_mask: 1.5464  decode.d2.loss_dice: 1.4822  decode.d3.loss_cls: 0.3037  decode.d3.loss_mask: 1.5651  decode.d3.loss_dice: 1.4856  decode.d4.loss_cls: 0.3203  decode.d4.loss_mask: 1.5480  decode.d4.loss_dice: 1.4678  decode.d5.loss_cls: 0.3068  decode.d5.loss_mask: 1.5733  decode.d5.loss_dice: 1.4983  decode.d6.loss_cls: 0.2970  decode.d6.loss_mask: 1.5935  decode.d6.loss_dice: 1.5068  decode.d7.loss_cls: 0.3211  decode.d7.loss_mask: 1.5736  decode.d7.loss_dice: 1.4879  decode.d8.loss_cls: 0.3161  decode.d8.loss_mask: 1.5813  decode.d8.loss_dice: 1.4994
2025/03/29 20:23:58 - mmengine - INFO - Iter(train) [14400/20000]  base_lr: 3.1803e-05 lr: 3.1803e-05  eta: 2:37:19  time: 1.7564  data_time: 0.0401  memory: 9692  loss: 37.3301  decode.loss_cls: 0.2999  decode.loss_mask: 1.7726  decode.loss_dice: 1.6394  decode.d0.loss_cls: 0.3643  decode.d0.loss_mask: 1.7967  decode.d0.loss_dice: 1.7697  decode.d1.loss_cls: 0.3634  decode.d1.loss_mask: 1.7532  decode.d1.loss_dice: 1.6515  decode.d2.loss_cls: 0.3487  decode.d2.loss_mask: 1.7483  decode.d2.loss_dice: 1.6182  decode.d3.loss_cls: 0.2993  decode.d3.loss_mask: 1.7796  decode.d3.loss_dice: 1.6276  decode.d4.loss_cls: 0.3191  decode.d4.loss_mask: 1.7470  decode.d4.loss_dice: 1.5999  decode.d5.loss_cls: 0.3365  decode.d5.loss_mask: 1.7416  decode.d5.loss_dice: 1.6109  decode.d6.loss_cls: 0.2729  decode.d6.loss_mask: 1.7644  decode.d6.loss_dice: 1.6490  decode.d7.loss_cls: 0.3188  decode.d7.loss_mask: 1.7645  decode.d7.loss_dice: 1.6419  decode.d8.loss_cls: 0.3117  decode.d8.loss_mask: 1.7780  decode.d8.loss_dice: 1.6414
2025/03/29 20:25:26 - mmengine - INFO - Iter(train) [14450/20000]  base_lr: 3.1547e-05 lr: 3.1547e-05  eta: 2:35:56  time: 1.7501  data_time: 0.0296  memory: 9688  loss: 34.0373  decode.loss_cls: 0.2309  decode.loss_mask: 1.6079  decode.loss_dice: 1.5238  decode.d0.loss_cls: 0.3245  decode.d0.loss_mask: 1.6501  decode.d0.loss_dice: 1.6365  decode.d1.loss_cls: 0.2205  decode.d1.loss_mask: 1.6333  decode.d1.loss_dice: 1.5552  decode.d2.loss_cls: 0.2803  decode.d2.loss_mask: 1.6003  decode.d2.loss_dice: 1.5324  decode.d3.loss_cls: 0.2342  decode.d3.loss_mask: 1.6127  decode.d3.loss_dice: 1.5354  decode.d4.loss_cls: 0.2291  decode.d4.loss_mask: 1.6152  decode.d4.loss_dice: 1.5417  decode.d5.loss_cls: 0.2781  decode.d5.loss_mask: 1.5857  decode.d5.loss_dice: 1.5300  decode.d6.loss_cls: 0.2294  decode.d6.loss_mask: 1.6004  decode.d6.loss_dice: 1.5158  decode.d7.loss_cls: 0.2634  decode.d7.loss_mask: 1.5989  decode.d7.loss_dice: 1.5271  decode.d8.loss_cls: 0.2493  decode.d8.loss_mask: 1.5983  decode.d8.loss_dice: 1.4971
2025/03/29 20:26:54 - mmengine - INFO - Iter(train) [14500/20000]  base_lr: 3.1291e-05 lr: 3.1291e-05  eta: 2:34:33  time: 1.7496  data_time: 0.0335  memory: 9682  loss: 39.5915  decode.loss_cls: 0.3279  decode.loss_mask: 1.9167  decode.loss_dice: 1.6836  decode.d0.loss_cls: 0.4016  decode.d0.loss_mask: 1.9221  decode.d0.loss_dice: 1.7544  decode.d1.loss_cls: 0.4093  decode.d1.loss_mask: 1.8705  decode.d1.loss_dice: 1.6833  decode.d2.loss_cls: 0.3803  decode.d2.loss_mask: 1.8864  decode.d2.loss_dice: 1.6596  decode.d3.loss_cls: 0.3906  decode.d3.loss_mask: 1.8610  decode.d3.loss_dice: 1.6533  decode.d4.loss_cls: 0.3900  decode.d4.loss_mask: 1.8813  decode.d4.loss_dice: 1.6750  decode.d5.loss_cls: 0.4136  decode.d5.loss_mask: 1.9079  decode.d5.loss_dice: 1.6795  decode.d6.loss_cls: 0.3938  decode.d6.loss_mask: 1.8985  decode.d6.loss_dice: 1.6579  decode.d7.loss_cls: 0.3959  decode.d7.loss_mask: 1.8937  decode.d7.loss_dice: 1.6624  decode.d8.loss_cls: 0.3076  decode.d8.loss_mask: 1.9146  decode.d8.loss_dice: 1.7192
2025/03/29 20:28:20 - mmengine - INFO - Iter(train) [14550/20000]  base_lr: 3.1035e-05 lr: 3.1035e-05  eta: 2:33:10  time: 1.7418  data_time: 0.0305  memory: 9685  loss: 35.5661  decode.loss_cls: 0.3468  decode.loss_mask: 1.6267  decode.loss_dice: 1.5227  decode.d0.loss_cls: 0.4267  decode.d0.loss_mask: 1.7184  decode.d0.loss_dice: 1.6332  decode.d1.loss_cls: 0.3816  decode.d1.loss_mask: 1.6470  decode.d1.loss_dice: 1.5596  decode.d2.loss_cls: 0.3750  decode.d2.loss_mask: 1.6286  decode.d2.loss_dice: 1.5107  decode.d3.loss_cls: 0.3562  decode.d3.loss_mask: 1.6598  decode.d3.loss_dice: 1.5221  decode.d4.loss_cls: 0.3640  decode.d4.loss_mask: 1.6240  decode.d4.loss_dice: 1.5028  decode.d5.loss_cls: 0.3836  decode.d5.loss_mask: 1.6522  decode.d5.loss_dice: 1.5277  decode.d6.loss_cls: 0.3346  decode.d6.loss_mask: 1.6622  decode.d6.loss_dice: 1.5274  decode.d7.loss_cls: 0.3105  decode.d7.loss_mask: 1.6329  decode.d7.loss_dice: 1.5767  decode.d8.loss_cls: 0.3325  decode.d8.loss_mask: 1.6349  decode.d8.loss_dice: 1.5854
2025/03/29 20:29:45 - mmengine - INFO - Iter(train) [14600/20000]  base_lr: 3.0778e-05 lr: 3.0778e-05  eta: 2:31:45  time: 1.6720  data_time: 0.0167  memory: 9680  loss: 36.9264  decode.loss_cls: 0.2604  decode.loss_mask: 1.7633  decode.loss_dice: 1.6169  decode.d0.loss_cls: 0.4266  decode.d0.loss_mask: 1.7695  decode.d0.loss_dice: 1.6568  decode.d1.loss_cls: 0.3166  decode.d1.loss_mask: 1.7651  decode.d1.loss_dice: 1.6301  decode.d2.loss_cls: 0.2893  decode.d2.loss_mask: 1.7645  decode.d2.loss_dice: 1.5984  decode.d3.loss_cls: 0.3037  decode.d3.loss_mask: 1.7752  decode.d3.loss_dice: 1.6296  decode.d4.loss_cls: 0.3334  decode.d4.loss_mask: 1.7802  decode.d4.loss_dice: 1.6074  decode.d5.loss_cls: 0.3497  decode.d5.loss_mask: 1.7205  decode.d5.loss_dice: 1.5809  decode.d6.loss_cls: 0.3178  decode.d6.loss_mask: 1.7378  decode.d6.loss_dice: 1.5930  decode.d7.loss_cls: 0.3476  decode.d7.loss_mask: 1.7380  decode.d7.loss_dice: 1.5875  decode.d8.loss_cls: 0.2907  decode.d8.loss_mask: 1.7570  decode.d8.loss_dice: 1.6190
2025/03/29 20:31:09 - mmengine - INFO - Iter(train) [14650/20000]  base_lr: 3.0522e-05 lr: 3.0522e-05  eta: 2:30:21  time: 1.6738  data_time: 0.0166  memory: 9689  loss: 34.8694  decode.loss_cls: 0.2682  decode.loss_mask: 1.6574  decode.loss_dice: 1.5452  decode.d0.loss_cls: 0.3468  decode.d0.loss_mask: 1.6913  decode.d0.loss_dice: 1.6568  decode.d1.loss_cls: 0.2848  decode.d1.loss_mask: 1.6611  decode.d1.loss_dice: 1.5420  decode.d2.loss_cls: 0.2802  decode.d2.loss_mask: 1.6557  decode.d2.loss_dice: 1.5347  decode.d3.loss_cls: 0.2698  decode.d3.loss_mask: 1.6446  decode.d3.loss_dice: 1.5000  decode.d4.loss_cls: 0.2809  decode.d4.loss_mask: 1.6431  decode.d4.loss_dice: 1.5322  decode.d5.loss_cls: 0.2939  decode.d5.loss_mask: 1.6254  decode.d5.loss_dice: 1.4986  decode.d6.loss_cls: 0.2904  decode.d6.loss_mask: 1.6296  decode.d6.loss_dice: 1.5296  decode.d7.loss_cls: 0.2983  decode.d7.loss_mask: 1.6493  decode.d7.loss_dice: 1.5661  decode.d8.loss_cls: 0.2729  decode.d8.loss_mask: 1.6513  decode.d8.loss_dice: 1.5691
2025/03/29 20:32:32 - mmengine - INFO - Iter(train) [14700/20000]  base_lr: 3.0265e-05 lr: 3.0265e-05  eta: 2:28:56  time: 1.6733  data_time: 0.0176  memory: 9681  loss: 38.5702  decode.loss_cls: 0.2143  decode.loss_mask: 1.9643  decode.loss_dice: 1.6828  decode.d0.loss_cls: 0.3166  decode.d0.loss_mask: 1.9954  decode.d0.loss_dice: 1.7108  decode.d1.loss_cls: 0.2343  decode.d1.loss_mask: 1.9611  decode.d1.loss_dice: 1.6459  decode.d2.loss_cls: 0.2313  decode.d2.loss_mask: 1.9733  decode.d2.loss_dice: 1.6488  decode.d3.loss_cls: 0.2427  decode.d3.loss_mask: 1.9652  decode.d3.loss_dice: 1.6584  decode.d4.loss_cls: 0.2370  decode.d4.loss_mask: 1.9637  decode.d4.loss_dice: 1.6460  decode.d5.loss_cls: 0.2493  decode.d5.loss_mask: 1.9522  decode.d5.loss_dice: 1.6313  decode.d6.loss_cls: 0.2518  decode.d6.loss_mask: 1.9525  decode.d6.loss_dice: 1.6574  decode.d7.loss_cls: 0.2047  decode.d7.loss_mask: 1.9639  decode.d7.loss_dice: 1.6278  decode.d8.loss_cls: 0.1822  decode.d8.loss_mask: 1.9616  decode.d8.loss_dice: 1.6437
2025/03/29 20:33:56 - mmengine - INFO - Iter(train) [14750/20000]  base_lr: 3.0008e-05 lr: 3.0008e-05  eta: 2:27:32  time: 1.6649  data_time: 0.0165  memory: 9684  loss: 37.5063  decode.loss_cls: 0.2466  decode.loss_mask: 1.8183  decode.loss_dice: 1.6362  decode.d0.loss_cls: 0.3339  decode.d0.loss_mask: 1.8520  decode.d0.loss_dice: 1.6933  decode.d1.loss_cls: 0.3105  decode.d1.loss_mask: 1.8194  decode.d1.loss_dice: 1.6230  decode.d2.loss_cls: 0.3291  decode.d2.loss_mask: 1.8176  decode.d2.loss_dice: 1.6280  decode.d3.loss_cls: 0.3253  decode.d3.loss_mask: 1.7918  decode.d3.loss_dice: 1.6125  decode.d4.loss_cls: 0.3265  decode.d4.loss_mask: 1.8134  decode.d4.loss_dice: 1.6073  decode.d5.loss_cls: 0.2831  decode.d5.loss_mask: 1.8290  decode.d5.loss_dice: 1.5892  decode.d6.loss_cls: 0.2802  decode.d6.loss_mask: 1.8353  decode.d6.loss_dice: 1.6052  decode.d7.loss_cls: 0.3176  decode.d7.loss_mask: 1.8256  decode.d7.loss_dice: 1.6102  decode.d8.loss_cls: 0.2740  decode.d8.loss_mask: 1.8193  decode.d8.loss_dice: 1.6528
2025/03/29 20:35:19 - mmengine - INFO - Iter(train) [14800/20000]  base_lr: 2.9751e-05 lr: 2.9751e-05  eta: 2:26:07  time: 1.6693  data_time: 0.0167  memory: 9703  loss: 39.0510  decode.loss_cls: 0.3573  decode.loss_mask: 1.8567  decode.loss_dice: 1.6652  decode.d0.loss_cls: 0.4309  decode.d0.loss_mask: 1.8949  decode.d0.loss_dice: 1.7227  decode.d1.loss_cls: 0.3712  decode.d1.loss_mask: 1.8800  decode.d1.loss_dice: 1.6913  decode.d2.loss_cls: 0.3554  decode.d2.loss_mask: 1.8690  decode.d2.loss_dice: 1.6846  decode.d3.loss_cls: 0.3149  decode.d3.loss_mask: 1.8879  decode.d3.loss_dice: 1.6933  decode.d4.loss_cls: 0.3543  decode.d4.loss_mask: 1.8690  decode.d4.loss_dice: 1.6532  decode.d5.loss_cls: 0.3576  decode.d5.loss_mask: 1.8667  decode.d5.loss_dice: 1.6519  decode.d6.loss_cls: 0.3464  decode.d6.loss_mask: 1.8572  decode.d6.loss_dice: 1.6318  decode.d7.loss_cls: 0.3668  decode.d7.loss_mask: 1.8605  decode.d7.loss_dice: 1.6744  decode.d8.loss_cls: 0.3830  decode.d8.loss_mask: 1.8652  decode.d8.loss_dice: 1.6376
2025/03/29 20:36:42 - mmengine - INFO - Iter(train) [14850/20000]  base_lr: 2.9493e-05 lr: 2.9493e-05  eta: 2:24:42  time: 1.6707  data_time: 0.0165  memory: 9688  loss: 33.9027  decode.loss_cls: 0.1597  decode.loss_mask: 1.6500  decode.loss_dice: 1.5155  decode.d0.loss_cls: 0.3439  decode.d0.loss_mask: 1.6743  decode.d0.loss_dice: 1.5325  decode.d1.loss_cls: 0.2131  decode.d1.loss_mask: 1.6641  decode.d1.loss_dice: 1.5003  decode.d2.loss_cls: 0.1778  decode.d2.loss_mask: 1.6863  decode.d2.loss_dice: 1.4959  decode.d3.loss_cls: 0.1948  decode.d3.loss_mask: 1.6936  decode.d3.loss_dice: 1.5198  decode.d4.loss_cls: 0.1902  decode.d4.loss_mask: 1.6863  decode.d4.loss_dice: 1.5137  decode.d5.loss_cls: 0.2120  decode.d5.loss_mask: 1.6798  decode.d5.loss_dice: 1.5173  decode.d6.loss_cls: 0.2049  decode.d6.loss_mask: 1.6583  decode.d6.loss_dice: 1.4946  decode.d7.loss_cls: 0.2030  decode.d7.loss_mask: 1.6528  decode.d7.loss_dice: 1.4979  decode.d8.loss_cls: 0.1961  decode.d8.loss_mask: 1.6614  decode.d8.loss_dice: 1.5131
2025/03/29 20:38:06 - mmengine - INFO - Iter(train) [14900/20000]  base_lr: 2.9235e-05 lr: 2.9235e-05  eta: 2:23:18  time: 1.6705  data_time: 0.0164  memory: 9688  loss: 36.8112  decode.loss_cls: 0.3230  decode.loss_mask: 1.7389  decode.loss_dice: 1.6140  decode.d0.loss_cls: 0.3435  decode.d0.loss_mask: 1.7832  decode.d0.loss_dice: 1.6909  decode.d1.loss_cls: 0.3158  decode.d1.loss_mask: 1.7465  decode.d1.loss_dice: 1.6161  decode.d2.loss_cls: 0.3365  decode.d2.loss_mask: 1.7281  decode.d2.loss_dice: 1.5984  decode.d3.loss_cls: 0.2965  decode.d3.loss_mask: 1.7587  decode.d3.loss_dice: 1.6194  decode.d4.loss_cls: 0.2952  decode.d4.loss_mask: 1.7679  decode.d4.loss_dice: 1.6090  decode.d5.loss_cls: 0.3018  decode.d5.loss_mask: 1.7667  decode.d5.loss_dice: 1.6031  decode.d6.loss_cls: 0.2997  decode.d6.loss_mask: 1.7530  decode.d6.loss_dice: 1.5909  decode.d7.loss_cls: 0.2660  decode.d7.loss_mask: 1.7530  decode.d7.loss_dice: 1.6392  decode.d8.loss_cls: 0.3254  decode.d8.loss_mask: 1.7213  decode.d8.loss_dice: 1.6094
2025/03/29 20:39:29 - mmengine - INFO - Iter(train) [14950/20000]  base_lr: 2.8977e-05 lr: 2.8977e-05  eta: 2:21:53  time: 1.6727  data_time: 0.0173  memory: 9685  loss: 34.5704  decode.loss_cls: 0.2203  decode.loss_mask: 1.7228  decode.loss_dice: 1.4892  decode.d0.loss_cls: 0.3634  decode.d0.loss_mask: 1.7418  decode.d0.loss_dice: 1.5477  decode.d1.loss_cls: 0.2076  decode.d1.loss_mask: 1.7329  decode.d1.loss_dice: 1.5174  decode.d2.loss_cls: 0.1967  decode.d2.loss_mask: 1.7347  decode.d2.loss_dice: 1.5146  decode.d3.loss_cls: 0.1780  decode.d3.loss_mask: 1.7416  decode.d3.loss_dice: 1.5115  decode.d4.loss_cls: 0.1905  decode.d4.loss_mask: 1.7332  decode.d4.loss_dice: 1.5085  decode.d5.loss_cls: 0.2049  decode.d5.loss_mask: 1.7266  decode.d5.loss_dice: 1.5042  decode.d6.loss_cls: 0.1989  decode.d6.loss_mask: 1.7213  decode.d6.loss_dice: 1.5118  decode.d7.loss_cls: 0.1973  decode.d7.loss_mask: 1.7207  decode.d7.loss_dice: 1.5105  decode.d8.loss_cls: 0.2248  decode.d8.loss_mask: 1.7110  decode.d8.loss_dice: 1.4859
2025/03/29 20:40:52 - mmengine - INFO - Exp name: u2r_20250329_122454
2025/03/29 20:40:52 - mmengine - INFO - Iter(train) [15000/20000]  base_lr: 2.8719e-05 lr: 2.8719e-05  eta: 2:20:28  time: 1.6665  data_time: 0.0180  memory: 9693  loss: 36.4475  decode.loss_cls: 0.4170  decode.loss_mask: 1.6319  decode.loss_dice: 1.5570  decode.d0.loss_cls: 0.5231  decode.d0.loss_mask: 1.6302  decode.d0.loss_dice: 1.6170  decode.d1.loss_cls: 0.4457  decode.d1.loss_mask: 1.6664  decode.d1.loss_dice: 1.5821  decode.d2.loss_cls: 0.3597  decode.d2.loss_mask: 1.6621  decode.d2.loss_dice: 1.5753  decode.d3.loss_cls: 0.3610  decode.d3.loss_mask: 1.6787  decode.d3.loss_dice: 1.5834  decode.d4.loss_cls: 0.3896  decode.d4.loss_mask: 1.6693  decode.d4.loss_dice: 1.5771  decode.d5.loss_cls: 0.4077  decode.d5.loss_mask: 1.6410  decode.d5.loss_dice: 1.5448  decode.d6.loss_cls: 0.3823  decode.d6.loss_mask: 1.6787  decode.d6.loss_dice: 1.5804  decode.d7.loss_cls: 0.4342  decode.d7.loss_mask: 1.6584  decode.d7.loss_dice: 1.5760  decode.d8.loss_cls: 0.4014  decode.d8.loss_mask: 1.6368  decode.d8.loss_dice: 1.5791
2025/03/29 20:42:13 - mmengine - INFO - Iter(train) [15050/20000]  base_lr: 2.8460e-05 lr: 2.8460e-05  eta: 2:19:03  time: 1.6422  data_time: 0.0190  memory: 9692  loss: 35.9844  decode.loss_cls: 0.3853  decode.loss_mask: 1.6027  decode.loss_dice: 1.5866  decode.d0.loss_cls: 0.5054  decode.d0.loss_mask: 1.6405  decode.d0.loss_dice: 1.7084  decode.d1.loss_cls: 0.4146  decode.d1.loss_mask: 1.5822  decode.d1.loss_dice: 1.5719  decode.d2.loss_cls: 0.3504  decode.d2.loss_mask: 1.6012  decode.d2.loss_dice: 1.5824  decode.d3.loss_cls: 0.3819  decode.d3.loss_mask: 1.5748  decode.d3.loss_dice: 1.5826  decode.d4.loss_cls: 0.3677  decode.d4.loss_mask: 1.5942  decode.d4.loss_dice: 1.5953  decode.d5.loss_cls: 0.3638  decode.d5.loss_mask: 1.6299  decode.d5.loss_dice: 1.6286  decode.d6.loss_cls: 0.3728  decode.d6.loss_mask: 1.6087  decode.d6.loss_dice: 1.5788  decode.d7.loss_cls: 0.3585  decode.d7.loss_mask: 1.6140  decode.d7.loss_dice: 1.6166  decode.d8.loss_cls: 0.3987  decode.d8.loss_mask: 1.5994  decode.d8.loss_dice: 1.5868
2025/03/29 20:43:44 - mmengine - INFO - Iter(train) [15100/20000]  base_lr: 2.8201e-05 lr: 2.8201e-05  eta: 2:17:41  time: 1.7830  data_time: 0.0199  memory: 9681  loss: 33.6819  decode.loss_cls: 0.2912  decode.loss_mask: 1.5275  decode.loss_dice: 1.5503  decode.d0.loss_cls: 0.3421  decode.d0.loss_mask: 1.5550  decode.d0.loss_dice: 1.6213  decode.d1.loss_cls: 0.2417  decode.d1.loss_mask: 1.5431  decode.d1.loss_dice: 1.5682  decode.d2.loss_cls: 0.2377  decode.d2.loss_mask: 1.5294  decode.d2.loss_dice: 1.5704  decode.d3.loss_cls: 0.2648  decode.d3.loss_mask: 1.5218  decode.d3.loss_dice: 1.5359  decode.d4.loss_cls: 0.2486  decode.d4.loss_mask: 1.5396  decode.d4.loss_dice: 1.5470  decode.d5.loss_cls: 0.2620  decode.d5.loss_mask: 1.5434  decode.d5.loss_dice: 1.5454  decode.d6.loss_cls: 0.3038  decode.d6.loss_mask: 1.5285  decode.d6.loss_dice: 1.5114  decode.d7.loss_cls: 0.2972  decode.d7.loss_mask: 1.5273  decode.d7.loss_dice: 1.5424  decode.d8.loss_cls: 0.2883  decode.d8.loss_mask: 1.5504  decode.d8.loss_dice: 1.5461
2025/03/29 20:45:16 - mmengine - INFO - Iter(train) [15150/20000]  base_lr: 2.7942e-05 lr: 2.7942e-05  eta: 2:16:19  time: 1.7877  data_time: 0.0200  memory: 9693  loss: 35.6333  decode.loss_cls: 0.3811  decode.loss_mask: 1.6094  decode.loss_dice: 1.5583  decode.d0.loss_cls: 0.4605  decode.d0.loss_mask: 1.6167  decode.d0.loss_dice: 1.6622  decode.d1.loss_cls: 0.4453  decode.d1.loss_mask: 1.6128  decode.d1.loss_dice: 1.5100  decode.d2.loss_cls: 0.3857  decode.d2.loss_mask: 1.6262  decode.d2.loss_dice: 1.5610  decode.d3.loss_cls: 0.3662  decode.d3.loss_mask: 1.6283  decode.d3.loss_dice: 1.5490  decode.d4.loss_cls: 0.4144  decode.d4.loss_mask: 1.5885  decode.d4.loss_dice: 1.5405  decode.d5.loss_cls: 0.3854  decode.d5.loss_mask: 1.5957  decode.d5.loss_dice: 1.5258  decode.d6.loss_cls: 0.4195  decode.d6.loss_mask: 1.6063  decode.d6.loss_dice: 1.5108  decode.d7.loss_cls: 0.4022  decode.d7.loss_mask: 1.5825  decode.d7.loss_dice: 1.5338  decode.d8.loss_cls: 0.4055  decode.d8.loss_mask: 1.5993  decode.d8.loss_dice: 1.5503
2025/03/29 20:46:46 - mmengine - INFO - Iter(train) [15200/20000]  base_lr: 2.7683e-05 lr: 2.7683e-05  eta: 2:14:57  time: 1.7883  data_time: 0.0178  memory: 9691  loss: 36.9758  decode.loss_cls: 0.4526  decode.loss_mask: 1.5735  decode.loss_dice: 1.6501  decode.d0.loss_cls: 0.4995  decode.d0.loss_mask: 1.6001  decode.d0.loss_dice: 1.7349  decode.d1.loss_cls: 0.4151  decode.d1.loss_mask: 1.6048  decode.d1.loss_dice: 1.6553  decode.d2.loss_cls: 0.4568  decode.d2.loss_mask: 1.6037  decode.d2.loss_dice: 1.6736  decode.d3.loss_cls: 0.4636  decode.d3.loss_mask: 1.6043  decode.d3.loss_dice: 1.6297  decode.d4.loss_cls: 0.4516  decode.d4.loss_mask: 1.6153  decode.d4.loss_dice: 1.6473  decode.d5.loss_cls: 0.4520  decode.d5.loss_mask: 1.6112  decode.d5.loss_dice: 1.6478  decode.d6.loss_cls: 0.3980  decode.d6.loss_mask: 1.6102  decode.d6.loss_dice: 1.6343  decode.d7.loss_cls: 0.4226  decode.d7.loss_mask: 1.5840  decode.d7.loss_dice: 1.6294  decode.d8.loss_cls: 0.4361  decode.d8.loss_mask: 1.5889  decode.d8.loss_dice: 1.6294
2025/03/29 20:48:18 - mmengine - INFO - Iter(train) [15250/20000]  base_lr: 2.7423e-05 lr: 2.7423e-05  eta: 2:13:35  time: 1.7802  data_time: 0.0177  memory: 9689  loss: 37.2252  decode.loss_cls: 0.1871  decode.loss_mask: 1.9679  decode.loss_dice: 1.5374  decode.d0.loss_cls: 0.3054  decode.d0.loss_mask: 2.0031  decode.d0.loss_dice: 1.5925  decode.d1.loss_cls: 0.1672  decode.d1.loss_mask: 1.9627  decode.d1.loss_dice: 1.5294  decode.d2.loss_cls: 0.1798  decode.d2.loss_mask: 1.9573  decode.d2.loss_dice: 1.5333  decode.d3.loss_cls: 0.2167  decode.d3.loss_mask: 1.9496  decode.d3.loss_dice: 1.5139  decode.d4.loss_cls: 0.2182  decode.d4.loss_mask: 1.9747  decode.d4.loss_dice: 1.5196  decode.d5.loss_cls: 0.2166  decode.d5.loss_mask: 1.9807  decode.d5.loss_dice: 1.5303  decode.d6.loss_cls: 0.2286  decode.d6.loss_mask: 1.9652  decode.d6.loss_dice: 1.5054  decode.d7.loss_cls: 0.2072  decode.d7.loss_mask: 1.9592  decode.d7.loss_dice: 1.5551  decode.d8.loss_cls: 0.2659  decode.d8.loss_mask: 1.9530  decode.d8.loss_dice: 1.5422
2025/03/29 20:49:46 - mmengine - INFO - Iter(train) [15300/20000]  base_lr: 2.7163e-05 lr: 2.7163e-05  eta: 2:12:11  time: 1.6781  data_time: 0.0170  memory: 9704  loss: 35.5830  decode.loss_cls: 0.2140  decode.loss_mask: 1.7948  decode.loss_dice: 1.5007  decode.d0.loss_cls: 0.3658  decode.d0.loss_mask: 1.8334  decode.d0.loss_dice: 1.5889  decode.d1.loss_cls: 0.2422  decode.d1.loss_mask: 1.8083  decode.d1.loss_dice: 1.4945  decode.d2.loss_cls: 0.2094  decode.d2.loss_mask: 1.8103  decode.d2.loss_dice: 1.5198  decode.d3.loss_cls: 0.2298  decode.d3.loss_mask: 1.7808  decode.d3.loss_dice: 1.4988  decode.d4.loss_cls: 0.1867  decode.d4.loss_mask: 1.8103  decode.d4.loss_dice: 1.5107  decode.d5.loss_cls: 0.1877  decode.d5.loss_mask: 1.8469  decode.d5.loss_dice: 1.5469  decode.d6.loss_cls: 0.2399  decode.d6.loss_mask: 1.7854  decode.d6.loss_dice: 1.4960  decode.d7.loss_cls: 0.2388  decode.d7.loss_mask: 1.8085  decode.d7.loss_dice: 1.4994  decode.d8.loss_cls: 0.2310  decode.d8.loss_mask: 1.7970  decode.d8.loss_dice: 1.5064
2025/03/29 20:51:10 - mmengine - INFO - Iter(train) [15350/20000]  base_lr: 2.6903e-05 lr: 2.6903e-05  eta: 2:10:47  time: 1.6813  data_time: 0.0175  memory: 9696  loss: 35.4842  decode.loss_cls: 0.2725  decode.loss_mask: 1.6359  decode.loss_dice: 1.5929  decode.d0.loss_cls: 0.3774  decode.d0.loss_mask: 1.6266  decode.d0.loss_dice: 1.6357  decode.d1.loss_cls: 0.3872  decode.d1.loss_mask: 1.6251  decode.d1.loss_dice: 1.5627  decode.d2.loss_cls: 0.3689  decode.d2.loss_mask: 1.6156  decode.d2.loss_dice: 1.5737  decode.d3.loss_cls: 0.3594  decode.d3.loss_mask: 1.6273  decode.d3.loss_dice: 1.5850  decode.d4.loss_cls: 0.3757  decode.d4.loss_mask: 1.6037  decode.d4.loss_dice: 1.5704  decode.d5.loss_cls: 0.3455  decode.d5.loss_mask: 1.6328  decode.d5.loss_dice: 1.5599  decode.d6.loss_cls: 0.3309  decode.d6.loss_mask: 1.6009  decode.d6.loss_dice: 1.5668  decode.d7.loss_cls: 0.2833  decode.d7.loss_mask: 1.6425  decode.d7.loss_dice: 1.6011  decode.d8.loss_cls: 0.3135  decode.d8.loss_mask: 1.6290  decode.d8.loss_dice: 1.5823
2025/03/29 20:52:33 - mmengine - INFO - Iter(train) [15400/20000]  base_lr: 2.6642e-05 lr: 2.6642e-05  eta: 2:09:22  time: 1.6766  data_time: 0.0174  memory: 9681  loss: 33.5319  decode.loss_cls: 0.2342  decode.loss_mask: 1.5191  decode.loss_dice: 1.5802  decode.d0.loss_cls: 0.3476  decode.d0.loss_mask: 1.5283  decode.d0.loss_dice: 1.6168  decode.d1.loss_cls: 0.2856  decode.d1.loss_mask: 1.5137  decode.d1.loss_dice: 1.5344  decode.d2.loss_cls: 0.3304  decode.d2.loss_mask: 1.5191  decode.d2.loss_dice: 1.5313  decode.d3.loss_cls: 0.3138  decode.d3.loss_mask: 1.5046  decode.d3.loss_dice: 1.5521  decode.d4.loss_cls: 0.3344  decode.d4.loss_mask: 1.4852  decode.d4.loss_dice: 1.5372  decode.d5.loss_cls: 0.3017  decode.d5.loss_mask: 1.5008  decode.d5.loss_dice: 1.5289  decode.d6.loss_cls: 0.3007  decode.d6.loss_mask: 1.5073  decode.d6.loss_dice: 1.5167  decode.d7.loss_cls: 0.2975  decode.d7.loss_mask: 1.4965  decode.d7.loss_dice: 1.5376  decode.d8.loss_cls: 0.2872  decode.d8.loss_mask: 1.4839  decode.d8.loss_dice: 1.5051
2025/03/29 20:53:56 - mmengine - INFO - Iter(train) [15450/20000]  base_lr: 2.6382e-05 lr: 2.6382e-05  eta: 2:07:57  time: 1.6512  data_time: 0.0172  memory: 9693  loss: 34.0372  decode.loss_cls: 0.4265  decode.loss_mask: 1.5076  decode.loss_dice: 1.4095  decode.d0.loss_cls: 0.5056  decode.d0.loss_mask: 1.5710  decode.d0.loss_dice: 1.5135  decode.d1.loss_cls: 0.3861  decode.d1.loss_mask: 1.5608  decode.d1.loss_dice: 1.4520  decode.d2.loss_cls: 0.3494  decode.d2.loss_mask: 1.5781  decode.d2.loss_dice: 1.4591  decode.d3.loss_cls: 0.4069  decode.d3.loss_mask: 1.5559  decode.d3.loss_dice: 1.4268  decode.d4.loss_cls: 0.4245  decode.d4.loss_mask: 1.5516  decode.d4.loss_dice: 1.4425  decode.d5.loss_cls: 0.4182  decode.d5.loss_mask: 1.5442  decode.d5.loss_dice: 1.4290  decode.d6.loss_cls: 0.4156  decode.d6.loss_mask: 1.5509  decode.d6.loss_dice: 1.4207  decode.d7.loss_cls: 0.3970  decode.d7.loss_mask: 1.5636  decode.d7.loss_dice: 1.4314  decode.d8.loss_cls: 0.4067  decode.d8.loss_mask: 1.5519  decode.d8.loss_dice: 1.3806
2025/03/29 20:55:20 - mmengine - INFO - Iter(train) [15500/20000]  base_lr: 2.6121e-05 lr: 2.6121e-05  eta: 2:06:33  time: 1.7042  data_time: 0.0177  memory: 9681  loss: 40.1243  decode.loss_cls: 0.3406  decode.loss_mask: 1.9009  decode.loss_dice: 1.7531  decode.d0.loss_cls: 0.4718  decode.d0.loss_mask: 1.9299  decode.d0.loss_dice: 1.8288  decode.d1.loss_cls: 0.3914  decode.d1.loss_mask: 1.8829  decode.d1.loss_dice: 1.7591  decode.d2.loss_cls: 0.3913  decode.d2.loss_mask: 1.8841  decode.d2.loss_dice: 1.7214  decode.d3.loss_cls: 0.4105  decode.d3.loss_mask: 1.8846  decode.d3.loss_dice: 1.7087  decode.d4.loss_cls: 0.3526  decode.d4.loss_mask: 1.9090  decode.d4.loss_dice: 1.7279  decode.d5.loss_cls: 0.4213  decode.d5.loss_mask: 1.8630  decode.d5.loss_dice: 1.6855  decode.d6.loss_cls: 0.4027  decode.d6.loss_mask: 1.8610  decode.d6.loss_dice: 1.6903  decode.d7.loss_cls: 0.3672  decode.d7.loss_mask: 1.8931  decode.d7.loss_dice: 1.7306  decode.d8.loss_cls: 0.3551  decode.d8.loss_mask: 1.8898  decode.d8.loss_dice: 1.7163
2025/03/29 20:56:43 - mmengine - INFO - Iter(train) [15550/20000]  base_lr: 2.5859e-05 lr: 2.5859e-05  eta: 2:05:08  time: 1.6720  data_time: 0.0166  memory: 9684  loss: 33.2607  decode.loss_cls: 0.2851  decode.loss_mask: 1.5943  decode.loss_dice: 1.4332  decode.d0.loss_cls: 0.4463  decode.d0.loss_mask: 1.6077  decode.d0.loss_dice: 1.4978  decode.d1.loss_cls: 0.2827  decode.d1.loss_mask: 1.5972  decode.d1.loss_dice: 1.4393  decode.d2.loss_cls: 0.2772  decode.d2.loss_mask: 1.6217  decode.d2.loss_dice: 1.4351  decode.d3.loss_cls: 0.2848  decode.d3.loss_mask: 1.5864  decode.d3.loss_dice: 1.4430  decode.d4.loss_cls: 0.2790  decode.d4.loss_mask: 1.5847  decode.d4.loss_dice: 1.4214  decode.d5.loss_cls: 0.2583  decode.d5.loss_mask: 1.5972  decode.d5.loss_dice: 1.4265  decode.d6.loss_cls: 0.2789  decode.d6.loss_mask: 1.5854  decode.d6.loss_dice: 1.4147  decode.d7.loss_cls: 0.2935  decode.d7.loss_mask: 1.5815  decode.d7.loss_dice: 1.4211  decode.d8.loss_cls: 0.2893  decode.d8.loss_mask: 1.5805  decode.d8.loss_dice: 1.4170
2025/03/29 20:58:06 - mmengine - INFO - Iter(train) [15600/20000]  base_lr: 2.5598e-05 lr: 2.5598e-05  eta: 2:03:43  time: 1.6687  data_time: 0.0164  memory: 9677  loss: 37.5543  decode.loss_cls: 0.3473  decode.loss_mask: 1.7740  decode.loss_dice: 1.6312  decode.d0.loss_cls: 0.3922  decode.d0.loss_mask: 1.8516  decode.d0.loss_dice: 1.6587  decode.d1.loss_cls: 0.3692  decode.d1.loss_mask: 1.8214  decode.d1.loss_dice: 1.6450  decode.d2.loss_cls: 0.3422  decode.d2.loss_mask: 1.7573  decode.d2.loss_dice: 1.6216  decode.d3.loss_cls: 0.3265  decode.d3.loss_mask: 1.7348  decode.d3.loss_dice: 1.6094  decode.d4.loss_cls: 0.3311  decode.d4.loss_mask: 1.7480  decode.d4.loss_dice: 1.6151  decode.d5.loss_cls: 0.3429  decode.d5.loss_mask: 1.7412  decode.d5.loss_dice: 1.6111  decode.d6.loss_cls: 0.3301  decode.d6.loss_mask: 1.8066  decode.d6.loss_dice: 1.6198  decode.d7.loss_cls: 0.3511  decode.d7.loss_mask: 1.7961  decode.d7.loss_dice: 1.6149  decode.d8.loss_cls: 0.3130  decode.d8.loss_mask: 1.8149  decode.d8.loss_dice: 1.6360
2025/03/29 20:59:29 - mmengine - INFO - Iter(train) [15650/20000]  base_lr: 2.5336e-05 lr: 2.5336e-05  eta: 2:02:19  time: 1.6679  data_time: 0.0173  memory: 9685  loss: 37.3935  decode.loss_cls: 0.4017  decode.loss_mask: 1.8079  decode.loss_dice: 1.4806  decode.d0.loss_cls: 0.5031  decode.d0.loss_mask: 1.8281  decode.d0.loss_dice: 1.5544  decode.d1.loss_cls: 0.4251  decode.d1.loss_mask: 1.8255  decode.d1.loss_dice: 1.4985  decode.d2.loss_cls: 0.4217  decode.d2.loss_mask: 1.8261  decode.d2.loss_dice: 1.4995  decode.d3.loss_cls: 0.4128  decode.d3.loss_mask: 1.8280  decode.d3.loss_dice: 1.4910  decode.d4.loss_cls: 0.3667  decode.d4.loss_mask: 1.8296  decode.d4.loss_dice: 1.5065  decode.d5.loss_cls: 0.3854  decode.d5.loss_mask: 1.8139  decode.d5.loss_dice: 1.4828  decode.d6.loss_cls: 0.3870  decode.d6.loss_mask: 1.8325  decode.d6.loss_dice: 1.5036  decode.d7.loss_cls: 0.3569  decode.d7.loss_mask: 1.8520  decode.d7.loss_dice: 1.5248  decode.d8.loss_cls: 0.3755  decode.d8.loss_mask: 1.8515  decode.d8.loss_dice: 1.5207
2025/03/29 21:00:52 - mmengine - INFO - Iter(train) [15700/20000]  base_lr: 2.5073e-05 lr: 2.5073e-05  eta: 2:00:54  time: 1.6706  data_time: 0.0166  memory: 9692  loss: 36.1503  decode.loss_cls: 0.4278  decode.loss_mask: 1.6067  decode.loss_dice: 1.5249  decode.d0.loss_cls: 0.5404  decode.d0.loss_mask: 1.6653  decode.d0.loss_dice: 1.6442  decode.d1.loss_cls: 0.4509  decode.d1.loss_mask: 1.5983  decode.d1.loss_dice: 1.5416  decode.d2.loss_cls: 0.4466  decode.d2.loss_mask: 1.6150  decode.d2.loss_dice: 1.5522  decode.d3.loss_cls: 0.4036  decode.d3.loss_mask: 1.6189  decode.d3.loss_dice: 1.5155  decode.d4.loss_cls: 0.4231  decode.d4.loss_mask: 1.6246  decode.d4.loss_dice: 1.5247  decode.d5.loss_cls: 0.4461  decode.d5.loss_mask: 1.6070  decode.d5.loss_dice: 1.4990  decode.d6.loss_cls: 0.4445  decode.d6.loss_mask: 1.6253  decode.d6.loss_dice: 1.5368  decode.d7.loss_cls: 0.4761  decode.d7.loss_mask: 1.6275  decode.d7.loss_dice: 1.5518  decode.d8.loss_cls: 0.4567  decode.d8.loss_mask: 1.6190  decode.d8.loss_dice: 1.5362
2025/03/29 21:02:16 - mmengine - INFO - Iter(train) [15750/20000]  base_lr: 2.4811e-05 lr: 2.4811e-05  eta: 1:59:29  time: 1.6729  data_time: 0.0163  memory: 9677  loss: 38.8230  decode.loss_cls: 0.2896  decode.loss_mask: 1.9034  decode.loss_dice: 1.6724  decode.d0.loss_cls: 0.4943  decode.d0.loss_mask: 1.8919  decode.d0.loss_dice: 1.7423  decode.d1.loss_cls: 0.2985  decode.d1.loss_mask: 1.9442  decode.d1.loss_dice: 1.6483  decode.d2.loss_cls: 0.2667  decode.d2.loss_mask: 1.9368  decode.d2.loss_dice: 1.6525  decode.d3.loss_cls: 0.2839  decode.d3.loss_mask: 1.9081  decode.d3.loss_dice: 1.6422  decode.d4.loss_cls: 0.2730  decode.d4.loss_mask: 1.9310  decode.d4.loss_dice: 1.6306  decode.d5.loss_cls: 0.2670  decode.d5.loss_mask: 1.9329  decode.d5.loss_dice: 1.6568  decode.d6.loss_cls: 0.3039  decode.d6.loss_mask: 1.9304  decode.d6.loss_dice: 1.6537  decode.d7.loss_cls: 0.2757  decode.d7.loss_mask: 1.9244  decode.d7.loss_dice: 1.6398  decode.d8.loss_cls: 0.2747  decode.d8.loss_mask: 1.9062  decode.d8.loss_dice: 1.6479
2025/03/29 21:03:39 - mmengine - INFO - Iter(train) [15800/20000]  base_lr: 2.4548e-05 lr: 2.4548e-05  eta: 1:58:05  time: 1.6726  data_time: 0.0169  memory: 9750  loss: 37.7942  decode.loss_cls: 0.3314  decode.loss_mask: 1.8597  decode.loss_dice: 1.5298  decode.d0.loss_cls: 0.5293  decode.d0.loss_mask: 1.8693  decode.d0.loss_dice: 1.6062  decode.d1.loss_cls: 0.3509  decode.d1.loss_mask: 1.8804  decode.d1.loss_dice: 1.5829  decode.d2.loss_cls: 0.3449  decode.d2.loss_mask: 1.8554  decode.d2.loss_dice: 1.5224  decode.d3.loss_cls: 0.3375  decode.d3.loss_mask: 1.8341  decode.d3.loss_dice: 1.5369  decode.d4.loss_cls: 0.3852  decode.d4.loss_mask: 1.8335  decode.d4.loss_dice: 1.5296  decode.d5.loss_cls: 0.3773  decode.d5.loss_mask: 1.8397  decode.d5.loss_dice: 1.5466  decode.d6.loss_cls: 0.3247  decode.d6.loss_mask: 1.8654  decode.d6.loss_dice: 1.5606  decode.d7.loss_cls: 0.3589  decode.d7.loss_mask: 1.8812  decode.d7.loss_dice: 1.5463  decode.d8.loss_cls: 0.3639  decode.d8.loss_mask: 1.8689  decode.d8.loss_dice: 1.5410
2025/03/29 21:05:03 - mmengine - INFO - Iter(train) [15850/20000]  base_lr: 2.4285e-05 lr: 2.4285e-05  eta: 1:56:40  time: 1.6705  data_time: 0.0182  memory: 9673  loss: 36.2737  decode.loss_cls: 0.4218  decode.loss_mask: 1.6781  decode.loss_dice: 1.5101  decode.d0.loss_cls: 0.5165  decode.d0.loss_mask: 1.6488  decode.d0.loss_dice: 1.5639  decode.d1.loss_cls: 0.4290  decode.d1.loss_mask: 1.6648  decode.d1.loss_dice: 1.5210  decode.d2.loss_cls: 0.4403  decode.d2.loss_mask: 1.6524  decode.d2.loss_dice: 1.5169  decode.d3.loss_cls: 0.4623  decode.d3.loss_mask: 1.6581  decode.d3.loss_dice: 1.4938  decode.d4.loss_cls: 0.4215  decode.d4.loss_mask: 1.6753  decode.d4.loss_dice: 1.5138  decode.d5.loss_cls: 0.4275  decode.d5.loss_mask: 1.6817  decode.d5.loss_dice: 1.5032  decode.d6.loss_cls: 0.4033  decode.d6.loss_mask: 1.6934  decode.d6.loss_dice: 1.5166  decode.d7.loss_cls: 0.4109  decode.d7.loss_mask: 1.6963  decode.d7.loss_dice: 1.5041  decode.d8.loss_cls: 0.4615  decode.d8.loss_mask: 1.6827  decode.d8.loss_dice: 1.5041
2025/03/29 21:06:27 - mmengine - INFO - Iter(train) [15900/20000]  base_lr: 2.4021e-05 lr: 2.4021e-05  eta: 1:55:16  time: 1.6758  data_time: 0.0164  memory: 9746  loss: 36.7991  decode.loss_cls: 0.3268  decode.loss_mask: 1.7171  decode.loss_dice: 1.6248  decode.d0.loss_cls: 0.4526  decode.d0.loss_mask: 1.7208  decode.d0.loss_dice: 1.6883  decode.d1.loss_cls: 0.3125  decode.d1.loss_mask: 1.7596  decode.d1.loss_dice: 1.6502  decode.d2.loss_cls: 0.3357  decode.d2.loss_mask: 1.7351  decode.d2.loss_dice: 1.5887  decode.d3.loss_cls: 0.3171  decode.d3.loss_mask: 1.7069  decode.d3.loss_dice: 1.5869  decode.d4.loss_cls: 0.3075  decode.d4.loss_mask: 1.7124  decode.d4.loss_dice: 1.6103  decode.d5.loss_cls: 0.3213  decode.d5.loss_mask: 1.7126  decode.d5.loss_dice: 1.6017  decode.d6.loss_cls: 0.3162  decode.d6.loss_mask: 1.7351  decode.d6.loss_dice: 1.5977  decode.d7.loss_cls: 0.3229  decode.d7.loss_mask: 1.7553  decode.d7.loss_dice: 1.6248  decode.d8.loss_cls: 0.3244  decode.d8.loss_mask: 1.7268  decode.d8.loss_dice: 1.6070
2025/03/29 21:07:51 - mmengine - INFO - Iter(train) [15950/20000]  base_lr: 2.3758e-05 lr: 2.3758e-05  eta: 1:53:51  time: 1.6843  data_time: 0.0168  memory: 9746  loss: 38.0050  decode.loss_cls: 0.3905  decode.loss_mask: 1.7383  decode.loss_dice: 1.6350  decode.d0.loss_cls: 0.4935  decode.d0.loss_mask: 1.7473  decode.d0.loss_dice: 1.6916  decode.d1.loss_cls: 0.4513  decode.d1.loss_mask: 1.7305  decode.d1.loss_dice: 1.6663  decode.d2.loss_cls: 0.4282  decode.d2.loss_mask: 1.7409  decode.d2.loss_dice: 1.6089  decode.d3.loss_cls: 0.3925  decode.d3.loss_mask: 1.7486  decode.d3.loss_dice: 1.6529  decode.d4.loss_cls: 0.4363  decode.d4.loss_mask: 1.7216  decode.d4.loss_dice: 1.6235  decode.d5.loss_cls: 0.3936  decode.d5.loss_mask: 1.7344  decode.d5.loss_dice: 1.6601  decode.d6.loss_cls: 0.4306  decode.d6.loss_mask: 1.7247  decode.d6.loss_dice: 1.6260  decode.d7.loss_cls: 0.3907  decode.d7.loss_mask: 1.7434  decode.d7.loss_dice: 1.6503  decode.d8.loss_cls: 0.4392  decode.d8.loss_mask: 1.7218  decode.d8.loss_dice: 1.5926
2025/03/29 21:09:14 - mmengine - INFO - Exp name: u2r_20250329_122454
2025/03/29 21:09:14 - mmengine - INFO - Iter(train) [16000/20000]  base_lr: 2.3493e-05 lr: 2.3493e-05  eta: 1:52:27  time: 1.6704  data_time: 0.0176  memory: 9685  loss: 37.5589  decode.loss_cls: 0.2939  decode.loss_mask: 1.9024  decode.loss_dice: 1.5425  decode.d0.loss_cls: 0.3753  decode.d0.loss_mask: 1.9127  decode.d0.loss_dice: 1.6002  decode.d1.loss_cls: 0.2803  decode.d1.loss_mask: 1.9104  decode.d1.loss_dice: 1.5883  decode.d2.loss_cls: 0.2693  decode.d2.loss_mask: 1.8981  decode.d2.loss_dice: 1.5779  decode.d3.loss_cls: 0.2927  decode.d3.loss_mask: 1.8785  decode.d3.loss_dice: 1.5597  decode.d4.loss_cls: 0.2629  decode.d4.loss_mask: 1.8911  decode.d4.loss_dice: 1.5566  decode.d5.loss_cls: 0.2805  decode.d5.loss_mask: 1.8942  decode.d5.loss_dice: 1.5627  decode.d6.loss_cls: 0.2700  decode.d6.loss_mask: 1.9123  decode.d6.loss_dice: 1.5772  decode.d7.loss_cls: 0.2673  decode.d7.loss_mask: 1.9159  decode.d7.loss_dice: 1.5592  decode.d8.loss_cls: 0.2935  decode.d8.loss_mask: 1.8855  decode.d8.loss_dice: 1.5477
2025/03/29 21:09:14 - mmengine - INFO - Saving checkpoint at 16000 iterations
2025/03/29 21:09:23 - mmengine - INFO - Iter(val) [  50/3968]    eta: 0:10:16  time: 0.1576  data_time: 0.0016  memory: 1849  
2025/03/29 21:09:31 - mmengine - INFO - Iter(val) [ 100/3968]    eta: 0:10:13  time: 0.1496  data_time: 0.0013  memory: 1849  
2025/03/29 21:09:39 - mmengine - INFO - Iter(val) [ 150/3968]    eta: 0:10:03  time: 0.1671  data_time: 0.0013  memory: 1849  
2025/03/29 21:09:47 - mmengine - INFO - Iter(val) [ 200/3968]    eta: 0:09:55  time: 0.1504  data_time: 0.0013  memory: 1849  
2025/03/29 21:09:55 - mmengine - INFO - Iter(val) [ 250/3968]    eta: 0:09:47  time: 0.1474  data_time: 0.0013  memory: 1849  
2025/03/29 21:10:03 - mmengine - INFO - Iter(val) [ 300/3968]    eta: 0:09:39  time: 0.1652  data_time: 0.0014  memory: 1849  
2025/03/29 21:10:11 - mmengine - INFO - Iter(val) [ 350/3968]    eta: 0:09:33  time: 0.1617  data_time: 0.0014  memory: 1849  
2025/03/29 21:10:19 - mmengine - INFO - Iter(val) [ 400/3968]    eta: 0:09:25  time: 0.1671  data_time: 0.0015  memory: 1849  
2025/03/29 21:10:27 - mmengine - INFO - Iter(val) [ 450/3968]    eta: 0:09:18  time: 0.1627  data_time: 0.0014  memory: 1849  
2025/03/29 21:10:35 - mmengine - INFO - Iter(val) [ 500/3968]    eta: 0:09:11  time: 0.1662  data_time: 0.0014  memory: 1849  
2025/03/29 21:10:43 - mmengine - INFO - Iter(val) [ 550/3968]    eta: 0:09:04  time: 0.1623  data_time: 0.0015  memory: 1849  
2025/03/29 21:10:51 - mmengine - INFO - Iter(val) [ 600/3968]    eta: 0:08:55  time: 0.1585  data_time: 0.0015  memory: 1849  
2025/03/29 21:10:59 - mmengine - INFO - Iter(val) [ 650/3968]    eta: 0:08:46  time: 0.1666  data_time: 0.0014  memory: 1849  
2025/03/29 21:11:07 - mmengine - INFO - Iter(val) [ 700/3968]    eta: 0:08:39  time: 0.1591  data_time: 0.0014  memory: 1849  
2025/03/29 21:11:15 - mmengine - INFO - Iter(val) [ 750/3968]    eta: 0:08:31  time: 0.1656  data_time: 0.0013  memory: 1849  
2025/03/29 21:11:23 - mmengine - INFO - Iter(val) [ 800/3968]    eta: 0:08:23  time: 0.1542  data_time: 0.0013  memory: 1849  
2025/03/29 21:11:31 - mmengine - INFO - Iter(val) [ 850/3968]    eta: 0:08:15  time: 0.1559  data_time: 0.0013  memory: 1849  
2025/03/29 21:11:39 - mmengine - INFO - Iter(val) [ 900/3968]    eta: 0:08:07  time: 0.1606  data_time: 0.0013  memory: 1849  
2025/03/29 21:11:47 - mmengine - INFO - Iter(val) [ 950/3968]    eta: 0:07:59  time: 0.1587  data_time: 0.0014  memory: 1849  
2025/03/29 21:11:55 - mmengine - INFO - Iter(val) [1000/3968]    eta: 0:07:51  time: 0.1685  data_time: 0.0015  memory: 1849  
2025/03/29 21:12:03 - mmengine - INFO - Iter(val) [1050/3968]    eta: 0:07:45  time: 0.1702  data_time: 0.0014  memory: 1849  
2025/03/29 21:12:12 - mmengine - INFO - Iter(val) [1100/3968]    eta: 0:07:38  time: 0.1663  data_time: 0.0014  memory: 1849  
2025/03/29 21:12:20 - mmengine - INFO - Iter(val) [1150/3968]    eta: 0:07:30  time: 0.1559  data_time: 0.0014  memory: 1849  
2025/03/29 21:12:28 - mmengine - INFO - Iter(val) [1200/3968]    eta: 0:07:22  time: 0.1577  data_time: 0.0015  memory: 1849  
2025/03/29 21:12:36 - mmengine - INFO - Iter(val) [1250/3968]    eta: 0:07:14  time: 0.1565  data_time: 0.0013  memory: 1849  
2025/03/29 21:12:44 - mmengine - INFO - Iter(val) [1300/3968]    eta: 0:07:06  time: 0.1498  data_time: 0.0013  memory: 1849  
2025/03/29 21:12:52 - mmengine - INFO - Iter(val) [1350/3968]    eta: 0:06:58  time: 0.1640  data_time: 0.0014  memory: 1849  
2025/03/29 21:13:00 - mmengine - INFO - Iter(val) [1400/3968]    eta: 0:06:50  time: 0.1560  data_time: 0.0013  memory: 1849  
2025/03/29 21:13:08 - mmengine - INFO - Iter(val) [1450/3968]    eta: 0:06:42  time: 0.1656  data_time: 0.0013  memory: 1849  
2025/03/29 21:13:16 - mmengine - INFO - Iter(val) [1500/3968]    eta: 0:06:34  time: 0.1478  data_time: 0.0013  memory: 1849  
2025/03/29 21:13:24 - mmengine - INFO - Iter(val) [1550/3968]    eta: 0:06:26  time: 0.1547  data_time: 0.0012  memory: 1849  
2025/03/29 21:13:32 - mmengine - INFO - Iter(val) [1600/3968]    eta: 0:06:18  time: 0.1662  data_time: 0.0014  memory: 1849  
2025/03/29 21:13:39 - mmengine - INFO - Iter(val) [1650/3968]    eta: 0:06:10  time: 0.1523  data_time: 0.0013  memory: 1849  
2025/03/29 21:13:48 - mmengine - INFO - Iter(val) [1700/3968]    eta: 0:06:02  time: 0.1551  data_time: 0.0013  memory: 1849  
2025/03/29 21:13:56 - mmengine - INFO - Iter(val) [1750/3968]    eta: 0:05:54  time: 0.1599  data_time: 0.0013  memory: 1849  
2025/03/29 21:14:04 - mmengine - INFO - Iter(val) [1800/3968]    eta: 0:05:46  time: 0.1535  data_time: 0.0013  memory: 1849  
2025/03/29 21:14:12 - mmengine - INFO - Iter(val) [1850/3968]    eta: 0:05:38  time: 0.1555  data_time: 0.0013  memory: 1849  
2025/03/29 21:14:20 - mmengine - INFO - Iter(val) [1900/3968]    eta: 0:05:30  time: 0.1660  data_time: 0.0013  memory: 1849  
2025/03/29 21:14:28 - mmengine - INFO - Iter(val) [1950/3968]    eta: 0:05:22  time: 0.1547  data_time: 0.0013  memory: 1849  
2025/03/29 21:14:36 - mmengine - INFO - Iter(val) [2000/3968]    eta: 0:05:14  time: 0.1663  data_time: 0.0013  memory: 1849  
2025/03/29 21:14:44 - mmengine - INFO - Iter(val) [2050/3968]    eta: 0:05:06  time: 0.1571  data_time: 0.0013  memory: 1849  
2025/03/29 21:14:52 - mmengine - INFO - Iter(val) [2100/3968]    eta: 0:04:58  time: 0.1552  data_time: 0.0013  memory: 1849  
2025/03/29 21:15:00 - mmengine - INFO - Iter(val) [2150/3968]    eta: 0:04:50  time: 0.1623  data_time: 0.0013  memory: 1849  
2025/03/29 21:15:08 - mmengine - INFO - Iter(val) [2200/3968]    eta: 0:04:42  time: 0.1578  data_time: 0.0013  memory: 1849  
2025/03/29 21:15:16 - mmengine - INFO - Iter(val) [2250/3968]    eta: 0:04:34  time: 0.1674  data_time: 0.0013  memory: 1849  
2025/03/29 21:15:24 - mmengine - INFO - Iter(val) [2300/3968]    eta: 0:04:26  time: 0.1603  data_time: 0.0013  memory: 1849  
2025/03/29 21:15:32 - mmengine - INFO - Iter(val) [2350/3968]    eta: 0:04:18  time: 0.1663  data_time: 0.0013  memory: 1849  
2025/03/29 21:15:40 - mmengine - INFO - Iter(val) [2400/3968]    eta: 0:04:10  time: 0.1528  data_time: 0.0013  memory: 1849  
2025/03/29 21:15:48 - mmengine - INFO - Iter(val) [2450/3968]    eta: 0:04:02  time: 0.1670  data_time: 0.0013  memory: 1849  
2025/03/29 21:15:56 - mmengine - INFO - Iter(val) [2500/3968]    eta: 0:03:54  time: 0.1509  data_time: 0.0013  memory: 1849  
2025/03/29 21:16:04 - mmengine - INFO - Iter(val) [2550/3968]    eta: 0:03:46  time: 0.1558  data_time: 0.0013  memory: 1849  
2025/03/29 21:16:12 - mmengine - INFO - Iter(val) [2600/3968]    eta: 0:03:38  time: 0.1602  data_time: 0.0013  memory: 1849  
2025/03/29 21:16:20 - mmengine - INFO - Iter(val) [2650/3968]    eta: 0:03:30  time: 0.1580  data_time: 0.0013  memory: 1849  
2025/03/29 21:16:28 - mmengine - INFO - Iter(val) [2700/3968]    eta: 0:03:22  time: 0.1656  data_time: 0.0014  memory: 1849  
2025/03/29 21:16:36 - mmengine - INFO - Iter(val) [2750/3968]    eta: 0:03:14  time: 0.1518  data_time: 0.0013  memory: 1849  
2025/03/29 21:16:44 - mmengine - INFO - Iter(val) [2800/3968]    eta: 0:03:06  time: 0.1629  data_time: 0.0013  memory: 1849  
2025/03/29 21:16:51 - mmengine - INFO - Iter(val) [2850/3968]    eta: 0:02:58  time: 0.1558  data_time: 0.0013  memory: 1849  
2025/03/29 21:17:00 - mmengine - INFO - Iter(val) [2900/3968]    eta: 0:02:50  time: 0.1559  data_time: 0.0013  memory: 1849  
2025/03/29 21:17:07 - mmengine - INFO - Iter(val) [2950/3968]    eta: 0:02:42  time: 0.1575  data_time: 0.0013  memory: 1849  
2025/03/29 21:17:16 - mmengine - INFO - Iter(val) [3000/3968]    eta: 0:02:34  time: 0.1856  data_time: 0.0479  memory: 1849  
2025/03/29 21:17:24 - mmengine - INFO - Iter(val) [3050/3968]    eta: 0:02:26  time: 0.1577  data_time: 0.0015  memory: 1849  
2025/03/29 21:17:32 - mmengine - INFO - Iter(val) [3100/3968]    eta: 0:02:18  time: 0.1656  data_time: 0.0013  memory: 1849  
2025/03/29 21:17:40 - mmengine - INFO - Iter(val) [3150/3968]    eta: 0:02:10  time: 0.1553  data_time: 0.0013  memory: 1849  
2025/03/29 21:17:48 - mmengine - INFO - Iter(val) [3200/3968]    eta: 0:02:02  time: 0.1675  data_time: 0.0013  memory: 1849  
2025/03/29 21:17:56 - mmengine - INFO - Iter(val) [3250/3968]    eta: 0:01:54  time: 0.1592  data_time: 0.0013  memory: 1849  
2025/03/29 21:18:04 - mmengine - INFO - Iter(val) [3300/3968]    eta: 0:01:46  time: 0.1655  data_time: 0.0014  memory: 1849  
2025/03/29 21:18:12 - mmengine - INFO - Iter(val) [3350/3968]    eta: 0:01:38  time: 0.1501  data_time: 0.0013  memory: 1849  
2025/03/29 21:18:20 - mmengine - INFO - Iter(val) [3400/3968]    eta: 0:01:30  time: 0.1570  data_time: 0.0013  memory: 1849  
2025/03/29 21:18:28 - mmengine - INFO - Iter(val) [3450/3968]    eta: 0:01:22  time: 0.1598  data_time: 0.0015  memory: 1849  
2025/03/29 21:18:36 - mmengine - INFO - Iter(val) [3500/3968]    eta: 0:01:14  time: 0.1513  data_time: 0.0013  memory: 1849  
2025/03/29 21:18:44 - mmengine - INFO - Iter(val) [3550/3968]    eta: 0:01:06  time: 0.1658  data_time: 0.0013  memory: 1849  
2025/03/29 21:18:52 - mmengine - INFO - Iter(val) [3600/3968]    eta: 0:00:58  time: 0.1586  data_time: 0.0013  memory: 1849  
2025/03/29 21:19:00 - mmengine - INFO - Iter(val) [3650/3968]    eta: 0:00:50  time: 0.1668  data_time: 0.0013  memory: 1849  
2025/03/29 21:19:08 - mmengine - INFO - Iter(val) [3700/3968]    eta: 0:00:42  time: 0.1603  data_time: 0.0013  memory: 1849  
2025/03/29 21:19:16 - mmengine - INFO - Iter(val) [3750/3968]    eta: 0:00:34  time: 0.1634  data_time: 0.0013  memory: 1849  
2025/03/29 21:19:24 - mmengine - INFO - Iter(val) [3800/3968]    eta: 0:00:26  time: 0.1522  data_time: 0.0013  memory: 1849  
2025/03/29 21:19:32 - mmengine - INFO - Iter(val) [3850/3968]    eta: 0:00:18  time: 0.1536  data_time: 0.0013  memory: 1849  
2025/03/29 21:19:40 - mmengine - INFO - Iter(val) [3900/3968]    eta: 0:00:10  time: 0.1523  data_time: 0.0013  memory: 1849  
2025/03/29 21:19:48 - mmengine - INFO - Iter(val) [3950/3968]    eta: 0:00:02  time: 0.1655  data_time: 0.0013  memory: 1849  
2025/03/29 21:19:51 - mmengine - INFO - per class results:
2025/03/29 21:19:51 - mmengine - INFO - 
+--------------+-------+-------+
|    Class     |  IoU  |  Acc  |
+--------------+-------+-------+
|  background  | 59.05 | 89.39 |
|   building   | 62.07 | 71.12 |
|     road     | 44.33 | 47.83 |
|    water     |  63.0 | 68.13 |
|    barren    | 17.04 | 18.69 |
|    forest    | 16.62 | 17.67 |
| agricultural | 56.16 | 64.15 |
+--------------+-------+-------+
2025/03/29 21:19:51 - mmengine - INFO - Iter(val) [3968/3968]    aAcc: 71.2700  mIoU: 45.4700  mAcc: 53.8500  data_time: 0.0016  time: 0.1599
2025/03/29 21:21:14 - mmengine - INFO - Iter(train) [16050/20000]  base_lr: 2.3229e-05 lr: 2.3229e-05  eta: 1:51:02  time: 1.6183  data_time: 0.0162  memory: 9688  loss: 34.4604  decode.loss_cls: 0.2595  decode.loss_mask: 1.6809  decode.loss_dice: 1.4481  decode.d0.loss_cls: 0.4098  decode.d0.loss_mask: 1.6909  decode.d0.loss_dice: 1.5036  decode.d1.loss_cls: 0.2425  decode.d1.loss_mask: 1.7396  decode.d1.loss_dice: 1.4729  decode.d2.loss_cls: 0.2224  decode.d2.loss_mask: 1.7443  decode.d2.loss_dice: 1.4708  decode.d3.loss_cls: 0.2208  decode.d3.loss_mask: 1.7352  decode.d3.loss_dice: 1.4553  decode.d4.loss_cls: 0.2329  decode.d4.loss_mask: 1.7501  decode.d4.loss_dice: 1.4751  decode.d5.loss_cls: 0.2366  decode.d5.loss_mask: 1.7367  decode.d5.loss_dice: 1.4752  decode.d6.loss_cls: 0.2247  decode.d6.loss_mask: 1.7234  decode.d6.loss_dice: 1.4690  decode.d7.loss_cls: 0.2564  decode.d7.loss_mask: 1.7098  decode.d7.loss_dice: 1.4746  decode.d8.loss_cls: 0.2054  decode.d8.loss_mask: 1.7342  decode.d8.loss_dice: 1.4597
2025/03/29 21:22:37 - mmengine - INFO - Iter(train) [16100/20000]  base_lr: 2.2964e-05 lr: 2.2964e-05  eta: 1:49:37  time: 1.6672  data_time: 0.0160  memory: 9689  loss: 37.6884  decode.loss_cls: 0.4144  decode.loss_mask: 1.7068  decode.loss_dice: 1.6401  decode.d0.loss_cls: 0.5223  decode.d0.loss_mask: 1.6616  decode.d0.loss_dice: 1.6868  decode.d1.loss_cls: 0.4681  decode.d1.loss_mask: 1.6928  decode.d1.loss_dice: 1.6500  decode.d2.loss_cls: 0.4104  decode.d2.loss_mask: 1.6942  decode.d2.loss_dice: 1.6343  decode.d3.loss_cls: 0.4224  decode.d3.loss_mask: 1.6821  decode.d3.loss_dice: 1.6065  decode.d4.loss_cls: 0.3838  decode.d4.loss_mask: 1.7105  decode.d4.loss_dice: 1.6393  decode.d5.loss_cls: 0.3748  decode.d5.loss_mask: 1.7374  decode.d5.loss_dice: 1.6416  decode.d6.loss_cls: 0.3938  decode.d6.loss_mask: 1.7127  decode.d6.loss_dice: 1.6523  decode.d7.loss_cls: 0.4780  decode.d7.loss_mask: 1.6749  decode.d7.loss_dice: 1.6119  decode.d8.loss_cls: 0.4594  decode.d8.loss_mask: 1.6977  decode.d8.loss_dice: 1.6276
2025/03/29 21:24:01 - mmengine - INFO - Iter(train) [16150/20000]  base_lr: 2.2699e-05 lr: 2.2699e-05  eta: 1:48:13  time: 1.6733  data_time: 0.0163  memory: 9688  loss: 36.7617  decode.loss_cls: 0.2820  decode.loss_mask: 1.8496  decode.loss_dice: 1.5396  decode.d0.loss_cls: 0.3960  decode.d0.loss_mask: 1.8226  decode.d0.loss_dice: 1.5749  decode.d1.loss_cls: 0.2753  decode.d1.loss_mask: 1.8247  decode.d1.loss_dice: 1.5551  decode.d2.loss_cls: 0.2699  decode.d2.loss_mask: 1.8347  decode.d2.loss_dice: 1.5531  decode.d3.loss_cls: 0.2487  decode.d3.loss_mask: 1.8626  decode.d3.loss_dice: 1.5670  decode.d4.loss_cls: 0.2645  decode.d4.loss_mask: 1.8459  decode.d4.loss_dice: 1.5594  decode.d5.loss_cls: 0.2753  decode.d5.loss_mask: 1.8311  decode.d5.loss_dice: 1.5343  decode.d6.loss_cls: 0.2124  decode.d6.loss_mask: 1.8750  decode.d6.loss_dice: 1.5529  decode.d7.loss_cls: 0.2136  decode.d7.loss_mask: 1.8811  decode.d7.loss_dice: 1.5861  decode.d8.loss_cls: 0.2605  decode.d8.loss_mask: 1.8565  decode.d8.loss_dice: 1.5569
2025/03/29 21:25:24 - mmengine - INFO - Iter(train) [16200/20000]  base_lr: 2.2434e-05 lr: 2.2434e-05  eta: 1:46:48  time: 1.6661  data_time: 0.0160  memory: 9694  loss: 32.8810  decode.loss_cls: 0.3071  decode.loss_mask: 1.5544  decode.loss_dice: 1.3857  decode.d0.loss_cls: 0.3928  decode.d0.loss_mask: 1.5567  decode.d0.loss_dice: 1.4934  decode.d1.loss_cls: 0.2854  decode.d1.loss_mask: 1.5795  decode.d1.loss_dice: 1.4554  decode.d2.loss_cls: 0.2850  decode.d2.loss_mask: 1.5696  decode.d2.loss_dice: 1.4423  decode.d3.loss_cls: 0.2817  decode.d3.loss_mask: 1.5664  decode.d3.loss_dice: 1.4205  decode.d4.loss_cls: 0.2900  decode.d4.loss_mask: 1.5614  decode.d4.loss_dice: 1.4260  decode.d5.loss_cls: 0.3190  decode.d5.loss_mask: 1.5350  decode.d5.loss_dice: 1.3963  decode.d6.loss_cls: 0.2888  decode.d6.loss_mask: 1.5498  decode.d6.loss_dice: 1.4150  decode.d7.loss_cls: 0.3166  decode.d7.loss_mask: 1.5475  decode.d7.loss_dice: 1.4108  decode.d8.loss_cls: 0.3211  decode.d8.loss_mask: 1.5372  decode.d8.loss_dice: 1.3909
2025/03/29 21:26:47 - mmengine - INFO - Iter(train) [16250/20000]  base_lr: 2.2168e-05 lr: 2.2168e-05  eta: 1:45:24  time: 1.6680  data_time: 0.0161  memory: 9680  loss: 38.6357  decode.loss_cls: 0.4189  decode.loss_mask: 1.7782  decode.loss_dice: 1.6147  decode.d0.loss_cls: 0.4812  decode.d0.loss_mask: 1.8175  decode.d0.loss_dice: 1.7112  decode.d1.loss_cls: 0.4338  decode.d1.loss_mask: 1.7931  decode.d1.loss_dice: 1.6407  decode.d2.loss_cls: 0.4666  decode.d2.loss_mask: 1.7706  decode.d2.loss_dice: 1.6261  decode.d3.loss_cls: 0.4690  decode.d3.loss_mask: 1.8071  decode.d3.loss_dice: 1.6060  decode.d4.loss_cls: 0.4132  decode.d4.loss_mask: 1.8090  decode.d4.loss_dice: 1.6267  decode.d5.loss_cls: 0.4231  decode.d5.loss_mask: 1.7960  decode.d5.loss_dice: 1.6133  decode.d6.loss_cls: 0.4003  decode.d6.loss_mask: 1.7842  decode.d6.loss_dice: 1.6245  decode.d7.loss_cls: 0.4690  decode.d7.loss_mask: 1.7576  decode.d7.loss_dice: 1.6210  decode.d8.loss_cls: 0.4707  decode.d8.loss_mask: 1.7645  decode.d8.loss_dice: 1.6277
2025/03/29 21:28:11 - mmengine - INFO - Iter(train) [16300/20000]  base_lr: 2.1902e-05 lr: 2.1902e-05  eta: 1:43:59  time: 1.6674  data_time: 0.0159  memory: 9681  loss: 36.9688  decode.loss_cls: 0.2641  decode.loss_mask: 1.7926  decode.loss_dice: 1.5802  decode.d0.loss_cls: 0.3037  decode.d0.loss_mask: 1.8044  decode.d0.loss_dice: 1.6780  decode.d1.loss_cls: 0.2930  decode.d1.loss_mask: 1.7997  decode.d1.loss_dice: 1.6238  decode.d2.loss_cls: 0.2581  decode.d2.loss_mask: 1.7997  decode.d2.loss_dice: 1.6247  decode.d3.loss_cls: 0.3083  decode.d3.loss_mask: 1.7961  decode.d3.loss_dice: 1.6217  decode.d4.loss_cls: 0.3014  decode.d4.loss_mask: 1.7864  decode.d4.loss_dice: 1.5963  decode.d5.loss_cls: 0.2655  decode.d5.loss_mask: 1.8279  decode.d5.loss_dice: 1.5985  decode.d6.loss_cls: 0.2944  decode.d6.loss_mask: 1.7994  decode.d6.loss_dice: 1.6228  decode.d7.loss_cls: 0.2714  decode.d7.loss_mask: 1.8043  decode.d7.loss_dice: 1.5988  decode.d8.loss_cls: 0.2670  decode.d8.loss_mask: 1.8015  decode.d8.loss_dice: 1.5853
2025/03/29 21:29:35 - mmengine - INFO - Iter(train) [16350/20000]  base_lr: 2.1635e-05 lr: 2.1635e-05  eta: 1:42:35  time: 1.6863  data_time: 0.0164  memory: 9693  loss: 35.3715  decode.loss_cls: 0.2361  decode.loss_mask: 1.7100  decode.loss_dice: 1.5583  decode.d0.loss_cls: 0.3405  decode.d0.loss_mask: 1.7612  decode.d0.loss_dice: 1.6048  decode.d1.loss_cls: 0.2480  decode.d1.loss_mask: 1.7406  decode.d1.loss_dice: 1.5808  decode.d2.loss_cls: 0.2261  decode.d2.loss_mask: 1.7392  decode.d2.loss_dice: 1.5721  decode.d3.loss_cls: 0.2390  decode.d3.loss_mask: 1.7084  decode.d3.loss_dice: 1.5344  decode.d4.loss_cls: 0.2098  decode.d4.loss_mask: 1.7338  decode.d4.loss_dice: 1.5587  decode.d5.loss_cls: 0.2366  decode.d5.loss_mask: 1.7251  decode.d5.loss_dice: 1.5719  decode.d6.loss_cls: 0.2588  decode.d6.loss_mask: 1.6935  decode.d6.loss_dice: 1.5367  decode.d7.loss_cls: 0.2477  decode.d7.loss_mask: 1.7283  decode.d7.loss_dice: 1.5388  decode.d8.loss_cls: 0.2453  decode.d8.loss_mask: 1.7236  decode.d8.loss_dice: 1.5633
2025/03/29 21:30:58 - mmengine - INFO - Iter(train) [16400/20000]  base_lr: 2.1368e-05 lr: 2.1368e-05  eta: 1:41:10  time: 1.6712  data_time: 0.0167  memory: 9673  loss: 33.1544  decode.loss_cls: 0.3372  decode.loss_mask: 1.5120  decode.loss_dice: 1.4874  decode.d0.loss_cls: 0.4043  decode.d0.loss_mask: 1.5178  decode.d0.loss_dice: 1.5540  decode.d1.loss_cls: 0.2931  decode.d1.loss_mask: 1.5139  decode.d1.loss_dice: 1.5142  decode.d2.loss_cls: 0.3046  decode.d2.loss_mask: 1.4995  decode.d2.loss_dice: 1.4650  decode.d3.loss_cls: 0.3365  decode.d3.loss_mask: 1.4929  decode.d3.loss_dice: 1.4687  decode.d4.loss_cls: 0.2953  decode.d4.loss_mask: 1.5194  decode.d4.loss_dice: 1.4385  decode.d5.loss_cls: 0.2955  decode.d5.loss_mask: 1.5147  decode.d5.loss_dice: 1.4634  decode.d6.loss_cls: 0.3076  decode.d6.loss_mask: 1.5216  decode.d6.loss_dice: 1.4478  decode.d7.loss_cls: 0.3161  decode.d7.loss_mask: 1.5312  decode.d7.loss_dice: 1.4871  decode.d8.loss_cls: 0.3338  decode.d8.loss_mask: 1.5159  decode.d8.loss_dice: 1.4654
2025/03/29 21:32:22 - mmengine - INFO - Iter(train) [16450/20000]  base_lr: 2.1101e-05 lr: 2.1101e-05  eta: 1:39:46  time: 1.6826  data_time: 0.0160  memory: 9685  loss: 36.2510  decode.loss_cls: 0.2458  decode.loss_mask: 1.7059  decode.loss_dice: 1.6553  decode.d0.loss_cls: 0.4214  decode.d0.loss_mask: 1.6834  decode.d0.loss_dice: 1.7305  decode.d1.loss_cls: 0.2803  decode.d1.loss_mask: 1.7038  decode.d1.loss_dice: 1.6766  decode.d2.loss_cls: 0.2523  decode.d2.loss_mask: 1.7051  decode.d2.loss_dice: 1.6452  decode.d3.loss_cls: 0.2981  decode.d3.loss_mask: 1.6519  decode.d3.loss_dice: 1.5997  decode.d4.loss_cls: 0.2991  decode.d4.loss_mask: 1.6680  decode.d4.loss_dice: 1.6298  decode.d5.loss_cls: 0.2925  decode.d5.loss_mask: 1.6950  decode.d5.loss_dice: 1.6177  decode.d6.loss_cls: 0.2986  decode.d6.loss_mask: 1.6810  decode.d6.loss_dice: 1.6297  decode.d7.loss_cls: 0.2986  decode.d7.loss_mask: 1.6780  decode.d7.loss_dice: 1.6426  decode.d8.loss_cls: 0.2986  decode.d8.loss_mask: 1.6557  decode.d8.loss_dice: 1.6107
2025/03/29 21:33:45 - mmengine - INFO - Iter(train) [16500/20000]  base_lr: 2.0833e-05 lr: 2.0833e-05  eta: 1:38:21  time: 1.6699  data_time: 0.0158  memory: 9693  loss: 37.1469  decode.loss_cls: 0.3332  decode.loss_mask: 1.7756  decode.loss_dice: 1.5819  decode.d0.loss_cls: 0.4281  decode.d0.loss_mask: 1.8029  decode.d0.loss_dice: 1.6831  decode.d1.loss_cls: 0.3512  decode.d1.loss_mask: 1.7789  decode.d1.loss_dice: 1.5741  decode.d2.loss_cls: 0.3334  decode.d2.loss_mask: 1.7888  decode.d2.loss_dice: 1.5379  decode.d3.loss_cls: 0.3430  decode.d3.loss_mask: 1.7897  decode.d3.loss_dice: 1.5678  decode.d4.loss_cls: 0.3353  decode.d4.loss_mask: 1.7850  decode.d4.loss_dice: 1.5550  decode.d5.loss_cls: 0.2699  decode.d5.loss_mask: 1.8138  decode.d5.loss_dice: 1.6024  decode.d6.loss_cls: 0.3367  decode.d6.loss_mask: 1.7693  decode.d6.loss_dice: 1.5878  decode.d7.loss_cls: 0.3211  decode.d7.loss_mask: 1.8019  decode.d7.loss_dice: 1.5862  decode.d8.loss_cls: 0.3072  decode.d8.loss_mask: 1.8051  decode.d8.loss_dice: 1.6005
2025/03/29 21:35:09 - mmengine - INFO - Iter(train) [16550/20000]  base_lr: 2.0565e-05 lr: 2.0565e-05  eta: 1:36:57  time: 1.6686  data_time: 0.0165  memory: 9685  loss: 34.4375  decode.loss_cls: 0.2286  decode.loss_mask: 1.6867  decode.loss_dice: 1.4842  decode.d0.loss_cls: 0.3853  decode.d0.loss_mask: 1.7020  decode.d0.loss_dice: 1.5928  decode.d1.loss_cls: 0.2928  decode.d1.loss_mask: 1.6553  decode.d1.loss_dice: 1.4766  decode.d2.loss_cls: 0.2528  decode.d2.loss_mask: 1.6697  decode.d2.loss_dice: 1.4882  decode.d3.loss_cls: 0.2641  decode.d3.loss_mask: 1.6562  decode.d3.loss_dice: 1.4802  decode.d4.loss_cls: 0.2505  decode.d4.loss_mask: 1.6836  decode.d4.loss_dice: 1.4922  decode.d5.loss_cls: 0.2383  decode.d5.loss_mask: 1.6820  decode.d5.loss_dice: 1.4867  decode.d6.loss_cls: 0.2418  decode.d6.loss_mask: 1.6957  decode.d6.loss_dice: 1.4862  decode.d7.loss_cls: 0.2530  decode.d7.loss_mask: 1.6939  decode.d7.loss_dice: 1.4989  decode.d8.loss_cls: 0.2317  decode.d8.loss_mask: 1.6974  decode.d8.loss_dice: 1.4902
2025/03/29 21:36:32 - mmengine - INFO - Iter(train) [16600/20000]  base_lr: 2.0297e-05 lr: 2.0297e-05  eta: 1:35:32  time: 1.6716  data_time: 0.0158  memory: 9680  loss: 34.5707  decode.loss_cls: 0.3323  decode.loss_mask: 1.5874  decode.loss_dice: 1.4869  decode.d0.loss_cls: 0.4596  decode.d0.loss_mask: 1.6031  decode.d0.loss_dice: 1.5817  decode.d1.loss_cls: 0.3732  decode.d1.loss_mask: 1.5977  decode.d1.loss_dice: 1.5306  decode.d2.loss_cls: 0.3555  decode.d2.loss_mask: 1.5699  decode.d2.loss_dice: 1.4842  decode.d3.loss_cls: 0.3382  decode.d3.loss_mask: 1.5933  decode.d3.loss_dice: 1.4664  decode.d4.loss_cls: 0.3710  decode.d4.loss_mask: 1.5771  decode.d4.loss_dice: 1.4654  decode.d5.loss_cls: 0.3644  decode.d5.loss_mask: 1.6062  decode.d5.loss_dice: 1.4856  decode.d6.loss_cls: 0.3379  decode.d6.loss_mask: 1.6028  decode.d6.loss_dice: 1.4764  decode.d7.loss_cls: 0.3319  decode.d7.loss_mask: 1.6005  decode.d7.loss_dice: 1.5204  decode.d8.loss_cls: 0.3774  decode.d8.loss_mask: 1.5954  decode.d8.loss_dice: 1.4982
2025/03/29 21:37:56 - mmengine - INFO - Iter(train) [16650/20000]  base_lr: 2.0028e-05 lr: 2.0028e-05  eta: 1:34:08  time: 1.6832  data_time: 0.0160  memory: 9686  loss: 36.8284  decode.loss_cls: 0.3185  decode.loss_mask: 1.7186  decode.loss_dice: 1.5771  decode.d0.loss_cls: 0.4517  decode.d0.loss_mask: 1.7798  decode.d0.loss_dice: 1.6498  decode.d1.loss_cls: 0.3591  decode.d1.loss_mask: 1.7330  decode.d1.loss_dice: 1.6090  decode.d2.loss_cls: 0.3590  decode.d2.loss_mask: 1.7167  decode.d2.loss_dice: 1.5974  decode.d3.loss_cls: 0.3653  decode.d3.loss_mask: 1.7101  decode.d3.loss_dice: 1.5826  decode.d4.loss_cls: 0.3738  decode.d4.loss_mask: 1.7205  decode.d4.loss_dice: 1.5787  decode.d5.loss_cls: 0.3369  decode.d5.loss_mask: 1.7284  decode.d5.loss_dice: 1.5831  decode.d6.loss_cls: 0.3416  decode.d6.loss_mask: 1.7196  decode.d6.loss_dice: 1.5865  decode.d7.loss_cls: 0.3770  decode.d7.loss_mask: 1.6901  decode.d7.loss_dice: 1.5927  decode.d8.loss_cls: 0.3459  decode.d8.loss_mask: 1.7437  decode.d8.loss_dice: 1.5822
2025/03/29 21:39:20 - mmengine - INFO - Iter(train) [16700/20000]  base_lr: 1.9759e-05 lr: 1.9759e-05  eta: 1:32:44  time: 1.6682  data_time: 0.0157  memory: 9687  loss: 36.6052  decode.loss_cls: 0.4311  decode.loss_mask: 1.6376  decode.loss_dice: 1.5747  decode.d0.loss_cls: 0.5918  decode.d0.loss_mask: 1.5787  decode.d0.loss_dice: 1.6727  decode.d1.loss_cls: 0.4741  decode.d1.loss_mask: 1.6034  decode.d1.loss_dice: 1.5673  decode.d2.loss_cls: 0.4879  decode.d2.loss_mask: 1.5944  decode.d2.loss_dice: 1.5465  decode.d3.loss_cls: 0.4634  decode.d3.loss_mask: 1.6080  decode.d3.loss_dice: 1.5593  decode.d4.loss_cls: 0.4425  decode.d4.loss_mask: 1.6139  decode.d4.loss_dice: 1.5727  decode.d5.loss_cls: 0.5042  decode.d5.loss_mask: 1.6056  decode.d5.loss_dice: 1.5516  decode.d6.loss_cls: 0.5035  decode.d6.loss_mask: 1.6039  decode.d6.loss_dice: 1.5484  decode.d7.loss_cls: 0.4547  decode.d7.loss_mask: 1.6141  decode.d7.loss_dice: 1.5743  decode.d8.loss_cls: 0.5087  decode.d8.loss_mask: 1.5796  decode.d8.loss_dice: 1.5366
2025/03/29 21:40:43 - mmengine - INFO - Iter(train) [16750/20000]  base_lr: 1.9489e-05 lr: 1.9489e-05  eta: 1:31:19  time: 1.6700  data_time: 0.0160  memory: 9751  loss: 34.0276  decode.loss_cls: 0.3250  decode.loss_mask: 1.5347  decode.loss_dice: 1.5104  decode.d0.loss_cls: 0.4346  decode.d0.loss_mask: 1.5550  decode.d0.loss_dice: 1.5978  decode.d1.loss_cls: 0.4025  decode.d1.loss_mask: 1.5144  decode.d1.loss_dice: 1.4731  decode.d2.loss_cls: 0.3421  decode.d2.loss_mask: 1.5344  decode.d2.loss_dice: 1.4876  decode.d3.loss_cls: 0.3409  decode.d3.loss_mask: 1.5422  decode.d3.loss_dice: 1.4935  decode.d4.loss_cls: 0.3606  decode.d4.loss_mask: 1.5319  decode.d4.loss_dice: 1.4940  decode.d5.loss_cls: 0.3695  decode.d5.loss_mask: 1.5221  decode.d5.loss_dice: 1.4706  decode.d6.loss_cls: 0.3444  decode.d6.loss_mask: 1.5160  decode.d6.loss_dice: 1.4797  decode.d7.loss_cls: 0.3870  decode.d7.loss_mask: 1.5368  decode.d7.loss_dice: 1.4771  decode.d8.loss_cls: 0.4022  decode.d8.loss_mask: 1.5458  decode.d8.loss_dice: 1.5017
2025/03/29 21:42:07 - mmengine - INFO - Iter(train) [16800/20000]  base_lr: 1.9219e-05 lr: 1.9219e-05  eta: 1:29:55  time: 1.6706  data_time: 0.0155  memory: 9678  loss: 32.0412  decode.loss_cls: 0.3728  decode.loss_mask: 1.3877  decode.loss_dice: 1.3721  decode.d0.loss_cls: 0.6003  decode.d0.loss_mask: 1.3850  decode.d0.loss_dice: 1.5158  decode.d1.loss_cls: 0.4369  decode.d1.loss_mask: 1.3764  decode.d1.loss_dice: 1.3979  decode.d2.loss_cls: 0.3741  decode.d2.loss_mask: 1.3885  decode.d2.loss_dice: 1.4193  decode.d3.loss_cls: 0.3756  decode.d3.loss_mask: 1.3827  decode.d3.loss_dice: 1.4079  decode.d4.loss_cls: 0.3891  decode.d4.loss_mask: 1.3846  decode.d4.loss_dice: 1.3853  decode.d5.loss_cls: 0.3833  decode.d5.loss_mask: 1.3914  decode.d5.loss_dice: 1.4019  decode.d6.loss_cls: 0.3627  decode.d6.loss_mask: 1.4029  decode.d6.loss_dice: 1.4197  decode.d7.loss_cls: 0.3901  decode.d7.loss_mask: 1.3906  decode.d7.loss_dice: 1.4033  decode.d8.loss_cls: 0.3854  decode.d8.loss_mask: 1.3871  decode.d8.loss_dice: 1.3709
2025/03/29 21:43:31 - mmengine - INFO - Iter(train) [16850/20000]  base_lr: 1.8948e-05 lr: 1.8948e-05  eta: 1:28:30  time: 1.6680  data_time: 0.0159  memory: 9694  loss: 33.0246  decode.loss_cls: 0.1920  decode.loss_mask: 1.6793  decode.loss_dice: 1.4354  decode.d0.loss_cls: 0.3174  decode.d0.loss_mask: 1.6687  decode.d0.loss_dice: 1.4458  decode.d1.loss_cls: 0.1793  decode.d1.loss_mask: 1.6775  decode.d1.loss_dice: 1.4340  decode.d2.loss_cls: 0.2092  decode.d2.loss_mask: 1.6680  decode.d2.loss_dice: 1.4093  decode.d3.loss_cls: 0.1855  decode.d3.loss_mask: 1.6713  decode.d3.loss_dice: 1.4231  decode.d4.loss_cls: 0.1851  decode.d4.loss_mask: 1.6675  decode.d4.loss_dice: 1.4151  decode.d5.loss_cls: 0.1962  decode.d5.loss_mask: 1.6562  decode.d5.loss_dice: 1.4129  decode.d6.loss_cls: 0.1972  decode.d6.loss_mask: 1.6731  decode.d6.loss_dice: 1.4223  decode.d7.loss_cls: 0.1889  decode.d7.loss_mask: 1.6746  decode.d7.loss_dice: 1.4310  decode.d8.loss_cls: 0.1653  decode.d8.loss_mask: 1.7051  decode.d8.loss_dice: 1.4385
2025/03/29 21:44:54 - mmengine - INFO - Iter(train) [16900/20000]  base_lr: 1.8677e-05 lr: 1.8677e-05  eta: 1:27:06  time: 1.6653  data_time: 0.0157  memory: 9746  loss: 34.6412  decode.loss_cls: 0.3308  decode.loss_mask: 1.5848  decode.loss_dice: 1.5047  decode.d0.loss_cls: 0.3680  decode.d0.loss_mask: 1.6213  decode.d0.loss_dice: 1.6008  decode.d1.loss_cls: 0.3853  decode.d1.loss_mask: 1.5872  decode.d1.loss_dice: 1.4919  decode.d2.loss_cls: 0.3503  decode.d2.loss_mask: 1.5887  decode.d2.loss_dice: 1.5013  decode.d3.loss_cls: 0.3831  decode.d3.loss_mask: 1.5823  decode.d3.loss_dice: 1.4442  decode.d4.loss_cls: 0.4015  decode.d4.loss_mask: 1.5886  decode.d4.loss_dice: 1.4847  decode.d5.loss_cls: 0.4147  decode.d5.loss_mask: 1.5856  decode.d5.loss_dice: 1.4625  decode.d6.loss_cls: 0.3483  decode.d6.loss_mask: 1.5899  decode.d6.loss_dice: 1.4916  decode.d7.loss_cls: 0.3623  decode.d7.loss_mask: 1.5931  decode.d7.loss_dice: 1.5085  decode.d8.loss_cls: 0.3805  decode.d8.loss_mask: 1.5926  decode.d8.loss_dice: 1.5119
2025/03/29 21:46:19 - mmengine - INFO - Iter(train) [16950/20000]  base_lr: 1.8406e-05 lr: 1.8406e-05  eta: 1:25:41  time: 1.7952  data_time: 0.0158  memory: 9677  loss: 36.4939  decode.loss_cls: 0.3630  decode.loss_mask: 1.7248  decode.loss_dice: 1.4976  decode.d0.loss_cls: 0.5044  decode.d0.loss_mask: 1.7300  decode.d0.loss_dice: 1.6371  decode.d1.loss_cls: 0.3802  decode.d1.loss_mask: 1.6981  decode.d1.loss_dice: 1.5268  decode.d2.loss_cls: 0.3582  decode.d2.loss_mask: 1.7757  decode.d2.loss_dice: 1.5073  decode.d3.loss_cls: 0.3611  decode.d3.loss_mask: 1.7568  decode.d3.loss_dice: 1.5245  decode.d4.loss_cls: 0.3377  decode.d4.loss_mask: 1.7699  decode.d4.loss_dice: 1.5325  decode.d5.loss_cls: 0.3394  decode.d5.loss_mask: 1.7708  decode.d5.loss_dice: 1.5287  decode.d6.loss_cls: 0.3279  decode.d6.loss_mask: 1.7589  decode.d6.loss_dice: 1.5229  decode.d7.loss_cls: 0.3302  decode.d7.loss_mask: 1.7603  decode.d7.loss_dice: 1.5615  decode.d8.loss_cls: 0.3490  decode.d8.loss_mask: 1.7510  decode.d8.loss_dice: 1.5076
2025/03/29 21:47:48 - mmengine - INFO - Exp name: u2r_20250329_122454
2025/03/29 21:47:48 - mmengine - INFO - Iter(train) [17000/20000]  base_lr: 1.8134e-05 lr: 1.8134e-05  eta: 1:24:18  time: 1.7786  data_time: 0.0156  memory: 9680  loss: 36.7112  decode.loss_cls: 0.4284  decode.loss_mask: 1.6678  decode.loss_dice: 1.5709  decode.d0.loss_cls: 0.4495  decode.d0.loss_mask: 1.6973  decode.d0.loss_dice: 1.6981  decode.d1.loss_cls: 0.3869  decode.d1.loss_mask: 1.6892  decode.d1.loss_dice: 1.5603  decode.d2.loss_cls: 0.4286  decode.d2.loss_mask: 1.6918  decode.d2.loss_dice: 1.5621  decode.d3.loss_cls: 0.3699  decode.d3.loss_mask: 1.6784  decode.d3.loss_dice: 1.5875  decode.d4.loss_cls: 0.4140  decode.d4.loss_mask: 1.6695  decode.d4.loss_dice: 1.5605  decode.d5.loss_cls: 0.4204  decode.d5.loss_mask: 1.6665  decode.d5.loss_dice: 1.5630  decode.d6.loss_cls: 0.3529  decode.d6.loss_mask: 1.6717  decode.d6.loss_dice: 1.6006  decode.d7.loss_cls: 0.3506  decode.d7.loss_mask: 1.6906  decode.d7.loss_dice: 1.6269  decode.d8.loss_cls: 0.3403  decode.d8.loss_mask: 1.6869  decode.d8.loss_dice: 1.6300
2025/03/29 21:49:18 - mmengine - INFO - Iter(train) [17050/20000]  base_lr: 1.7862e-05 lr: 1.7862e-05  eta: 1:22:55  time: 1.7775  data_time: 0.0156  memory: 9693  loss: 34.2324  decode.loss_cls: 0.3097  decode.loss_mask: 1.5738  decode.loss_dice: 1.5136  decode.d0.loss_cls: 0.4610  decode.d0.loss_mask: 1.6113  decode.d0.loss_dice: 1.5648  decode.d1.loss_cls: 0.3366  decode.d1.loss_mask: 1.5582  decode.d1.loss_dice: 1.5120  decode.d2.loss_cls: 0.3583  decode.d2.loss_mask: 1.5639  decode.d2.loss_dice: 1.5087  decode.d3.loss_cls: 0.3231  decode.d3.loss_mask: 1.5956  decode.d3.loss_dice: 1.4871  decode.d4.loss_cls: 0.3261  decode.d4.loss_mask: 1.5713  decode.d4.loss_dice: 1.5000  decode.d5.loss_cls: 0.3098  decode.d5.loss_mask: 1.5654  decode.d5.loss_dice: 1.5120  decode.d6.loss_cls: 0.3456  decode.d6.loss_mask: 1.5783  decode.d6.loss_dice: 1.4820  decode.d7.loss_cls: 0.2997  decode.d7.loss_mask: 1.5726  decode.d7.loss_dice: 1.5032  decode.d8.loss_cls: 0.3048  decode.d8.loss_mask: 1.5797  decode.d8.loss_dice: 1.5044
2025/03/29 21:50:47 - mmengine - INFO - Iter(train) [17100/20000]  base_lr: 1.7589e-05 lr: 1.7589e-05  eta: 1:21:31  time: 1.7759  data_time: 0.0155  memory: 9698  loss: 35.9980  decode.loss_cls: 0.2143  decode.loss_mask: 1.7813  decode.loss_dice: 1.5711  decode.d0.loss_cls: 0.3085  decode.d0.loss_mask: 1.7853  decode.d0.loss_dice: 1.6210  decode.d1.loss_cls: 0.2709  decode.d1.loss_mask: 1.7598  decode.d1.loss_dice: 1.5657  decode.d2.loss_cls: 0.2630  decode.d2.loss_mask: 1.7740  decode.d2.loss_dice: 1.5839  decode.d3.loss_cls: 0.2264  decode.d3.loss_mask: 1.7920  decode.d3.loss_dice: 1.5700  decode.d4.loss_cls: 0.2388  decode.d4.loss_mask: 1.7758  decode.d4.loss_dice: 1.5670  decode.d5.loss_cls: 0.2296  decode.d5.loss_mask: 1.7769  decode.d5.loss_dice: 1.5799  decode.d6.loss_cls: 0.1969  decode.d6.loss_mask: 1.7811  decode.d6.loss_dice: 1.5813  decode.d7.loss_cls: 0.2601  decode.d7.loss_mask: 1.7790  decode.d7.loss_dice: 1.5852  decode.d8.loss_cls: 0.2176  decode.d8.loss_mask: 1.7836  decode.d8.loss_dice: 1.5581
2025/03/29 21:52:16 - mmengine - INFO - Iter(train) [17150/20000]  base_lr: 1.7316e-05 lr: 1.7316e-05  eta: 1:20:08  time: 1.8330  data_time: 0.0162  memory: 9689  loss: 36.1177  decode.loss_cls: 0.2568  decode.loss_mask: 1.6825  decode.loss_dice: 1.6256  decode.d0.loss_cls: 0.3935  decode.d0.loss_mask: 1.6795  decode.d0.loss_dice: 1.6870  decode.d1.loss_cls: 0.2794  decode.d1.loss_mask: 1.6756  decode.d1.loss_dice: 1.6662  decode.d2.loss_cls: 0.3062  decode.d2.loss_mask: 1.6659  decode.d2.loss_dice: 1.6454  decode.d3.loss_cls: 0.2735  decode.d3.loss_mask: 1.6753  decode.d3.loss_dice: 1.6365  decode.d4.loss_cls: 0.2873  decode.d4.loss_mask: 1.6851  decode.d4.loss_dice: 1.6491  decode.d5.loss_cls: 0.2889  decode.d5.loss_mask: 1.6801  decode.d5.loss_dice: 1.6347  decode.d6.loss_cls: 0.2865  decode.d6.loss_mask: 1.6751  decode.d6.loss_dice: 1.6238  decode.d7.loss_cls: 0.2675  decode.d7.loss_mask: 1.6804  decode.d7.loss_dice: 1.6354  decode.d8.loss_cls: 0.2636  decode.d8.loss_mask: 1.6756  decode.d8.loss_dice: 1.6355
2025/03/29 21:53:43 - mmengine - INFO - Iter(train) [17200/20000]  base_lr: 1.7043e-05 lr: 1.7043e-05  eta: 1:18:44  time: 1.6718  data_time: 0.0154  memory: 9686  loss: 30.9252  decode.loss_cls: 0.1919  decode.loss_mask: 1.4798  decode.loss_dice: 1.3695  decode.d0.loss_cls: 0.3736  decode.d0.loss_mask: 1.4569  decode.d0.loss_dice: 1.4336  decode.d1.loss_cls: 0.1987  decode.d1.loss_mask: 1.4864  decode.d1.loss_dice: 1.4012  decode.d2.loss_cls: 0.2137  decode.d2.loss_mask: 1.4803  decode.d2.loss_dice: 1.3867  decode.d3.loss_cls: 0.2199  decode.d3.loss_mask: 1.4781  decode.d3.loss_dice: 1.3839  decode.d4.loss_cls: 0.2185  decode.d4.loss_mask: 1.4896  decode.d4.loss_dice: 1.3719  decode.d5.loss_cls: 0.1982  decode.d5.loss_mask: 1.4791  decode.d5.loss_dice: 1.3636  decode.d6.loss_cls: 0.1892  decode.d6.loss_mask: 1.4848  decode.d6.loss_dice: 1.3839  decode.d7.loss_cls: 0.2075  decode.d7.loss_mask: 1.4929  decode.d7.loss_dice: 1.4042  decode.d8.loss_cls: 0.2194  decode.d8.loss_mask: 1.4833  decode.d8.loss_dice: 1.3847
2025/03/29 21:55:06 - mmengine - INFO - Iter(train) [17250/20000]  base_lr: 1.6768e-05 lr: 1.6768e-05  eta: 1:17:19  time: 1.6689  data_time: 0.0157  memory: 9689  loss: 36.6367  decode.loss_cls: 0.2561  decode.loss_mask: 1.8115  decode.loss_dice: 1.5610  decode.d0.loss_cls: 0.4112  decode.d0.loss_mask: 1.8259  decode.d0.loss_dice: 1.6415  decode.d1.loss_cls: 0.2652  decode.d1.loss_mask: 1.8219  decode.d1.loss_dice: 1.5725  decode.d2.loss_cls: 0.2572  decode.d2.loss_mask: 1.8027  decode.d2.loss_dice: 1.5501  decode.d3.loss_cls: 0.2603  decode.d3.loss_mask: 1.8062  decode.d3.loss_dice: 1.5646  decode.d4.loss_cls: 0.2675  decode.d4.loss_mask: 1.8209  decode.d4.loss_dice: 1.5804  decode.d5.loss_cls: 0.2664  decode.d5.loss_mask: 1.8177  decode.d5.loss_dice: 1.5737  decode.d6.loss_cls: 0.2412  decode.d6.loss_mask: 1.8211  decode.d6.loss_dice: 1.5945  decode.d7.loss_cls: 0.2270  decode.d7.loss_mask: 1.8254  decode.d7.loss_dice: 1.5696  decode.d8.loss_cls: 0.2624  decode.d8.loss_mask: 1.8028  decode.d8.loss_dice: 1.5582
2025/03/29 21:56:30 - mmengine - INFO - Iter(train) [17300/20000]  base_lr: 1.6494e-05 lr: 1.6494e-05  eta: 1:15:55  time: 1.6745  data_time: 0.0156  memory: 9687  loss: 35.5398  decode.loss_cls: 0.2216  decode.loss_mask: 1.6856  decode.loss_dice: 1.5725  decode.d0.loss_cls: 0.3719  decode.d0.loss_mask: 1.7048  decode.d0.loss_dice: 1.5992  decode.d1.loss_cls: 0.3174  decode.d1.loss_mask: 1.7432  decode.d1.loss_dice: 1.5814  decode.d2.loss_cls: 0.2852  decode.d2.loss_mask: 1.6730  decode.d2.loss_dice: 1.5792  decode.d3.loss_cls: 0.2551  decode.d3.loss_mask: 1.6872  decode.d3.loss_dice: 1.5821  decode.d4.loss_cls: 0.2660  decode.d4.loss_mask: 1.7111  decode.d4.loss_dice: 1.5841  decode.d5.loss_cls: 0.2744  decode.d5.loss_mask: 1.6834  decode.d5.loss_dice: 1.5841  decode.d6.loss_cls: 0.2790  decode.d6.loss_mask: 1.6877  decode.d6.loss_dice: 1.5769  decode.d7.loss_cls: 0.2879  decode.d7.loss_mask: 1.6686  decode.d7.loss_dice: 1.5673  decode.d8.loss_cls: 0.2576  decode.d8.loss_mask: 1.6756  decode.d8.loss_dice: 1.5766
2025/03/29 21:57:53 - mmengine - INFO - Iter(train) [17350/20000]  base_lr: 1.6219e-05 lr: 1.6219e-05  eta: 1:14:30  time: 1.6698  data_time: 0.0170  memory: 9688  loss: 35.6129  decode.loss_cls: 0.2887  decode.loss_mask: 1.6730  decode.loss_dice: 1.5792  decode.d0.loss_cls: 0.5029  decode.d0.loss_mask: 1.6698  decode.d0.loss_dice: 1.6318  decode.d1.loss_cls: 0.3320  decode.d1.loss_mask: 1.6848  decode.d1.loss_dice: 1.5574  decode.d2.loss_cls: 0.2918  decode.d2.loss_mask: 1.6421  decode.d2.loss_dice: 1.5396  decode.d3.loss_cls: 0.3052  decode.d3.loss_mask: 1.6271  decode.d3.loss_dice: 1.5525  decode.d4.loss_cls: 0.3349  decode.d4.loss_mask: 1.6679  decode.d4.loss_dice: 1.5522  decode.d5.loss_cls: 0.3196  decode.d5.loss_mask: 1.6676  decode.d5.loss_dice: 1.5597  decode.d6.loss_cls: 0.3065  decode.d6.loss_mask: 1.6743  decode.d6.loss_dice: 1.5785  decode.d7.loss_cls: 0.3280  decode.d7.loss_mask: 1.6516  decode.d7.loss_dice: 1.5427  decode.d8.loss_cls: 0.3102  decode.d8.loss_mask: 1.6602  decode.d8.loss_dice: 1.5810
2025/03/29 21:59:17 - mmengine - INFO - Iter(train) [17400/20000]  base_lr: 1.5943e-05 lr: 1.5943e-05  eta: 1:13:06  time: 1.6850  data_time: 0.0161  memory: 9683  loss: 38.2002  decode.loss_cls: 0.2754  decode.loss_mask: 1.8862  decode.loss_dice: 1.6143  decode.d0.loss_cls: 0.4375  decode.d0.loss_mask: 1.8704  decode.d0.loss_dice: 1.7382  decode.d1.loss_cls: 0.3311  decode.d1.loss_mask: 1.8375  decode.d1.loss_dice: 1.6695  decode.d2.loss_cls: 0.2918  decode.d2.loss_mask: 1.8383  decode.d2.loss_dice: 1.6812  decode.d3.loss_cls: 0.3241  decode.d3.loss_mask: 1.8381  decode.d3.loss_dice: 1.6645  decode.d4.loss_cls: 0.3305  decode.d4.loss_mask: 1.7998  decode.d4.loss_dice: 1.6296  decode.d5.loss_cls: 0.3411  decode.d5.loss_mask: 1.8255  decode.d5.loss_dice: 1.6260  decode.d6.loss_cls: 0.3106  decode.d6.loss_mask: 1.8398  decode.d6.loss_dice: 1.6683  decode.d7.loss_cls: 0.2656  decode.d7.loss_mask: 1.8576  decode.d7.loss_dice: 1.6527  decode.d8.loss_cls: 0.2459  decode.d8.loss_mask: 1.8804  decode.d8.loss_dice: 1.6286
2025/03/29 22:00:41 - mmengine - INFO - Iter(train) [17450/20000]  base_lr: 1.5667e-05 lr: 1.5667e-05  eta: 1:11:41  time: 1.6712  data_time: 0.0158  memory: 9688  loss: 33.8231  decode.loss_cls: 0.3085  decode.loss_mask: 1.5275  decode.loss_dice: 1.5064  decode.d0.loss_cls: 0.4133  decode.d0.loss_mask: 1.5396  decode.d0.loss_dice: 1.6530  decode.d1.loss_cls: 0.3324  decode.d1.loss_mask: 1.5327  decode.d1.loss_dice: 1.5484  decode.d2.loss_cls: 0.3006  decode.d2.loss_mask: 1.5160  decode.d2.loss_dice: 1.5280  decode.d3.loss_cls: 0.3107  decode.d3.loss_mask: 1.5198  decode.d3.loss_dice: 1.5200  decode.d4.loss_cls: 0.3271  decode.d4.loss_mask: 1.5127  decode.d4.loss_dice: 1.4911  decode.d5.loss_cls: 0.3127  decode.d5.loss_mask: 1.5132  decode.d5.loss_dice: 1.5350  decode.d6.loss_cls: 0.3031  decode.d6.loss_mask: 1.5158  decode.d6.loss_dice: 1.5375  decode.d7.loss_cls: 0.3022  decode.d7.loss_mask: 1.5242  decode.d7.loss_dice: 1.5409  decode.d8.loss_cls: 0.3020  decode.d8.loss_mask: 1.5233  decode.d8.loss_dice: 1.5253
2025/03/29 22:02:04 - mmengine - INFO - Iter(train) [17500/20000]  base_lr: 1.5390e-05 lr: 1.5390e-05  eta: 1:10:17  time: 1.6689  data_time: 0.0158  memory: 9686  loss: 33.3292  decode.loss_cls: 0.2519  decode.loss_mask: 1.6172  decode.loss_dice: 1.4642  decode.d0.loss_cls: 0.3040  decode.d0.loss_mask: 1.6380  decode.d0.loss_dice: 1.4982  decode.d1.loss_cls: 0.2575  decode.d1.loss_mask: 1.6286  decode.d1.loss_dice: 1.4684  decode.d2.loss_cls: 0.2175  decode.d2.loss_mask: 1.6346  decode.d2.loss_dice: 1.4719  decode.d3.loss_cls: 0.1935  decode.d3.loss_mask: 1.6383  decode.d3.loss_dice: 1.4843  decode.d4.loss_cls: 0.2246  decode.d4.loss_mask: 1.6258  decode.d4.loss_dice: 1.4705  decode.d5.loss_cls: 0.2286  decode.d5.loss_mask: 1.6320  decode.d5.loss_dice: 1.4814  decode.d6.loss_cls: 0.2153  decode.d6.loss_mask: 1.6359  decode.d6.loss_dice: 1.4487  decode.d7.loss_cls: 0.2354  decode.d7.loss_mask: 1.6282  decode.d7.loss_dice: 1.4540  decode.d8.loss_cls: 0.2406  decode.d8.loss_mask: 1.6083  decode.d8.loss_dice: 1.4321
2025/03/29 22:03:28 - mmengine - INFO - Iter(train) [17550/20000]  base_lr: 1.5113e-05 lr: 1.5113e-05  eta: 1:08:52  time: 1.6705  data_time: 0.0156  memory: 9693  loss: 35.3644  decode.loss_cls: 0.2547  decode.loss_mask: 1.6534  decode.loss_dice: 1.5841  decode.d0.loss_cls: 0.4366  decode.d0.loss_mask: 1.6650  decode.d0.loss_dice: 1.6346  decode.d1.loss_cls: 0.3071  decode.d1.loss_mask: 1.6573  decode.d1.loss_dice: 1.5789  decode.d2.loss_cls: 0.2588  decode.d2.loss_mask: 1.6542  decode.d2.loss_dice: 1.5909  decode.d3.loss_cls: 0.2392  decode.d3.loss_mask: 1.6569  decode.d3.loss_dice: 1.5868  decode.d4.loss_cls: 0.2683  decode.d4.loss_mask: 1.6555  decode.d4.loss_dice: 1.5919  decode.d5.loss_cls: 0.2661  decode.d5.loss_mask: 1.6615  decode.d5.loss_dice: 1.5946  decode.d6.loss_cls: 0.2789  decode.d6.loss_mask: 1.6558  decode.d6.loss_dice: 1.5543  decode.d7.loss_cls: 0.2553  decode.d7.loss_mask: 1.6820  decode.d7.loss_dice: 1.6011  decode.d8.loss_cls: 0.2810  decode.d8.loss_mask: 1.6833  decode.d8.loss_dice: 1.5763
2025/03/29 22:04:52 - mmengine - INFO - Iter(train) [17600/20000]  base_lr: 1.4835e-05 lr: 1.4835e-05  eta: 1:07:28  time: 1.6842  data_time: 0.0166  memory: 9687  loss: 34.2404  decode.loss_cls: 0.2997  decode.loss_mask: 1.5724  decode.loss_dice: 1.5140  decode.d0.loss_cls: 0.4664  decode.d0.loss_mask: 1.6154  decode.d0.loss_dice: 1.5375  decode.d1.loss_cls: 0.3093  decode.d1.loss_mask: 1.5748  decode.d1.loss_dice: 1.5080  decode.d2.loss_cls: 0.2999  decode.d2.loss_mask: 1.5790  decode.d2.loss_dice: 1.4944  decode.d3.loss_cls: 0.2729  decode.d3.loss_mask: 1.6151  decode.d3.loss_dice: 1.5251  decode.d4.loss_cls: 0.2810  decode.d4.loss_mask: 1.6205  decode.d4.loss_dice: 1.5154  decode.d5.loss_cls: 0.3340  decode.d5.loss_mask: 1.5944  decode.d5.loss_dice: 1.5002  decode.d6.loss_cls: 0.3189  decode.d6.loss_mask: 1.5963  decode.d6.loss_dice: 1.5095  decode.d7.loss_cls: 0.2596  decode.d7.loss_mask: 1.5926  decode.d7.loss_dice: 1.5428  decode.d8.loss_cls: 0.2878  decode.d8.loss_mask: 1.5900  decode.d8.loss_dice: 1.5136
2025/03/29 22:06:15 - mmengine - INFO - Iter(train) [17650/20000]  base_lr: 1.4556e-05 lr: 1.4556e-05  eta: 1:06:04  time: 1.6692  data_time: 0.0157  memory: 9703  loss: 33.0378  decode.loss_cls: 0.3236  decode.loss_mask: 1.5398  decode.loss_dice: 1.4156  decode.d0.loss_cls: 0.4520  decode.d0.loss_mask: 1.5491  decode.d0.loss_dice: 1.5432  decode.d1.loss_cls: 0.3639  decode.d1.loss_mask: 1.5479  decode.d1.loss_dice: 1.4157  decode.d2.loss_cls: 0.3294  decode.d2.loss_mask: 1.5340  decode.d2.loss_dice: 1.4155  decode.d3.loss_cls: 0.3122  decode.d3.loss_mask: 1.5308  decode.d3.loss_dice: 1.4421  decode.d4.loss_cls: 0.3206  decode.d4.loss_mask: 1.5321  decode.d4.loss_dice: 1.4186  decode.d5.loss_cls: 0.3154  decode.d5.loss_mask: 1.5337  decode.d5.loss_dice: 1.4194  decode.d6.loss_cls: 0.3301  decode.d6.loss_mask: 1.5289  decode.d6.loss_dice: 1.4206  decode.d7.loss_cls: 0.3155  decode.d7.loss_mask: 1.5200  decode.d7.loss_dice: 1.4314  decode.d8.loss_cls: 0.3252  decode.d8.loss_mask: 1.5230  decode.d8.loss_dice: 1.3882
2025/03/29 22:07:39 - mmengine - INFO - Iter(train) [17700/20000]  base_lr: 1.4277e-05 lr: 1.4277e-05  eta: 1:04:39  time: 1.6713  data_time: 0.0156  memory: 9694  loss: 32.1561  decode.loss_cls: 0.2387  decode.loss_mask: 1.5349  decode.loss_dice: 1.4012  decode.d0.loss_cls: 0.3030  decode.d0.loss_mask: 1.5839  decode.d0.loss_dice: 1.5331  decode.d1.loss_cls: 0.2348  decode.d1.loss_mask: 1.5577  decode.d1.loss_dice: 1.4387  decode.d2.loss_cls: 0.2200  decode.d2.loss_mask: 1.5597  decode.d2.loss_dice: 1.4334  decode.d3.loss_cls: 0.2609  decode.d3.loss_mask: 1.5347  decode.d3.loss_dice: 1.4061  decode.d4.loss_cls: 0.2280  decode.d4.loss_mask: 1.5336  decode.d4.loss_dice: 1.4168  decode.d5.loss_cls: 0.2194  decode.d5.loss_mask: 1.5449  decode.d5.loss_dice: 1.4252  decode.d6.loss_cls: 0.2111  decode.d6.loss_mask: 1.5629  decode.d6.loss_dice: 1.4087  decode.d7.loss_cls: 0.2282  decode.d7.loss_mask: 1.5355  decode.d7.loss_dice: 1.4048  decode.d8.loss_cls: 0.2176  decode.d8.loss_mask: 1.5643  decode.d8.loss_dice: 1.4143
2025/03/29 22:09:02 - mmengine - INFO - Iter(train) [17750/20000]  base_lr: 1.3998e-05 lr: 1.3998e-05  eta: 1:03:15  time: 1.6689  data_time: 0.0162  memory: 9745  loss: 34.5328  decode.loss_cls: 0.2894  decode.loss_mask: 1.5354  decode.loss_dice: 1.5906  decode.d0.loss_cls: 0.3785  decode.d0.loss_mask: 1.5726  decode.d0.loss_dice: 1.6614  decode.d1.loss_cls: 0.3393  decode.d1.loss_mask: 1.5458  decode.d1.loss_dice: 1.5939  decode.d2.loss_cls: 0.3057  decode.d2.loss_mask: 1.5399  decode.d2.loss_dice: 1.5956  decode.d3.loss_cls: 0.3008  decode.d3.loss_mask: 1.5286  decode.d3.loss_dice: 1.5893  decode.d4.loss_cls: 0.3112  decode.d4.loss_mask: 1.5432  decode.d4.loss_dice: 1.5874  decode.d5.loss_cls: 0.3215  decode.d5.loss_mask: 1.5401  decode.d5.loss_dice: 1.5645  decode.d6.loss_cls: 0.3247  decode.d6.loss_mask: 1.5397  decode.d6.loss_dice: 1.5847  decode.d7.loss_cls: 0.3365  decode.d7.loss_mask: 1.5155  decode.d7.loss_dice: 1.5893  decode.d8.loss_cls: 0.2994  decode.d8.loss_mask: 1.5304  decode.d8.loss_dice: 1.5781
2025/03/29 22:10:26 - mmengine - INFO - Iter(train) [17800/20000]  base_lr: 1.3717e-05 lr: 1.3717e-05  eta: 1:01:50  time: 1.6677  data_time: 0.0158  memory: 9746  loss: 34.9747  decode.loss_cls: 0.2199  decode.loss_mask: 1.7144  decode.loss_dice: 1.5157  decode.d0.loss_cls: 0.3907  decode.d0.loss_mask: 1.7589  decode.d0.loss_dice: 1.5770  decode.d1.loss_cls: 0.2464  decode.d1.loss_mask: 1.7338  decode.d1.loss_dice: 1.5061  decode.d2.loss_cls: 0.2642  decode.d2.loss_mask: 1.7113  decode.d2.loss_dice: 1.5081  decode.d3.loss_cls: 0.2295  decode.d3.loss_mask: 1.7416  decode.d3.loss_dice: 1.5122  decode.d4.loss_cls: 0.2289  decode.d4.loss_mask: 1.7250  decode.d4.loss_dice: 1.5058  decode.d5.loss_cls: 0.2335  decode.d5.loss_mask: 1.7167  decode.d5.loss_dice: 1.5051  decode.d6.loss_cls: 0.2477  decode.d6.loss_mask: 1.7360  decode.d6.loss_dice: 1.5034  decode.d7.loss_cls: 0.2516  decode.d7.loss_mask: 1.7218  decode.d7.loss_dice: 1.4898  decode.d8.loss_cls: 0.2492  decode.d8.loss_mask: 1.7237  decode.d8.loss_dice: 1.5066
2025/03/29 22:11:49 - mmengine - INFO - Iter(train) [17850/20000]  base_lr: 1.3437e-05 lr: 1.3437e-05  eta: 1:00:26  time: 1.6665  data_time: 0.0157  memory: 9685  loss: 34.6404  decode.loss_cls: 0.2850  decode.loss_mask: 1.6305  decode.loss_dice: 1.5179  decode.d0.loss_cls: 0.3775  decode.d0.loss_mask: 1.6876  decode.d0.loss_dice: 1.6509  decode.d1.loss_cls: 0.2995  decode.d1.loss_mask: 1.6283  decode.d1.loss_dice: 1.5491  decode.d2.loss_cls: 0.2749  decode.d2.loss_mask: 1.6291  decode.d2.loss_dice: 1.5254  decode.d3.loss_cls: 0.2596  decode.d3.loss_mask: 1.6365  decode.d3.loss_dice: 1.5194  decode.d4.loss_cls: 0.2577  decode.d4.loss_mask: 1.6248  decode.d4.loss_dice: 1.5221  decode.d5.loss_cls: 0.2552  decode.d5.loss_mask: 1.6410  decode.d5.loss_dice: 1.5325  decode.d6.loss_cls: 0.2840  decode.d6.loss_mask: 1.6357  decode.d6.loss_dice: 1.5358  decode.d7.loss_cls: 0.2921  decode.d7.loss_mask: 1.6437  decode.d7.loss_dice: 1.5214  decode.d8.loss_cls: 0.2823  decode.d8.loss_mask: 1.6306  decode.d8.loss_dice: 1.5103
2025/03/29 22:13:13 - mmengine - INFO - Iter(train) [17900/20000]  base_lr: 1.3155e-05 lr: 1.3155e-05  eta: 0:59:01  time: 1.6684  data_time: 0.0155  memory: 9681  loss: 32.6385  decode.loss_cls: 0.2759  decode.loss_mask: 1.4915  decode.loss_dice: 1.4873  decode.d0.loss_cls: 0.3316  decode.d0.loss_mask: 1.4971  decode.d0.loss_dice: 1.5526  decode.d1.loss_cls: 0.2621  decode.d1.loss_mask: 1.4858  decode.d1.loss_dice: 1.5040  decode.d2.loss_cls: 0.2685  decode.d2.loss_mask: 1.4804  decode.d2.loss_dice: 1.5004  decode.d3.loss_cls: 0.2668  decode.d3.loss_mask: 1.4892  decode.d3.loss_dice: 1.4871  decode.d4.loss_cls: 0.2796  decode.d4.loss_mask: 1.4790  decode.d4.loss_dice: 1.4964  decode.d5.loss_cls: 0.2594  decode.d5.loss_mask: 1.4891  decode.d5.loss_dice: 1.5109  decode.d6.loss_cls: 0.2414  decode.d6.loss_mask: 1.4895  decode.d6.loss_dice: 1.5133  decode.d7.loss_cls: 0.2621  decode.d7.loss_mask: 1.4878  decode.d7.loss_dice: 1.4911  decode.d8.loss_cls: 0.2801  decode.d8.loss_mask: 1.4934  decode.d8.loss_dice: 1.4851
2025/03/29 22:14:37 - mmengine - INFO - Iter(train) [17950/20000]  base_lr: 1.2873e-05 lr: 1.2873e-05  eta: 0:57:37  time: 1.6834  data_time: 0.0162  memory: 9676  loss: 33.8312  decode.loss_cls: 0.1610  decode.loss_mask: 1.6854  decode.loss_dice: 1.5005  decode.d0.loss_cls: 0.3270  decode.d0.loss_mask: 1.6877  decode.d0.loss_dice: 1.5086  decode.d1.loss_cls: 0.2185  decode.d1.loss_mask: 1.6851  decode.d1.loss_dice: 1.5093  decode.d2.loss_cls: 0.2171  decode.d2.loss_mask: 1.6693  decode.d2.loss_dice: 1.4593  decode.d3.loss_cls: 0.1807  decode.d3.loss_mask: 1.6792  decode.d3.loss_dice: 1.4913  decode.d4.loss_cls: 0.1914  decode.d4.loss_mask: 1.6717  decode.d4.loss_dice: 1.4822  decode.d5.loss_cls: 0.2185  decode.d5.loss_mask: 1.6713  decode.d5.loss_dice: 1.4698  decode.d6.loss_cls: 0.1904  decode.d6.loss_mask: 1.6899  decode.d6.loss_dice: 1.4770  decode.d7.loss_cls: 0.1779  decode.d7.loss_mask: 1.6906  decode.d7.loss_dice: 1.5540  decode.d8.loss_cls: 0.1862  decode.d8.loss_mask: 1.6745  decode.d8.loss_dice: 1.5056
2025/03/29 22:16:01 - mmengine - INFO - Exp name: u2r_20250329_122454
2025/03/29 22:16:01 - mmengine - INFO - Iter(train) [18000/20000]  base_lr: 1.2590e-05 lr: 1.2590e-05  eta: 0:56:13  time: 1.6659  data_time: 0.0158  memory: 9692  loss: 34.9030  decode.loss_cls: 0.3087  decode.loss_mask: 1.6805  decode.loss_dice: 1.4770  decode.d0.loss_cls: 0.4523  decode.d0.loss_mask: 1.6884  decode.d0.loss_dice: 1.5087  decode.d1.loss_cls: 0.2979  decode.d1.loss_mask: 1.7105  decode.d1.loss_dice: 1.5035  decode.d2.loss_cls: 0.3257  decode.d2.loss_mask: 1.6901  decode.d2.loss_dice: 1.4718  decode.d3.loss_cls: 0.2978  decode.d3.loss_mask: 1.6719  decode.d3.loss_dice: 1.4742  decode.d4.loss_cls: 0.3275  decode.d4.loss_mask: 1.6959  decode.d4.loss_dice: 1.4738  decode.d5.loss_cls: 0.2727  decode.d5.loss_mask: 1.7133  decode.d5.loss_dice: 1.4726  decode.d6.loss_cls: 0.3223  decode.d6.loss_mask: 1.6454  decode.d6.loss_dice: 1.4650  decode.d7.loss_cls: 0.3162  decode.d7.loss_mask: 1.6785  decode.d7.loss_dice: 1.4744  decode.d8.loss_cls: 0.3192  decode.d8.loss_mask: 1.6885  decode.d8.loss_dice: 1.4788
2025/03/29 22:16:01 - mmengine - INFO - Saving checkpoint at 18000 iterations
2025/03/29 22:16:10 - mmengine - INFO - Iter(val) [  50/3968]    eta: 0:10:30  time: 0.1519  data_time: 0.0013  memory: 1849  
2025/03/29 22:16:18 - mmengine - INFO - Iter(val) [ 100/3968]    eta: 0:10:17  time: 0.1655  data_time: 0.0013  memory: 1849  
2025/03/29 22:16:26 - mmengine - INFO - Iter(val) [ 150/3968]    eta: 0:10:05  time: 0.1504  data_time: 0.0012  memory: 1849  
2025/03/29 22:16:34 - mmengine - INFO - Iter(val) [ 200/3968]    eta: 0:09:59  time: 0.1551  data_time: 0.0013  memory: 1849  
2025/03/29 22:16:42 - mmengine - INFO - Iter(val) [ 250/3968]    eta: 0:09:49  time: 0.1667  data_time: 0.0012  memory: 1849  
2025/03/29 22:16:50 - mmengine - INFO - Iter(val) [ 300/3968]    eta: 0:09:38  time: 0.1509  data_time: 0.0015  memory: 1849  
2025/03/29 22:16:58 - mmengine - INFO - Iter(val) [ 350/3968]    eta: 0:09:32  time: 0.1571  data_time: 0.0012  memory: 1849  
2025/03/29 22:17:06 - mmengine - INFO - Iter(val) [ 400/3968]    eta: 0:09:24  time: 0.1660  data_time: 0.0013  memory: 1849  
2025/03/29 22:17:14 - mmengine - INFO - Iter(val) [ 450/3968]    eta: 0:09:16  time: 0.1508  data_time: 0.0013  memory: 1849  
2025/03/29 22:17:22 - mmengine - INFO - Iter(val) [ 500/3968]    eta: 0:09:09  time: 0.1554  data_time: 0.0013  memory: 1849  
2025/03/29 22:17:30 - mmengine - INFO - Iter(val) [ 550/3968]    eta: 0:09:00  time: 0.1620  data_time: 0.0013  memory: 1849  
2025/03/29 22:17:37 - mmengine - INFO - Iter(val) [ 600/3968]    eta: 0:08:52  time: 0.1528  data_time: 0.0012  memory: 1849  
2025/03/29 22:17:45 - mmengine - INFO - Iter(val) [ 650/3968]    eta: 0:08:45  time: 0.1605  data_time: 0.0013  memory: 1849  
2025/03/29 22:17:53 - mmengine - INFO - Iter(val) [ 700/3968]    eta: 0:08:36  time: 0.1598  data_time: 0.0013  memory: 1849  
2025/03/29 22:18:01 - mmengine - INFO - Iter(val) [ 750/3968]    eta: 0:08:29  time: 0.1562  data_time: 0.0013  memory: 1849  
2025/03/29 22:18:09 - mmengine - INFO - Iter(val) [ 800/3968]    eta: 0:08:21  time: 0.1660  data_time: 0.0013  memory: 1849  
2025/03/29 22:18:17 - mmengine - INFO - Iter(val) [ 850/3968]    eta: 0:08:13  time: 0.1446  data_time: 0.0014  memory: 1849  
2025/03/29 22:18:25 - mmengine - INFO - Iter(val) [ 900/3968]    eta: 0:08:06  time: 0.1642  data_time: 0.0014  memory: 1849  
2025/03/29 22:18:33 - mmengine - INFO - Iter(val) [ 950/3968]    eta: 0:07:58  time: 0.1647  data_time: 0.0016  memory: 1849  
2025/03/29 22:18:41 - mmengine - INFO - Iter(val) [1000/3968]    eta: 0:07:51  time: 0.1673  data_time: 0.0016  memory: 1849  
2025/03/29 22:18:50 - mmengine - INFO - Iter(val) [1050/3968]    eta: 0:07:43  time: 0.1634  data_time: 0.0017  memory: 1849  
2025/03/29 22:18:58 - mmengine - INFO - Iter(val) [1100/3968]    eta: 0:07:36  time: 0.1636  data_time: 0.0016  memory: 1849  
2025/03/29 22:19:06 - mmengine - INFO - Iter(val) [1150/3968]    eta: 0:07:30  time: 0.1720  data_time: 0.0020  memory: 1849  
2025/03/29 22:19:15 - mmengine - INFO - Iter(val) [1200/3968]    eta: 0:07:23  time: 0.1797  data_time: 0.0044  memory: 1849  
2025/03/29 22:19:24 - mmengine - INFO - Iter(val) [1250/3968]    eta: 0:07:17  time: 0.1722  data_time: 0.0039  memory: 1849  
2025/03/29 22:19:33 - mmengine - INFO - Iter(val) [1300/3968]    eta: 0:07:10  time: 0.1916  data_time: 0.0053  memory: 1849  
2025/03/29 22:19:42 - mmengine - INFO - Iter(val) [1350/3968]    eta: 0:07:04  time: 0.1735  data_time: 0.0031  memory: 1849  
2025/03/29 22:19:50 - mmengine - INFO - Iter(val) [1400/3968]    eta: 0:06:57  time: 0.1523  data_time: 0.0024  memory: 1849  
2025/03/29 22:19:59 - mmengine - INFO - Iter(val) [1450/3968]    eta: 0:06:49  time: 0.1730  data_time: 0.0014  memory: 1849  
2025/03/29 22:20:07 - mmengine - INFO - Iter(val) [1500/3968]    eta: 0:06:41  time: 0.1592  data_time: 0.0014  memory: 1849  
2025/03/29 22:20:15 - mmengine - INFO - Iter(val) [1550/3968]    eta: 0:06:33  time: 0.1607  data_time: 0.0014  memory: 1849  
2025/03/29 22:20:23 - mmengine - INFO - Iter(val) [1600/3968]    eta: 0:06:25  time: 0.1612  data_time: 0.0015  memory: 1849  
2025/03/29 22:20:32 - mmengine - INFO - Iter(val) [1650/3968]    eta: 0:06:17  time: 0.1671  data_time: 0.0023  memory: 1849  
2025/03/29 22:20:41 - mmengine - INFO - Iter(val) [1700/3968]    eta: 0:06:10  time: 0.1833  data_time: 0.0068  memory: 1849  
2025/03/29 22:20:50 - mmengine - INFO - Iter(val) [1750/3968]    eta: 0:06:03  time: 0.1754  data_time: 0.0033  memory: 1849  
2025/03/29 22:20:58 - mmengine - INFO - Iter(val) [1800/3968]    eta: 0:05:55  time: 0.1682  data_time: 0.0019  memory: 1849  
2025/03/29 22:21:08 - mmengine - INFO - Iter(val) [1850/3968]    eta: 0:05:48  time: 0.1705  data_time: 0.0030  memory: 1849  
2025/03/29 22:21:16 - mmengine - INFO - Iter(val) [1900/3968]    eta: 0:05:41  time: 0.1861  data_time: 0.0045  memory: 1849  
2025/03/29 22:21:25 - mmengine - INFO - Iter(val) [1950/3968]    eta: 0:05:33  time: 0.1775  data_time: 0.0020  memory: 1849  
2025/03/29 22:21:34 - mmengine - INFO - Iter(val) [2000/3968]    eta: 0:05:25  time: 0.1603  data_time: 0.0031  memory: 1849  
2025/03/29 22:21:43 - mmengine - INFO - Iter(val) [2050/3968]    eta: 0:05:17  time: 0.1611  data_time: 0.0022  memory: 1849  
2025/03/29 22:21:52 - mmengine - INFO - Iter(val) [2100/3968]    eta: 0:05:10  time: 0.1788  data_time: 0.0038  memory: 1849  
2025/03/29 22:22:01 - mmengine - INFO - Iter(val) [2150/3968]    eta: 0:05:03  time: 0.1867  data_time: 0.0037  memory: 1849  
2025/03/29 22:22:10 - mmengine - INFO - Iter(val) [2200/3968]    eta: 0:04:55  time: 0.1786  data_time: 0.0032  memory: 1849  
2025/03/29 22:22:20 - mmengine - INFO - Iter(val) [2250/3968]    eta: 0:04:47  time: 0.2236  data_time: 0.0057  memory: 1849  
2025/03/29 22:22:29 - mmengine - INFO - Iter(val) [2300/3968]    eta: 0:04:40  time: 0.1827  data_time: 0.0039  memory: 1849  
2025/03/29 22:22:38 - mmengine - INFO - Iter(val) [2350/3968]    eta: 0:04:31  time: 0.1729  data_time: 0.0032  memory: 1849  
2025/03/29 22:22:47 - mmengine - INFO - Iter(val) [2400/3968]    eta: 0:04:23  time: 0.1804  data_time: 0.0024  memory: 1849  
2025/03/29 22:22:56 - mmengine - INFO - Iter(val) [2450/3968]    eta: 0:04:15  time: 0.1842  data_time: 0.0042  memory: 1849  
2025/03/29 22:23:05 - mmengine - INFO - Iter(val) [2500/3968]    eta: 0:04:07  time: 0.1594  data_time: 0.0036  memory: 1849  
2025/03/29 22:23:13 - mmengine - INFO - Iter(val) [2550/3968]    eta: 0:03:59  time: 0.1791  data_time: 0.0032  memory: 1849  
2025/03/29 22:23:22 - mmengine - INFO - Iter(val) [2600/3968]    eta: 0:03:50  time: 0.1510  data_time: 0.0023  memory: 1849  
2025/03/29 22:23:30 - mmengine - INFO - Iter(val) [2650/3968]    eta: 0:03:42  time: 0.1579  data_time: 0.0023  memory: 1849  
2025/03/29 22:23:39 - mmengine - INFO - Iter(val) [2700/3968]    eta: 0:03:33  time: 0.1569  data_time: 0.0024  memory: 1849  
2025/03/29 22:23:48 - mmengine - INFO - Iter(val) [2750/3968]    eta: 0:03:25  time: 0.1789  data_time: 0.0059  memory: 1849  
2025/03/29 22:23:57 - mmengine - INFO - Iter(val) [2800/3968]    eta: 0:03:17  time: 0.1658  data_time: 0.0026  memory: 1849  
2025/03/29 22:24:06 - mmengine - INFO - Iter(val) [2850/3968]    eta: 0:03:09  time: 0.1828  data_time: 0.0032  memory: 1849  
2025/03/29 22:24:15 - mmengine - INFO - Iter(val) [2900/3968]    eta: 0:03:00  time: 0.1543  data_time: 0.0038  memory: 1849  
2025/03/29 22:24:23 - mmengine - INFO - Iter(val) [2950/3968]    eta: 0:02:52  time: 0.1726  data_time: 0.0036  memory: 1849  
2025/03/29 22:24:32 - mmengine - INFO - Iter(val) [3000/3968]    eta: 0:02:43  time: 0.1785  data_time: 0.0037  memory: 1849  
2025/03/29 22:24:41 - mmengine - INFO - Iter(val) [3050/3968]    eta: 0:02:35  time: 0.2106  data_time: 0.0067  memory: 1849  
2025/03/29 22:24:50 - mmengine - INFO - Iter(val) [3100/3968]    eta: 0:02:27  time: 0.1733  data_time: 0.0048  memory: 1849  
2025/03/29 22:24:59 - mmengine - INFO - Iter(val) [3150/3968]    eta: 0:02:18  time: 0.1857  data_time: 0.0024  memory: 1849  
2025/03/29 22:25:07 - mmengine - INFO - Iter(val) [3200/3968]    eta: 0:02:10  time: 0.1784  data_time: 0.0024  memory: 1849  
2025/03/29 22:25:16 - mmengine - INFO - Iter(val) [3250/3968]    eta: 0:02:02  time: 0.1777  data_time: 0.0028  memory: 1849  
2025/03/29 22:25:24 - mmengine - INFO - Iter(val) [3300/3968]    eta: 0:01:53  time: 0.1632  data_time: 0.0037  memory: 1849  
2025/03/29 22:25:33 - mmengine - INFO - Iter(val) [3350/3968]    eta: 0:01:45  time: 0.1676  data_time: 0.0033  memory: 1849  
2025/03/29 22:25:42 - mmengine - INFO - Iter(val) [3400/3968]    eta: 0:01:36  time: 0.1755  data_time: 0.0023  memory: 1849  
2025/03/29 22:25:50 - mmengine - INFO - Iter(val) [3450/3968]    eta: 0:01:27  time: 0.1572  data_time: 0.0014  memory: 1849  
2025/03/29 22:25:58 - mmengine - INFO - Iter(val) [3500/3968]    eta: 0:01:19  time: 0.1598  data_time: 0.0014  memory: 1849  
2025/03/29 22:26:06 - mmengine - INFO - Iter(val) [3550/3968]    eta: 0:01:10  time: 0.1544  data_time: 0.0014  memory: 1849  
2025/03/29 22:26:14 - mmengine - INFO - Iter(val) [3600/3968]    eta: 0:01:02  time: 0.1575  data_time: 0.0014  memory: 1849  
2025/03/29 22:26:22 - mmengine - INFO - Iter(val) [3650/3968]    eta: 0:00:53  time: 0.1603  data_time: 0.0013  memory: 1849  
2025/03/29 22:26:30 - mmengine - INFO - Iter(val) [3700/3968]    eta: 0:00:45  time: 0.1542  data_time: 0.0013  memory: 1849  
2025/03/29 22:26:38 - mmengine - INFO - Iter(val) [3750/3968]    eta: 0:00:36  time: 0.1630  data_time: 0.0013  memory: 1849  
2025/03/29 22:26:46 - mmengine - INFO - Iter(val) [3800/3968]    eta: 0:00:28  time: 0.1596  data_time: 0.0014  memory: 1849  
2025/03/29 22:26:54 - mmengine - INFO - Iter(val) [3850/3968]    eta: 0:00:19  time: 0.1666  data_time: 0.0014  memory: 1849  
2025/03/29 22:27:02 - mmengine - INFO - Iter(val) [3900/3968]    eta: 0:00:11  time: 0.1546  data_time: 0.0014  memory: 1849  
2025/03/29 22:27:10 - mmengine - INFO - Iter(val) [3950/3968]    eta: 0:00:03  time: 0.1641  data_time: 0.0014  memory: 1849  
2025/03/29 22:27:13 - mmengine - INFO - per class results:
2025/03/29 22:27:13 - mmengine - INFO - 
+--------------+-------+-------+
|    Class     |  IoU  |  Acc  |
+--------------+-------+-------+
|  background  | 58.17 | 88.47 |
|   building   | 59.59 | 71.18 |
|     road     | 43.34 | 46.19 |
|    water     | 64.51 | 71.42 |
|    barren    | 14.13 | 15.35 |
|    forest    | 22.06 | 24.92 |
| agricultural | 55.35 | 62.11 |
+--------------+-------+-------+
2025/03/29 22:27:13 - mmengine - INFO - Iter(val) [3968/3968]    aAcc: 70.8400  mIoU: 45.3100  mAcc: 54.2300  data_time: 0.0024  time: 0.1686
2025/03/29 22:28:37 - mmengine - INFO - Iter(train) [18050/20000]  base_lr: 1.2306e-05 lr: 1.2306e-05  eta: 0:54:48  time: 1.6789  data_time: 0.0159  memory: 9685  loss: 32.2509  decode.loss_cls: 0.2240  decode.loss_mask: 1.6177  decode.loss_dice: 1.3681  decode.d0.loss_cls: 0.3327  decode.d0.loss_mask: 1.6373  decode.d0.loss_dice: 1.3914  decode.d1.loss_cls: 0.2394  decode.d1.loss_mask: 1.6364  decode.d1.loss_dice: 1.3841  decode.d2.loss_cls: 0.2489  decode.d2.loss_mask: 1.6286  decode.d2.loss_dice: 1.3600  decode.d3.loss_cls: 0.2068  decode.d3.loss_mask: 1.6182  decode.d3.loss_dice: 1.3580  decode.d4.loss_cls: 0.2203  decode.d4.loss_mask: 1.6189  decode.d4.loss_dice: 1.3586  decode.d5.loss_cls: 0.2272  decode.d5.loss_mask: 1.6307  decode.d5.loss_dice: 1.3436  decode.d6.loss_cls: 0.2303  decode.d6.loss_mask: 1.6156  decode.d6.loss_dice: 1.3579  decode.d7.loss_cls: 0.2237  decode.d7.loss_mask: 1.6199  decode.d7.loss_dice: 1.3479  decode.d8.loss_cls: 0.2254  decode.d8.loss_mask: 1.6171  decode.d8.loss_dice: 1.3621
2025/03/29 22:30:01 - mmengine - INFO - Iter(train) [18100/20000]  base_lr: 1.2022e-05 lr: 1.2022e-05  eta: 0:53:24  time: 1.6752  data_time: 0.0158  memory: 9688  loss: 36.8670  decode.loss_cls: 0.3393  decode.loss_mask: 1.7306  decode.loss_dice: 1.6236  decode.d0.loss_cls: 0.4042  decode.d0.loss_mask: 1.7848  decode.d0.loss_dice: 1.7090  decode.d1.loss_cls: 0.2918  decode.d1.loss_mask: 1.7398  decode.d1.loss_dice: 1.6459  decode.d2.loss_cls: 0.3428  decode.d2.loss_mask: 1.7154  decode.d2.loss_dice: 1.6043  decode.d3.loss_cls: 0.3286  decode.d3.loss_mask: 1.7218  decode.d3.loss_dice: 1.6042  decode.d4.loss_cls: 0.3921  decode.d4.loss_mask: 1.7004  decode.d4.loss_dice: 1.5909  decode.d5.loss_cls: 0.3696  decode.d5.loss_mask: 1.7019  decode.d5.loss_dice: 1.5688  decode.d6.loss_cls: 0.3627  decode.d6.loss_mask: 1.7064  decode.d6.loss_dice: 1.5925  decode.d7.loss_cls: 0.3526  decode.d7.loss_mask: 1.7221  decode.d7.loss_dice: 1.5906  decode.d8.loss_cls: 0.3531  decode.d8.loss_mask: 1.7174  decode.d8.loss_dice: 1.5598
2025/03/29 22:31:24 - mmengine - INFO - Iter(train) [18150/20000]  base_lr: 1.1737e-05 lr: 1.1737e-05  eta: 0:51:59  time: 1.6716  data_time: 0.0166  memory: 9689  loss: 35.3999  decode.loss_cls: 0.1973  decode.loss_mask: 1.7462  decode.loss_dice: 1.5744  decode.d0.loss_cls: 0.2931  decode.d0.loss_mask: 1.7163  decode.d0.loss_dice: 1.5990  decode.d1.loss_cls: 0.2226  decode.d1.loss_mask: 1.7424  decode.d1.loss_dice: 1.5749  decode.d2.loss_cls: 0.2055  decode.d2.loss_mask: 1.7587  decode.d2.loss_dice: 1.5834  decode.d3.loss_cls: 0.2051  decode.d3.loss_mask: 1.7437  decode.d3.loss_dice: 1.5720  decode.d4.loss_cls: 0.2130  decode.d4.loss_mask: 1.7620  decode.d4.loss_dice: 1.5658  decode.d5.loss_cls: 0.2362  decode.d5.loss_mask: 1.7332  decode.d5.loss_dice: 1.5560  decode.d6.loss_cls: 0.2106  decode.d6.loss_mask: 1.7378  decode.d6.loss_dice: 1.5722  decode.d7.loss_cls: 0.1974  decode.d7.loss_mask: 1.7655  decode.d7.loss_dice: 1.5665  decode.d8.loss_cls: 0.2123  decode.d8.loss_mask: 1.7587  decode.d8.loss_dice: 1.5782
2025/03/29 22:32:48 - mmengine - INFO - Iter(train) [18200/20000]  base_lr: 1.1451e-05 lr: 1.1451e-05  eta: 0:50:35  time: 1.6716  data_time: 0.0165  memory: 9685  loss: 34.1657  decode.loss_cls: 0.3115  decode.loss_mask: 1.5741  decode.loss_dice: 1.5177  decode.d0.loss_cls: 0.4285  decode.d0.loss_mask: 1.5753  decode.d0.loss_dice: 1.5855  decode.d1.loss_cls: 0.2646  decode.d1.loss_mask: 1.5819  decode.d1.loss_dice: 1.5437  decode.d2.loss_cls: 0.2908  decode.d2.loss_mask: 1.5730  decode.d2.loss_dice: 1.4907  decode.d3.loss_cls: 0.2823  decode.d3.loss_mask: 1.5820  decode.d3.loss_dice: 1.5277  decode.d4.loss_cls: 0.2892  decode.d4.loss_mask: 1.5812  decode.d4.loss_dice: 1.5179  decode.d5.loss_cls: 0.2706  decode.d5.loss_mask: 1.6179  decode.d5.loss_dice: 1.5456  decode.d6.loss_cls: 0.2952  decode.d6.loss_mask: 1.5886  decode.d6.loss_dice: 1.5166  decode.d7.loss_cls: 0.3043  decode.d7.loss_mask: 1.5934  decode.d7.loss_dice: 1.5186  decode.d8.loss_cls: 0.2971  decode.d8.loss_mask: 1.5741  decode.d8.loss_dice: 1.5260
2025/03/29 22:34:12 - mmengine - INFO - Iter(train) [18250/20000]  base_lr: 1.1164e-05 lr: 1.1164e-05  eta: 0:49:11  time: 1.6718  data_time: 0.0156  memory: 9747  loss: 32.8950  decode.loss_cls: 0.2187  decode.loss_mask: 1.5735  decode.loss_dice: 1.4508  decode.d0.loss_cls: 0.3912  decode.d0.loss_mask: 1.5736  decode.d0.loss_dice: 1.5140  decode.d1.loss_cls: 0.2394  decode.d1.loss_mask: 1.5872  decode.d1.loss_dice: 1.4708  decode.d2.loss_cls: 0.2080  decode.d2.loss_mask: 1.6070  decode.d2.loss_dice: 1.4580  decode.d3.loss_cls: 0.1921  decode.d3.loss_mask: 1.5961  decode.d3.loss_dice: 1.4657  decode.d4.loss_cls: 0.2263  decode.d4.loss_mask: 1.5783  decode.d4.loss_dice: 1.4759  decode.d5.loss_cls: 0.2338  decode.d5.loss_mask: 1.5892  decode.d5.loss_dice: 1.4432  decode.d6.loss_cls: 0.1848  decode.d6.loss_mask: 1.6190  decode.d6.loss_dice: 1.4720  decode.d7.loss_cls: 0.2427  decode.d7.loss_mask: 1.5853  decode.d7.loss_dice: 1.4572  decode.d8.loss_cls: 0.1850  decode.d8.loss_mask: 1.5774  decode.d8.loss_dice: 1.4787
2025/03/29 22:35:35 - mmengine - INFO - Iter(train) [18300/20000]  base_lr: 1.0877e-05 lr: 1.0877e-05  eta: 0:47:46  time: 1.6710  data_time: 0.0157  memory: 9676  loss: 35.4825  decode.loss_cls: 0.2915  decode.loss_mask: 1.7520  decode.loss_dice: 1.5100  decode.d0.loss_cls: 0.3539  decode.d0.loss_mask: 1.7832  decode.d0.loss_dice: 1.5839  decode.d1.loss_cls: 0.2512  decode.d1.loss_mask: 1.7492  decode.d1.loss_dice: 1.5119  decode.d2.loss_cls: 0.2969  decode.d2.loss_mask: 1.7491  decode.d2.loss_dice: 1.5082  decode.d3.loss_cls: 0.2708  decode.d3.loss_mask: 1.7550  decode.d3.loss_dice: 1.4982  decode.d4.loss_cls: 0.2695  decode.d4.loss_mask: 1.7588  decode.d4.loss_dice: 1.5101  decode.d5.loss_cls: 0.2374  decode.d5.loss_mask: 1.7705  decode.d5.loss_dice: 1.4968  decode.d6.loss_cls: 0.2520  decode.d6.loss_mask: 1.7601  decode.d6.loss_dice: 1.4957  decode.d7.loss_cls: 0.2987  decode.d7.loss_mask: 1.7586  decode.d7.loss_dice: 1.4846  decode.d8.loss_cls: 0.2738  decode.d8.loss_mask: 1.7355  decode.d8.loss_dice: 1.5154
2025/03/29 22:36:59 - mmengine - INFO - Iter(train) [18350/20000]  base_lr: 1.0588e-05 lr: 1.0588e-05  eta: 0:46:22  time: 1.6757  data_time: 0.0162  memory: 9687  loss: 32.9598  decode.loss_cls: 0.4015  decode.loss_mask: 1.4577  decode.loss_dice: 1.4232  decode.d0.loss_cls: 0.5067  decode.d0.loss_mask: 1.4927  decode.d0.loss_dice: 1.5010  decode.d1.loss_cls: 0.3734  decode.d1.loss_mask: 1.4854  decode.d1.loss_dice: 1.4464  decode.d2.loss_cls: 0.4357  decode.d2.loss_mask: 1.4418  decode.d2.loss_dice: 1.4133  decode.d3.loss_cls: 0.4097  decode.d3.loss_mask: 1.4274  decode.d3.loss_dice: 1.4259  decode.d4.loss_cls: 0.3621  decode.d4.loss_mask: 1.4881  decode.d4.loss_dice: 1.4504  decode.d5.loss_cls: 0.3586  decode.d5.loss_mask: 1.4600  decode.d5.loss_dice: 1.4305  decode.d6.loss_cls: 0.3802  decode.d6.loss_mask: 1.4460  decode.d6.loss_dice: 1.4381  decode.d7.loss_cls: 0.4043  decode.d7.loss_mask: 1.4322  decode.d7.loss_dice: 1.4318  decode.d8.loss_cls: 0.3873  decode.d8.loss_mask: 1.4411  decode.d8.loss_dice: 1.4074
2025/03/29 22:38:22 - mmengine - INFO - Iter(train) [18400/20000]  base_lr: 1.0299e-05 lr: 1.0299e-05  eta: 0:44:57  time: 1.6740  data_time: 0.0159  memory: 9687  loss: 38.2533  decode.loss_cls: 0.3488  decode.loss_mask: 1.8500  decode.loss_dice: 1.5743  decode.d0.loss_cls: 0.5140  decode.d0.loss_mask: 1.8754  decode.d0.loss_dice: 1.6488  decode.d1.loss_cls: 0.4151  decode.d1.loss_mask: 1.8188  decode.d1.loss_dice: 1.5946  decode.d2.loss_cls: 0.3939  decode.d2.loss_mask: 1.8238  decode.d2.loss_dice: 1.5679  decode.d3.loss_cls: 0.3828  decode.d3.loss_mask: 1.8549  decode.d3.loss_dice: 1.5610  decode.d4.loss_cls: 0.3116  decode.d4.loss_mask: 1.8794  decode.d4.loss_dice: 1.5702  decode.d5.loss_cls: 0.3269  decode.d5.loss_mask: 1.8871  decode.d5.loss_dice: 1.5898  decode.d6.loss_cls: 0.4119  decode.d6.loss_mask: 1.8145  decode.d6.loss_dice: 1.5722  decode.d7.loss_cls: 0.4445  decode.d7.loss_mask: 1.8336  decode.d7.loss_dice: 1.5692  decode.d8.loss_cls: 0.3611  decode.d8.loss_mask: 1.8524  decode.d8.loss_dice: 1.6048
2025/03/29 22:39:45 - mmengine - INFO - Iter(train) [18450/20000]  base_lr: 1.0009e-05 lr: 1.0009e-05  eta: 0:43:33  time: 1.5585  data_time: 0.0167  memory: 9685  loss: 36.6766  decode.loss_cls: 0.2509  decode.loss_mask: 1.7634  decode.loss_dice: 1.6326  decode.d0.loss_cls: 0.4140  decode.d0.loss_mask: 1.7628  decode.d0.loss_dice: 1.7202  decode.d1.loss_cls: 0.2355  decode.d1.loss_mask: 1.7588  decode.d1.loss_dice: 1.6781  decode.d2.loss_cls: 0.2375  decode.d2.loss_mask: 1.7373  decode.d2.loss_dice: 1.6582  decode.d3.loss_cls: 0.2588  decode.d3.loss_mask: 1.7531  decode.d3.loss_dice: 1.6417  decode.d4.loss_cls: 0.2375  decode.d4.loss_mask: 1.7500  decode.d4.loss_dice: 1.6440  decode.d5.loss_cls: 0.2585  decode.d5.loss_mask: 1.7395  decode.d5.loss_dice: 1.6273  decode.d6.loss_cls: 0.2501  decode.d6.loss_mask: 1.7731  decode.d6.loss_dice: 1.6327  decode.d7.loss_cls: 0.2572  decode.d7.loss_mask: 1.7560  decode.d7.loss_dice: 1.6015  decode.d8.loss_cls: 0.2758  decode.d8.loss_mask: 1.7429  decode.d8.loss_dice: 1.6277
2025/03/29 22:41:09 - mmengine - INFO - Iter(train) [18500/20000]  base_lr: 9.7180e-06 lr: 9.7180e-06  eta: 0:42:09  time: 1.5583  data_time: 0.0168  memory: 9685  loss: 37.7435  decode.loss_cls: 0.3220  decode.loss_mask: 1.7989  decode.loss_dice: 1.6096  decode.d0.loss_cls: 0.3819  decode.d0.loss_mask: 1.8532  decode.d0.loss_dice: 1.7830  decode.d1.loss_cls: 0.3388  decode.d1.loss_mask: 1.7850  decode.d1.loss_dice: 1.6549  decode.d2.loss_cls: 0.3073  decode.d2.loss_mask: 1.8012  decode.d2.loss_dice: 1.6156  decode.d3.loss_cls: 0.2938  decode.d3.loss_mask: 1.8124  decode.d3.loss_dice: 1.6582  decode.d4.loss_cls: 0.3019  decode.d4.loss_mask: 1.7950  decode.d4.loss_dice: 1.6436  decode.d5.loss_cls: 0.3153  decode.d5.loss_mask: 1.7899  decode.d5.loss_dice: 1.6194  decode.d6.loss_cls: 0.3267  decode.d6.loss_mask: 1.7960  decode.d6.loss_dice: 1.6445  decode.d7.loss_cls: 0.3128  decode.d7.loss_mask: 1.7924  decode.d7.loss_dice: 1.6255  decode.d8.loss_cls: 0.3250  decode.d8.loss_mask: 1.8003  decode.d8.loss_dice: 1.6394
2025/03/29 22:42:34 - mmengine - INFO - Iter(train) [18550/20000]  base_lr: 9.4259e-06 lr: 9.4259e-06  eta: 0:40:44  time: 1.5607  data_time: 0.0165  memory: 9680  loss: 34.0790  decode.loss_cls: 0.1948  decode.loss_mask: 1.6984  decode.loss_dice: 1.4704  decode.d0.loss_cls: 0.2716  decode.d0.loss_mask: 1.7375  decode.d0.loss_dice: 1.5651  decode.d1.loss_cls: 0.2051  decode.d1.loss_mask: 1.6991  decode.d1.loss_dice: 1.4985  decode.d2.loss_cls: 0.1762  decode.d2.loss_mask: 1.7074  decode.d2.loss_dice: 1.5287  decode.d3.loss_cls: 0.2076  decode.d3.loss_mask: 1.6905  decode.d3.loss_dice: 1.4678  decode.d4.loss_cls: 0.2174  decode.d4.loss_mask: 1.7036  decode.d4.loss_dice: 1.4982  decode.d5.loss_cls: 0.2028  decode.d5.loss_mask: 1.7125  decode.d5.loss_dice: 1.4737  decode.d6.loss_cls: 0.2075  decode.d6.loss_mask: 1.6935  decode.d6.loss_dice: 1.4588  decode.d7.loss_cls: 0.2192  decode.d7.loss_mask: 1.7064  decode.d7.loss_dice: 1.4825  decode.d8.loss_cls: 0.2036  decode.d8.loss_mask: 1.6969  decode.d8.loss_dice: 1.4836
2025/03/29 22:43:59 - mmengine - INFO - Iter(train) [18600/20000]  base_lr: 9.1329e-06 lr: 9.1329e-06  eta: 0:39:20  time: 1.5598  data_time: 0.0166  memory: 9695  loss: 38.1446  decode.loss_cls: 0.3596  decode.loss_mask: 1.9063  decode.loss_dice: 1.5771  decode.d0.loss_cls: 0.4820  decode.d0.loss_mask: 1.9272  decode.d0.loss_dice: 1.6267  decode.d1.loss_cls: 0.3702  decode.d1.loss_mask: 1.8590  decode.d1.loss_dice: 1.5540  decode.d2.loss_cls: 0.3488  decode.d2.loss_mask: 1.8801  decode.d2.loss_dice: 1.5655  decode.d3.loss_cls: 0.3610  decode.d3.loss_mask: 1.8513  decode.d3.loss_dice: 1.5375  decode.d4.loss_cls: 0.3412  decode.d4.loss_mask: 1.8628  decode.d4.loss_dice: 1.5253  decode.d5.loss_cls: 0.3480  decode.d5.loss_mask: 1.9012  decode.d5.loss_dice: 1.5595  decode.d6.loss_cls: 0.3747  decode.d6.loss_mask: 1.8824  decode.d6.loss_dice: 1.5629  decode.d7.loss_cls: 0.3131  decode.d7.loss_mask: 1.8873  decode.d7.loss_dice: 1.5867  decode.d8.loss_cls: 0.3365  decode.d8.loss_mask: 1.8809  decode.d8.loss_dice: 1.5761
2025/03/29 22:45:23 - mmengine - INFO - Iter(train) [18650/20000]  base_lr: 8.8388e-06 lr: 8.8388e-06  eta: 0:37:56  time: 1.5594  data_time: 0.0162  memory: 9696  loss: 35.0595  decode.loss_cls: 0.2996  decode.loss_mask: 1.6537  decode.loss_dice: 1.5265  decode.d0.loss_cls: 0.4020  decode.d0.loss_mask: 1.7028  decode.d0.loss_dice: 1.6127  decode.d1.loss_cls: 0.3188  decode.d1.loss_mask: 1.6877  decode.d1.loss_dice: 1.5490  decode.d2.loss_cls: 0.2548  decode.d2.loss_mask: 1.6746  decode.d2.loss_dice: 1.5425  decode.d3.loss_cls: 0.2660  decode.d3.loss_mask: 1.6431  decode.d3.loss_dice: 1.5345  decode.d4.loss_cls: 0.2754  decode.d4.loss_mask: 1.6564  decode.d4.loss_dice: 1.5498  decode.d5.loss_cls: 0.2726  decode.d5.loss_mask: 1.6608  decode.d5.loss_dice: 1.5417  decode.d6.loss_cls: 0.3214  decode.d6.loss_mask: 1.6331  decode.d6.loss_dice: 1.5231  decode.d7.loss_cls: 0.3271  decode.d7.loss_mask: 1.6399  decode.d7.loss_dice: 1.5204  decode.d8.loss_cls: 0.3050  decode.d8.loss_mask: 1.6404  decode.d8.loss_dice: 1.5240
2025/03/29 22:46:48 - mmengine - INFO - Iter(train) [18700/20000]  base_lr: 8.5436e-06 lr: 8.5436e-06  eta: 0:36:32  time: 1.5576  data_time: 0.0163  memory: 9677  loss: 30.8288  decode.loss_cls: 0.3154  decode.loss_mask: 1.4694  decode.loss_dice: 1.2937  decode.d0.loss_cls: 0.4076  decode.d0.loss_mask: 1.4314  decode.d0.loss_dice: 1.3969  decode.d1.loss_cls: 0.3544  decode.d1.loss_mask: 1.4301  decode.d1.loss_dice: 1.3092  decode.d2.loss_cls: 0.3114  decode.d2.loss_mask: 1.4255  decode.d2.loss_dice: 1.3107  decode.d3.loss_cls: 0.3125  decode.d3.loss_mask: 1.4295  decode.d3.loss_dice: 1.2967  decode.d4.loss_cls: 0.3071  decode.d4.loss_mask: 1.4390  decode.d4.loss_dice: 1.3021  decode.d5.loss_cls: 0.3454  decode.d5.loss_mask: 1.4419  decode.d5.loss_dice: 1.2915  decode.d6.loss_cls: 0.2945  decode.d6.loss_mask: 1.4576  decode.d6.loss_dice: 1.2902  decode.d7.loss_cls: 0.2940  decode.d7.loss_mask: 1.4730  decode.d7.loss_dice: 1.3236  decode.d8.loss_cls: 0.3279  decode.d8.loss_mask: 1.4534  decode.d8.loss_dice: 1.2931
2025/03/29 22:48:12 - mmengine - INFO - Iter(train) [18750/20000]  base_lr: 8.2473e-06 lr: 8.2473e-06  eta: 0:35:07  time: 1.4757  data_time: 0.0160  memory: 9688  loss: 35.7523  decode.loss_cls: 0.2494  decode.loss_mask: 1.7794  decode.loss_dice: 1.5448  decode.d0.loss_cls: 0.4155  decode.d0.loss_mask: 1.7825  decode.d0.loss_dice: 1.5846  decode.d1.loss_cls: 0.2563  decode.d1.loss_mask: 1.8006  decode.d1.loss_dice: 1.5421  decode.d2.loss_cls: 0.2068  decode.d2.loss_mask: 1.8034  decode.d2.loss_dice: 1.5287  decode.d3.loss_cls: 0.2489  decode.d3.loss_mask: 1.7600  decode.d3.loss_dice: 1.5151  decode.d4.loss_cls: 0.2374  decode.d4.loss_mask: 1.7711  decode.d4.loss_dice: 1.5264  decode.d5.loss_cls: 0.2366  decode.d5.loss_mask: 1.7784  decode.d5.loss_dice: 1.5331  decode.d6.loss_cls: 0.2513  decode.d6.loss_mask: 1.7774  decode.d6.loss_dice: 1.5330  decode.d7.loss_cls: 0.2603  decode.d7.loss_mask: 1.7613  decode.d7.loss_dice: 1.5105  decode.d8.loss_cls: 0.2599  decode.d8.loss_mask: 1.7809  decode.d8.loss_dice: 1.5164
2025/03/29 22:49:36 - mmengine - INFO - Iter(train) [18800/20000]  base_lr: 7.9498e-06 lr: 7.9498e-06  eta: 0:33:43  time: 1.4762  data_time: 0.0159  memory: 9680  loss: 34.8750  decode.loss_cls: 0.3368  decode.loss_mask: 1.5919  decode.loss_dice: 1.5592  decode.d0.loss_cls: 0.4153  decode.d0.loss_mask: 1.6242  decode.d0.loss_dice: 1.6241  decode.d1.loss_cls: 0.3395  decode.d1.loss_mask: 1.6016  decode.d1.loss_dice: 1.5607  decode.d2.loss_cls: 0.3222  decode.d2.loss_mask: 1.6162  decode.d2.loss_dice: 1.5391  decode.d3.loss_cls: 0.3032  decode.d3.loss_mask: 1.6082  decode.d3.loss_dice: 1.5139  decode.d4.loss_cls: 0.3224  decode.d4.loss_mask: 1.6022  decode.d4.loss_dice: 1.5595  decode.d5.loss_cls: 0.3229  decode.d5.loss_mask: 1.6062  decode.d5.loss_dice: 1.5317  decode.d6.loss_cls: 0.3205  decode.d6.loss_mask: 1.6014  decode.d6.loss_dice: 1.5300  decode.d7.loss_cls: 0.2957  decode.d7.loss_mask: 1.6160  decode.d7.loss_dice: 1.5616  decode.d8.loss_cls: 0.3025  decode.d8.loss_mask: 1.5980  decode.d8.loss_dice: 1.5483
2025/03/29 22:51:08 - mmengine - INFO - Iter(train) [18850/20000]  base_lr: 7.6510e-06 lr: 7.6510e-06  eta: 0:32:19  time: 1.7822  data_time: 0.0161  memory: 9688  loss: 35.8024  decode.loss_cls: 0.2439  decode.loss_mask: 1.8162  decode.loss_dice: 1.5505  decode.d0.loss_cls: 0.3427  decode.d0.loss_mask: 1.8291  decode.d0.loss_dice: 1.5969  decode.d1.loss_cls: 0.2443  decode.d1.loss_mask: 1.7896  decode.d1.loss_dice: 1.5588  decode.d2.loss_cls: 0.2417  decode.d2.loss_mask: 1.7910  decode.d2.loss_dice: 1.5244  decode.d3.loss_cls: 0.2547  decode.d3.loss_mask: 1.7702  decode.d3.loss_dice: 1.4979  decode.d4.loss_cls: 0.2383  decode.d4.loss_mask: 1.7879  decode.d4.loss_dice: 1.5282  decode.d5.loss_cls: 0.2638  decode.d5.loss_mask: 1.7640  decode.d5.loss_dice: 1.5087  decode.d6.loss_cls: 0.2611  decode.d6.loss_mask: 1.7691  decode.d6.loss_dice: 1.5349  decode.d7.loss_cls: 0.2625  decode.d7.loss_mask: 1.7679  decode.d7.loss_dice: 1.5244  decode.d8.loss_cls: 0.2633  decode.d8.loss_mask: 1.7638  decode.d8.loss_dice: 1.5126
2025/03/29 22:52:39 - mmengine - INFO - Iter(train) [18900/20000]  base_lr: 7.3510e-06 lr: 7.3510e-06  eta: 0:30:55  time: 1.7849  data_time: 0.0168  memory: 9682  loss: 37.2767  decode.loss_cls: 0.1731  decode.loss_mask: 1.9285  decode.loss_dice: 1.6001  decode.d0.loss_cls: 0.3404  decode.d0.loss_mask: 1.9041  decode.d0.loss_dice: 1.6113  decode.d1.loss_cls: 0.2125  decode.d1.loss_mask: 1.9261  decode.d1.loss_dice: 1.5832  decode.d2.loss_cls: 0.1909  decode.d2.loss_mask: 1.9465  decode.d2.loss_dice: 1.5922  decode.d3.loss_cls: 0.2259  decode.d3.loss_mask: 1.9033  decode.d3.loss_dice: 1.5888  decode.d4.loss_cls: 0.2221  decode.d4.loss_mask: 1.8960  decode.d4.loss_dice: 1.5887  decode.d5.loss_cls: 0.2102  decode.d5.loss_mask: 1.9120  decode.d5.loss_dice: 1.5910  decode.d6.loss_cls: 0.2223  decode.d6.loss_mask: 1.9238  decode.d6.loss_dice: 1.5715  decode.d7.loss_cls: 0.1867  decode.d7.loss_mask: 1.9283  decode.d7.loss_dice: 1.6027  decode.d8.loss_cls: 0.1787  decode.d8.loss_mask: 1.9166  decode.d8.loss_dice: 1.5993
2025/03/29 22:54:08 - mmengine - INFO - Iter(train) [18950/20000]  base_lr: 7.0496e-06 lr: 7.0496e-06  eta: 0:29:31  time: 1.7897  data_time: 0.0186  memory: 9684  loss: 32.7012  decode.loss_cls: 0.2719  decode.loss_mask: 1.5286  decode.loss_dice: 1.4583  decode.d0.loss_cls: 0.4315  decode.d0.loss_mask: 1.5422  decode.d0.loss_dice: 1.5291  decode.d1.loss_cls: 0.3024  decode.d1.loss_mask: 1.5260  decode.d1.loss_dice: 1.4555  decode.d2.loss_cls: 0.2960  decode.d2.loss_mask: 1.5101  decode.d2.loss_dice: 1.4698  decode.d3.loss_cls: 0.2963  decode.d3.loss_mask: 1.5187  decode.d3.loss_dice: 1.4337  decode.d4.loss_cls: 0.2919  decode.d4.loss_mask: 1.4966  decode.d4.loss_dice: 1.4305  decode.d5.loss_cls: 0.2808  decode.d5.loss_mask: 1.5161  decode.d5.loss_dice: 1.4222  decode.d6.loss_cls: 0.2699  decode.d6.loss_mask: 1.5149  decode.d6.loss_dice: 1.4331  decode.d7.loss_cls: 0.2809  decode.d7.loss_mask: 1.5184  decode.d7.loss_dice: 1.4447  decode.d8.loss_cls: 0.2412  decode.d8.loss_mask: 1.5327  decode.d8.loss_dice: 1.4570
2025/03/29 22:55:37 - mmengine - INFO - Exp name: u2r_20250329_122454
2025/03/29 22:55:37 - mmengine - INFO - Iter(train) [19000/20000]  base_lr: 6.7467e-06 lr: 6.7467e-06  eta: 0:28:07  time: 1.7786  data_time: 0.0180  memory: 9693  loss: 34.8386  decode.loss_cls: 0.2685  decode.loss_mask: 1.6823  decode.loss_dice: 1.5120  decode.d0.loss_cls: 0.4393  decode.d0.loss_mask: 1.7039  decode.d0.loss_dice: 1.5579  decode.d1.loss_cls: 0.2909  decode.d1.loss_mask: 1.6840  decode.d1.loss_dice: 1.5090  decode.d2.loss_cls: 0.2789  decode.d2.loss_mask: 1.6749  decode.d2.loss_dice: 1.5084  decode.d3.loss_cls: 0.2770  decode.d3.loss_mask: 1.6815  decode.d3.loss_dice: 1.4971  decode.d4.loss_cls: 0.2669  decode.d4.loss_mask: 1.6679  decode.d4.loss_dice: 1.5100  decode.d5.loss_cls: 0.2689  decode.d5.loss_mask: 1.6721  decode.d5.loss_dice: 1.4983  decode.d6.loss_cls: 0.2733  decode.d6.loss_mask: 1.6856  decode.d6.loss_dice: 1.4955  decode.d7.loss_cls: 0.2946  decode.d7.loss_mask: 1.6874  decode.d7.loss_dice: 1.4911  decode.d8.loss_cls: 0.2804  decode.d8.loss_mask: 1.6904  decode.d8.loss_dice: 1.4907
2025/03/29 22:57:02 - mmengine - INFO - Iter(train) [19050/20000]  base_lr: 6.4423e-06 lr: 6.4423e-06  eta: 0:26:43  time: 1.2878  data_time: 0.0166  memory: 9688  loss: 32.1973  decode.loss_cls: 0.2949  decode.loss_mask: 1.5279  decode.loss_dice: 1.3793  decode.d0.loss_cls: 0.3633  decode.d0.loss_mask: 1.5734  decode.d0.loss_dice: 1.5188  decode.d1.loss_cls: 0.3154  decode.d1.loss_mask: 1.5552  decode.d1.loss_dice: 1.3739  decode.d2.loss_cls: 0.2726  decode.d2.loss_mask: 1.5443  decode.d2.loss_dice: 1.3473  decode.d3.loss_cls: 0.2832  decode.d3.loss_mask: 1.5492  decode.d3.loss_dice: 1.3846  decode.d4.loss_cls: 0.2745  decode.d4.loss_mask: 1.5495  decode.d4.loss_dice: 1.3787  decode.d5.loss_cls: 0.3162  decode.d5.loss_mask: 1.5127  decode.d5.loss_dice: 1.3518  decode.d6.loss_cls: 0.2970  decode.d6.loss_mask: 1.5288  decode.d6.loss_dice: 1.3401  decode.d7.loss_cls: 0.3120  decode.d7.loss_mask: 1.5276  decode.d7.loss_dice: 1.3397  decode.d8.loss_cls: 0.3039  decode.d8.loss_mask: 1.5288  decode.d8.loss_dice: 1.3525
2025/03/29 22:57:44 - mmengine - INFO - Iter(train) [19100/20000]  base_lr: 6.1364e-06 lr: 6.1364e-06  eta: 0:25:16  time: 0.8487  data_time: 0.0155  memory: 9685  loss: 34.4309  decode.loss_cls: 0.2401  decode.loss_mask: 1.6965  decode.loss_dice: 1.4880  decode.d0.loss_cls: 0.3696  decode.d0.loss_mask: 1.6974  decode.d0.loss_dice: 1.5404  decode.d1.loss_cls: 0.2460  decode.d1.loss_mask: 1.6711  decode.d1.loss_dice: 1.4976  decode.d2.loss_cls: 0.2404  decode.d2.loss_mask: 1.6788  decode.d2.loss_dice: 1.4874  decode.d3.loss_cls: 0.2448  decode.d3.loss_mask: 1.6912  decode.d3.loss_dice: 1.4858  decode.d4.loss_cls: 0.2703  decode.d4.loss_mask: 1.6713  decode.d4.loss_dice: 1.4846  decode.d5.loss_cls: 0.2645  decode.d5.loss_mask: 1.6851  decode.d5.loss_dice: 1.4879  decode.d6.loss_cls: 0.2515  decode.d6.loss_mask: 1.7100  decode.d6.loss_dice: 1.4793  decode.d7.loss_cls: 0.2668  decode.d7.loss_mask: 1.6806  decode.d7.loss_dice: 1.4788  decode.d8.loss_cls: 0.2483  decode.d8.loss_mask: 1.6851  decode.d8.loss_dice: 1.4916
2025/03/29 22:58:27 - mmengine - INFO - Iter(train) [19150/20000]  base_lr: 5.8287e-06 lr: 5.8287e-06  eta: 0:23:50  time: 0.8518  data_time: 0.0160  memory: 9702  loss: 37.1582  decode.loss_cls: 0.2519  decode.loss_mask: 1.8811  decode.loss_dice: 1.5468  decode.d0.loss_cls: 0.3699  decode.d0.loss_mask: 1.8880  decode.d0.loss_dice: 1.6060  decode.d1.loss_cls: 0.2355  decode.d1.loss_mask: 1.9108  decode.d1.loss_dice: 1.5963  decode.d2.loss_cls: 0.2477  decode.d2.loss_mask: 1.9088  decode.d2.loss_dice: 1.5717  decode.d3.loss_cls: 0.2428  decode.d3.loss_mask: 1.8985  decode.d3.loss_dice: 1.5738  decode.d4.loss_cls: 0.2193  decode.d4.loss_mask: 1.8935  decode.d4.loss_dice: 1.5738  decode.d5.loss_cls: 0.1918  decode.d5.loss_mask: 1.9100  decode.d5.loss_dice: 1.5816  decode.d6.loss_cls: 0.2031  decode.d6.loss_mask: 1.8952  decode.d6.loss_dice: 1.5587  decode.d7.loss_cls: 0.2082  decode.d7.loss_mask: 1.9015  decode.d7.loss_dice: 1.5768  decode.d8.loss_cls: 0.2459  decode.d8.loss_mask: 1.8861  decode.d8.loss_dice: 1.5834
2025/03/29 22:59:10 - mmengine - INFO - Iter(train) [19200/20000]  base_lr: 5.5192e-06 lr: 5.5192e-06  eta: 0:22:24  time: 0.8470  data_time: 0.0160  memory: 9688  loss: 35.8928  decode.loss_cls: 0.3694  decode.loss_mask: 1.6954  decode.loss_dice: 1.5042  decode.d0.loss_cls: 0.4369  decode.d0.loss_mask: 1.7238  decode.d0.loss_dice: 1.5958  decode.d1.loss_cls: 0.3662  decode.d1.loss_mask: 1.6918  decode.d1.loss_dice: 1.5292  decode.d2.loss_cls: 0.3581  decode.d2.loss_mask: 1.6998  decode.d2.loss_dice: 1.4941  decode.d3.loss_cls: 0.3632  decode.d3.loss_mask: 1.6914  decode.d3.loss_dice: 1.4802  decode.d4.loss_cls: 0.3526  decode.d4.loss_mask: 1.6932  decode.d4.loss_dice: 1.5369  decode.d5.loss_cls: 0.3857  decode.d5.loss_mask: 1.7000  decode.d5.loss_dice: 1.4989  decode.d6.loss_cls: 0.3667  decode.d6.loss_mask: 1.6961  decode.d6.loss_dice: 1.5161  decode.d7.loss_cls: 0.3415  decode.d7.loss_mask: 1.7029  decode.d7.loss_dice: 1.5188  decode.d8.loss_cls: 0.3567  decode.d8.loss_mask: 1.7028  decode.d8.loss_dice: 1.5244
2025/03/29 22:59:53 - mmengine - INFO - Iter(train) [19250/20000]  base_lr: 5.2077e-06 lr: 5.2077e-06  eta: 0:20:59  time: 0.8479  data_time: 0.0159  memory: 9692  loss: 34.7351  decode.loss_cls: 0.4329  decode.loss_mask: 1.5827  decode.loss_dice: 1.4635  decode.d0.loss_cls: 0.4279  decode.d0.loss_mask: 1.5951  decode.d0.loss_dice: 1.5697  decode.d1.loss_cls: 0.4434  decode.d1.loss_mask: 1.5866  decode.d1.loss_dice: 1.4716  decode.d2.loss_cls: 0.4289  decode.d2.loss_mask: 1.5744  decode.d2.loss_dice: 1.5021  decode.d3.loss_cls: 0.3994  decode.d3.loss_mask: 1.5783  decode.d3.loss_dice: 1.4416  decode.d4.loss_cls: 0.3919  decode.d4.loss_mask: 1.5652  decode.d4.loss_dice: 1.4810  decode.d5.loss_cls: 0.4019  decode.d5.loss_mask: 1.5573  decode.d5.loss_dice: 1.4907  decode.d6.loss_cls: 0.3872  decode.d6.loss_mask: 1.5636  decode.d6.loss_dice: 1.4748  decode.d7.loss_cls: 0.3724  decode.d7.loss_mask: 1.5987  decode.d7.loss_dice: 1.4859  decode.d8.loss_cls: 0.4159  decode.d8.loss_mask: 1.5752  decode.d8.loss_dice: 1.4754
2025/03/29 23:00:35 - mmengine - INFO - Iter(train) [19300/20000]  base_lr: 4.8942e-06 lr: 4.8942e-06  eta: 0:19:33  time: 0.8450  data_time: 0.0156  memory: 9693  loss: 34.4783  decode.loss_cls: 0.3321  decode.loss_mask: 1.5815  decode.loss_dice: 1.5130  decode.d0.loss_cls: 0.5156  decode.d0.loss_mask: 1.6140  decode.d0.loss_dice: 1.5216  decode.d1.loss_cls: 0.3627  decode.d1.loss_mask: 1.5856  decode.d1.loss_dice: 1.5051  decode.d2.loss_cls: 0.3626  decode.d2.loss_mask: 1.5840  decode.d2.loss_dice: 1.4828  decode.d3.loss_cls: 0.3678  decode.d3.loss_mask: 1.5882  decode.d3.loss_dice: 1.5081  decode.d4.loss_cls: 0.3348  decode.d4.loss_mask: 1.5811  decode.d4.loss_dice: 1.5019  decode.d5.loss_cls: 0.3052  decode.d5.loss_mask: 1.5833  decode.d5.loss_dice: 1.5022  decode.d6.loss_cls: 0.3137  decode.d6.loss_mask: 1.5883  decode.d6.loss_dice: 1.5029  decode.d7.loss_cls: 0.3161  decode.d7.loss_mask: 1.5932  decode.d7.loss_dice: 1.5074  decode.d8.loss_cls: 0.3514  decode.d8.loss_mask: 1.5686  decode.d8.loss_dice: 1.5034
2025/03/29 23:01:18 - mmengine - INFO - Iter(train) [19350/20000]  base_lr: 4.5784e-06 lr: 4.5784e-06  eta: 0:18:08  time: 0.8608  data_time: 0.0168  memory: 9689  loss: 32.6360  decode.loss_cls: 0.3254  decode.loss_mask: 1.5098  decode.loss_dice: 1.4426  decode.d0.loss_cls: 0.5284  decode.d0.loss_mask: 1.4942  decode.d0.loss_dice: 1.4613  decode.d1.loss_cls: 0.3365  decode.d1.loss_mask: 1.4979  decode.d1.loss_dice: 1.4242  decode.d2.loss_cls: 0.3524  decode.d2.loss_mask: 1.4999  decode.d2.loss_dice: 1.4167  decode.d3.loss_cls: 0.3295  decode.d3.loss_mask: 1.4888  decode.d3.loss_dice: 1.4214  decode.d4.loss_cls: 0.3031  decode.d4.loss_mask: 1.5056  decode.d4.loss_dice: 1.4097  decode.d5.loss_cls: 0.3048  decode.d5.loss_mask: 1.4835  decode.d5.loss_dice: 1.4115  decode.d6.loss_cls: 0.3117  decode.d6.loss_mask: 1.5015  decode.d6.loss_dice: 1.4100  decode.d7.loss_cls: 0.3350  decode.d7.loss_mask: 1.4803  decode.d7.loss_dice: 1.3964  decode.d8.loss_cls: 0.3243  decode.d8.loss_mask: 1.5104  decode.d8.loss_dice: 1.4192
2025/03/29 23:02:02 - mmengine - INFO - Iter(train) [19400/20000]  base_lr: 4.2602e-06 lr: 4.2602e-06  eta: 0:16:43  time: 0.8930  data_time: 0.0161  memory: 9670  loss: 33.8817  decode.loss_cls: 0.3211  decode.loss_mask: 1.5404  decode.loss_dice: 1.5230  decode.d0.loss_cls: 0.4763  decode.d0.loss_mask: 1.5526  decode.d0.loss_dice: 1.5737  decode.d1.loss_cls: 0.3414  decode.d1.loss_mask: 1.5314  decode.d1.loss_dice: 1.5068  decode.d2.loss_cls: 0.3226  decode.d2.loss_mask: 1.5447  decode.d2.loss_dice: 1.4994  decode.d3.loss_cls: 0.3099  decode.d3.loss_mask: 1.5317  decode.d3.loss_dice: 1.4795  decode.d4.loss_cls: 0.3217  decode.d4.loss_mask: 1.5246  decode.d4.loss_dice: 1.4691  decode.d5.loss_cls: 0.3035  decode.d5.loss_mask: 1.5542  decode.d5.loss_dice: 1.4819  decode.d6.loss_cls: 0.3049  decode.d6.loss_mask: 1.5190  decode.d6.loss_dice: 1.5066  decode.d7.loss_cls: 0.3217  decode.d7.loss_mask: 1.5325  decode.d7.loss_dice: 1.5386  decode.d8.loss_cls: 0.3599  decode.d8.loss_mask: 1.5527  decode.d8.loss_dice: 1.5364
2025/03/29 23:02:46 - mmengine - INFO - Iter(train) [19450/20000]  base_lr: 3.9393e-06 lr: 3.9393e-06  eta: 0:15:18  time: 0.8912  data_time: 0.0162  memory: 9685  loss: 34.4828  decode.loss_cls: 0.1732  decode.loss_mask: 1.7736  decode.loss_dice: 1.4619  decode.d0.loss_cls: 0.3316  decode.d0.loss_mask: 1.8291  decode.d0.loss_dice: 1.5180  decode.d1.loss_cls: 0.2243  decode.d1.loss_mask: 1.7658  decode.d1.loss_dice: 1.4464  decode.d2.loss_cls: 0.1765  decode.d2.loss_mask: 1.7858  decode.d2.loss_dice: 1.4854  decode.d3.loss_cls: 0.1869  decode.d3.loss_mask: 1.7812  decode.d3.loss_dice: 1.4664  decode.d4.loss_cls: 0.1969  decode.d4.loss_mask: 1.7763  decode.d4.loss_dice: 1.4480  decode.d5.loss_cls: 0.1780  decode.d5.loss_mask: 1.7672  decode.d5.loss_dice: 1.4507  decode.d6.loss_cls: 0.1899  decode.d6.loss_mask: 1.7815  decode.d6.loss_dice: 1.4515  decode.d7.loss_cls: 0.1837  decode.d7.loss_mask: 1.7789  decode.d7.loss_dice: 1.4694  decode.d8.loss_cls: 0.1797  decode.d8.loss_mask: 1.7669  decode.d8.loss_dice: 1.4581
2025/03/29 23:03:29 - mmengine - INFO - Iter(train) [19500/20000]  base_lr: 3.6155e-06 lr: 3.6155e-06  eta: 0:13:54  time: 0.8433  data_time: 0.0156  memory: 9689  loss: 34.4792  decode.loss_cls: 0.2986  decode.loss_mask: 1.6386  decode.loss_dice: 1.4952  decode.d0.loss_cls: 0.4228  decode.d0.loss_mask: 1.6306  decode.d0.loss_dice: 1.5655  decode.d1.loss_cls: 0.3325  decode.d1.loss_mask: 1.6329  decode.d1.loss_dice: 1.4912  decode.d2.loss_cls: 0.3380  decode.d2.loss_mask: 1.6234  decode.d2.loss_dice: 1.4710  decode.d3.loss_cls: 0.3415  decode.d3.loss_mask: 1.6239  decode.d3.loss_dice: 1.4641  decode.d4.loss_cls: 0.3156  decode.d4.loss_mask: 1.6322  decode.d4.loss_dice: 1.4577  decode.d5.loss_cls: 0.3256  decode.d5.loss_mask: 1.6429  decode.d5.loss_dice: 1.4615  decode.d6.loss_cls: 0.3208  decode.d6.loss_mask: 1.6391  decode.d6.loss_dice: 1.4594  decode.d7.loss_cls: 0.3005  decode.d7.loss_mask: 1.6235  decode.d7.loss_dice: 1.4563  decode.d8.loss_cls: 0.3395  decode.d8.loss_mask: 1.6474  decode.d8.loss_dice: 1.4876
2025/03/29 23:04:12 - mmengine - INFO - Iter(train) [19550/20000]  base_lr: 3.2884e-06 lr: 3.2884e-06  eta: 0:12:29  time: 0.8444  data_time: 0.0157  memory: 9701  loss: 34.9473  decode.loss_cls: 0.3053  decode.loss_mask: 1.7283  decode.loss_dice: 1.4628  decode.d0.loss_cls: 0.4142  decode.d0.loss_mask: 1.6931  decode.d0.loss_dice: 1.5165  decode.d1.loss_cls: 0.2633  decode.d1.loss_mask: 1.7742  decode.d1.loss_dice: 1.4863  decode.d2.loss_cls: 0.2709  decode.d2.loss_mask: 1.7523  decode.d2.loss_dice: 1.4675  decode.d3.loss_cls: 0.2791  decode.d3.loss_mask: 1.7458  decode.d3.loss_dice: 1.4530  decode.d4.loss_cls: 0.2572  decode.d4.loss_mask: 1.7370  decode.d4.loss_dice: 1.4560  decode.d5.loss_cls: 0.2330  decode.d5.loss_mask: 1.7793  decode.d5.loss_dice: 1.4692  decode.d6.loss_cls: 0.2451  decode.d6.loss_mask: 1.7562  decode.d6.loss_dice: 1.4718  decode.d7.loss_cls: 0.2644  decode.d7.loss_mask: 1.7621  decode.d7.loss_dice: 1.4560  decode.d8.loss_cls: 0.3105  decode.d8.loss_mask: 1.7019  decode.d8.loss_dice: 1.4350
2025/03/29 23:04:55 - mmengine - INFO - Iter(train) [19600/20000]  base_lr: 2.9576e-06 lr: 2.9576e-06  eta: 0:11:05  time: 0.8460  data_time: 0.0157  memory: 9694  loss: 33.3793  decode.loss_cls: 0.2998  decode.loss_mask: 1.5635  decode.loss_dice: 1.4104  decode.d0.loss_cls: 0.3831  decode.d0.loss_mask: 1.6206  decode.d0.loss_dice: 1.5707  decode.d1.loss_cls: 0.3530  decode.d1.loss_mask: 1.5969  decode.d1.loss_dice: 1.4469  decode.d2.loss_cls: 0.2815  decode.d2.loss_mask: 1.5739  decode.d2.loss_dice: 1.4269  decode.d3.loss_cls: 0.3295  decode.d3.loss_mask: 1.5647  decode.d3.loss_dice: 1.4234  decode.d4.loss_cls: 0.3257  decode.d4.loss_mask: 1.5592  decode.d4.loss_dice: 1.3918  decode.d5.loss_cls: 0.3168  decode.d5.loss_mask: 1.5604  decode.d5.loss_dice: 1.4247  decode.d6.loss_cls: 0.3060  decode.d6.loss_mask: 1.5944  decode.d6.loss_dice: 1.4571  decode.d7.loss_cls: 0.2802  decode.d7.loss_mask: 1.5881  decode.d7.loss_dice: 1.4322  decode.d8.loss_cls: 0.3046  decode.d8.loss_mask: 1.5749  decode.d8.loss_dice: 1.4184
2025/03/29 23:05:37 - mmengine - INFO - Iter(train) [19650/20000]  base_lr: 2.6227e-06 lr: 2.6227e-06  eta: 0:09:41  time: 0.8448  data_time: 0.0156  memory: 9685  loss: 32.7423  decode.loss_cls: 0.2116  decode.loss_mask: 1.6524  decode.loss_dice: 1.3864  decode.d0.loss_cls: 0.3987  decode.d0.loss_mask: 1.6623  decode.d0.loss_dice: 1.4390  decode.d1.loss_cls: 0.2370  decode.d1.loss_mask: 1.6653  decode.d1.loss_dice: 1.4247  decode.d2.loss_cls: 0.2199  decode.d2.loss_mask: 1.6483  decode.d2.loss_dice: 1.3785  decode.d3.loss_cls: 0.2164  decode.d3.loss_mask: 1.6349  decode.d3.loss_dice: 1.3787  decode.d4.loss_cls: 0.2088  decode.d4.loss_mask: 1.6458  decode.d4.loss_dice: 1.3798  decode.d5.loss_cls: 0.2098  decode.d5.loss_mask: 1.6418  decode.d5.loss_dice: 1.3864  decode.d6.loss_cls: 0.2202  decode.d6.loss_mask: 1.6388  decode.d6.loss_dice: 1.3650  decode.d7.loss_cls: 0.2188  decode.d7.loss_mask: 1.6436  decode.d7.loss_dice: 1.3909  decode.d8.loss_cls: 0.1983  decode.d8.loss_mask: 1.6565  decode.d8.loss_dice: 1.3836
2025/03/29 23:06:20 - mmengine - INFO - Iter(train) [19700/20000]  base_lr: 2.2830e-06 lr: 2.2830e-06  eta: 0:08:18  time: 0.8926  data_time: 0.0162  memory: 9694  loss: 34.4218  decode.loss_cls: 0.3774  decode.loss_mask: 1.6520  decode.loss_dice: 1.3968  decode.d0.loss_cls: 0.4513  decode.d0.loss_mask: 1.6590  decode.d0.loss_dice: 1.5053  decode.d1.loss_cls: 0.3346  decode.d1.loss_mask: 1.6745  decode.d1.loss_dice: 1.4289  decode.d2.loss_cls: 0.3525  decode.d2.loss_mask: 1.6819  decode.d2.loss_dice: 1.4247  decode.d3.loss_cls: 0.3317  decode.d3.loss_mask: 1.6591  decode.d3.loss_dice: 1.3882  decode.d4.loss_cls: 0.3514  decode.d4.loss_mask: 1.6776  decode.d4.loss_dice: 1.4036  decode.d5.loss_cls: 0.3729  decode.d5.loss_mask: 1.6543  decode.d5.loss_dice: 1.4064  decode.d6.loss_cls: 0.3491  decode.d6.loss_mask: 1.6731  decode.d6.loss_dice: 1.3962  decode.d7.loss_cls: 0.3487  decode.d7.loss_mask: 1.6753  decode.d7.loss_dice: 1.4098  decode.d8.loss_cls: 0.3369  decode.d8.loss_mask: 1.6619  decode.d8.loss_dice: 1.3866
2025/03/29 23:07:03 - mmengine - INFO - Iter(train) [19750/20000]  base_lr: 1.9375e-06 lr: 1.9375e-06  eta: 0:06:54  time: 0.8467  data_time: 0.0158  memory: 9751  loss: 37.6039  decode.loss_cls: 0.2839  decode.loss_mask: 1.8390  decode.loss_dice: 1.5791  decode.d0.loss_cls: 0.3565  decode.d0.loss_mask: 1.8798  decode.d0.loss_dice: 1.7233  decode.d1.loss_cls: 0.2903  decode.d1.loss_mask: 1.8685  decode.d1.loss_dice: 1.6254  decode.d2.loss_cls: 0.3102  decode.d2.loss_mask: 1.8538  decode.d2.loss_dice: 1.6009  decode.d3.loss_cls: 0.2935  decode.d3.loss_mask: 1.8402  decode.d3.loss_dice: 1.6035  decode.d4.loss_cls: 0.2818  decode.d4.loss_mask: 1.8588  decode.d4.loss_dice: 1.5953  decode.d5.loss_cls: 0.2839  decode.d5.loss_mask: 1.8473  decode.d5.loss_dice: 1.6027  decode.d6.loss_cls: 0.2767  decode.d6.loss_mask: 1.8548  decode.d6.loss_dice: 1.5995  decode.d7.loss_cls: 0.2873  decode.d7.loss_mask: 1.8488  decode.d7.loss_dice: 1.5999  decode.d8.loss_cls: 0.2857  decode.d8.loss_mask: 1.8409  decode.d8.loss_dice: 1.5925
2025/03/29 23:07:46 - mmengine - INFO - Iter(train) [19800/20000]  base_lr: 1.5850e-06 lr: 1.5850e-06  eta: 0:05:31  time: 0.8467  data_time: 0.0159  memory: 9689  loss: 35.0467  decode.loss_cls: 0.4115  decode.loss_mask: 1.5984  decode.loss_dice: 1.5158  decode.d0.loss_cls: 0.4821  decode.d0.loss_mask: 1.6072  decode.d0.loss_dice: 1.5828  decode.d1.loss_cls: 0.3891  decode.d1.loss_mask: 1.6028  decode.d1.loss_dice: 1.5215  decode.d2.loss_cls: 0.3501  decode.d2.loss_mask: 1.6218  decode.d2.loss_dice: 1.5168  decode.d3.loss_cls: 0.3438  decode.d3.loss_mask: 1.5898  decode.d3.loss_dice: 1.5093  decode.d4.loss_cls: 0.3554  decode.d4.loss_mask: 1.5976  decode.d4.loss_dice: 1.5129  decode.d5.loss_cls: 0.3517  decode.d5.loss_mask: 1.5926  decode.d5.loss_dice: 1.5032  decode.d6.loss_cls: 0.3604  decode.d6.loss_mask: 1.5979  decode.d6.loss_dice: 1.5241  decode.d7.loss_cls: 0.4082  decode.d7.loss_mask: 1.5933  decode.d7.loss_dice: 1.5228  decode.d8.loss_cls: 0.3828  decode.d8.loss_mask: 1.5691  decode.d8.loss_dice: 1.5321
2025/03/29 23:08:28 - mmengine - INFO - Iter(train) [19850/20000]  base_lr: 1.2234e-06 lr: 1.2234e-06  eta: 0:04:08  time: 0.8459  data_time: 0.0157  memory: 9693  loss: 35.9612  decode.loss_cls: 0.3674  decode.loss_mask: 1.7150  decode.loss_dice: 1.4814  decode.d0.loss_cls: 0.4425  decode.d0.loss_mask: 1.7760  decode.d0.loss_dice: 1.5703  decode.d1.loss_cls: 0.3398  decode.d1.loss_mask: 1.7533  decode.d1.loss_dice: 1.5625  decode.d2.loss_cls: 0.3314  decode.d2.loss_mask: 1.7250  decode.d2.loss_dice: 1.5075  decode.d3.loss_cls: 0.3132  decode.d3.loss_mask: 1.7538  decode.d3.loss_dice: 1.5236  decode.d4.loss_cls: 0.3419  decode.d4.loss_mask: 1.7208  decode.d4.loss_dice: 1.5070  decode.d5.loss_cls: 0.3394  decode.d5.loss_mask: 1.6931  decode.d5.loss_dice: 1.4754  decode.d6.loss_cls: 0.3181  decode.d6.loss_mask: 1.7197  decode.d6.loss_dice: 1.5260  decode.d7.loss_cls: 0.3681  decode.d7.loss_mask: 1.7161  decode.d7.loss_dice: 1.5130  decode.d8.loss_cls: 0.3403  decode.d8.loss_mask: 1.7359  decode.d8.loss_dice: 1.4837
2025/03/29 23:09:12 - mmengine - INFO - Iter(train) [19900/20000]  base_lr: 8.4936e-07 lr: 8.4936e-07  eta: 0:02:45  time: 0.8815  data_time: 0.0169  memory: 9681  loss: 31.6447  decode.loss_cls: 0.2918  decode.loss_mask: 1.4726  decode.loss_dice: 1.3668  decode.d0.loss_cls: 0.4346  decode.d0.loss_mask: 1.4996  decode.d0.loss_dice: 1.4233  decode.d1.loss_cls: 0.3341  decode.d1.loss_mask: 1.4497  decode.d1.loss_dice: 1.3700  decode.d2.loss_cls: 0.3104  decode.d2.loss_mask: 1.4478  decode.d2.loss_dice: 1.3593  decode.d3.loss_cls: 0.2878  decode.d3.loss_mask: 1.4821  decode.d3.loss_dice: 1.3566  decode.d4.loss_cls: 0.3105  decode.d4.loss_mask: 1.4641  decode.d4.loss_dice: 1.3727  decode.d5.loss_cls: 0.2929  decode.d5.loss_mask: 1.4691  decode.d5.loss_dice: 1.3732  decode.d6.loss_cls: 0.3372  decode.d6.loss_mask: 1.4658  decode.d6.loss_dice: 1.3853  decode.d7.loss_cls: 0.3218  decode.d7.loss_mask: 1.4634  decode.d7.loss_dice: 1.3656  decode.d8.loss_cls: 0.2979  decode.d8.loss_mask: 1.4701  decode.d8.loss_dice: 1.3685
2025/03/29 23:09:55 - mmengine - INFO - Iter(train) [19950/20000]  base_lr: 4.5516e-07 lr: 4.5516e-07  eta: 0:01:22  time: 0.8448  data_time: 0.0155  memory: 9689  loss: 34.9276  decode.loss_cls: 0.3320  decode.loss_mask: 1.6344  decode.loss_dice: 1.5434  decode.d0.loss_cls: 0.4883  decode.d0.loss_mask: 1.5945  decode.d0.loss_dice: 1.5656  decode.d1.loss_cls: 0.3348  decode.d1.loss_mask: 1.6266  decode.d1.loss_dice: 1.5628  decode.d2.loss_cls: 0.3609  decode.d2.loss_mask: 1.6390  decode.d2.loss_dice: 1.5006  decode.d3.loss_cls: 0.3454  decode.d3.loss_mask: 1.5979  decode.d3.loss_dice: 1.4788  decode.d4.loss_cls: 0.3643  decode.d4.loss_mask: 1.6179  decode.d4.loss_dice: 1.5169  decode.d5.loss_cls: 0.3448  decode.d5.loss_mask: 1.6070  decode.d5.loss_dice: 1.5036  decode.d6.loss_cls: 0.3707  decode.d6.loss_mask: 1.5804  decode.d6.loss_dice: 1.5033  decode.d7.loss_cls: 0.3260  decode.d7.loss_mask: 1.6254  decode.d7.loss_dice: 1.5238  decode.d8.loss_cls: 0.3058  decode.d8.loss_mask: 1.6327  decode.d8.loss_dice: 1.5000
2025/03/29 23:10:37 - mmengine - INFO - Exp name: u2r_20250329_122454
2025/03/29 23:10:37 - mmengine - INFO - Iter(train) [20000/20000]  base_lr: 0.0000e+00 lr: 0.0000e+00  eta: 0:00:00  time: 0.8444  data_time: 0.0157  memory: 9685  loss: 36.7185  decode.loss_cls: 0.2751  decode.loss_mask: 1.7787  decode.loss_dice: 1.6105  decode.d0.loss_cls: 0.4229  decode.d0.loss_mask: 1.7304  decode.d0.loss_dice: 1.6387  decode.d1.loss_cls: 0.2794  decode.d1.loss_mask: 1.7656  decode.d1.loss_dice: 1.6463  decode.d2.loss_cls: 0.2931  decode.d2.loss_mask: 1.7522  decode.d2.loss_dice: 1.6260  decode.d3.loss_cls: 0.2890  decode.d3.loss_mask: 1.7408  decode.d3.loss_dice: 1.6086  decode.d4.loss_cls: 0.2759  decode.d4.loss_mask: 1.7570  decode.d4.loss_dice: 1.6058  decode.d5.loss_cls: 0.2766  decode.d5.loss_mask: 1.7363  decode.d5.loss_dice: 1.6056  decode.d6.loss_cls: 0.2844  decode.d6.loss_mask: 1.7587  decode.d6.loss_dice: 1.6109  decode.d7.loss_cls: 0.2820  decode.d7.loss_mask: 1.7527  decode.d7.loss_dice: 1.6150  decode.d8.loss_cls: 0.3240  decode.d8.loss_mask: 1.7438  decode.d8.loss_dice: 1.6327
2025/03/29 23:10:37 - mmengine - INFO - Saving checkpoint at 20000 iterations
2025/03/29 23:10:43 - mmengine - INFO - Iter(val) [  50/3968]    eta: 0:06:03  time: 0.0923  data_time: 0.0012  memory: 1849  
2025/03/29 23:10:48 - mmengine - INFO - Iter(val) [ 100/3968]    eta: 0:05:58  time: 0.0926  data_time: 0.0013  memory: 1849  
2025/03/29 23:10:53 - mmengine - INFO - Iter(val) [ 150/3968]    eta: 0:05:53  time: 0.0927  data_time: 0.0013  memory: 1849  
2025/03/29 23:10:57 - mmengine - INFO - Iter(val) [ 200/3968]    eta: 0:05:48  time: 0.0925  data_time: 0.0012  memory: 1849  
2025/03/29 23:11:02 - mmengine - INFO - Iter(val) [ 250/3968]    eta: 0:05:44  time: 0.0926  data_time: 0.0012  memory: 1849  
2025/03/29 23:11:06 - mmengine - INFO - Iter(val) [ 300/3968]    eta: 0:05:39  time: 0.0931  data_time: 0.0013  memory: 1849  
2025/03/29 23:11:11 - mmengine - INFO - Iter(val) [ 350/3968]    eta: 0:05:35  time: 0.0929  data_time: 0.0013  memory: 1849  
2025/03/29 23:11:16 - mmengine - INFO - Iter(val) [ 400/3968]    eta: 0:05:31  time: 0.0928  data_time: 0.0013  memory: 1849  
2025/03/29 23:11:20 - mmengine - INFO - Iter(val) [ 450/3968]    eta: 0:05:26  time: 0.0931  data_time: 0.0013  memory: 1849  
2025/03/29 23:11:25 - mmengine - INFO - Iter(val) [ 500/3968]    eta: 0:05:22  time: 0.0962  data_time: 0.0016  memory: 1849  
2025/03/29 23:11:30 - mmengine - INFO - Iter(val) [ 550/3968]    eta: 0:05:18  time: 0.0995  data_time: 0.0013  memory: 1849  
2025/03/29 23:11:35 - mmengine - INFO - Iter(val) [ 600/3968]    eta: 0:05:16  time: 0.0996  data_time: 0.0013  memory: 1849  
2025/03/29 23:11:40 - mmengine - INFO - Iter(val) [ 650/3968]    eta: 0:05:12  time: 0.0991  data_time: 0.0013  memory: 1849  
2025/03/29 23:11:45 - mmengine - INFO - Iter(val) [ 700/3968]    eta: 0:05:08  time: 0.0931  data_time: 0.0012  memory: 1849  
2025/03/29 23:11:50 - mmengine - INFO - Iter(val) [ 750/3968]    eta: 0:05:03  time: 0.0936  data_time: 0.0013  memory: 1849  
2025/03/29 23:11:54 - mmengine - INFO - Iter(val) [ 800/3968]    eta: 0:04:58  time: 0.0933  data_time: 0.0012  memory: 1849  
2025/03/29 23:11:59 - mmengine - INFO - Iter(val) [ 850/3968]    eta: 0:04:54  time: 0.0952  data_time: 0.0014  memory: 1849  
2025/03/29 23:12:04 - mmengine - INFO - Iter(val) [ 900/3968]    eta: 0:04:49  time: 0.0925  data_time: 0.0012  memory: 1849  
2025/03/29 23:12:08 - mmengine - INFO - Iter(val) [ 950/3968]    eta: 0:04:44  time: 0.0935  data_time: 0.0014  memory: 1849  
2025/03/29 23:12:13 - mmengine - INFO - Iter(val) [1000/3968]    eta: 0:04:39  time: 0.0937  data_time: 0.0013  memory: 1849  
2025/03/29 23:12:18 - mmengine - INFO - Iter(val) [1050/3968]    eta: 0:04:35  time: 0.0932  data_time: 0.0013  memory: 1849  
2025/03/29 23:12:23 - mmengine - INFO - Iter(val) [1100/3968]    eta: 0:04:30  time: 0.0929  data_time: 0.0012  memory: 1849  
2025/03/29 23:12:27 - mmengine - INFO - Iter(val) [1150/3968]    eta: 0:04:25  time: 0.0934  data_time: 0.0012  memory: 1849  
2025/03/29 23:12:32 - mmengine - INFO - Iter(val) [1200/3968]    eta: 0:04:20  time: 0.0932  data_time: 0.0014  memory: 1849  
2025/03/29 23:12:37 - mmengine - INFO - Iter(val) [1250/3968]    eta: 0:04:15  time: 0.0938  data_time: 0.0014  memory: 1849  
2025/03/29 23:12:41 - mmengine - INFO - Iter(val) [1300/3968]    eta: 0:04:11  time: 0.0926  data_time: 0.0012  memory: 1849  
2025/03/29 23:12:46 - mmengine - INFO - Iter(val) [1350/3968]    eta: 0:04:06  time: 0.0946  data_time: 0.0017  memory: 1849  
2025/03/29 23:12:51 - mmengine - INFO - Iter(val) [1400/3968]    eta: 0:04:01  time: 0.1004  data_time: 0.0014  memory: 1849  
2025/03/29 23:12:56 - mmengine - INFO - Iter(val) [1450/3968]    eta: 0:03:57  time: 0.0931  data_time: 0.0012  memory: 1849  
2025/03/29 23:13:00 - mmengine - INFO - Iter(val) [1500/3968]    eta: 0:03:52  time: 0.0936  data_time: 0.0012  memory: 1849  
2025/03/29 23:13:05 - mmengine - INFO - Iter(val) [1550/3968]    eta: 0:03:47  time: 0.0928  data_time: 0.0012  memory: 1849  
2025/03/29 23:13:10 - mmengine - INFO - Iter(val) [1600/3968]    eta: 0:03:42  time: 0.0927  data_time: 0.0012  memory: 1849  
2025/03/29 23:13:14 - mmengine - INFO - Iter(val) [1650/3968]    eta: 0:03:38  time: 0.0932  data_time: 0.0013  memory: 1849  
2025/03/29 23:13:19 - mmengine - INFO - Iter(val) [1700/3968]    eta: 0:03:33  time: 0.0928  data_time: 0.0012  memory: 1849  
2025/03/29 23:13:24 - mmengine - INFO - Iter(val) [1750/3968]    eta: 0:03:28  time: 0.0933  data_time: 0.0012  memory: 1849  
2025/03/29 23:13:28 - mmengine - INFO - Iter(val) [1800/3968]    eta: 0:03:23  time: 0.0928  data_time: 0.0012  memory: 1849  
2025/03/29 23:13:33 - mmengine - INFO - Iter(val) [1850/3968]    eta: 0:03:18  time: 0.0928  data_time: 0.0012  memory: 1849  
2025/03/29 23:13:38 - mmengine - INFO - Iter(val) [1900/3968]    eta: 0:03:14  time: 0.0932  data_time: 0.0013  memory: 1849  
2025/03/29 23:13:42 - mmengine - INFO - Iter(val) [1950/3968]    eta: 0:03:09  time: 0.0927  data_time: 0.0012  memory: 1849  
2025/03/29 23:13:47 - mmengine - INFO - Iter(val) [2000/3968]    eta: 0:03:04  time: 0.0927  data_time: 0.0012  memory: 1849  
2025/03/29 23:13:52 - mmengine - INFO - Iter(val) [2050/3968]    eta: 0:03:00  time: 0.0928  data_time: 0.0012  memory: 1849  
2025/03/29 23:13:56 - mmengine - INFO - Iter(val) [2100/3968]    eta: 0:02:55  time: 0.0927  data_time: 0.0013  memory: 1849  
2025/03/29 23:14:01 - mmengine - INFO - Iter(val) [2150/3968]    eta: 0:02:50  time: 0.0927  data_time: 0.0012  memory: 1849  
2025/03/29 23:14:06 - mmengine - INFO - Iter(val) [2200/3968]    eta: 0:02:45  time: 0.0928  data_time: 0.0012  memory: 1849  
2025/03/29 23:14:10 - mmengine - INFO - Iter(val) [2250/3968]    eta: 0:02:41  time: 0.0928  data_time: 0.0012  memory: 1849  
2025/03/29 23:14:15 - mmengine - INFO - Iter(val) [2300/3968]    eta: 0:02:36  time: 0.0929  data_time: 0.0013  memory: 1849  
2025/03/29 23:14:20 - mmengine - INFO - Iter(val) [2350/3968]    eta: 0:02:31  time: 0.0931  data_time: 0.0013  memory: 1849  
2025/03/29 23:14:24 - mmengine - INFO - Iter(val) [2400/3968]    eta: 0:02:26  time: 0.0930  data_time: 0.0013  memory: 1849  
2025/03/29 23:14:29 - mmengine - INFO - Iter(val) [2450/3968]    eta: 0:02:22  time: 0.0930  data_time: 0.0012  memory: 1849  
2025/03/29 23:14:34 - mmengine - INFO - Iter(val) [2500/3968]    eta: 0:02:17  time: 0.0941  data_time: 0.0014  memory: 1849  
2025/03/29 23:14:39 - mmengine - INFO - Iter(val) [2550/3968]    eta: 0:02:13  time: 0.0996  data_time: 0.0013  memory: 1849  
2025/03/29 23:14:44 - mmengine - INFO - Iter(val) [2600/3968]    eta: 0:02:08  time: 0.0997  data_time: 0.0014  memory: 1849  
2025/03/29 23:14:49 - mmengine - INFO - Iter(val) [2650/3968]    eta: 0:02:03  time: 0.0998  data_time: 0.0013  memory: 1849  
2025/03/29 23:14:54 - mmengine - INFO - Iter(val) [2700/3968]    eta: 0:01:59  time: 0.0966  data_time: 0.0015  memory: 1849  
2025/03/29 23:14:58 - mmengine - INFO - Iter(val) [2750/3968]    eta: 0:01:54  time: 0.0935  data_time: 0.0013  memory: 1849  
2025/03/29 23:15:03 - mmengine - INFO - Iter(val) [2800/3968]    eta: 0:01:49  time: 0.0930  data_time: 0.0012  memory: 1849  
2025/03/29 23:15:08 - mmengine - INFO - Iter(val) [2850/3968]    eta: 0:01:45  time: 0.0930  data_time: 0.0012  memory: 1849  
2025/03/29 23:15:12 - mmengine - INFO - Iter(val) [2900/3968]    eta: 0:01:40  time: 0.0930  data_time: 0.0012  memory: 1849  
2025/03/29 23:15:17 - mmengine - INFO - Iter(val) [2950/3968]    eta: 0:01:35  time: 0.0929  data_time: 0.0012  memory: 1849  
2025/03/29 23:15:22 - mmengine - INFO - Iter(val) [3000/3968]    eta: 0:01:31  time: 0.0930  data_time: 0.0013  memory: 1849  
2025/03/29 23:15:26 - mmengine - INFO - Iter(val) [3050/3968]    eta: 0:01:26  time: 0.0929  data_time: 0.0012  memory: 1849  
2025/03/29 23:15:31 - mmengine - INFO - Iter(val) [3100/3968]    eta: 0:01:21  time: 0.0925  data_time: 0.0012  memory: 1849  
2025/03/29 23:15:36 - mmengine - INFO - Iter(val) [3150/3968]    eta: 0:01:16  time: 0.0927  data_time: 0.0012  memory: 1849  
2025/03/29 23:15:40 - mmengine - INFO - Iter(val) [3200/3968]    eta: 0:01:12  time: 0.0926  data_time: 0.0012  memory: 1849  
2025/03/29 23:15:45 - mmengine - INFO - Iter(val) [3250/3968]    eta: 0:01:07  time: 0.0933  data_time: 0.0014  memory: 1849  
2025/03/29 23:15:50 - mmengine - INFO - Iter(val) [3300/3968]    eta: 0:01:02  time: 0.0928  data_time: 0.0012  memory: 1849  
2025/03/29 23:15:54 - mmengine - INFO - Iter(val) [3350/3968]    eta: 0:00:58  time: 0.0935  data_time: 0.0013  memory: 1849  
2025/03/29 23:15:59 - mmengine - INFO - Iter(val) [3400/3968]    eta: 0:00:53  time: 0.0948  data_time: 0.0016  memory: 1849  
2025/03/29 23:16:04 - mmengine - INFO - Iter(val) [3450/3968]    eta: 0:00:48  time: 0.0930  data_time: 0.0012  memory: 1849  
2025/03/29 23:16:08 - mmengine - INFO - Iter(val) [3500/3968]    eta: 0:00:43  time: 0.0932  data_time: 0.0012  memory: 1849  
2025/03/29 23:16:13 - mmengine - INFO - Iter(val) [3550/3968]    eta: 0:00:39  time: 0.0931  data_time: 0.0012  memory: 1849  
2025/03/29 23:16:18 - mmengine - INFO - Iter(val) [3600/3968]    eta: 0:00:34  time: 0.0928  data_time: 0.0012  memory: 1849  
2025/03/29 23:16:22 - mmengine - INFO - Iter(val) [3650/3968]    eta: 0:00:29  time: 0.0932  data_time: 0.0012  memory: 1849  
2025/03/29 23:16:27 - mmengine - INFO - Iter(val) [3700/3968]    eta: 0:00:25  time: 0.0936  data_time: 0.0012  memory: 1849  
2025/03/29 23:16:32 - mmengine - INFO - Iter(val) [3750/3968]    eta: 0:00:20  time: 0.0932  data_time: 0.0012  memory: 1849  
2025/03/29 23:16:37 - mmengine - INFO - Iter(val) [3800/3968]    eta: 0:00:15  time: 0.0935  data_time: 0.0012  memory: 1849  
2025/03/29 23:16:41 - mmengine - INFO - Iter(val) [3850/3968]    eta: 0:00:11  time: 0.0933  data_time: 0.0012  memory: 1849  
2025/03/29 23:16:46 - mmengine - INFO - Iter(val) [3900/3968]    eta: 0:00:06  time: 0.0938  data_time: 0.0013  memory: 1849  
2025/03/29 23:16:51 - mmengine - INFO - Iter(val) [3950/3968]    eta: 0:00:01  time: 0.0933  data_time: 0.0012  memory: 1849  
2025/03/29 23:16:52 - mmengine - INFO - per class results:
2025/03/29 23:16:52 - mmengine - INFO - 
+--------------+-------+-------+
|    Class     |  IoU  |  Acc  |
+--------------+-------+-------+
|  background  | 58.89 | 91.22 |
|   building   | 60.91 | 69.63 |
|     road     | 44.41 | 48.03 |
|    water     | 64.68 | 72.98 |
|    barren    |  17.3 | 19.51 |
|    forest    | 15.98 | 17.11 |
| agricultural | 54.18 | 58.65 |
+--------------+-------+-------+
2025/03/29 23:16:52 - mmengine - INFO - Iter(val) [3968/3968]    aAcc: 70.8900  mIoU: 45.1900  mAcc: 53.8800  data_time: 0.0013  time: 0.0939
