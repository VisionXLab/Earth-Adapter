2025/03/29 12:21:40 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.9.21 (main, Dec 11 2024, 16:24:11) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 0
    GPU 0: NVIDIA GeForce RTX 3090
    CUDA_HOME: /usr/local/cuda-12.1
    NVCC: Cuda compilation tools, release 12.1, V12.1.66
    GCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0
    PyTorch: 2.1.1+cu121
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.9.2
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=8.9.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.1+cu121
    OpenCV: 4.11.0
    MMEngine: 0.10.7

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 0
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2025/03/29 12:21:40 - mmengine - INFO - Config:
crop_size = (
    512,
    512,
)
data_root = '/home/face/kaichengyang/xiaoxinghu/data'
dataset_type = 'LoveDADataset'
default_hooks = dict(
    checkpoint=dict(
        by_epoch=False,
        interval=2000,
        max_keep_ckpts=1,
        save_best='mIoU',
        type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
embed_multi = dict(decay_mult=0.0, lr_mult=1.0)
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
exp_name = 'DG_spatial_64_cutoff_0.3_fft_pre6'
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    backbone=dict(
        adapter_config=dict(
            cutoff_ratio=0.3,
            dim=64,
            fft_layer=[
                0,
                1,
                2,
                3,
                4,
                5,
            ],
            scale=0.1,
            with_token=False),
        block_chunks=0,
        depth=24,
        embed_dim=1024,
        ffn_bias=True,
        ffn_layer='mlp',
        img_size=512,
        init_cfg=dict(
            checkpoint='checkpoints/dinov2_converted.pth', type='Pretrained'),
        init_values=1e-05,
        mlp_ratio=4,
        moe_adapter_type='earth_adapter',
        num_heads=16,
        patch_size=16,
        proj_bias=True,
        qkv_bias=True,
        type='MOE_Adpter_DinoVisionTransformer'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        enforce_decoder_input_project=False,
        feat_channels=256,
        in_channels=[
            1024,
            1024,
            1024,
            1024,
        ],
        loss_cls=dict(
            class_weight=[
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                0.1,
            ],
            loss_weight=2.0,
            reduction='mean',
            type='mmdet.CrossEntropyLoss',
            use_sigmoid=False),
        loss_dice=dict(
            activate=True,
            eps=1.0,
            loss_weight=5.0,
            naive_dice=True,
            reduction='mean',
            type='mmdet.DiceLoss',
            use_sigmoid=True),
        loss_mask=dict(
            loss_weight=5.0,
            reduction='mean',
            type='mmdet.CrossEntropyLoss',
            use_sigmoid=True),
        num_classes=7,
        num_queries=100,
        num_transformer_feat_level=3,
        out_channels=256,
        pixel_decoder=dict(
            act_cfg=dict(type='ReLU'),
            encoder=dict(
                init_cfg=None,
                layer_cfg=dict(
                    ffn_cfg=dict(
                        act_cfg=dict(inplace=True, type='ReLU'),
                        embed_dims=256,
                        feedforward_channels=1024,
                        ffn_drop=0.0,
                        num_fcs=2),
                    self_attn_cfg=dict(
                        batch_first=True,
                        dropout=0.0,
                        embed_dims=256,
                        im2col_step=64,
                        init_cfg=None,
                        norm_cfg=None,
                        num_heads=8,
                        num_levels=3,
                        num_points=4)),
                num_layers=6),
            init_cfg=None,
            norm_cfg=dict(num_groups=32, type='GN'),
            num_outs=3,
            positional_encoding=dict(normalize=True, num_feats=128),
            type='mmdet.MSDeformAttnPixelDecoder'),
        positional_encoding=dict(normalize=True, num_feats=128),
        strides=[
            4,
            8,
            16,
            32,
        ],
        train_cfg=dict(
            assigner=dict(
                match_costs=[
                    dict(type='mmdet.ClassificationCost', weight=2.0),
                    dict(
                        type='mmdet.CrossEntropyLossCost',
                        use_sigmoid=True,
                        weight=5.0),
                    dict(
                        eps=1.0,
                        pred_act=True,
                        type='mmdet.DiceCost',
                        weight=5.0),
                ],
                type='mmdet.HungarianAssigner'),
            importance_sample_ratio=0.75,
            num_points=12544,
            oversample_ratio=3.0,
            sampler=dict(type='mmdet.MaskPseudoSampler')),
        transformer_decoder=dict(
            init_cfg=None,
            layer_cfg=dict(
                cross_attn_cfg=dict(
                    attn_drop=0.0,
                    batch_first=True,
                    dropout_layer=None,
                    embed_dims=256,
                    num_heads=8,
                    proj_drop=0.0),
                ffn_cfg=dict(
                    act_cfg=dict(inplace=True, type='ReLU'),
                    add_identity=True,
                    dropout_layer=None,
                    embed_dims=256,
                    feedforward_channels=2048,
                    ffn_drop=0.0,
                    num_fcs=2),
                self_attn_cfg=dict(
                    attn_drop=0.0,
                    batch_first=True,
                    dropout_layer=None,
                    embed_dims=256,
                    num_heads=8,
                    proj_drop=0.0)),
            num_layers=9,
            return_intermediate=True),
        type='Mask2FormerHead'),
    test_cfg=dict(crop_size=(
        512,
        512,
    ), mode='slide', stride=(
        341,
        341,
    )),
    train_cfg=dict(),
    type='EncoderDecoder')
num_classes = 19
optim_wrapper = dict(
    constructor='PEFTOptimWrapperConstructor',
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ),
        eps=1e-08,
        lr=0.0001,
        type='AdamW',
        weight_decay=0.05),
    paramwise_cfg=dict(
        custom_keys=dict({
            'learnable_tokens': dict(decay_mult=0.0, lr_mult=1.0),
            'level_embed': dict(decay_mult=0.0, lr_mult=1.0),
            'norm': dict(decay_mult=0.0),
            'query_embed': dict(decay_mult=0.0, lr_mult=1.0),
            'reins.scale': dict(decay_mult=0.0, lr_mult=1.0)
        }),
        norm_decay_mult=0.0))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=20000,
        eta_min=0,
        power=0.9,
        type='PolyLR'),
]
randomness = dict(seed=0)
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='loveda_uda/urban/val/img_dir',
            seg_map_path='loveda_uda/urban/val/ann_dir'),
        data_root='/home/face/kaichengyang/xiaoxinghu/data',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                512,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='LoveDADataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        512,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(max_iters=20000, type='IterBasedTrainLoop', val_interval=2000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='loveda_uda/rural/train/img_dir',
            seg_map_path='loveda_uda/rural/train/ann_dir'),
        data_root='/home/face/kaichengyang/xiaoxinghu/data',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    512,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='LoveDADataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            512,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='loveda_uda/urban/val/img_dir',
            seg_map_path='loveda_uda/urban/val/ann_dir'),
        data_root='/home/face/kaichengyang/xiaoxinghu/data',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                512,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='LoveDADataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
    dict(type='TensorboardVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
        dict(type='TensorboardVisBackend'),
    ])
work_dir = './work_dirs/r2u/DG_spatial_64_cutoff_0.3_fft_pre6/35b71_seed0'

2025/03/29 12:21:45 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2025/03/29 12:21:45 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.scale
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.1.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.1.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.3.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.3.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.4.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.4.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.5.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.5.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.6.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.6.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.7.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.7.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.8.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.8.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.9.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.9.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.10.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.10.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.11.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.11.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.12.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.12.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.13.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.13.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.14.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.14.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.15.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.15.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.16.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.16.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.17.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.17.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.18.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.18.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.19.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.19.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.20.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.20.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.21.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.21.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.22.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.22.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.23.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.layer_norm.23.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.0.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.0.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.0.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.0.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.1.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.1.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.1.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.1.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.2.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.2.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.2.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.2.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.3.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.3.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.3.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.3.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.4.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.4.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.4.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.4.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.5.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.5.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.5.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.5.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.6.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.6.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.6.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.6.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.7.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.7.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.7.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.7.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.8.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.8.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.8.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.8.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.9.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.9.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.9.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.9.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.10.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.10.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.10.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.10.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.11.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.11.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.11.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.11.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.12.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.12.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.12.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.12.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.13.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.13.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.13.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.13.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.14.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.14.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.14.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.14.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.15.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.15.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.15.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.15.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.16.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.16.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.16.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.16.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.17.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.17.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.17.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.17.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.18.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.18.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.18.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.18.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.19.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.19.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.19.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.19.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.20.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.20.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.20.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.20.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.21.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.21.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.21.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.21.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.22.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.22.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.22.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.22.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.23.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.23.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.23.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list1.23.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.0.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.0.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.0.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.0.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.1.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.1.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.1.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.1.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.2.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.2.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.2.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.2.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.3.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.3.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.3.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.3.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.4.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.4.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.4.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.4.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.5.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.5.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.5.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.5.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.6.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.6.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.6.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.6.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.7.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.7.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.7.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.7.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.8.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.8.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.8.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.8.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.9.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.9.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.9.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.9.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.10.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.10.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.10.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.10.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.11.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.11.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.11.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.11.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.12.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.12.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.12.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.12.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.13.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.13.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.13.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.13.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.14.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.14.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.14.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.14.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.15.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.15.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.15.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.15.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.16.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.16.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.16.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.16.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.17.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.17.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.17.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.17.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.18.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.18.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.18.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.18.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.19.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.19.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.19.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.19.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.20.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.20.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.20.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.20.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.21.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.21.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.21.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.21.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.22.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.22.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.22.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.22.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.23.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.23.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.23.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list2.23.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.0.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.0.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.0.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.0.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.1.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.1.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.1.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.1.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.2.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.2.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.2.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.2.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.3.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.3.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.3.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.3.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.4.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.4.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.4.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.4.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.5.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.5.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.5.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.5.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.6.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.6.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.6.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.6.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.7.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.7.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.7.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.7.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.8.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.8.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.8.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.8.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.9.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.9.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.9.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.9.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.10.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.10.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.10.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.10.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.11.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.11.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.11.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.11.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.12.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.12.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.12.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.12.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.13.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.13.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.13.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.13.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.14.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.14.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.14.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.14.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.15.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.15.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.15.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.15.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.16.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.16.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.16.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.16.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.17.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.17.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.17.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.17.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.18.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.18.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.18.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.18.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.19.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.19.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.19.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.19.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.20.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.20.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.20.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.20.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.21.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.21.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.21.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.21.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.22.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.22.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.22.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.22.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.23.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.23.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.23.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.mlp_list3.23.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.0.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.0.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.1.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.1.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.2.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.2.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.3.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.3.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.4.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.4.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.5.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.5.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.6.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.6.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.7.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.7.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.8.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.8.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.9.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.9.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.10.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.10.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.11.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.11.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.12.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.12.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.13.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.13.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.14.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.14.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.15.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.15.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.16.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.16.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.17.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.17.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.18.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.18.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.19.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.19.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.20.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.20.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.21.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.21.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.22.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.22.bias
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.23.weight
2025/03/29 12:21:46 - mmengine - INFO - set_requires_grad----refine_feat.router.23.bias
2025/03/29 12:21:46 - mmengine - INFO - Total trainable params--9638496, All params--313838176, Ratio--3.1%
2025/03/29 12:21:46 - mmengine - INFO - set_train----.refine_feat
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.scale:num of params=24
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.0.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.1.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.2.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.3.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.4.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.5.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.6.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.7.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.8.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.9.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.10.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.11.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.12.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.13.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.14.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.15.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.16.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.17.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.18.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.19.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.20.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.21.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.22.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.weight:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.layer_norm.23.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.0.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.0.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.0.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.0.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.1.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.1.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.1.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.1.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.2.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.2.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.2.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.2.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.3.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.3.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.3.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.3.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.4.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.4.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.4.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.4.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.5.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.5.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.5.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.5.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.6.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.6.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.6.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.6.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.7.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.7.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.7.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.7.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.8.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.8.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.8.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.8.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.9.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.9.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.9.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.9.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.10.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.10.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.10.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.10.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.11.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.11.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.11.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.11.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.12.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.12.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.12.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.12.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.13.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.13.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.13.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.13.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.14.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.14.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.14.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.14.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.15.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.15.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.15.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.15.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.16.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.16.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.16.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.16.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.17.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.17.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.17.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.17.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.18.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.18.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.18.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.18.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.19.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.19.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.19.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.19.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.20.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.20.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.20.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.20.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.21.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.21.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.21.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.21.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.22.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.22.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.22.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.22.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.23.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.23.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.23.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list1.23.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.0.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.0.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.0.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.0.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.1.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.1.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.1.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.1.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.2.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.2.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.2.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.2.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.3.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.3.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.3.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.3.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.4.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.4.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.4.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.4.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.5.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.5.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.5.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.5.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.6.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.6.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.6.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.6.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.7.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.7.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.7.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.7.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.8.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.8.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.8.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.8.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.9.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.9.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.9.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.9.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.10.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.10.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.10.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.10.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.11.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.11.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.11.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.11.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.12.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.12.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.12.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.12.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.13.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.13.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.13.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.13.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.14.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.14.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.14.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.14.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.15.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.15.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.15.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.15.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.16.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.16.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.16.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.16.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.17.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.17.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.17.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.17.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.18.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.18.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.18.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.18.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.19.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.19.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.19.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.19.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.20.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.20.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.20.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.20.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.21.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.21.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.21.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.21.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.22.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.22.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.22.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.22.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.23.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.23.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.23.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list2.23.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.0.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.0.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.0.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.0.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.1.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.1.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.1.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.1.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.2.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.2.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.2.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.2.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.3.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.3.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.3.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.3.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.4.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.4.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.4.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.4.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.5.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.5.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.5.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.5.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.6.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.6.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.6.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.6.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.7.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.7.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.7.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.7.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.8.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.8.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.8.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.8.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.9.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.9.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.9.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.9.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.10.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.10.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.10.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.10.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.11.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.11.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.11.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.11.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.12.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.12.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.12.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.12.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.13.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.13.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.13.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.13.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.14.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.14.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.14.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.14.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.15.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.15.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.15.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.15.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.16.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.16.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.16.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.16.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.17.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.17.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.17.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.17.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.18.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.18.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.18.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.18.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.19.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.19.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.19.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.19.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.20.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.20.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.20.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.20.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.21.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.21.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.21.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.21.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.22.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.22.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.22.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.22.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.23.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.23.0.bias:num of params=64
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.23.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.mlp_list3.23.2.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.0.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.0.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.1.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.1.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.2.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.2.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.3.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.3.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.4.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.4.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.5.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.5.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.6.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.6.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.7.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.7.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.8.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.8.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.9.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.9.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.10.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.10.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.11.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.11.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.12.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.12.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.13.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.13.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.14.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.14.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.15.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.15.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.16.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.16.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.17.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.17.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.18.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.18.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.19.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.19.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.20.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.20.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.21.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.21.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.22.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.22.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.23.weight:num of params=3072
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- backbone.refine_feat.router.23.bias:num of params=3
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.0.conv.weight:num of params=262144
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.0.conv.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.0.gn.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.0.gn.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.0.gn.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.0.gn.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.1.conv.weight:num of params=262144
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.1.conv.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.1.gn.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.1.gn.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.1.gn.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.1.gn.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.2.conv.weight:num of params=262144
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.2.conv.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.2.gn.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.2.gn.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.2.gn.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.input_convs.2.gn.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.sampling_offsets.weight:num of params=49152
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.sampling_offsets.bias:num of params=192
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.attention_weights.weight:num of params=24576
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.attention_weights.bias:num of params=96
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.value_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.value_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.output_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.self_attn.output_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.ffn.layers.0.0.weight:num of params=262144
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.ffn.layers.0.0.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.ffn.layers.1.weight:num of params=262144
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.ffn.layers.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.0.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.0.norms.1.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.sampling_offsets.weight:num of params=49152
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.sampling_offsets.bias:num of params=192
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.attention_weights.weight:num of params=24576
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.attention_weights.bias:num of params=96
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.value_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.value_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.output_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.self_attn.output_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.ffn.layers.0.0.weight:num of params=262144
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.ffn.layers.0.0.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.ffn.layers.1.weight:num of params=262144
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.ffn.layers.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.0.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.1.norms.1.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.sampling_offsets.weight:num of params=49152
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.sampling_offsets.bias:num of params=192
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.attention_weights.weight:num of params=24576
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.attention_weights.bias:num of params=96
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.value_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.value_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.output_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.self_attn.output_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.ffn.layers.0.0.weight:num of params=262144
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.ffn.layers.0.0.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.ffn.layers.1.weight:num of params=262144
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.ffn.layers.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.0.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.2.norms.1.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.sampling_offsets.weight:num of params=49152
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.sampling_offsets.bias:num of params=192
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.attention_weights.weight:num of params=24576
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.attention_weights.bias:num of params=96
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.value_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.value_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.output_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.self_attn.output_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.ffn.layers.0.0.weight:num of params=262144
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.ffn.layers.0.0.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.ffn.layers.1.weight:num of params=262144
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.ffn.layers.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.0.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.3.norms.1.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.sampling_offsets.weight:num of params=49152
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.sampling_offsets.bias:num of params=192
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.attention_weights.weight:num of params=24576
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.attention_weights.bias:num of params=96
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.value_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.value_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.output_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.self_attn.output_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.ffn.layers.0.0.weight:num of params=262144
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.ffn.layers.0.0.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.ffn.layers.1.weight:num of params=262144
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.ffn.layers.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.0.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.4.norms.1.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.sampling_offsets.weight:num of params=49152
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.sampling_offsets.bias:num of params=192
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.attention_weights.weight:num of params=24576
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.attention_weights.bias:num of params=96
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.value_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.value_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.output_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.self_attn.output_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.ffn.layers.0.0.weight:num of params=262144
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.ffn.layers.0.0.bias:num of params=1024
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.ffn.layers.1.weight:num of params=262144
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.ffn.layers.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.0.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.encoder.layers.5.norms.1.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.level_encoding.weight:num of params=768
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.lateral_convs.0.conv.weight:num of params=262144
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.lateral_convs.0.gn.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.lateral_convs.0.gn.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.lateral_convs.0.gn.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.lateral_convs.0.gn.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.output_convs.0.conv.weight:num of params=589824
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.output_convs.0.gn.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.output_convs.0.gn.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.output_convs.0.gn.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.output_convs.0.gn.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.mask_feature.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.pixel_decoder.mask_feature.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.self_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.self_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.self_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.self_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.cross_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.cross_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.ffn.layers.0.0.weight:num of params=524288
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.ffn.layers.0.0.bias:num of params=2048
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.ffn.layers.1.weight:num of params=524288
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.ffn.layers.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.0.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.1.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.0.norms.2.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.self_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.self_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.self_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.self_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.cross_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.cross_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.ffn.layers.0.0.weight:num of params=524288
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.ffn.layers.0.0.bias:num of params=2048
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.ffn.layers.1.weight:num of params=524288
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.ffn.layers.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.0.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.1.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.1.norms.2.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.self_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.self_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.self_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.self_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.cross_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.cross_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.ffn.layers.0.0.weight:num of params=524288
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.ffn.layers.0.0.bias:num of params=2048
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.ffn.layers.1.weight:num of params=524288
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.ffn.layers.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.0.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.1.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.2.norms.2.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.self_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.self_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.self_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.self_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.cross_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.cross_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.ffn.layers.0.0.weight:num of params=524288
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.ffn.layers.0.0.bias:num of params=2048
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.ffn.layers.1.weight:num of params=524288
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.ffn.layers.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.0.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.1.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.3.norms.2.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.self_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.self_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.self_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.self_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.cross_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.cross_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.ffn.layers.0.0.weight:num of params=524288
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.ffn.layers.0.0.bias:num of params=2048
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.ffn.layers.1.weight:num of params=524288
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.ffn.layers.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.0.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.1.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.4.norms.2.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.self_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.self_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.self_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.self_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.cross_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.cross_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.ffn.layers.0.0.weight:num of params=524288
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.ffn.layers.0.0.bias:num of params=2048
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.ffn.layers.1.weight:num of params=524288
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.ffn.layers.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.0.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.1.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.5.norms.2.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.self_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.self_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.self_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.self_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.cross_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.cross_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.ffn.layers.0.0.weight:num of params=524288
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.ffn.layers.0.0.bias:num of params=2048
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.ffn.layers.1.weight:num of params=524288
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.ffn.layers.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.0.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.1.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.6.norms.2.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.self_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.self_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.self_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.self_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.cross_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.cross_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.ffn.layers.0.0.weight:num of params=524288
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.ffn.layers.0.0.bias:num of params=2048
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.ffn.layers.1.weight:num of params=524288
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.ffn.layers.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.0.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.1.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.7.norms.2.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.self_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.self_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.self_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.self_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.cross_attn.attn.in_proj_weight:num of params=196608
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.cross_attn.attn.in_proj_bias:num of params=768
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.cross_attn.attn.out_proj.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.cross_attn.attn.out_proj.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.ffn.layers.0.0.weight:num of params=524288
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.ffn.layers.0.0.bias:num of params=2048
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.ffn.layers.1.weight:num of params=524288
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.ffn.layers.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.0.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.1.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.layers.8.norms.2.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.weight:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.bias:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.bias:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.transformer_decoder.post_norm.bias:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.query_embed.weight:num of params=25600
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.query_embed.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.query_embed.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.query_embed.weight:lr_mult=1.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.query_embed.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.query_feat.weight:num of params=25600
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.level_embed.weight:num of params=768
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.level_embed.weight:lr=0.0001
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.level_embed.weight:weight_decay=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.level_embed.weight:lr_mult=1.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.level_embed.weight:decay_mult=0.0
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.cls_embed.weight:num of params=2048
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.cls_embed.bias:num of params=8
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.mask_embed.0.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.mask_embed.0.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.mask_embed.2.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.mask_embed.2.bias:num of params=256
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.mask_embed.4.weight:num of params=65536
2025/03/29 12:21:46 - mmengine - INFO - paramwise_options -- decode_head.mask_embed.4.bias:num of params=256
2025/03/29 12:21:46 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
2025/03/29 12:21:47 - mmengine - INFO - load model from: checkpoints/dinov2_converted.pth
2025/03/29 12:21:47 - mmengine - INFO - Loads checkpoint by local backend from path: checkpoints/dinov2_converted.pth
2025/03/29 12:21:48 - mmengine - WARNING - The model and loaded state dict do not match exactly

missing keys in source state_dict: refine_feat.scale, refine_feat.layer_norm.0.weight, refine_feat.layer_norm.0.bias, refine_feat.layer_norm.1.weight, refine_feat.layer_norm.1.bias, refine_feat.layer_norm.2.weight, refine_feat.layer_norm.2.bias, refine_feat.layer_norm.3.weight, refine_feat.layer_norm.3.bias, refine_feat.layer_norm.4.weight, refine_feat.layer_norm.4.bias, refine_feat.layer_norm.5.weight, refine_feat.layer_norm.5.bias, refine_feat.layer_norm.6.weight, refine_feat.layer_norm.6.bias, refine_feat.layer_norm.7.weight, refine_feat.layer_norm.7.bias, refine_feat.layer_norm.8.weight, refine_feat.layer_norm.8.bias, refine_feat.layer_norm.9.weight, refine_feat.layer_norm.9.bias, refine_feat.layer_norm.10.weight, refine_feat.layer_norm.10.bias, refine_feat.layer_norm.11.weight, refine_feat.layer_norm.11.bias, refine_feat.layer_norm.12.weight, refine_feat.layer_norm.12.bias, refine_feat.layer_norm.13.weight, refine_feat.layer_norm.13.bias, refine_feat.layer_norm.14.weight, refine_feat.layer_norm.14.bias, refine_feat.layer_norm.15.weight, refine_feat.layer_norm.15.bias, refine_feat.layer_norm.16.weight, refine_feat.layer_norm.16.bias, refine_feat.layer_norm.17.weight, refine_feat.layer_norm.17.bias, refine_feat.layer_norm.18.weight, refine_feat.layer_norm.18.bias, refine_feat.layer_norm.19.weight, refine_feat.layer_norm.19.bias, refine_feat.layer_norm.20.weight, refine_feat.layer_norm.20.bias, refine_feat.layer_norm.21.weight, refine_feat.layer_norm.21.bias, refine_feat.layer_norm.22.weight, refine_feat.layer_norm.22.bias, refine_feat.layer_norm.23.weight, refine_feat.layer_norm.23.bias, refine_feat.mlp_list1.0.0.weight, refine_feat.mlp_list1.0.0.bias, refine_feat.mlp_list1.0.2.weight, refine_feat.mlp_list1.0.2.bias, refine_feat.mlp_list1.1.0.weight, refine_feat.mlp_list1.1.0.bias, refine_feat.mlp_list1.1.2.weight, refine_feat.mlp_list1.1.2.bias, refine_feat.mlp_list1.2.0.weight, refine_feat.mlp_list1.2.0.bias, refine_feat.mlp_list1.2.2.weight, refine_feat.mlp_list1.2.2.bias, refine_feat.mlp_list1.3.0.weight, refine_feat.mlp_list1.3.0.bias, refine_feat.mlp_list1.3.2.weight, refine_feat.mlp_list1.3.2.bias, refine_feat.mlp_list1.4.0.weight, refine_feat.mlp_list1.4.0.bias, refine_feat.mlp_list1.4.2.weight, refine_feat.mlp_list1.4.2.bias, refine_feat.mlp_list1.5.0.weight, refine_feat.mlp_list1.5.0.bias, refine_feat.mlp_list1.5.2.weight, refine_feat.mlp_list1.5.2.bias, refine_feat.mlp_list1.6.0.weight, refine_feat.mlp_list1.6.0.bias, refine_feat.mlp_list1.6.2.weight, refine_feat.mlp_list1.6.2.bias, refine_feat.mlp_list1.7.0.weight, refine_feat.mlp_list1.7.0.bias, refine_feat.mlp_list1.7.2.weight, refine_feat.mlp_list1.7.2.bias, refine_feat.mlp_list1.8.0.weight, refine_feat.mlp_list1.8.0.bias, refine_feat.mlp_list1.8.2.weight, refine_feat.mlp_list1.8.2.bias, refine_feat.mlp_list1.9.0.weight, refine_feat.mlp_list1.9.0.bias, refine_feat.mlp_list1.9.2.weight, refine_feat.mlp_list1.9.2.bias, refine_feat.mlp_list1.10.0.weight, refine_feat.mlp_list1.10.0.bias, refine_feat.mlp_list1.10.2.weight, refine_feat.mlp_list1.10.2.bias, refine_feat.mlp_list1.11.0.weight, refine_feat.mlp_list1.11.0.bias, refine_feat.mlp_list1.11.2.weight, refine_feat.mlp_list1.11.2.bias, refine_feat.mlp_list1.12.0.weight, refine_feat.mlp_list1.12.0.bias, refine_feat.mlp_list1.12.2.weight, refine_feat.mlp_list1.12.2.bias, refine_feat.mlp_list1.13.0.weight, refine_feat.mlp_list1.13.0.bias, refine_feat.mlp_list1.13.2.weight, refine_feat.mlp_list1.13.2.bias, refine_feat.mlp_list1.14.0.weight, refine_feat.mlp_list1.14.0.bias, refine_feat.mlp_list1.14.2.weight, refine_feat.mlp_list1.14.2.bias, refine_feat.mlp_list1.15.0.weight, refine_feat.mlp_list1.15.0.bias, refine_feat.mlp_list1.15.2.weight, refine_feat.mlp_list1.15.2.bias, refine_feat.mlp_list1.16.0.weight, refine_feat.mlp_list1.16.0.bias, refine_feat.mlp_list1.16.2.weight, refine_feat.mlp_list1.16.2.bias, refine_feat.mlp_list1.17.0.weight, refine_feat.mlp_list1.17.0.bias, refine_feat.mlp_list1.17.2.weight, refine_feat.mlp_list1.17.2.bias, refine_feat.mlp_list1.18.0.weight, refine_feat.mlp_list1.18.0.bias, refine_feat.mlp_list1.18.2.weight, refine_feat.mlp_list1.18.2.bias, refine_feat.mlp_list1.19.0.weight, refine_feat.mlp_list1.19.0.bias, refine_feat.mlp_list1.19.2.weight, refine_feat.mlp_list1.19.2.bias, refine_feat.mlp_list1.20.0.weight, refine_feat.mlp_list1.20.0.bias, refine_feat.mlp_list1.20.2.weight, refine_feat.mlp_list1.20.2.bias, refine_feat.mlp_list1.21.0.weight, refine_feat.mlp_list1.21.0.bias, refine_feat.mlp_list1.21.2.weight, refine_feat.mlp_list1.21.2.bias, refine_feat.mlp_list1.22.0.weight, refine_feat.mlp_list1.22.0.bias, refine_feat.mlp_list1.22.2.weight, refine_feat.mlp_list1.22.2.bias, refine_feat.mlp_list1.23.0.weight, refine_feat.mlp_list1.23.0.bias, refine_feat.mlp_list1.23.2.weight, refine_feat.mlp_list1.23.2.bias, refine_feat.mlp_list2.0.0.weight, refine_feat.mlp_list2.0.0.bias, refine_feat.mlp_list2.0.2.weight, refine_feat.mlp_list2.0.2.bias, refine_feat.mlp_list2.1.0.weight, refine_feat.mlp_list2.1.0.bias, refine_feat.mlp_list2.1.2.weight, refine_feat.mlp_list2.1.2.bias, refine_feat.mlp_list2.2.0.weight, refine_feat.mlp_list2.2.0.bias, refine_feat.mlp_list2.2.2.weight, refine_feat.mlp_list2.2.2.bias, refine_feat.mlp_list2.3.0.weight, refine_feat.mlp_list2.3.0.bias, refine_feat.mlp_list2.3.2.weight, refine_feat.mlp_list2.3.2.bias, refine_feat.mlp_list2.4.0.weight, refine_feat.mlp_list2.4.0.bias, refine_feat.mlp_list2.4.2.weight, refine_feat.mlp_list2.4.2.bias, refine_feat.mlp_list2.5.0.weight, refine_feat.mlp_list2.5.0.bias, refine_feat.mlp_list2.5.2.weight, refine_feat.mlp_list2.5.2.bias, refine_feat.mlp_list2.6.0.weight, refine_feat.mlp_list2.6.0.bias, refine_feat.mlp_list2.6.2.weight, refine_feat.mlp_list2.6.2.bias, refine_feat.mlp_list2.7.0.weight, refine_feat.mlp_list2.7.0.bias, refine_feat.mlp_list2.7.2.weight, refine_feat.mlp_list2.7.2.bias, refine_feat.mlp_list2.8.0.weight, refine_feat.mlp_list2.8.0.bias, refine_feat.mlp_list2.8.2.weight, refine_feat.mlp_list2.8.2.bias, refine_feat.mlp_list2.9.0.weight, refine_feat.mlp_list2.9.0.bias, refine_feat.mlp_list2.9.2.weight, refine_feat.mlp_list2.9.2.bias, refine_feat.mlp_list2.10.0.weight, refine_feat.mlp_list2.10.0.bias, refine_feat.mlp_list2.10.2.weight, refine_feat.mlp_list2.10.2.bias, refine_feat.mlp_list2.11.0.weight, refine_feat.mlp_list2.11.0.bias, refine_feat.mlp_list2.11.2.weight, refine_feat.mlp_list2.11.2.bias, refine_feat.mlp_list2.12.0.weight, refine_feat.mlp_list2.12.0.bias, refine_feat.mlp_list2.12.2.weight, refine_feat.mlp_list2.12.2.bias, refine_feat.mlp_list2.13.0.weight, refine_feat.mlp_list2.13.0.bias, refine_feat.mlp_list2.13.2.weight, refine_feat.mlp_list2.13.2.bias, refine_feat.mlp_list2.14.0.weight, refine_feat.mlp_list2.14.0.bias, refine_feat.mlp_list2.14.2.weight, refine_feat.mlp_list2.14.2.bias, refine_feat.mlp_list2.15.0.weight, refine_feat.mlp_list2.15.0.bias, refine_feat.mlp_list2.15.2.weight, refine_feat.mlp_list2.15.2.bias, refine_feat.mlp_list2.16.0.weight, refine_feat.mlp_list2.16.0.bias, refine_feat.mlp_list2.16.2.weight, refine_feat.mlp_list2.16.2.bias, refine_feat.mlp_list2.17.0.weight, refine_feat.mlp_list2.17.0.bias, refine_feat.mlp_list2.17.2.weight, refine_feat.mlp_list2.17.2.bias, refine_feat.mlp_list2.18.0.weight, refine_feat.mlp_list2.18.0.bias, refine_feat.mlp_list2.18.2.weight, refine_feat.mlp_list2.18.2.bias, refine_feat.mlp_list2.19.0.weight, refine_feat.mlp_list2.19.0.bias, refine_feat.mlp_list2.19.2.weight, refine_feat.mlp_list2.19.2.bias, refine_feat.mlp_list2.20.0.weight, refine_feat.mlp_list2.20.0.bias, refine_feat.mlp_list2.20.2.weight, refine_feat.mlp_list2.20.2.bias, refine_feat.mlp_list2.21.0.weight, refine_feat.mlp_list2.21.0.bias, refine_feat.mlp_list2.21.2.weight, refine_feat.mlp_list2.21.2.bias, refine_feat.mlp_list2.22.0.weight, refine_feat.mlp_list2.22.0.bias, refine_feat.mlp_list2.22.2.weight, refine_feat.mlp_list2.22.2.bias, refine_feat.mlp_list2.23.0.weight, refine_feat.mlp_list2.23.0.bias, refine_feat.mlp_list2.23.2.weight, refine_feat.mlp_list2.23.2.bias, refine_feat.mlp_list3.0.0.weight, refine_feat.mlp_list3.0.0.bias, refine_feat.mlp_list3.0.2.weight, refine_feat.mlp_list3.0.2.bias, refine_feat.mlp_list3.1.0.weight, refine_feat.mlp_list3.1.0.bias, refine_feat.mlp_list3.1.2.weight, refine_feat.mlp_list3.1.2.bias, refine_feat.mlp_list3.2.0.weight, refine_feat.mlp_list3.2.0.bias, refine_feat.mlp_list3.2.2.weight, refine_feat.mlp_list3.2.2.bias, refine_feat.mlp_list3.3.0.weight, refine_feat.mlp_list3.3.0.bias, refine_feat.mlp_list3.3.2.weight, refine_feat.mlp_list3.3.2.bias, refine_feat.mlp_list3.4.0.weight, refine_feat.mlp_list3.4.0.bias, refine_feat.mlp_list3.4.2.weight, refine_feat.mlp_list3.4.2.bias, refine_feat.mlp_list3.5.0.weight, refine_feat.mlp_list3.5.0.bias, refine_feat.mlp_list3.5.2.weight, refine_feat.mlp_list3.5.2.bias, refine_feat.mlp_list3.6.0.weight, refine_feat.mlp_list3.6.0.bias, refine_feat.mlp_list3.6.2.weight, refine_feat.mlp_list3.6.2.bias, refine_feat.mlp_list3.7.0.weight, refine_feat.mlp_list3.7.0.bias, refine_feat.mlp_list3.7.2.weight, refine_feat.mlp_list3.7.2.bias, refine_feat.mlp_list3.8.0.weight, refine_feat.mlp_list3.8.0.bias, refine_feat.mlp_list3.8.2.weight, refine_feat.mlp_list3.8.2.bias, refine_feat.mlp_list3.9.0.weight, refine_feat.mlp_list3.9.0.bias, refine_feat.mlp_list3.9.2.weight, refine_feat.mlp_list3.9.2.bias, refine_feat.mlp_list3.10.0.weight, refine_feat.mlp_list3.10.0.bias, refine_feat.mlp_list3.10.2.weight, refine_feat.mlp_list3.10.2.bias, refine_feat.mlp_list3.11.0.weight, refine_feat.mlp_list3.11.0.bias, refine_feat.mlp_list3.11.2.weight, refine_feat.mlp_list3.11.2.bias, refine_feat.mlp_list3.12.0.weight, refine_feat.mlp_list3.12.0.bias, refine_feat.mlp_list3.12.2.weight, refine_feat.mlp_list3.12.2.bias, refine_feat.mlp_list3.13.0.weight, refine_feat.mlp_list3.13.0.bias, refine_feat.mlp_list3.13.2.weight, refine_feat.mlp_list3.13.2.bias, refine_feat.mlp_list3.14.0.weight, refine_feat.mlp_list3.14.0.bias, refine_feat.mlp_list3.14.2.weight, refine_feat.mlp_list3.14.2.bias, refine_feat.mlp_list3.15.0.weight, refine_feat.mlp_list3.15.0.bias, refine_feat.mlp_list3.15.2.weight, refine_feat.mlp_list3.15.2.bias, refine_feat.mlp_list3.16.0.weight, refine_feat.mlp_list3.16.0.bias, refine_feat.mlp_list3.16.2.weight, refine_feat.mlp_list3.16.2.bias, refine_feat.mlp_list3.17.0.weight, refine_feat.mlp_list3.17.0.bias, refine_feat.mlp_list3.17.2.weight, refine_feat.mlp_list3.17.2.bias, refine_feat.mlp_list3.18.0.weight, refine_feat.mlp_list3.18.0.bias, refine_feat.mlp_list3.18.2.weight, refine_feat.mlp_list3.18.2.bias, refine_feat.mlp_list3.19.0.weight, refine_feat.mlp_list3.19.0.bias, refine_feat.mlp_list3.19.2.weight, refine_feat.mlp_list3.19.2.bias, refine_feat.mlp_list3.20.0.weight, refine_feat.mlp_list3.20.0.bias, refine_feat.mlp_list3.20.2.weight, refine_feat.mlp_list3.20.2.bias, refine_feat.mlp_list3.21.0.weight, refine_feat.mlp_list3.21.0.bias, refine_feat.mlp_list3.21.2.weight, refine_feat.mlp_list3.21.2.bias, refine_feat.mlp_list3.22.0.weight, refine_feat.mlp_list3.22.0.bias, refine_feat.mlp_list3.22.2.weight, refine_feat.mlp_list3.22.2.bias, refine_feat.mlp_list3.23.0.weight, refine_feat.mlp_list3.23.0.bias, refine_feat.mlp_list3.23.2.weight, refine_feat.mlp_list3.23.2.bias, refine_feat.router.0.weight, refine_feat.router.0.bias, refine_feat.router.1.weight, refine_feat.router.1.bias, refine_feat.router.2.weight, refine_feat.router.2.bias, refine_feat.router.3.weight, refine_feat.router.3.bias, refine_feat.router.4.weight, refine_feat.router.4.bias, refine_feat.router.5.weight, refine_feat.router.5.bias, refine_feat.router.6.weight, refine_feat.router.6.bias, refine_feat.router.7.weight, refine_feat.router.7.bias, refine_feat.router.8.weight, refine_feat.router.8.bias, refine_feat.router.9.weight, refine_feat.router.9.bias, refine_feat.router.10.weight, refine_feat.router.10.bias, refine_feat.router.11.weight, refine_feat.router.11.bias, refine_feat.router.12.weight, refine_feat.router.12.bias, refine_feat.router.13.weight, refine_feat.router.13.bias, refine_feat.router.14.weight, refine_feat.router.14.bias, refine_feat.router.15.weight, refine_feat.router.15.bias, refine_feat.router.16.weight, refine_feat.router.16.bias, refine_feat.router.17.weight, refine_feat.router.17.bias, refine_feat.router.18.weight, refine_feat.router.18.bias, refine_feat.router.19.weight, refine_feat.router.19.bias, refine_feat.router.20.weight, refine_feat.router.20.bias, refine_feat.router.21.weight, refine_feat.router.21.bias, refine_feat.router.22.weight, refine_feat.router.22.bias, refine_feat.router.23.weight, refine_feat.router.23.bias

Name of parameter - Initialization information

backbone.cls_token - torch.Size([1, 1, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.pos_embed - torch.Size([1, 1025, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.mask_token - torch.Size([1, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.patch_embed.proj.weight - torch.Size([1024, 3, 16, 16]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.patch_embed.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.0.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.1.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.2.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.3.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.4.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.5.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.6.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.7.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.8.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.9.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.10.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.11.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.12.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.13.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.14.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.15.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.16.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.17.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.18.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.19.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.20.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.21.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.22.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.ls1.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.blocks.23.ls2.gamma - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.norm.weight - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.norm.bias - torch.Size([1024]): 
PretrainedInit: load from checkpoints/dinov2_converted.pth 

backbone.refine_feat.scale - torch.Size([24]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.0.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.3.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.4.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.4.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.5.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.5.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.6.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.6.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.7.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.7.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.8.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.8.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.9.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.9.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.10.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.10.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.11.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.11.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.12.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.12.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.13.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.13.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.14.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.14.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.15.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.15.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.16.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.16.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.17.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.17.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.18.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.18.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.19.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.19.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.20.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.20.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.21.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.21.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.22.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.22.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.23.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.layer_norm.23.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.0.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.0.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.0.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.0.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.1.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.1.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.1.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.1.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.2.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.2.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.2.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.2.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.3.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.3.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.3.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.3.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.4.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.4.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.4.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.4.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.5.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.5.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.5.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.5.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.6.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.6.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.6.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.6.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.7.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.7.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.7.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.7.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.8.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.8.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.8.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.8.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.9.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.9.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.9.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.9.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.10.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.10.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.10.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.10.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.11.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.11.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.11.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.11.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.12.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.12.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.12.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.12.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.13.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.13.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.13.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.13.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.14.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.14.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.14.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.14.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.15.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.15.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.15.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.15.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.16.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.16.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.16.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.16.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.17.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.17.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.17.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.17.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.18.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.18.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.18.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.18.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.19.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.19.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.19.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.19.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.20.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.20.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.20.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.20.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.21.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.21.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.21.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.21.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.22.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.22.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.22.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.22.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.23.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.23.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.23.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list1.23.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.0.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.0.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.0.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.0.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.1.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.1.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.1.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.1.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.2.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.2.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.2.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.2.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.3.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.3.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.3.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.3.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.4.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.4.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.4.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.4.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.5.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.5.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.5.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.5.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.6.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.6.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.6.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.6.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.7.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.7.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.7.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.7.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.8.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.8.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.8.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.8.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.9.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.9.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.9.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.9.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.10.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.10.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.10.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.10.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.11.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.11.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.11.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.11.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.12.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.12.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.12.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.12.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.13.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.13.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.13.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.13.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.14.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.14.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.14.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.14.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.15.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.15.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.15.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.15.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.16.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.16.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.16.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.16.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.17.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.17.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.17.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.17.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.18.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.18.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.18.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.18.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.19.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.19.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.19.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.19.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.20.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.20.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.20.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.20.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.21.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.21.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.21.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.21.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.22.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.22.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.22.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.22.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.23.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.23.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.23.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list2.23.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.0.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.0.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.0.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.0.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.1.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.1.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.1.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.1.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.2.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.2.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.2.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.2.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.3.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.3.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.3.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.3.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.4.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.4.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.4.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.4.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.5.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.5.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.5.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.5.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.6.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.6.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.6.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.6.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.7.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.7.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.7.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.7.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.8.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.8.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.8.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.8.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.9.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.9.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.9.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.9.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.10.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.10.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.10.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.10.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.11.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.11.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.11.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.11.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.12.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.12.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.12.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.12.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.13.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.13.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.13.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.13.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.14.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.14.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.14.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.14.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.15.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.15.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.15.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.15.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.16.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.16.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.16.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.16.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.17.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.17.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.17.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.17.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.18.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.18.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.18.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.18.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.19.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.19.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.19.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.19.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.20.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.20.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.20.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.20.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.21.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.21.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.21.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.21.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.22.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.22.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.22.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.22.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.23.0.weight - torch.Size([64, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.23.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.23.2.weight - torch.Size([1024, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.mlp_list3.23.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.0.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.0.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.1.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.1.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.2.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.2.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.3.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.3.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.4.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.4.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.5.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.5.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.6.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.6.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.7.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.7.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.8.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.8.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.9.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.9.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.10.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.10.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.11.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.11.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.12.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.12.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.13.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.13.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.14.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.14.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.15.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.15.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.16.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.16.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.17.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.17.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.18.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.18.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.19.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.19.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.20.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.20.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.21.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.21.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.22.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.22.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.23.weight - torch.Size([3, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.refine_feat.router.23.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.input_convs.0.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.input_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.input_convs.0.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.input_convs.0.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.input_convs.1.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.input_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.input_convs.1.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.input_convs.1.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.input_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.input_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.input_convs.2.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.input_convs.2.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.0.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.0.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.0.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.0.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.0.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.0.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.0.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.0.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.0.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.0.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.0.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.0.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.0.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.0.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.0.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.0.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.1.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.1.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.1.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.1.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.1.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.1.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.1.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.1.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.1.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.1.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.1.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.1.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.1.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.1.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.1.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.1.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.2.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.2.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.2.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.2.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.2.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.2.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.2.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.2.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.2.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.2.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.2.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.2.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.2.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.2.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.2.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.2.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.3.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.3.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.3.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.3.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.3.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.3.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.3.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.3.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.3.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.3.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.3.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.3.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.3.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.3.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.3.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.3.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.4.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.4.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.4.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.4.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.4.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.4.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.4.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.4.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.4.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.4.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.4.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.4.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.4.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.4.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.4.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.4.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.5.self_attn.sampling_offsets.weight - torch.Size([192, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.5.self_attn.sampling_offsets.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.5.self_attn.attention_weights.weight - torch.Size([96, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.5.self_attn.attention_weights.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.5.self_attn.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.5.self_attn.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.5.self_attn.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.5.self_attn.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.5.ffn.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.5.ffn.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.5.ffn.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.encoder.layers.5.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.5.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.5.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.5.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.encoder.layers.5.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.level_encoding.weight - torch.Size([3, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.lateral_convs.0.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.lateral_convs.0.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.lateral_convs.0.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.output_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.output_convs.0.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.output_convs.0.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.pixel_decoder.mask_feature.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.pixel_decoder.mask_feature.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.0.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.0.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.0.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.0.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.0.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.0.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.0.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.0.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.0.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.0.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.0.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.0.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.0.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.0.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.0.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.0.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.0.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.0.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.1.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.1.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.1.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.1.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.1.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.1.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.1.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.2.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.2.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.2.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.2.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.2.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.2.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.2.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.3.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.3.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.3.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.3.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.3.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.3.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.3.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.4.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.4.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.4.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.4.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.4.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.4.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.4.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.5.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.5.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.5.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.5.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.5.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.5.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.5.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.6.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.6.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.6.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.6.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.6.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.6.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.6.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.7.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.7.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.7.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.7.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.7.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.7.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.7.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.self_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.8.self_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.self_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.8.self_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.cross_attn.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.8.cross_attn.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.cross_attn.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.8.cross_attn.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.ffn.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.8.ffn.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.ffn.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in Mask2FormerHead  

decode_head.transformer_decoder.layers.8.ffn.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.layers.8.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.post_norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.transformer_decoder.post_norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.query_embed.weight - torch.Size([100, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.query_feat.weight - torch.Size([100, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.level_embed.weight - torch.Size([3, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.cls_embed.weight - torch.Size([8, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.cls_embed.bias - torch.Size([8]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.mask_embed.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.mask_embed.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.mask_embed.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.mask_embed.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.mask_embed.4.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.mask_embed.4.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2025/03/29 12:21:48 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2025/03/29 12:21:48 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2025/03/29 12:21:48 - mmengine - INFO - Checkpoints will be saved to /home/face/kaichengyang/xiaoxinghu/Earth_Adapter/work_dirs/r2u/DG_spatial_64_cutoff_0.3_fft_pre6/35b71_seed0.
2025/03/29 12:22:32 - mmengine - INFO - Iter(train) [   50/20000]  base_lr: 9.9779e-05 lr: 9.9779e-05  eta: 4:50:59  time: 0.8529  data_time: 0.0159  memory: 10092  loss: 73.8062  decode.loss_cls: 2.1695  decode.loss_mask: 2.3279  decode.loss_dice: 3.5656  decode.d0.loss_cls: 4.0685  decode.d0.loss_mask: 2.0286  decode.d0.loss_dice: 3.0682  decode.d1.loss_cls: 1.8946  decode.d1.loss_mask: 2.0176  decode.d1.loss_dice: 2.9331  decode.d2.loss_cls: 1.8240  decode.d2.loss_mask: 2.0092  decode.d2.loss_dice: 2.9497  decode.d3.loss_cls: 1.8562  decode.d3.loss_mask: 1.9843  decode.d3.loss_dice: 2.9499  decode.d4.loss_cls: 1.8353  decode.d4.loss_mask: 2.0488  decode.d4.loss_dice: 2.9839  decode.d5.loss_cls: 1.8870  decode.d5.loss_mask: 2.0456  decode.d5.loss_dice: 3.0537  decode.d6.loss_cls: 1.9620  decode.d6.loss_mask: 2.1001  decode.d6.loss_dice: 3.1439  decode.d7.loss_cls: 2.0089  decode.d7.loss_mask: 2.1335  decode.d7.loss_dice: 3.2833  decode.d8.loss_cls: 2.1233  decode.d8.loss_mask: 2.1694  decode.d8.loss_dice: 3.3807
2025/03/29 12:23:15 - mmengine - INFO - Iter(train) [  100/20000]  base_lr: 9.9554e-05 lr: 9.9554e-05  eta: 4:47:51  time: 0.8611  data_time: 0.0169  memory: 10095  loss: 66.6812  decode.loss_cls: 1.9233  decode.loss_mask: 2.0336  decode.loss_dice: 2.8370  decode.d0.loss_cls: 3.9492  decode.d0.loss_mask: 1.9350  decode.d0.loss_dice: 2.8702  decode.d1.loss_cls: 1.5657  decode.d1.loss_mask: 1.9886  decode.d1.loss_dice: 2.8022  decode.d2.loss_cls: 1.4909  decode.d2.loss_mask: 2.0057  decode.d2.loss_dice: 2.6444  decode.d3.loss_cls: 1.4964  decode.d3.loss_mask: 2.0132  decode.d3.loss_dice: 2.6994  decode.d4.loss_cls: 1.5548  decode.d4.loss_mask: 2.0204  decode.d4.loss_dice: 2.7164  decode.d5.loss_cls: 1.6902  decode.d5.loss_mask: 2.0108  decode.d5.loss_dice: 2.6878  decode.d6.loss_cls: 1.7582  decode.d6.loss_mask: 2.0236  decode.d6.loss_dice: 2.7188  decode.d7.loss_cls: 1.8325  decode.d7.loss_mask: 2.0134  decode.d7.loss_dice: 2.7835  decode.d8.loss_cls: 1.8095  decode.d8.loss_mask: 2.0077  decode.d8.loss_dice: 2.7988
2025/03/29 12:23:58 - mmengine - INFO - Iter(train) [  150/20000]  base_lr: 9.9329e-05 lr: 9.9329e-05  eta: 4:46:45  time: 0.8599  data_time: 0.0156  memory: 10145  loss: 57.1796  decode.loss_cls: 1.4719  decode.loss_mask: 1.8373  decode.loss_dice: 2.3894  decode.d0.loss_cls: 3.8481  decode.d0.loss_mask: 1.7831  decode.d0.loss_dice: 2.4845  decode.d1.loss_cls: 1.2018  decode.d1.loss_mask: 1.8027  decode.d1.loss_dice: 2.3436  decode.d2.loss_cls: 1.1185  decode.d2.loss_mask: 1.8667  decode.d2.loss_dice: 2.2758  decode.d3.loss_cls: 1.1801  decode.d3.loss_mask: 1.8823  decode.d3.loss_dice: 2.3147  decode.d4.loss_cls: 1.0946  decode.d4.loss_mask: 1.8973  decode.d4.loss_dice: 2.3285  decode.d5.loss_cls: 1.2487  decode.d5.loss_mask: 1.8527  decode.d5.loss_dice: 2.3046  decode.d6.loss_cls: 1.3051  decode.d6.loss_mask: 1.8495  decode.d6.loss_dice: 2.2593  decode.d7.loss_cls: 1.4227  decode.d7.loss_mask: 1.8222  decode.d7.loss_dice: 2.3097  decode.d8.loss_cls: 1.4635  decode.d8.loss_mask: 1.8707  decode.d8.loss_dice: 2.3502
2025/03/29 12:24:41 - mmengine - INFO - Iter(train) [  200/20000]  base_lr: 9.9104e-05 lr: 9.9104e-05  eta: 4:46:06  time: 0.8696  data_time: 0.0168  memory: 10084  loss: 57.7626  decode.loss_cls: 1.3482  decode.loss_mask: 2.1202  decode.loss_dice: 2.2288  decode.d0.loss_cls: 3.7283  decode.d0.loss_mask: 1.9644  decode.d0.loss_dice: 2.3461  decode.d1.loss_cls: 1.1710  decode.d1.loss_mask: 2.0615  decode.d1.loss_dice: 2.2773  decode.d2.loss_cls: 1.0868  decode.d2.loss_mask: 2.0555  decode.d2.loss_dice: 2.2098  decode.d3.loss_cls: 1.1555  decode.d3.loss_mask: 2.0978  decode.d3.loss_dice: 2.2517  decode.d4.loss_cls: 1.1572  decode.d4.loss_mask: 2.0831  decode.d4.loss_dice: 2.2592  decode.d5.loss_cls: 1.2253  decode.d5.loss_mask: 2.0718  decode.d5.loss_dice: 2.2316  decode.d6.loss_cls: 1.2802  decode.d6.loss_mask: 2.0357  decode.d6.loss_dice: 2.1656  decode.d7.loss_cls: 1.2864  decode.d7.loss_mask: 2.0645  decode.d7.loss_dice: 2.1651  decode.d8.loss_cls: 1.4000  decode.d8.loss_mask: 2.0408  decode.d8.loss_dice: 2.1931
2025/03/29 12:25:42 - mmengine - INFO - Iter(train) [  250/20000]  base_lr: 9.8879e-05 lr: 9.8879e-05  eta: 5:08:27  time: 1.6647  data_time: 0.0159  memory: 10143  loss: 56.6934  decode.loss_cls: 1.3485  decode.loss_mask: 2.1020  decode.loss_dice: 2.1671  decode.d0.loss_cls: 3.5585  decode.d0.loss_mask: 1.9405  decode.d0.loss_dice: 2.2934  decode.d1.loss_cls: 1.0152  decode.d1.loss_mask: 2.1043  decode.d1.loss_dice: 2.1531  decode.d2.loss_cls: 1.0258  decode.d2.loss_mask: 2.1274  decode.d2.loss_dice: 2.1621  decode.d3.loss_cls: 1.0197  decode.d3.loss_mask: 2.1753  decode.d3.loss_dice: 2.1678  decode.d4.loss_cls: 1.1103  decode.d4.loss_mask: 2.1496  decode.d4.loss_dice: 2.1847  decode.d5.loss_cls: 1.1974  decode.d5.loss_mask: 2.0857  decode.d5.loss_dice: 2.1806  decode.d6.loss_cls: 1.2364  decode.d6.loss_mask: 2.0813  decode.d6.loss_dice: 2.1276  decode.d7.loss_cls: 1.2148  decode.d7.loss_mask: 2.0415  decode.d7.loss_dice: 2.1557  decode.d8.loss_cls: 1.2581  decode.d8.loss_mask: 2.1054  decode.d8.loss_dice: 2.2035
2025/03/29 12:27:05 - mmengine - INFO - Iter(train) [  300/20000]  base_lr: 9.8653e-05 lr: 9.8653e-05  eta: 5:47:34  time: 1.6657  data_time: 0.0159  memory: 10090  loss: 46.5554  decode.loss_cls: 0.9582  decode.loss_mask: 1.5831  decode.loss_dice: 1.9534  decode.d0.loss_cls: 3.4644  decode.d0.loss_mask: 1.4389  decode.d0.loss_dice: 2.1356  decode.d1.loss_cls: 0.7321  decode.d1.loss_mask: 1.6069  decode.d1.loss_dice: 1.9690  decode.d2.loss_cls: 0.7065  decode.d2.loss_mask: 1.6114  decode.d2.loss_dice: 1.9480  decode.d3.loss_cls: 0.7278  decode.d3.loss_mask: 1.6148  decode.d3.loss_dice: 2.0320  decode.d4.loss_cls: 0.7777  decode.d4.loss_mask: 1.5959  decode.d4.loss_dice: 1.9818  decode.d5.loss_cls: 0.8200  decode.d5.loss_mask: 1.6239  decode.d5.loss_dice: 1.9509  decode.d6.loss_cls: 0.7919  decode.d6.loss_mask: 1.6334  decode.d6.loss_dice: 1.9352  decode.d7.loss_cls: 0.8417  decode.d7.loss_mask: 1.6375  decode.d7.loss_dice: 1.9606  decode.d8.loss_cls: 0.9104  decode.d8.loss_mask: 1.6459  decode.d8.loss_dice: 1.9665
2025/03/29 12:28:30 - mmengine - INFO - Iter(train) [  350/20000]  base_lr: 9.8428e-05 lr: 9.8428e-05  eta: 6:15:53  time: 1.6782  data_time: 0.0157  memory: 10090  loss: 49.0593  decode.loss_cls: 1.0061  decode.loss_mask: 1.5933  decode.loss_dice: 2.1521  decode.d0.loss_cls: 3.2814  decode.d0.loss_mask: 1.5230  decode.d0.loss_dice: 2.2868  decode.d1.loss_cls: 0.8061  decode.d1.loss_mask: 1.6488  decode.d1.loss_dice: 2.1906  decode.d2.loss_cls: 0.8164  decode.d2.loss_mask: 1.6433  decode.d2.loss_dice: 2.2065  decode.d3.loss_cls: 0.7957  decode.d3.loss_mask: 1.6462  decode.d3.loss_dice: 2.1589  decode.d4.loss_cls: 0.8479  decode.d4.loss_mask: 1.6102  decode.d4.loss_dice: 2.1741  decode.d5.loss_cls: 0.8589  decode.d5.loss_mask: 1.6268  decode.d5.loss_dice: 2.1805  decode.d6.loss_cls: 0.8838  decode.d6.loss_mask: 1.6040  decode.d6.loss_dice: 2.1568  decode.d7.loss_cls: 0.9339  decode.d7.loss_mask: 1.6046  decode.d7.loss_dice: 2.1619  decode.d8.loss_cls: 1.0088  decode.d8.loss_mask: 1.5548  decode.d8.loss_dice: 2.0969
2025/03/29 12:29:53 - mmengine - INFO - Iter(train) [  400/20000]  base_lr: 9.8203e-05 lr: 9.8203e-05  eta: 6:36:28  time: 1.6713  data_time: 0.0158  memory: 10091  loss: 47.8139  decode.loss_cls: 0.8304  decode.loss_mask: 1.7228  decode.loss_dice: 2.0121  decode.d0.loss_cls: 3.1748  decode.d0.loss_mask: 1.6120  decode.d0.loss_dice: 2.1608  decode.d1.loss_cls: 0.6019  decode.d1.loss_mask: 1.7815  decode.d1.loss_dice: 2.1005  decode.d2.loss_cls: 0.6085  decode.d2.loss_mask: 1.7316  decode.d2.loss_dice: 2.0953  decode.d3.loss_cls: 0.6450  decode.d3.loss_mask: 1.7884  decode.d3.loss_dice: 2.0845  decode.d4.loss_cls: 0.6864  decode.d4.loss_mask: 1.7933  decode.d4.loss_dice: 2.1281  decode.d5.loss_cls: 0.7421  decode.d5.loss_mask: 1.7338  decode.d5.loss_dice: 2.0603  decode.d6.loss_cls: 0.7753  decode.d6.loss_mask: 1.7378  decode.d6.loss_dice: 2.0558  decode.d7.loss_cls: 0.7978  decode.d7.loss_mask: 1.7354  decode.d7.loss_dice: 2.0512  decode.d8.loss_cls: 0.8431  decode.d8.loss_mask: 1.7178  decode.d8.loss_dice: 2.0055
2025/03/29 12:31:17 - mmengine - INFO - Iter(train) [  450/20000]  base_lr: 9.7977e-05 lr: 9.7977e-05  eta: 6:52:08  time: 1.6695  data_time: 0.0154  memory: 10094  loss: 51.6145  decode.loss_cls: 0.9236  decode.loss_mask: 1.9514  decode.loss_dice: 2.1025  decode.d0.loss_cls: 3.1869  decode.d0.loss_mask: 1.7814  decode.d0.loss_dice: 2.2532  decode.d1.loss_cls: 0.9014  decode.d1.loss_mask: 1.8698  decode.d1.loss_dice: 2.1431  decode.d2.loss_cls: 0.8787  decode.d2.loss_mask: 1.9036  decode.d2.loss_dice: 2.1169  decode.d3.loss_cls: 0.8320  decode.d3.loss_mask: 1.9545  decode.d3.loss_dice: 2.1152  decode.d4.loss_cls: 0.8439  decode.d4.loss_mask: 1.8998  decode.d4.loss_dice: 2.0983  decode.d5.loss_cls: 0.8845  decode.d5.loss_mask: 1.9301  decode.d5.loss_dice: 2.1233  decode.d6.loss_cls: 0.9751  decode.d6.loss_mask: 1.9241  decode.d6.loss_dice: 2.0941  decode.d7.loss_cls: 0.9142  decode.d7.loss_mask: 1.8995  decode.d7.loss_dice: 2.1228  decode.d8.loss_cls: 0.9390  decode.d8.loss_mask: 1.9295  decode.d8.loss_dice: 2.1220
2025/03/29 12:32:41 - mmengine - INFO - Iter(train) [  500/20000]  base_lr: 9.7752e-05 lr: 9.7752e-05  eta: 7:04:19  time: 1.6685  data_time: 0.0155  memory: 10142  loss: 48.3813  decode.loss_cls: 0.7062  decode.loss_mask: 1.9956  decode.loss_dice: 1.9121  decode.d0.loss_cls: 3.0644  decode.d0.loss_mask: 1.8682  decode.d0.loss_dice: 2.0402  decode.d1.loss_cls: 0.7310  decode.d1.loss_mask: 1.9611  decode.d1.loss_dice: 1.9439  decode.d2.loss_cls: 0.6860  decode.d2.loss_mask: 1.9544  decode.d2.loss_dice: 1.8873  decode.d3.loss_cls: 0.6717  decode.d3.loss_mask: 1.9928  decode.d3.loss_dice: 1.8784  decode.d4.loss_cls: 0.7010  decode.d4.loss_mask: 1.9569  decode.d4.loss_dice: 1.9018  decode.d5.loss_cls: 0.7404  decode.d5.loss_mask: 1.9876  decode.d5.loss_dice: 1.8658  decode.d6.loss_cls: 0.6899  decode.d6.loss_mask: 2.0534  decode.d6.loss_dice: 1.8988  decode.d7.loss_cls: 0.7535  decode.d7.loss_mask: 1.9692  decode.d7.loss_dice: 1.9524  decode.d8.loss_cls: 0.6983  decode.d8.loss_mask: 1.9953  decode.d8.loss_dice: 1.9235
2025/03/29 12:34:04 - mmengine - INFO - Iter(train) [  550/20000]  base_lr: 9.7526e-05 lr: 9.7526e-05  eta: 7:13:55  time: 1.6693  data_time: 0.0155  memory: 10155  loss: 49.6693  decode.loss_cls: 0.7439  decode.loss_mask: 1.8617  decode.loss_dice: 2.1381  decode.d0.loss_cls: 2.8884  decode.d0.loss_mask: 1.7689  decode.d0.loss_dice: 2.2151  decode.d1.loss_cls: 0.6675  decode.d1.loss_mask: 1.9098  decode.d1.loss_dice: 2.0934  decode.d2.loss_cls: 0.6575  decode.d2.loss_mask: 1.9377  decode.d2.loss_dice: 2.0802  decode.d3.loss_cls: 0.6748  decode.d3.loss_mask: 1.9505  decode.d3.loss_dice: 2.1016  decode.d4.loss_cls: 0.6854  decode.d4.loss_mask: 1.9484  decode.d4.loss_dice: 2.1175  decode.d5.loss_cls: 0.7370  decode.d5.loss_mask: 1.9736  decode.d5.loss_dice: 2.1111  decode.d6.loss_cls: 0.7645  decode.d6.loss_mask: 1.9558  decode.d6.loss_dice: 2.1216  decode.d7.loss_cls: 0.7028  decode.d7.loss_mask: 1.9138  decode.d7.loss_dice: 2.1380  decode.d8.loss_cls: 0.7476  decode.d8.loss_mask: 1.9005  decode.d8.loss_dice: 2.1626
2025/03/29 12:35:27 - mmengine - INFO - Iter(train) [  600/20000]  base_lr: 9.7300e-05 lr: 9.7300e-05  eta: 7:21:42  time: 1.6707  data_time: 0.0160  memory: 10141  loss: 49.0283  decode.loss_cls: 0.7863  decode.loss_mask: 1.7082  decode.loss_dice: 2.2754  decode.d0.loss_cls: 2.8245  decode.d0.loss_mask: 1.5162  decode.d0.loss_dice: 2.3110  decode.d1.loss_cls: 0.7200  decode.d1.loss_mask: 1.6110  decode.d1.loss_dice: 2.2844  decode.d2.loss_cls: 0.6953  decode.d2.loss_mask: 1.6574  decode.d2.loss_dice: 2.2598  decode.d3.loss_cls: 0.8616  decode.d3.loss_mask: 1.5844  decode.d3.loss_dice: 2.2418  decode.d4.loss_cls: 0.8298  decode.d4.loss_mask: 1.6586  decode.d4.loss_dice: 2.2374  decode.d5.loss_cls: 0.8128  decode.d5.loss_mask: 1.7087  decode.d5.loss_dice: 2.2378  decode.d6.loss_cls: 0.7920  decode.d6.loss_mask: 1.6517  decode.d6.loss_dice: 2.2466  decode.d7.loss_cls: 0.7690  decode.d7.loss_mask: 1.6698  decode.d7.loss_dice: 2.2786  decode.d8.loss_cls: 0.8036  decode.d8.loss_mask: 1.6971  decode.d8.loss_dice: 2.2978
2025/03/29 12:36:51 - mmengine - INFO - Iter(train) [  650/20000]  base_lr: 9.7075e-05 lr: 9.7075e-05  eta: 7:28:07  time: 1.6707  data_time: 0.0164  memory: 10088  loss: 47.6104  decode.loss_cls: 0.7277  decode.loss_mask: 2.0190  decode.loss_dice: 2.0036  decode.d0.loss_cls: 2.7173  decode.d0.loss_mask: 1.8611  decode.d0.loss_dice: 1.9833  decode.d1.loss_cls: 0.6655  decode.d1.loss_mask: 1.8699  decode.d1.loss_dice: 1.9625  decode.d2.loss_cls: 0.6732  decode.d2.loss_mask: 1.9106  decode.d2.loss_dice: 1.9504  decode.d3.loss_cls: 0.5988  decode.d3.loss_mask: 2.0299  decode.d3.loss_dice: 1.9679  decode.d4.loss_cls: 0.6006  decode.d4.loss_mask: 1.9762  decode.d4.loss_dice: 1.9645  decode.d5.loss_cls: 0.6717  decode.d5.loss_mask: 1.9380  decode.d5.loss_dice: 1.9251  decode.d6.loss_cls: 0.6385  decode.d6.loss_mask: 1.9072  decode.d6.loss_dice: 1.9545  decode.d7.loss_cls: 0.6453  decode.d7.loss_mask: 1.9586  decode.d7.loss_dice: 1.9523  decode.d8.loss_cls: 0.6697  decode.d8.loss_mask: 1.9204  decode.d8.loss_dice: 1.9470
2025/03/29 12:38:15 - mmengine - INFO - Iter(train) [  700/20000]  base_lr: 9.6849e-05 lr: 9.6849e-05  eta: 7:33:26  time: 1.6738  data_time: 0.0156  memory: 10092  loss: 48.1980  decode.loss_cls: 0.6825  decode.loss_mask: 2.0435  decode.loss_dice: 1.9980  decode.d0.loss_cls: 2.5872  decode.d0.loss_mask: 1.8766  decode.d0.loss_dice: 2.0793  decode.d1.loss_cls: 0.6744  decode.d1.loss_mask: 1.9341  decode.d1.loss_dice: 2.0113  decode.d2.loss_cls: 0.6264  decode.d2.loss_mask: 1.9503  decode.d2.loss_dice: 1.9799  decode.d3.loss_cls: 0.6322  decode.d3.loss_mask: 1.9500  decode.d3.loss_dice: 1.9698  decode.d4.loss_cls: 0.6489  decode.d4.loss_mask: 1.9996  decode.d4.loss_dice: 1.9963  decode.d5.loss_cls: 0.7220  decode.d5.loss_mask: 2.0096  decode.d5.loss_dice: 1.9898  decode.d6.loss_cls: 0.6676  decode.d6.loss_mask: 1.9367  decode.d6.loss_dice: 1.9730  decode.d7.loss_cls: 0.6475  decode.d7.loss_mask: 1.9766  decode.d7.loss_dice: 2.0008  decode.d8.loss_cls: 0.6865  decode.d8.loss_mask: 1.9872  decode.d8.loss_dice: 1.9604
2025/03/29 12:39:38 - mmengine - INFO - Iter(train) [  750/20000]  base_lr: 9.6623e-05 lr: 9.6623e-05  eta: 7:37:50  time: 1.6699  data_time: 0.0155  memory: 10083  loss: 43.7501  decode.loss_cls: 0.6018  decode.loss_mask: 1.7316  decode.loss_dice: 1.9105  decode.d0.loss_cls: 2.4861  decode.d0.loss_mask: 1.6260  decode.d0.loss_dice: 2.0123  decode.d1.loss_cls: 0.5738  decode.d1.loss_mask: 1.6864  decode.d1.loss_dice: 1.9231  decode.d2.loss_cls: 0.5762  decode.d2.loss_mask: 1.6685  decode.d2.loss_dice: 1.8729  decode.d3.loss_cls: 0.5450  decode.d3.loss_mask: 1.6743  decode.d3.loss_dice: 1.9170  decode.d4.loss_cls: 0.5865  decode.d4.loss_mask: 1.6794  decode.d4.loss_dice: 1.9084  decode.d5.loss_cls: 0.6042  decode.d5.loss_mask: 1.6563  decode.d5.loss_dice: 1.8882  decode.d6.loss_cls: 0.6452  decode.d6.loss_mask: 1.6693  decode.d6.loss_dice: 1.8906  decode.d7.loss_cls: 0.6046  decode.d7.loss_mask: 1.7066  decode.d7.loss_dice: 1.9101  decode.d8.loss_cls: 0.5796  decode.d8.loss_mask: 1.6843  decode.d8.loss_dice: 1.9312
2025/03/29 12:41:02 - mmengine - INFO - Iter(train) [  800/20000]  base_lr: 9.6397e-05 lr: 9.6397e-05  eta: 7:41:36  time: 1.6653  data_time: 0.0154  memory: 10143  loss: 45.2489  decode.loss_cls: 0.6931  decode.loss_mask: 1.7615  decode.loss_dice: 1.9045  decode.d0.loss_cls: 2.3957  decode.d0.loss_mask: 1.7237  decode.d0.loss_dice: 2.0132  decode.d1.loss_cls: 0.6510  decode.d1.loss_mask: 1.8270  decode.d1.loss_dice: 1.8941  decode.d2.loss_cls: 0.6222  decode.d2.loss_mask: 1.8714  decode.d2.loss_dice: 1.9282  decode.d3.loss_cls: 0.6672  decode.d3.loss_mask: 1.7813  decode.d3.loss_dice: 1.8865  decode.d4.loss_cls: 0.6426  decode.d4.loss_mask: 1.7797  decode.d4.loss_dice: 1.8975  decode.d5.loss_cls: 0.5863  decode.d5.loss_mask: 1.7793  decode.d5.loss_dice: 1.8846  decode.d6.loss_cls: 0.6543  decode.d6.loss_mask: 1.8309  decode.d6.loss_dice: 1.9346  decode.d7.loss_cls: 0.6042  decode.d7.loss_mask: 1.7892  decode.d7.loss_dice: 1.8936  decode.d8.loss_cls: 0.7001  decode.d8.loss_mask: 1.7851  decode.d8.loss_dice: 1.8663
2025/03/29 12:42:25 - mmengine - INFO - Iter(train) [  850/20000]  base_lr: 9.6171e-05 lr: 9.6171e-05  eta: 7:44:38  time: 1.6675  data_time: 0.0156  memory: 10089  loss: 42.0957  decode.loss_cls: 0.6231  decode.loss_mask: 1.5417  decode.loss_dice: 1.9355  decode.d0.loss_cls: 2.2927  decode.d0.loss_mask: 1.4082  decode.d0.loss_dice: 1.9682  decode.d1.loss_cls: 0.5536  decode.d1.loss_mask: 1.4897  decode.d1.loss_dice: 1.9934  decode.d2.loss_cls: 0.5518  decode.d2.loss_mask: 1.5140  decode.d2.loss_dice: 1.9496  decode.d3.loss_cls: 0.5294  decode.d3.loss_mask: 1.5140  decode.d3.loss_dice: 1.9498  decode.d4.loss_cls: 0.5133  decode.d4.loss_mask: 1.4797  decode.d4.loss_dice: 1.9679  decode.d5.loss_cls: 0.5152  decode.d5.loss_mask: 1.5518  decode.d5.loss_dice: 1.9819  decode.d6.loss_cls: 0.5633  decode.d6.loss_mask: 1.5233  decode.d6.loss_dice: 1.9921  decode.d7.loss_cls: 0.5979  decode.d7.loss_mask: 1.5095  decode.d7.loss_dice: 1.9366  decode.d8.loss_cls: 0.6153  decode.d8.loss_mask: 1.5791  decode.d8.loss_dice: 1.9541
2025/03/29 12:43:49 - mmengine - INFO - Iter(train) [  900/20000]  base_lr: 9.5945e-05 lr: 9.5945e-05  eta: 7:47:11  time: 1.6671  data_time: 0.0155  memory: 10149  loss: 45.8345  decode.loss_cls: 0.6647  decode.loss_mask: 1.6650  decode.loss_dice: 2.1072  decode.d0.loss_cls: 2.2004  decode.d0.loss_mask: 1.6599  decode.d0.loss_dice: 2.1479  decode.d1.loss_cls: 0.5086  decode.d1.loss_mask: 1.7741  decode.d1.loss_dice: 2.1223  decode.d2.loss_cls: 0.6415  decode.d2.loss_mask: 1.7016  decode.d2.loss_dice: 2.0768  decode.d3.loss_cls: 0.5128  decode.d3.loss_mask: 1.7500  decode.d3.loss_dice: 2.0952  decode.d4.loss_cls: 0.5909  decode.d4.loss_mask: 1.7310  decode.d4.loss_dice: 2.0690  decode.d5.loss_cls: 0.5491  decode.d5.loss_mask: 1.7632  decode.d5.loss_dice: 2.0859  decode.d6.loss_cls: 0.5954  decode.d6.loss_mask: 1.7486  decode.d6.loss_dice: 2.1389  decode.d7.loss_cls: 0.6362  decode.d7.loss_mask: 1.7211  decode.d7.loss_dice: 2.1170  decode.d8.loss_cls: 0.6657  decode.d8.loss_mask: 1.6724  decode.d8.loss_dice: 2.1222
2025/03/29 12:45:12 - mmengine - INFO - Iter(train) [  950/20000]  base_lr: 9.5719e-05 lr: 9.5719e-05  eta: 7:49:18  time: 1.6657  data_time: 0.0158  memory: 10091  loss: 42.8241  decode.loss_cls: 0.5179  decode.loss_mask: 1.6296  decode.loss_dice: 1.8995  decode.d0.loss_cls: 2.0412  decode.d0.loss_mask: 1.5979  decode.d0.loss_dice: 2.0399  decode.d1.loss_cls: 0.5686  decode.d1.loss_mask: 1.6874  decode.d1.loss_dice: 1.9755  decode.d2.loss_cls: 0.5940  decode.d2.loss_mask: 1.6624  decode.d2.loss_dice: 1.9725  decode.d3.loss_cls: 0.5168  decode.d3.loss_mask: 1.7148  decode.d3.loss_dice: 1.9697  decode.d4.loss_cls: 0.5336  decode.d4.loss_mask: 1.7085  decode.d4.loss_dice: 1.9466  decode.d5.loss_cls: 0.5089  decode.d5.loss_mask: 1.6882  decode.d5.loss_dice: 1.9451  decode.d6.loss_cls: 0.5208  decode.d6.loss_mask: 1.5969  decode.d6.loss_dice: 1.8818  decode.d7.loss_cls: 0.4805  decode.d7.loss_mask: 1.6357  decode.d7.loss_dice: 1.9307  decode.d8.loss_cls: 0.4553  decode.d8.loss_mask: 1.6814  decode.d8.loss_dice: 1.9223
2025/03/29 12:46:36 - mmengine - INFO - Exp name: r2u_20250329_122140
2025/03/29 12:46:36 - mmengine - INFO - Iter(train) [ 1000/20000]  base_lr: 9.5493e-05 lr: 9.5493e-05  eta: 7:51:08  time: 1.6733  data_time: 0.0164  memory: 10148  loss: 41.2543  decode.loss_cls: 0.4517  decode.loss_mask: 1.6816  decode.loss_dice: 1.9325  decode.d0.loss_cls: 1.9330  decode.d0.loss_mask: 1.6585  decode.d0.loss_dice: 1.9442  decode.d1.loss_cls: 0.4445  decode.d1.loss_mask: 1.6689  decode.d1.loss_dice: 1.8815  decode.d2.loss_cls: 0.3972  decode.d2.loss_mask: 1.6994  decode.d2.loss_dice: 1.8665  decode.d3.loss_cls: 0.4683  decode.d3.loss_mask: 1.6242  decode.d3.loss_dice: 1.8739  decode.d4.loss_cls: 0.4042  decode.d4.loss_mask: 1.6457  decode.d4.loss_dice: 1.8409  decode.d5.loss_cls: 0.4064  decode.d5.loss_mask: 1.6537  decode.d5.loss_dice: 1.8800  decode.d6.loss_cls: 0.4338  decode.d6.loss_mask: 1.6213  decode.d6.loss_dice: 1.8425  decode.d7.loss_cls: 0.3988  decode.d7.loss_mask: 1.6423  decode.d7.loss_dice: 1.8822  decode.d8.loss_cls: 0.4312  decode.d8.loss_mask: 1.7186  decode.d8.loss_dice: 1.9268
2025/03/29 12:47:59 - mmengine - INFO - Iter(train) [ 1050/20000]  base_lr: 9.5267e-05 lr: 9.5267e-05  eta: 7:52:40  time: 1.6698  data_time: 0.0156  memory: 10158  loss: 41.7458  decode.loss_cls: 0.5994  decode.loss_mask: 1.6976  decode.loss_dice: 1.7918  decode.d0.loss_cls: 1.8869  decode.d0.loss_mask: 1.6302  decode.d0.loss_dice: 1.8718  decode.d1.loss_cls: 0.4754  decode.d1.loss_mask: 1.6652  decode.d1.loss_dice: 1.8290  decode.d2.loss_cls: 0.5128  decode.d2.loss_mask: 1.6725  decode.d2.loss_dice: 1.8123  decode.d3.loss_cls: 0.4897  decode.d3.loss_mask: 1.6873  decode.d3.loss_dice: 1.7918  decode.d4.loss_cls: 0.4788  decode.d4.loss_mask: 1.7589  decode.d4.loss_dice: 1.8262  decode.d5.loss_cls: 0.6035  decode.d5.loss_mask: 1.6391  decode.d5.loss_dice: 1.7768  decode.d6.loss_cls: 0.5982  decode.d6.loss_mask: 1.7020  decode.d6.loss_dice: 1.8288  decode.d7.loss_cls: 0.6069  decode.d7.loss_mask: 1.6489  decode.d7.loss_dice: 1.8012  decode.d8.loss_cls: 0.5627  decode.d8.loss_mask: 1.7037  decode.d8.loss_dice: 1.7963
2025/03/29 12:49:23 - mmengine - INFO - Iter(train) [ 1100/20000]  base_lr: 9.5040e-05 lr: 9.5040e-05  eta: 7:53:57  time: 1.6824  data_time: 0.0155  memory: 10145  loss: 42.1351  decode.loss_cls: 0.7017  decode.loss_mask: 1.5860  decode.loss_dice: 1.8660  decode.d0.loss_cls: 1.9171  decode.d0.loss_mask: 1.5196  decode.d0.loss_dice: 1.9031  decode.d1.loss_cls: 0.5909  decode.d1.loss_mask: 1.6043  decode.d1.loss_dice: 1.9011  decode.d2.loss_cls: 0.6551  decode.d2.loss_mask: 1.5556  decode.d2.loss_dice: 1.8593  decode.d3.loss_cls: 0.6518  decode.d3.loss_mask: 1.5728  decode.d3.loss_dice: 1.8149  decode.d4.loss_cls: 0.6636  decode.d4.loss_mask: 1.5913  decode.d4.loss_dice: 1.8002  decode.d5.loss_cls: 0.7156  decode.d5.loss_mask: 1.5700  decode.d5.loss_dice: 1.7914  decode.d6.loss_cls: 0.7062  decode.d6.loss_mask: 1.5224  decode.d6.loss_dice: 1.7993  decode.d7.loss_cls: 0.7035  decode.d7.loss_mask: 1.5977  decode.d7.loss_dice: 1.8382  decode.d8.loss_cls: 0.6237  decode.d8.loss_mask: 1.6460  decode.d8.loss_dice: 1.8668
2025/03/29 12:50:47 - mmengine - INFO - Iter(train) [ 1150/20000]  base_lr: 9.4814e-05 lr: 9.4814e-05  eta: 7:55:03  time: 1.6700  data_time: 0.0157  memory: 10144  loss: 45.8796  decode.loss_cls: 0.6906  decode.loss_mask: 1.8169  decode.loss_dice: 1.9967  decode.d0.loss_cls: 1.8807  decode.d0.loss_mask: 1.7456  decode.d0.loss_dice: 1.9766  decode.d1.loss_cls: 0.6051  decode.d1.loss_mask: 1.7303  decode.d1.loss_dice: 1.9371  decode.d2.loss_cls: 0.6719  decode.d2.loss_mask: 1.8585  decode.d2.loss_dice: 1.9069  decode.d3.loss_cls: 0.7073  decode.d3.loss_mask: 1.8693  decode.d3.loss_dice: 1.9349  decode.d4.loss_cls: 0.7282  decode.d4.loss_mask: 1.8324  decode.d4.loss_dice: 1.8684  decode.d5.loss_cls: 0.7656  decode.d5.loss_mask: 1.8345  decode.d5.loss_dice: 1.9033  decode.d6.loss_cls: 0.7529  decode.d6.loss_mask: 1.8192  decode.d6.loss_dice: 1.9903  decode.d7.loss_cls: 0.6808  decode.d7.loss_mask: 1.8495  decode.d7.loss_dice: 1.9759  decode.d8.loss_cls: 0.6199  decode.d8.loss_mask: 1.9166  decode.d8.loss_dice: 2.0139
2025/03/29 12:52:11 - mmengine - INFO - Iter(train) [ 1200/20000]  base_lr: 9.4588e-05 lr: 9.4588e-05  eta: 7:55:55  time: 1.6743  data_time: 0.0155  memory: 10144  loss: 42.8219  decode.loss_cls: 0.6093  decode.loss_mask: 1.6504  decode.loss_dice: 1.9536  decode.d0.loss_cls: 1.7150  decode.d0.loss_mask: 1.6113  decode.d0.loss_dice: 2.0563  decode.d1.loss_cls: 0.5591  decode.d1.loss_mask: 1.6948  decode.d1.loss_dice: 1.9577  decode.d2.loss_cls: 0.5264  decode.d2.loss_mask: 1.6286  decode.d2.loss_dice: 1.9270  decode.d3.loss_cls: 0.5860  decode.d3.loss_mask: 1.6293  decode.d3.loss_dice: 1.8913  decode.d4.loss_cls: 0.5518  decode.d4.loss_mask: 1.6152  decode.d4.loss_dice: 1.9046  decode.d5.loss_cls: 0.6299  decode.d5.loss_mask: 1.6484  decode.d5.loss_dice: 1.9386  decode.d6.loss_cls: 0.6088  decode.d6.loss_mask: 1.6394  decode.d6.loss_dice: 1.9415  decode.d7.loss_cls: 0.6140  decode.d7.loss_mask: 1.6704  decode.d7.loss_dice: 1.9186  decode.d8.loss_cls: 0.6442  decode.d8.loss_mask: 1.6211  decode.d8.loss_dice: 1.8790
2025/03/29 12:53:34 - mmengine - INFO - Iter(train) [ 1250/20000]  base_lr: 9.4361e-05 lr: 9.4361e-05  eta: 7:56:35  time: 1.6698  data_time: 0.0158  memory: 10088  loss: 41.8524  decode.loss_cls: 0.5892  decode.loss_mask: 1.7363  decode.loss_dice: 1.8730  decode.d0.loss_cls: 1.6738  decode.d0.loss_mask: 1.5520  decode.d0.loss_dice: 1.9467  decode.d1.loss_cls: 0.5371  decode.d1.loss_mask: 1.5841  decode.d1.loss_dice: 1.8709  decode.d2.loss_cls: 0.5840  decode.d2.loss_mask: 1.5838  decode.d2.loss_dice: 1.8084  decode.d3.loss_cls: 0.6715  decode.d3.loss_mask: 1.6025  decode.d3.loss_dice: 1.8390  decode.d4.loss_cls: 0.6583  decode.d4.loss_mask: 1.5988  decode.d4.loss_dice: 1.8366  decode.d5.loss_cls: 0.6111  decode.d5.loss_mask: 1.6114  decode.d5.loss_dice: 1.8709  decode.d6.loss_cls: 0.6075  decode.d6.loss_mask: 1.6222  decode.d6.loss_dice: 1.8291  decode.d7.loss_cls: 0.6095  decode.d7.loss_mask: 1.6063  decode.d7.loss_dice: 1.8183  decode.d8.loss_cls: 0.6405  decode.d8.loss_mask: 1.6396  decode.d8.loss_dice: 1.8399
2025/03/29 12:54:58 - mmengine - INFO - Iter(train) [ 1300/20000]  base_lr: 9.4135e-05 lr: 9.4135e-05  eta: 7:57:05  time: 1.6731  data_time: 0.0157  memory: 10150  loss: 42.5614  decode.loss_cls: 0.6507  decode.loss_mask: 1.5542  decode.loss_dice: 1.9600  decode.d0.loss_cls: 1.5845  decode.d0.loss_mask: 1.5989  decode.d0.loss_dice: 1.9856  decode.d1.loss_cls: 0.5564  decode.d1.loss_mask: 1.5644  decode.d1.loss_dice: 1.9164  decode.d2.loss_cls: 0.6347  decode.d2.loss_mask: 1.5364  decode.d2.loss_dice: 1.9423  decode.d3.loss_cls: 0.7199  decode.d3.loss_mask: 1.5154  decode.d3.loss_dice: 1.9479  decode.d4.loss_cls: 0.7190  decode.d4.loss_mask: 1.5578  decode.d4.loss_dice: 1.9157  decode.d5.loss_cls: 0.7069  decode.d5.loss_mask: 1.5171  decode.d5.loss_dice: 1.9038  decode.d6.loss_cls: 0.6534  decode.d6.loss_mask: 1.5849  decode.d6.loss_dice: 1.9282  decode.d7.loss_cls: 0.6736  decode.d7.loss_mask: 1.6030  decode.d7.loss_dice: 1.9377  decode.d8.loss_cls: 0.6607  decode.d8.loss_mask: 1.5999  decode.d8.loss_dice: 1.9322
2025/03/29 12:56:21 - mmengine - INFO - Iter(train) [ 1350/20000]  base_lr: 9.3908e-05 lr: 9.3908e-05  eta: 7:57:26  time: 1.6708  data_time: 0.0156  memory: 10151  loss: 39.1540  decode.loss_cls: 0.4600  decode.loss_mask: 1.6290  decode.loss_dice: 1.7084  decode.d0.loss_cls: 1.5028  decode.d0.loss_mask: 1.5946  decode.d0.loss_dice: 1.7822  decode.d1.loss_cls: 0.5005  decode.d1.loss_mask: 1.5908  decode.d1.loss_dice: 1.7906  decode.d2.loss_cls: 0.4838  decode.d2.loss_mask: 1.6270  decode.d2.loss_dice: 1.7190  decode.d3.loss_cls: 0.5705  decode.d3.loss_mask: 1.5281  decode.d3.loss_dice: 1.7396  decode.d4.loss_cls: 0.5586  decode.d4.loss_mask: 1.5748  decode.d4.loss_dice: 1.7010  decode.d5.loss_cls: 0.5771  decode.d5.loss_mask: 1.5671  decode.d5.loss_dice: 1.6814  decode.d6.loss_cls: 0.5440  decode.d6.loss_mask: 1.5379  decode.d6.loss_dice: 1.6969  decode.d7.loss_cls: 0.5285  decode.d7.loss_mask: 1.5531  decode.d7.loss_dice: 1.6766  decode.d8.loss_cls: 0.4884  decode.d8.loss_mask: 1.5509  decode.d8.loss_dice: 1.6907
2025/03/29 12:56:48 - mmengine - INFO - Exp name: r2u_20250329_122140
2025/03/29 12:57:45 - mmengine - INFO - Iter(train) [ 1400/20000]  base_lr: 9.3682e-05 lr: 9.3682e-05  eta: 7:57:38  time: 1.6674  data_time: 0.0156  memory: 10145  loss: 37.6263  decode.loss_cls: 0.4656  decode.loss_mask: 1.5728  decode.loss_dice: 1.6960  decode.d0.loss_cls: 1.4404  decode.d0.loss_mask: 1.5107  decode.d0.loss_dice: 1.7508  decode.d1.loss_cls: 0.4616  decode.d1.loss_mask: 1.4635  decode.d1.loss_dice: 1.6617  decode.d2.loss_cls: 0.5053  decode.d2.loss_mask: 1.4497  decode.d2.loss_dice: 1.6023  decode.d3.loss_cls: 0.4743  decode.d3.loss_mask: 1.5232  decode.d3.loss_dice: 1.6406  decode.d4.loss_cls: 0.4858  decode.d4.loss_mask: 1.4800  decode.d4.loss_dice: 1.6289  decode.d5.loss_cls: 0.4768  decode.d5.loss_mask: 1.5241  decode.d5.loss_dice: 1.6791  decode.d6.loss_cls: 0.5482  decode.d6.loss_mask: 1.4459  decode.d6.loss_dice: 1.6138  decode.d7.loss_cls: 0.5065  decode.d7.loss_mask: 1.4931  decode.d7.loss_dice: 1.7019  decode.d8.loss_cls: 0.4804  decode.d8.loss_mask: 1.6015  decode.d8.loss_dice: 1.7420
2025/03/29 12:59:09 - mmengine - INFO - Iter(train) [ 1450/20000]  base_lr: 9.3455e-05 lr: 9.3455e-05  eta: 7:57:45  time: 1.6748  data_time: 0.0159  memory: 10093  loss: 37.8697  decode.loss_cls: 0.4522  decode.loss_mask: 1.6425  decode.loss_dice: 1.6253  decode.d0.loss_cls: 1.4045  decode.d0.loss_mask: 1.5725  decode.d0.loss_dice: 1.6130  decode.d1.loss_cls: 0.4930  decode.d1.loss_mask: 1.6524  decode.d1.loss_dice: 1.6190  decode.d2.loss_cls: 0.4906  decode.d2.loss_mask: 1.6197  decode.d2.loss_dice: 1.5892  decode.d3.loss_cls: 0.4885  decode.d3.loss_mask: 1.5968  decode.d3.loss_dice: 1.5458  decode.d4.loss_cls: 0.4972  decode.d4.loss_mask: 1.5908  decode.d4.loss_dice: 1.5662  decode.d5.loss_cls: 0.5089  decode.d5.loss_mask: 1.6661  decode.d5.loss_dice: 1.5688  decode.d6.loss_cls: 0.4940  decode.d6.loss_mask: 1.6164  decode.d6.loss_dice: 1.5373  decode.d7.loss_cls: 0.5289  decode.d7.loss_mask: 1.5910  decode.d7.loss_dice: 1.5493  decode.d8.loss_cls: 0.3918  decode.d8.loss_mask: 1.7170  decode.d8.loss_dice: 1.6409
2025/03/29 13:00:32 - mmengine - INFO - Iter(train) [ 1500/20000]  base_lr: 9.3228e-05 lr: 9.3228e-05  eta: 7:57:46  time: 1.6734  data_time: 0.0156  memory: 10143  loss: 41.2218  decode.loss_cls: 0.5273  decode.loss_mask: 1.7238  decode.loss_dice: 1.8913  decode.d0.loss_cls: 1.2507  decode.d0.loss_mask: 1.6595  decode.d0.loss_dice: 1.9060  decode.d1.loss_cls: 0.4132  decode.d1.loss_mask: 1.6715  decode.d1.loss_dice: 1.8945  decode.d2.loss_cls: 0.5123  decode.d2.loss_mask: 1.6883  decode.d2.loss_dice: 1.8473  decode.d3.loss_cls: 0.5031  decode.d3.loss_mask: 1.6752  decode.d3.loss_dice: 1.8489  decode.d4.loss_cls: 0.5070  decode.d4.loss_mask: 1.6540  decode.d4.loss_dice: 1.8500  decode.d5.loss_cls: 0.4645  decode.d5.loss_mask: 1.6710  decode.d5.loss_dice: 1.8415  decode.d6.loss_cls: 0.4905  decode.d6.loss_mask: 1.7159  decode.d6.loss_dice: 1.8355  decode.d7.loss_cls: 0.4958  decode.d7.loss_mask: 1.7369  decode.d7.loss_dice: 1.8610  decode.d8.loss_cls: 0.5083  decode.d8.loss_mask: 1.7079  decode.d8.loss_dice: 1.8692
2025/03/29 13:01:56 - mmengine - INFO - Iter(train) [ 1550/20000]  base_lr: 9.3001e-05 lr: 9.3001e-05  eta: 7:57:40  time: 1.6691  data_time: 0.0160  memory: 10147  loss: 41.5407  decode.loss_cls: 0.5008  decode.loss_mask: 1.7972  decode.loss_dice: 1.8565  decode.d0.loss_cls: 1.2848  decode.d0.loss_mask: 1.6137  decode.d0.loss_dice: 1.8484  decode.d1.loss_cls: 0.4802  decode.d1.loss_mask: 1.7220  decode.d1.loss_dice: 1.8843  decode.d2.loss_cls: 0.5055  decode.d2.loss_mask: 1.7489  decode.d2.loss_dice: 1.8531  decode.d3.loss_cls: 0.4748  decode.d3.loss_mask: 1.7846  decode.d3.loss_dice: 1.8663  decode.d4.loss_cls: 0.4261  decode.d4.loss_mask: 1.8147  decode.d4.loss_dice: 1.9169  decode.d5.loss_cls: 0.4421  decode.d5.loss_mask: 1.7497  decode.d5.loss_dice: 1.8972  decode.d6.loss_cls: 0.4328  decode.d6.loss_mask: 1.6781  decode.d6.loss_dice: 1.8418  decode.d7.loss_cls: 0.4704  decode.d7.loss_mask: 1.7236  decode.d7.loss_dice: 1.8459  decode.d8.loss_cls: 0.4979  decode.d8.loss_mask: 1.7163  decode.d8.loss_dice: 1.8662
2025/03/29 13:03:19 - mmengine - INFO - Iter(train) [ 1600/20000]  base_lr: 9.2774e-05 lr: 9.2774e-05  eta: 7:57:32  time: 1.6771  data_time: 0.0156  memory: 10083  loss: 38.2177  decode.loss_cls: 0.4513  decode.loss_mask: 1.5313  decode.loss_dice: 1.7222  decode.d0.loss_cls: 1.2122  decode.d0.loss_mask: 1.6687  decode.d0.loss_dice: 1.8980  decode.d1.loss_cls: 0.3979  decode.d1.loss_mask: 1.5291  decode.d1.loss_dice: 1.7478  decode.d2.loss_cls: 0.4492  decode.d2.loss_mask: 1.4898  decode.d2.loss_dice: 1.7223  decode.d3.loss_cls: 0.4657  decode.d3.loss_mask: 1.4749  decode.d3.loss_dice: 1.7554  decode.d4.loss_cls: 0.4864  decode.d4.loss_mask: 1.4881  decode.d4.loss_dice: 1.7389  decode.d5.loss_cls: 0.4701  decode.d5.loss_mask: 1.5275  decode.d5.loss_dice: 1.7628  decode.d6.loss_cls: 0.4664  decode.d6.loss_mask: 1.5445  decode.d6.loss_dice: 1.7374  decode.d7.loss_cls: 0.4837  decode.d7.loss_mask: 1.5197  decode.d7.loss_dice: 1.7552  decode.d8.loss_cls: 0.4570  decode.d8.loss_mask: 1.5108  decode.d8.loss_dice: 1.7533
2025/03/29 13:04:43 - mmengine - INFO - Iter(train) [ 1650/20000]  base_lr: 9.2548e-05 lr: 9.2548e-05  eta: 7:57:16  time: 1.6672  data_time: 0.0155  memory: 10090  loss: 43.6658  decode.loss_cls: 0.6191  decode.loss_mask: 1.6851  decode.loss_dice: 2.0056  decode.d0.loss_cls: 1.2768  decode.d0.loss_mask: 1.6696  decode.d0.loss_dice: 2.0360  decode.d1.loss_cls: 0.6625  decode.d1.loss_mask: 1.6351  decode.d1.loss_dice: 1.9558  decode.d2.loss_cls: 0.6027  decode.d2.loss_mask: 1.6648  decode.d2.loss_dice: 1.9904  decode.d3.loss_cls: 0.5903  decode.d3.loss_mask: 1.7212  decode.d3.loss_dice: 2.0064  decode.d4.loss_cls: 0.6039  decode.d4.loss_mask: 1.7152  decode.d4.loss_dice: 2.0161  decode.d5.loss_cls: 0.6128  decode.d5.loss_mask: 1.6684  decode.d5.loss_dice: 1.9984  decode.d6.loss_cls: 0.6644  decode.d6.loss_mask: 1.6577  decode.d6.loss_dice: 1.9646  decode.d7.loss_cls: 0.6069  decode.d7.loss_mask: 1.7032  decode.d7.loss_dice: 2.0211  decode.d8.loss_cls: 0.6266  decode.d8.loss_mask: 1.6797  decode.d8.loss_dice: 2.0055
2025/03/29 13:06:06 - mmengine - INFO - Iter(train) [ 1700/20000]  base_lr: 9.2321e-05 lr: 9.2321e-05  eta: 7:56:58  time: 1.6815  data_time: 0.0154  memory: 10147  loss: 41.4449  decode.loss_cls: 0.5384  decode.loss_mask: 1.7535  decode.loss_dice: 1.7778  decode.d0.loss_cls: 1.1838  decode.d0.loss_mask: 1.7253  decode.d0.loss_dice: 1.8659  decode.d1.loss_cls: 0.5486  decode.d1.loss_mask: 1.6741  decode.d1.loss_dice: 1.7515  decode.d2.loss_cls: 0.5910  decode.d2.loss_mask: 1.7349  decode.d2.loss_dice: 1.7643  decode.d3.loss_cls: 0.5969  decode.d3.loss_mask: 1.7416  decode.d3.loss_dice: 1.7410  decode.d4.loss_cls: 0.5519  decode.d4.loss_mask: 1.7641  decode.d4.loss_dice: 1.7772  decode.d5.loss_cls: 0.5793  decode.d5.loss_mask: 1.7968  decode.d5.loss_dice: 1.7918  decode.d6.loss_cls: 0.5613  decode.d6.loss_mask: 1.7707  decode.d6.loss_dice: 1.7606  decode.d7.loss_cls: 0.5112  decode.d7.loss_mask: 1.7609  decode.d7.loss_dice: 1.7654  decode.d8.loss_cls: 0.5501  decode.d8.loss_mask: 1.7282  decode.d8.loss_dice: 1.7868
2025/03/29 13:07:30 - mmengine - INFO - Iter(train) [ 1750/20000]  base_lr: 9.2094e-05 lr: 9.2094e-05  eta: 7:56:37  time: 1.6742  data_time: 0.0154  memory: 10095  loss: 38.5542  decode.loss_cls: 0.4614  decode.loss_mask: 1.5121  decode.loss_dice: 1.7538  decode.d0.loss_cls: 1.1318  decode.d0.loss_mask: 1.4386  decode.d0.loss_dice: 1.8298  decode.d1.loss_cls: 0.5014  decode.d1.loss_mask: 1.5065  decode.d1.loss_dice: 1.7988  decode.d2.loss_cls: 0.5106  decode.d2.loss_mask: 1.5669  decode.d2.loss_dice: 1.7780  decode.d3.loss_cls: 0.4681  decode.d3.loss_mask: 1.5083  decode.d3.loss_dice: 1.7128  decode.d4.loss_cls: 0.5511  decode.d4.loss_mask: 1.4853  decode.d4.loss_dice: 1.7210  decode.d5.loss_cls: 0.5485  decode.d5.loss_mask: 1.5326  decode.d5.loss_dice: 1.7777  decode.d6.loss_cls: 0.5408  decode.d6.loss_mask: 1.5251  decode.d6.loss_dice: 1.7660  decode.d7.loss_cls: 0.5661  decode.d7.loss_mask: 1.5271  decode.d7.loss_dice: 1.7507  decode.d8.loss_cls: 0.4654  decode.d8.loss_mask: 1.5438  decode.d8.loss_dice: 1.7741
2025/03/29 13:08:53 - mmengine - INFO - Iter(train) [ 1800/20000]  base_lr: 9.1866e-05 lr: 9.1866e-05  eta: 7:56:10  time: 1.6671  data_time: 0.0156  memory: 10087  loss: 36.0973  decode.loss_cls: 0.4786  decode.loss_mask: 1.4936  decode.loss_dice: 1.6022  decode.d0.loss_cls: 1.0567  decode.d0.loss_mask: 1.4972  decode.d0.loss_dice: 1.6521  decode.d1.loss_cls: 0.4668  decode.d1.loss_mask: 1.4348  decode.d1.loss_dice: 1.6169  decode.d2.loss_cls: 0.4642  decode.d2.loss_mask: 1.4346  decode.d2.loss_dice: 1.6416  decode.d3.loss_cls: 0.5083  decode.d3.loss_mask: 1.4208  decode.d3.loss_dice: 1.6058  decode.d4.loss_cls: 0.5362  decode.d4.loss_mask: 1.4370  decode.d4.loss_dice: 1.6067  decode.d5.loss_cls: 0.5459  decode.d5.loss_mask: 1.4284  decode.d5.loss_dice: 1.5697  decode.d6.loss_cls: 0.5296  decode.d6.loss_mask: 1.4455  decode.d6.loss_dice: 1.5564  decode.d7.loss_cls: 0.5319  decode.d7.loss_mask: 1.4224  decode.d7.loss_dice: 1.5863  decode.d8.loss_cls: 0.4731  decode.d8.loss_mask: 1.4602  decode.d8.loss_dice: 1.5940
2025/03/29 13:10:17 - mmengine - INFO - Iter(train) [ 1850/20000]  base_lr: 9.1639e-05 lr: 9.1639e-05  eta: 7:55:42  time: 1.6698  data_time: 0.0156  memory: 10085  loss: 41.2850  decode.loss_cls: 0.6101  decode.loss_mask: 1.6051  decode.loss_dice: 1.8778  decode.d0.loss_cls: 1.0638  decode.d0.loss_mask: 1.5688  decode.d0.loss_dice: 1.9554  decode.d1.loss_cls: 0.5525  decode.d1.loss_mask: 1.5864  decode.d1.loss_dice: 1.8489  decode.d2.loss_cls: 0.5944  decode.d2.loss_mask: 1.5871  decode.d2.loss_dice: 1.8661  decode.d3.loss_cls: 0.5991  decode.d3.loss_mask: 1.5786  decode.d3.loss_dice: 1.8906  decode.d4.loss_cls: 0.6008  decode.d4.loss_mask: 1.6297  decode.d4.loss_dice: 1.9530  decode.d5.loss_cls: 0.5512  decode.d5.loss_mask: 1.6559  decode.d5.loss_dice: 1.8909  decode.d6.loss_cls: 0.5633  decode.d6.loss_mask: 1.6646  decode.d6.loss_dice: 1.8559  decode.d7.loss_cls: 0.5677  decode.d7.loss_mask: 1.6301  decode.d7.loss_dice: 1.8798  decode.d8.loss_cls: 0.5984  decode.d8.loss_mask: 1.6254  decode.d8.loss_dice: 1.8336
2025/03/29 13:11:41 - mmengine - INFO - Iter(train) [ 1900/20000]  base_lr: 9.1412e-05 lr: 9.1412e-05  eta: 7:55:10  time: 1.6682  data_time: 0.0155  memory: 10097  loss: 36.9300  decode.loss_cls: 0.5249  decode.loss_mask: 1.5746  decode.loss_dice: 1.6150  decode.d0.loss_cls: 1.0683  decode.d0.loss_mask: 1.4806  decode.d0.loss_dice: 1.6573  decode.d1.loss_cls: 0.5028  decode.d1.loss_mask: 1.5792  decode.d1.loss_dice: 1.6526  decode.d2.loss_cls: 0.5354  decode.d2.loss_mask: 1.5011  decode.d2.loss_dice: 1.5631  decode.d3.loss_cls: 0.5132  decode.d3.loss_mask: 1.5024  decode.d3.loss_dice: 1.5602  decode.d4.loss_cls: 0.5315  decode.d4.loss_mask: 1.5158  decode.d4.loss_dice: 1.5824  decode.d5.loss_cls: 0.5229  decode.d5.loss_mask: 1.5170  decode.d5.loss_dice: 1.6228  decode.d6.loss_cls: 0.5397  decode.d6.loss_mask: 1.4878  decode.d6.loss_dice: 1.5626  decode.d7.loss_cls: 0.5199  decode.d7.loss_mask: 1.5190  decode.d7.loss_dice: 1.5709  decode.d8.loss_cls: 0.5041  decode.d8.loss_mask: 1.5205  decode.d8.loss_dice: 1.5827
2025/03/29 13:13:04 - mmengine - INFO - Iter(train) [ 1950/20000]  base_lr: 9.1185e-05 lr: 9.1185e-05  eta: 7:54:35  time: 1.6707  data_time: 0.0155  memory: 10084  loss: 46.3023  decode.loss_cls: 0.6361  decode.loss_mask: 1.9154  decode.loss_dice: 2.0351  decode.d0.loss_cls: 1.1222  decode.d0.loss_mask: 1.8669  decode.d0.loss_dice: 2.0457  decode.d1.loss_cls: 0.6713  decode.d1.loss_mask: 1.8234  decode.d1.loss_dice: 2.1015  decode.d2.loss_cls: 0.7369  decode.d2.loss_mask: 1.8396  decode.d2.loss_dice: 2.0662  decode.d3.loss_cls: 0.6846  decode.d3.loss_mask: 1.9105  decode.d3.loss_dice: 2.0631  decode.d4.loss_cls: 0.6562  decode.d4.loss_mask: 1.8450  decode.d4.loss_dice: 2.0058  decode.d5.loss_cls: 0.5928  decode.d5.loss_mask: 1.8596  decode.d5.loss_dice: 2.0416  decode.d6.loss_cls: 0.6138  decode.d6.loss_mask: 1.8975  decode.d6.loss_dice: 2.0672  decode.d7.loss_cls: 0.6738  decode.d7.loss_mask: 1.8446  decode.d7.loss_dice: 2.0683  decode.d8.loss_cls: 0.6735  decode.d8.loss_mask: 1.9006  decode.d8.loss_dice: 2.0437
2025/03/29 13:14:28 - mmengine - INFO - Exp name: r2u_20250329_122140
2025/03/29 13:14:28 - mmengine - INFO - Iter(train) [ 2000/20000]  base_lr: 9.0957e-05 lr: 9.0957e-05  eta: 7:53:57  time: 1.6667  data_time: 0.0155  memory: 10092  loss: 39.4447  decode.loss_cls: 0.5207  decode.loss_mask: 1.6106  decode.loss_dice: 1.7789  decode.d0.loss_cls: 0.9839  decode.d0.loss_mask: 1.5723  decode.d0.loss_dice: 1.8398  decode.d1.loss_cls: 0.4757  decode.d1.loss_mask: 1.6169  decode.d1.loss_dice: 1.8108  decode.d2.loss_cls: 0.4366  decode.d2.loss_mask: 1.6442  decode.d2.loss_dice: 1.8005  decode.d3.loss_cls: 0.4818  decode.d3.loss_mask: 1.6209  decode.d3.loss_dice: 1.7518  decode.d4.loss_cls: 0.5349  decode.d4.loss_mask: 1.5764  decode.d4.loss_dice: 1.7615  decode.d5.loss_cls: 0.5091  decode.d5.loss_mask: 1.5782  decode.d5.loss_dice: 1.7938  decode.d6.loss_cls: 0.4897  decode.d6.loss_mask: 1.6615  decode.d6.loss_dice: 1.7934  decode.d7.loss_cls: 0.4980  decode.d7.loss_mask: 1.6206  decode.d7.loss_dice: 1.7887  decode.d8.loss_cls: 0.4871  decode.d8.loss_mask: 1.6346  decode.d8.loss_dice: 1.7717
2025/03/29 13:14:28 - mmengine - INFO - Saving checkpoint at 2000 iterations
2025/03/29 13:14:38 - mmengine - INFO - Iter(val) [  50/2708]    eta: 0:07:57  time: 0.1694  data_time: 0.0014  memory: 1856  
2025/03/29 13:14:47 - mmengine - INFO - Iter(val) [ 100/2708]    eta: 0:07:34  time: 0.1714  data_time: 0.0014  memory: 1856  
2025/03/29 13:14:55 - mmengine - INFO - Iter(val) [ 150/2708]    eta: 0:07:19  time: 0.1611  data_time: 0.0013  memory: 1856  
2025/03/29 13:15:03 - mmengine - INFO - Iter(val) [ 200/2708]    eta: 0:07:06  time: 0.1668  data_time: 0.0012  memory: 1856  
2025/03/29 13:15:11 - mmengine - INFO - Iter(val) [ 250/2708]    eta: 0:06:52  time: 0.1581  data_time: 0.0013  memory: 1856  
2025/03/29 13:15:19 - mmengine - INFO - Iter(val) [ 300/2708]    eta: 0:06:42  time: 0.1670  data_time: 0.0014  memory: 1856  
2025/03/29 13:15:28 - mmengine - INFO - Iter(val) [ 350/2708]    eta: 0:06:31  time: 0.1578  data_time: 0.0013  memory: 1856  
2025/03/29 13:15:36 - mmengine - INFO - Iter(val) [ 400/2708]    eta: 0:06:22  time: 0.1671  data_time: 0.0013  memory: 1856  
2025/03/29 13:15:44 - mmengine - INFO - Iter(val) [ 450/2708]    eta: 0:06:12  time: 0.1608  data_time: 0.0013  memory: 1856  
2025/03/29 13:15:52 - mmengine - INFO - Iter(val) [ 500/2708]    eta: 0:06:04  time: 0.1655  data_time: 0.0014  memory: 1856  
2025/03/29 13:16:00 - mmengine - INFO - Iter(val) [ 550/2708]    eta: 0:05:56  time: 0.1656  data_time: 0.0013  memory: 1856  
2025/03/29 13:16:08 - mmengine - INFO - Iter(val) [ 600/2708]    eta: 0:05:46  time: 0.1579  data_time: 0.0013  memory: 1856  
2025/03/29 13:16:16 - mmengine - INFO - Iter(val) [ 650/2708]    eta: 0:05:38  time: 0.1670  data_time: 0.0013  memory: 1856  
2025/03/29 13:16:24 - mmengine - INFO - Iter(val) [ 700/2708]    eta: 0:05:29  time: 0.1580  data_time: 0.0013  memory: 1856  
2025/03/29 13:16:32 - mmengine - INFO - Iter(val) [ 750/2708]    eta: 0:05:21  time: 0.1675  data_time: 0.0013  memory: 1856  
2025/03/29 13:16:41 - mmengine - INFO - Iter(val) [ 800/2708]    eta: 0:05:12  time: 0.1617  data_time: 0.0013  memory: 1856  
2025/03/29 13:16:49 - mmengine - INFO - Iter(val) [ 850/2708]    eta: 0:05:04  time: 0.1668  data_time: 0.0013  memory: 1856  
2025/03/29 13:16:57 - mmengine - INFO - Iter(val) [ 900/2708]    eta: 0:04:55  time: 0.1615  data_time: 0.0012  memory: 1856  
2025/03/29 13:17:05 - mmengine - INFO - Iter(val) [ 950/2708]    eta: 0:04:47  time: 0.1669  data_time: 0.0012  memory: 1856  
2025/03/29 13:17:13 - mmengine - INFO - Iter(val) [1000/2708]    eta: 0:04:39  time: 0.1573  data_time: 0.0013  memory: 1856  
2025/03/29 13:17:21 - mmengine - INFO - Iter(val) [1050/2708]    eta: 0:04:30  time: 0.1702  data_time: 0.0014  memory: 1856  
2025/03/29 13:17:29 - mmengine - INFO - Iter(val) [1100/2708]    eta: 0:04:22  time: 0.1675  data_time: 0.0013  memory: 1856  
2025/03/29 13:17:38 - mmengine - INFO - Iter(val) [1150/2708]    eta: 0:04:15  time: 0.1683  data_time: 0.0012  memory: 1856  
2025/03/29 13:17:46 - mmengine - INFO - Iter(val) [1200/2708]    eta: 0:04:06  time: 0.1570  data_time: 0.0013  memory: 1856  
2025/03/29 13:17:54 - mmengine - INFO - Iter(val) [1250/2708]    eta: 0:03:58  time: 0.1603  data_time: 0.0013  memory: 1856  
2025/03/29 13:18:02 - mmengine - INFO - Iter(val) [1300/2708]    eta: 0:03:50  time: 0.1596  data_time: 0.0012  memory: 1856  
2025/03/29 13:18:10 - mmengine - INFO - Iter(val) [1350/2708]    eta: 0:03:41  time: 0.1590  data_time: 0.0013  memory: 1856  
2025/03/29 13:18:18 - mmengine - INFO - Iter(val) [1400/2708]    eta: 0:03:33  time: 0.1586  data_time: 0.0013  memory: 1856  
2025/03/29 13:18:26 - mmengine - INFO - Iter(val) [1450/2708]    eta: 0:03:25  time: 0.1556  data_time: 0.0013  memory: 1856  
2025/03/29 13:18:35 - mmengine - INFO - Iter(val) [1500/2708]    eta: 0:03:17  time: 0.1664  data_time: 0.0013  memory: 1856  
2025/03/29 13:18:43 - mmengine - INFO - Iter(val) [1550/2708]    eta: 0:03:09  time: 0.1578  data_time: 0.0013  memory: 1856  
2025/03/29 13:18:51 - mmengine - INFO - Iter(val) [1600/2708]    eta: 0:03:00  time: 0.1671  data_time: 0.0013  memory: 1856  
2025/03/29 13:18:59 - mmengine - INFO - Iter(val) [1650/2708]    eta: 0:02:52  time: 0.1711  data_time: 0.0013  memory: 1856  
2025/03/29 13:19:08 - mmengine - INFO - Iter(val) [1700/2708]    eta: 0:02:44  time: 0.1668  data_time: 0.0014  memory: 1856  
2025/03/29 13:19:16 - mmengine - INFO - Iter(val) [1750/2708]    eta: 0:02:36  time: 0.1574  data_time: 0.0013  memory: 1856  
2025/03/29 13:19:24 - mmengine - INFO - Iter(val) [1800/2708]    eta: 0:02:28  time: 0.1656  data_time: 0.0012  memory: 1856  
2025/03/29 13:19:32 - mmengine - INFO - Iter(val) [1850/2708]    eta: 0:02:20  time: 0.1619  data_time: 0.0013  memory: 1856  
2025/03/29 13:19:40 - mmengine - INFO - Iter(val) [1900/2708]    eta: 0:02:12  time: 0.1672  data_time: 0.0013  memory: 1856  
2025/03/29 13:19:48 - mmengine - INFO - Iter(val) [1950/2708]    eta: 0:02:03  time: 0.1561  data_time: 0.0017  memory: 1856  
2025/03/29 13:19:56 - mmengine - INFO - Iter(val) [2000/2708]    eta: 0:01:55  time: 0.1673  data_time: 0.0013  memory: 1856  
2025/03/29 13:20:04 - mmengine - INFO - Iter(val) [2050/2708]    eta: 0:01:47  time: 0.1563  data_time: 0.0013  memory: 1856  
2025/03/29 13:20:12 - mmengine - INFO - Iter(val) [2100/2708]    eta: 0:01:39  time: 0.1672  data_time: 0.0012  memory: 1856  
2025/03/29 13:20:21 - mmengine - INFO - Iter(val) [2150/2708]    eta: 0:01:31  time: 0.1615  data_time: 0.0012  memory: 1856  
2025/03/29 13:20:29 - mmengine - INFO - Iter(val) [2200/2708]    eta: 0:01:22  time: 0.1671  data_time: 0.0012  memory: 1856  
2025/03/29 13:20:37 - mmengine - INFO - Iter(val) [2250/2708]    eta: 0:01:14  time: 0.1695  data_time: 0.0013  memory: 1856  
2025/03/29 13:20:46 - mmengine - INFO - Iter(val) [2300/2708]    eta: 0:01:06  time: 0.1715  data_time: 0.0013  memory: 1856  
2025/03/29 13:20:54 - mmengine - INFO - Iter(val) [2350/2708]    eta: 0:00:58  time: 0.1718  data_time: 0.0013  memory: 1856  
2025/03/29 13:21:02 - mmengine - INFO - Iter(val) [2400/2708]    eta: 0:00:50  time: 0.1575  data_time: 0.0013  memory: 1856  
2025/03/29 13:21:10 - mmengine - INFO - Iter(val) [2450/2708]    eta: 0:00:42  time: 0.1297  data_time: 0.0013  memory: 1856  
2025/03/29 13:21:17 - mmengine - INFO - Iter(val) [2500/2708]    eta: 0:00:33  time: 0.1720  data_time: 0.0013  memory: 1856  
2025/03/29 13:21:26 - mmengine - INFO - Iter(val) [2550/2708]    eta: 0:00:25  time: 0.1720  data_time: 0.0013  memory: 1856  
2025/03/29 13:21:34 - mmengine - INFO - Iter(val) [2600/2708]    eta: 0:00:17  time: 0.1723  data_time: 0.0013  memory: 1856  
2025/03/29 13:21:43 - mmengine - INFO - Iter(val) [2650/2708]    eta: 0:00:09  time: 0.1719  data_time: 0.0013  memory: 1856  
2025/03/29 13:21:52 - mmengine - INFO - Iter(val) [2700/2708]    eta: 0:00:01  time: 0.1719  data_time: 0.0012  memory: 1856  
2025/03/29 13:21:53 - mmengine - INFO - per class results:
2025/03/29 13:21:53 - mmengine - INFO - 
+--------------+-------+-------+
|    Class     |  IoU  |  Acc  |
+--------------+-------+-------+
|  background  | 43.21 | 69.86 |
|   building   | 51.75 |  57.9 |
|     road     | 47.44 | 50.82 |
|    water     | 73.81 | 83.59 |
|    barren    | 36.31 | 63.85 |
|    forest    | 53.45 | 74.21 |
| agricultural | 59.47 | 68.25 |
+--------------+-------+-------+
2025/03/29 13:21:53 - mmengine - INFO - Iter(val) [2708/2708]    aAcc: 68.2400  mIoU: 52.2000  mAcc: 66.9300  data_time: 0.0014  time: 0.1636
2025/03/29 13:21:54 - mmengine - INFO - The best checkpoint with 52.2000 mIoU at 2000 iter is saved to best_mIoU_iter_2000.pth.
2025/03/29 13:23:26 - mmengine - INFO - Iter(train) [ 2050/20000]  base_lr: 9.0730e-05 lr: 9.0730e-05  eta: 7:54:45  time: 1.8225  data_time: 0.0158  memory: 10095  loss: 39.3838  decode.loss_cls: 0.6423  decode.loss_mask: 1.4639  decode.loss_dice: 1.8078  decode.d0.loss_cls: 1.0363  decode.d0.loss_mask: 1.4880  decode.d0.loss_dice: 1.8434  decode.d1.loss_cls: 0.6331  decode.d1.loss_mask: 1.4203  decode.d1.loss_dice: 1.8704  decode.d2.loss_cls: 0.6153  decode.d2.loss_mask: 1.4303  decode.d2.loss_dice: 1.7705  decode.d3.loss_cls: 0.6548  decode.d3.loss_mask: 1.5002  decode.d3.loss_dice: 1.7979  decode.d4.loss_cls: 0.6604  decode.d4.loss_mask: 1.4245  decode.d4.loss_dice: 1.8004  decode.d5.loss_cls: 0.6339  decode.d5.loss_mask: 1.4175  decode.d5.loss_dice: 1.7656  decode.d6.loss_cls: 0.6759  decode.d6.loss_mask: 1.4280  decode.d6.loss_dice: 1.7517  decode.d7.loss_cls: 0.6768  decode.d7.loss_mask: 1.4597  decode.d7.loss_dice: 1.7900  decode.d8.loss_cls: 0.6588  decode.d8.loss_mask: 1.4665  decode.d8.loss_dice: 1.7996
2025/03/29 13:24:59 - mmengine - INFO - Iter(train) [ 2100/20000]  base_lr: 9.0502e-05 lr: 9.0502e-05  eta: 7:55:14  time: 1.8190  data_time: 0.0168  memory: 10149  loss: 38.8610  decode.loss_cls: 0.4430  decode.loss_mask: 1.7676  decode.loss_dice: 1.7555  decode.d0.loss_cls: 0.9288  decode.d0.loss_mask: 1.5828  decode.d0.loss_dice: 1.7460  decode.d1.loss_cls: 0.4505  decode.d1.loss_mask: 1.6090  decode.d1.loss_dice: 1.6985  decode.d2.loss_cls: 0.4042  decode.d2.loss_mask: 1.6690  decode.d2.loss_dice: 1.7246  decode.d3.loss_cls: 0.3986  decode.d3.loss_mask: 1.6420  decode.d3.loss_dice: 1.7276  decode.d4.loss_cls: 0.3760  decode.d4.loss_mask: 1.6651  decode.d4.loss_dice: 1.7173  decode.d5.loss_cls: 0.4643  decode.d5.loss_mask: 1.7224  decode.d5.loss_dice: 1.7136  decode.d6.loss_cls: 0.4745  decode.d6.loss_mask: 1.6669  decode.d6.loss_dice: 1.6840  decode.d7.loss_cls: 0.4554  decode.d7.loss_mask: 1.7584  decode.d7.loss_dice: 1.7131  decode.d8.loss_cls: 0.4606  decode.d8.loss_mask: 1.7299  decode.d8.loss_dice: 1.7117
2025/03/29 13:26:30 - mmengine - INFO - Iter(train) [ 2150/20000]  base_lr: 9.0275e-05 lr: 9.0275e-05  eta: 7:55:31  time: 1.8223  data_time: 0.0156  memory: 10087  loss: 42.8708  decode.loss_cls: 0.6559  decode.loss_mask: 1.7977  decode.loss_dice: 1.8028  decode.d0.loss_cls: 0.9603  decode.d0.loss_mask: 1.7883  decode.d0.loss_dice: 1.9179  decode.d1.loss_cls: 0.6538  decode.d1.loss_mask: 1.8023  decode.d1.loss_dice: 1.8802  decode.d2.loss_cls: 0.6686  decode.d2.loss_mask: 1.7481  decode.d2.loss_dice: 1.8050  decode.d3.loss_cls: 0.6838  decode.d3.loss_mask: 1.7814  decode.d3.loss_dice: 1.7866  decode.d4.loss_cls: 0.7449  decode.d4.loss_mask: 1.7359  decode.d4.loss_dice: 1.7318  decode.d5.loss_cls: 0.6794  decode.d5.loss_mask: 1.7465  decode.d5.loss_dice: 1.7506  decode.d6.loss_cls: 0.6796  decode.d6.loss_mask: 1.7625  decode.d6.loss_dice: 1.7656  decode.d7.loss_cls: 0.6762  decode.d7.loss_mask: 1.7897  decode.d7.loss_dice: 1.7975  decode.d8.loss_cls: 0.6299  decode.d8.loss_mask: 1.8532  decode.d8.loss_dice: 1.7947
2025/03/29 13:28:01 - mmengine - INFO - Iter(train) [ 2200/20000]  base_lr: 9.0047e-05 lr: 9.0047e-05  eta: 7:55:39  time: 1.8052  data_time: 0.0156  memory: 10142  loss: 39.3778  decode.loss_cls: 0.6237  decode.loss_mask: 1.6204  decode.loss_dice: 1.6686  decode.d0.loss_cls: 0.9479  decode.d0.loss_mask: 1.5829  decode.d0.loss_dice: 1.7852  decode.d1.loss_cls: 0.5700  decode.d1.loss_mask: 1.5924  decode.d1.loss_dice: 1.6810  decode.d2.loss_cls: 0.5823  decode.d2.loss_mask: 1.5949  decode.d2.loss_dice: 1.6728  decode.d3.loss_cls: 0.6464  decode.d3.loss_mask: 1.5987  decode.d3.loss_dice: 1.6520  decode.d4.loss_cls: 0.6687  decode.d4.loss_mask: 1.5964  decode.d4.loss_dice: 1.6518  decode.d5.loss_cls: 0.6606  decode.d5.loss_mask: 1.6159  decode.d5.loss_dice: 1.6551  decode.d6.loss_cls: 0.5712  decode.d6.loss_mask: 1.6674  decode.d6.loss_dice: 1.7265  decode.d7.loss_cls: 0.6080  decode.d7.loss_mask: 1.5802  decode.d7.loss_dice: 1.6624  decode.d8.loss_cls: 0.6306  decode.d8.loss_mask: 1.5798  decode.d8.loss_dice: 1.6840
2025/03/29 13:29:28 - mmengine - INFO - Iter(train) [ 2250/20000]  base_lr: 8.9820e-05 lr: 8.9820e-05  eta: 7:55:13  time: 1.7446  data_time: 0.0157  memory: 10091  loss: 40.3162  decode.loss_cls: 0.5319  decode.loss_mask: 1.8304  decode.loss_dice: 1.6518  decode.d0.loss_cls: 0.8620  decode.d0.loss_mask: 1.8491  decode.d0.loss_dice: 1.7390  decode.d1.loss_cls: 0.5988  decode.d1.loss_mask: 1.7648  decode.d1.loss_dice: 1.6626  decode.d2.loss_cls: 0.4978  decode.d2.loss_mask: 1.8119  decode.d2.loss_dice: 1.6891  decode.d3.loss_cls: 0.4769  decode.d3.loss_mask: 1.8314  decode.d3.loss_dice: 1.7060  decode.d4.loss_cls: 0.5134  decode.d4.loss_mask: 1.8156  decode.d4.loss_dice: 1.6328  decode.d5.loss_cls: 0.4719  decode.d5.loss_mask: 1.8553  decode.d5.loss_dice: 1.6447  decode.d6.loss_cls: 0.4786  decode.d6.loss_mask: 1.8190  decode.d6.loss_dice: 1.6944  decode.d7.loss_cls: 0.4478  decode.d7.loss_mask: 1.7987  decode.d7.loss_dice: 1.6726  decode.d8.loss_cls: 0.4495  decode.d8.loss_mask: 1.8437  decode.d8.loss_dice: 1.6749
2025/03/29 13:30:55 - mmengine - INFO - Iter(train) [ 2300/20000]  base_lr: 8.9592e-05 lr: 8.9592e-05  eta: 7:54:45  time: 1.7361  data_time: 0.0160  memory: 10089  loss: 35.9038  decode.loss_cls: 0.4285  decode.loss_mask: 1.3552  decode.loss_dice: 1.7734  decode.d0.loss_cls: 0.7507  decode.d0.loss_mask: 1.3476  decode.d0.loss_dice: 1.8602  decode.d1.loss_cls: 0.4936  decode.d1.loss_mask: 1.2870  decode.d1.loss_dice: 1.8183  decode.d2.loss_cls: 0.4880  decode.d2.loss_mask: 1.3281  decode.d2.loss_dice: 1.7184  decode.d3.loss_cls: 0.4742  decode.d3.loss_mask: 1.2956  decode.d3.loss_dice: 1.7084  decode.d4.loss_cls: 0.5007  decode.d4.loss_mask: 1.3058  decode.d4.loss_dice: 1.7170  decode.d5.loss_cls: 0.4554  decode.d5.loss_mask: 1.3345  decode.d5.loss_dice: 1.7400  decode.d6.loss_cls: 0.4143  decode.d6.loss_mask: 1.3611  decode.d6.loss_dice: 1.7869  decode.d7.loss_cls: 0.4279  decode.d7.loss_mask: 1.3588  decode.d7.loss_dice: 1.8037  decode.d8.loss_cls: 0.4612  decode.d8.loss_mask: 1.3372  decode.d8.loss_dice: 1.7720
2025/03/29 13:32:19 - mmengine - INFO - Iter(train) [ 2350/20000]  base_lr: 8.9364e-05 lr: 8.9364e-05  eta: 7:53:52  time: 1.6696  data_time: 0.0155  memory: 10095  loss: 42.1229  decode.loss_cls: 0.4352  decode.loss_mask: 1.7974  decode.loss_dice: 1.9551  decode.d0.loss_cls: 0.7915  decode.d0.loss_mask: 1.8123  decode.d0.loss_dice: 1.9581  decode.d1.loss_cls: 0.5427  decode.d1.loss_mask: 1.7440  decode.d1.loss_dice: 1.9306  decode.d2.loss_cls: 0.4953  decode.d2.loss_mask: 1.7688  decode.d2.loss_dice: 1.8950  decode.d3.loss_cls: 0.4608  decode.d3.loss_mask: 1.7602  decode.d3.loss_dice: 1.9037  decode.d4.loss_cls: 0.5158  decode.d4.loss_mask: 1.7902  decode.d4.loss_dice: 1.9112  decode.d5.loss_cls: 0.5037  decode.d5.loss_mask: 1.7886  decode.d5.loss_dice: 1.8862  decode.d6.loss_cls: 0.4840  decode.d6.loss_mask: 1.7357  decode.d6.loss_dice: 1.9159  decode.d7.loss_cls: 0.5046  decode.d7.loss_mask: 1.7274  decode.d7.loss_dice: 1.9055  decode.d8.loss_cls: 0.4207  decode.d8.loss_mask: 1.8160  decode.d8.loss_dice: 1.9668
2025/03/29 13:33:42 - mmengine - INFO - Iter(train) [ 2400/20000]  base_lr: 8.9136e-05 lr: 8.9136e-05  eta: 7:52:54  time: 1.6720  data_time: 0.0155  memory: 10162  loss: 33.4633  decode.loss_cls: 0.4539  decode.loss_mask: 1.2646  decode.loss_dice: 1.5859  decode.d0.loss_cls: 0.7435  decode.d0.loss_mask: 1.2553  decode.d0.loss_dice: 1.6836  decode.d1.loss_cls: 0.4134  decode.d1.loss_mask: 1.2626  decode.d1.loss_dice: 1.6085  decode.d2.loss_cls: 0.3859  decode.d2.loss_mask: 1.2984  decode.d2.loss_dice: 1.6069  decode.d3.loss_cls: 0.3838  decode.d3.loss_mask: 1.3151  decode.d3.loss_dice: 1.5889  decode.d4.loss_cls: 0.4137  decode.d4.loss_mask: 1.2875  decode.d4.loss_dice: 1.5795  decode.d5.loss_cls: 0.4322  decode.d5.loss_mask: 1.2889  decode.d5.loss_dice: 1.5758  decode.d6.loss_cls: 0.4289  decode.d6.loss_mask: 1.3320  decode.d6.loss_dice: 1.6163  decode.d7.loss_cls: 0.4275  decode.d7.loss_mask: 1.3167  decode.d7.loss_dice: 1.5747  decode.d8.loss_cls: 0.4350  decode.d8.loss_mask: 1.3068  decode.d8.loss_dice: 1.5977
2025/03/29 13:35:06 - mmengine - INFO - Iter(train) [ 2450/20000]  base_lr: 8.8908e-05 lr: 8.8908e-05  eta: 7:51:55  time: 1.6701  data_time: 0.0155  memory: 10145  loss: 37.8111  decode.loss_cls: 0.5600  decode.loss_mask: 1.4442  decode.loss_dice: 1.6978  decode.d0.loss_cls: 0.8375  decode.d0.loss_mask: 1.4620  decode.d0.loss_dice: 1.7974  decode.d1.loss_cls: 0.5419  decode.d1.loss_mask: 1.5132  decode.d1.loss_dice: 1.7520  decode.d2.loss_cls: 0.5676  decode.d2.loss_mask: 1.4972  decode.d2.loss_dice: 1.7618  decode.d3.loss_cls: 0.5293  decode.d3.loss_mask: 1.4875  decode.d3.loss_dice: 1.7040  decode.d4.loss_cls: 0.5974  decode.d4.loss_mask: 1.4549  decode.d4.loss_dice: 1.7038  decode.d5.loss_cls: 0.5862  decode.d5.loss_mask: 1.4722  decode.d5.loss_dice: 1.7049  decode.d6.loss_cls: 0.5532  decode.d6.loss_mask: 1.4575  decode.d6.loss_dice: 1.6781  decode.d7.loss_cls: 0.5028  decode.d7.loss_mask: 1.4545  decode.d7.loss_dice: 1.6939  decode.d8.loss_cls: 0.5704  decode.d8.loss_mask: 1.4976  decode.d8.loss_dice: 1.7301
2025/03/29 13:36:30 - mmengine - INFO - Iter(train) [ 2500/20000]  base_lr: 8.8680e-05 lr: 8.8680e-05  eta: 7:50:55  time: 1.6708  data_time: 0.0158  memory: 10143  loss: 39.9145  decode.loss_cls: 0.6808  decode.loss_mask: 1.5345  decode.loss_dice: 1.7796  decode.d0.loss_cls: 0.8271  decode.d0.loss_mask: 1.4796  decode.d0.loss_dice: 1.8707  decode.d1.loss_cls: 0.6812  decode.d1.loss_mask: 1.5161  decode.d1.loss_dice: 1.7668  decode.d2.loss_cls: 0.6827  decode.d2.loss_mask: 1.5307  decode.d2.loss_dice: 1.7172  decode.d3.loss_cls: 0.6867  decode.d3.loss_mask: 1.5472  decode.d3.loss_dice: 1.7706  decode.d4.loss_cls: 0.6240  decode.d4.loss_mask: 1.5425  decode.d4.loss_dice: 1.7551  decode.d5.loss_cls: 0.6557  decode.d5.loss_mask: 1.5275  decode.d5.loss_dice: 1.7521  decode.d6.loss_cls: 0.6463  decode.d6.loss_mask: 1.5384  decode.d6.loss_dice: 1.7388  decode.d7.loss_cls: 0.6832  decode.d7.loss_mask: 1.5595  decode.d7.loss_dice: 1.7603  decode.d8.loss_cls: 0.7271  decode.d8.loss_mask: 1.5523  decode.d8.loss_dice: 1.7803
2025/03/29 13:37:53 - mmengine - INFO - Iter(train) [ 2550/20000]  base_lr: 8.8452e-05 lr: 8.8452e-05  eta: 7:49:53  time: 1.6708  data_time: 0.0156  memory: 10089  loss: 37.8092  decode.loss_cls: 0.4426  decode.loss_mask: 1.6560  decode.loss_dice: 1.6728  decode.d0.loss_cls: 0.7424  decode.d0.loss_mask: 1.5608  decode.d0.loss_dice: 1.6618  decode.d1.loss_cls: 0.4316  decode.d1.loss_mask: 1.5927  decode.d1.loss_dice: 1.6339  decode.d2.loss_cls: 0.4175  decode.d2.loss_mask: 1.6583  decode.d2.loss_dice: 1.7066  decode.d3.loss_cls: 0.4232  decode.d3.loss_mask: 1.6281  decode.d3.loss_dice: 1.6877  decode.d4.loss_cls: 0.4650  decode.d4.loss_mask: 1.6165  decode.d4.loss_dice: 1.6906  decode.d5.loss_cls: 0.4544  decode.d5.loss_mask: 1.6476  decode.d5.loss_dice: 1.6874  decode.d6.loss_cls: 0.4394  decode.d6.loss_mask: 1.6280  decode.d6.loss_dice: 1.6624  decode.d7.loss_cls: 0.4153  decode.d7.loss_mask: 1.6783  decode.d7.loss_dice: 1.6751  decode.d8.loss_cls: 0.4560  decode.d8.loss_mask: 1.6896  decode.d8.loss_dice: 1.6875
2025/03/29 13:39:17 - mmengine - INFO - Iter(train) [ 2600/20000]  base_lr: 8.8224e-05 lr: 8.8224e-05  eta: 7:48:51  time: 1.6672  data_time: 0.0156  memory: 10088  loss: 38.5068  decode.loss_cls: 0.6533  decode.loss_mask: 1.4570  decode.loss_dice: 1.7164  decode.d0.loss_cls: 0.7552  decode.d0.loss_mask: 1.5434  decode.d0.loss_dice: 1.8943  decode.d1.loss_cls: 0.6347  decode.d1.loss_mask: 1.4241  decode.d1.loss_dice: 1.6824  decode.d2.loss_cls: 0.6394  decode.d2.loss_mask: 1.4764  decode.d2.loss_dice: 1.7089  decode.d3.loss_cls: 0.5717  decode.d3.loss_mask: 1.4689  decode.d3.loss_dice: 1.7280  decode.d4.loss_cls: 0.5999  decode.d4.loss_mask: 1.4765  decode.d4.loss_dice: 1.7386  decode.d5.loss_cls: 0.6501  decode.d5.loss_mask: 1.4869  decode.d5.loss_dice: 1.7216  decode.d6.loss_cls: 0.6221  decode.d6.loss_mask: 1.4752  decode.d6.loss_dice: 1.7650  decode.d7.loss_cls: 0.6531  decode.d7.loss_mask: 1.4836  decode.d7.loss_dice: 1.7018  decode.d8.loss_cls: 0.5652  decode.d8.loss_mask: 1.4786  decode.d8.loss_dice: 1.7345
2025/03/29 13:40:40 - mmengine - INFO - Iter(train) [ 2650/20000]  base_lr: 8.7996e-05 lr: 8.7996e-05  eta: 7:47:48  time: 1.6738  data_time: 0.0156  memory: 10092  loss: 38.6404  decode.loss_cls: 0.5164  decode.loss_mask: 1.5779  decode.loss_dice: 1.6894  decode.d0.loss_cls: 0.7187  decode.d0.loss_mask: 1.5762  decode.d0.loss_dice: 1.7783  decode.d1.loss_cls: 0.5252  decode.d1.loss_mask: 1.6168  decode.d1.loss_dice: 1.6825  decode.d2.loss_cls: 0.4995  decode.d2.loss_mask: 1.6150  decode.d2.loss_dice: 1.7322  decode.d3.loss_cls: 0.5507  decode.d3.loss_mask: 1.6637  decode.d3.loss_dice: 1.6936  decode.d4.loss_cls: 0.5211  decode.d4.loss_mask: 1.6303  decode.d4.loss_dice: 1.7148  decode.d5.loss_cls: 0.4931  decode.d5.loss_mask: 1.6441  decode.d5.loss_dice: 1.7306  decode.d6.loss_cls: 0.4828  decode.d6.loss_mask: 1.6259  decode.d6.loss_dice: 1.7403  decode.d7.loss_cls: 0.4696  decode.d7.loss_mask: 1.6194  decode.d7.loss_dice: 1.7216  decode.d8.loss_cls: 0.4984  decode.d8.loss_mask: 1.5981  decode.d8.loss_dice: 1.7142
2025/03/29 13:42:04 - mmengine - INFO - Iter(train) [ 2700/20000]  base_lr: 8.7768e-05 lr: 8.7768e-05  eta: 7:46:44  time: 1.6714  data_time: 0.0154  memory: 10154  loss: 39.5471  decode.loss_cls: 0.4913  decode.loss_mask: 1.7276  decode.loss_dice: 1.7304  decode.d0.loss_cls: 0.7422  decode.d0.loss_mask: 1.6907  decode.d0.loss_dice: 1.7349  decode.d1.loss_cls: 0.4615  decode.d1.loss_mask: 1.7258  decode.d1.loss_dice: 1.7365  decode.d2.loss_cls: 0.4830  decode.d2.loss_mask: 1.7176  decode.d2.loss_dice: 1.7363  decode.d3.loss_cls: 0.4390  decode.d3.loss_mask: 1.7847  decode.d3.loss_dice: 1.7578  decode.d4.loss_cls: 0.4688  decode.d4.loss_mask: 1.6988  decode.d4.loss_dice: 1.7305  decode.d5.loss_cls: 0.4519  decode.d5.loss_mask: 1.7346  decode.d5.loss_dice: 1.7616  decode.d6.loss_cls: 0.5010  decode.d6.loss_mask: 1.6737  decode.d6.loss_dice: 1.7350  decode.d7.loss_cls: 0.4306  decode.d7.loss_mask: 1.7120  decode.d7.loss_dice: 1.7385  decode.d8.loss_cls: 0.4634  decode.d8.loss_mask: 1.7474  decode.d8.loss_dice: 1.7400
2025/03/29 13:43:27 - mmengine - INFO - Iter(train) [ 2750/20000]  base_lr: 8.7539e-05 lr: 8.7539e-05  eta: 7:45:39  time: 1.6683  data_time: 0.0155  memory: 10098  loss: 34.8482  decode.loss_cls: 0.4508  decode.loss_mask: 1.3975  decode.loss_dice: 1.6240  decode.d0.loss_cls: 0.6952  decode.d0.loss_mask: 1.3762  decode.d0.loss_dice: 1.7342  decode.d1.loss_cls: 0.4138  decode.d1.loss_mask: 1.3585  decode.d1.loss_dice: 1.6464  decode.d2.loss_cls: 0.4191  decode.d2.loss_mask: 1.3817  decode.d2.loss_dice: 1.6445  decode.d3.loss_cls: 0.4520  decode.d3.loss_mask: 1.4063  decode.d3.loss_dice: 1.6167  decode.d4.loss_cls: 0.4298  decode.d4.loss_mask: 1.3792  decode.d4.loss_dice: 1.6681  decode.d5.loss_cls: 0.4300  decode.d5.loss_mask: 1.3745  decode.d5.loss_dice: 1.6535  decode.d6.loss_cls: 0.4333  decode.d6.loss_mask: 1.3942  decode.d6.loss_dice: 1.6151  decode.d7.loss_cls: 0.4484  decode.d7.loss_mask: 1.3690  decode.d7.loss_dice: 1.6216  decode.d8.loss_cls: 0.4234  decode.d8.loss_mask: 1.3863  decode.d8.loss_dice: 1.6045
2025/03/29 13:44:51 - mmengine - INFO - Iter(train) [ 2800/20000]  base_lr: 8.7311e-05 lr: 8.7311e-05  eta: 7:44:34  time: 1.6696  data_time: 0.0154  memory: 10157  loss: 35.6212  decode.loss_cls: 0.4256  decode.loss_mask: 1.4333  decode.loss_dice: 1.6352  decode.d0.loss_cls: 0.7233  decode.d0.loss_mask: 1.3823  decode.d0.loss_dice: 1.6363  decode.d1.loss_cls: 0.4284  decode.d1.loss_mask: 1.4293  decode.d1.loss_dice: 1.6295  decode.d2.loss_cls: 0.4593  decode.d2.loss_mask: 1.4888  decode.d2.loss_dice: 1.6233  decode.d3.loss_cls: 0.4856  decode.d3.loss_mask: 1.4765  decode.d3.loss_dice: 1.6169  decode.d4.loss_cls: 0.4895  decode.d4.loss_mask: 1.4294  decode.d4.loss_dice: 1.5713  decode.d5.loss_cls: 0.4237  decode.d5.loss_mask: 1.5421  decode.d5.loss_dice: 1.6121  decode.d6.loss_cls: 0.4485  decode.d6.loss_mask: 1.5106  decode.d6.loss_dice: 1.6440  decode.d7.loss_cls: 0.5238  decode.d7.loss_mask: 1.4615  decode.d7.loss_dice: 1.5848  decode.d8.loss_cls: 0.5067  decode.d8.loss_mask: 1.4147  decode.d8.loss_dice: 1.5850
2025/03/29 13:46:14 - mmengine - INFO - Iter(train) [ 2850/20000]  base_lr: 8.7082e-05 lr: 8.7082e-05  eta: 7:43:28  time: 1.6708  data_time: 0.0155  memory: 10093  loss: 40.5117  decode.loss_cls: 0.4813  decode.loss_mask: 1.7190  decode.loss_dice: 1.8546  decode.d0.loss_cls: 0.7114  decode.d0.loss_mask: 1.6766  decode.d0.loss_dice: 1.9132  decode.d1.loss_cls: 0.4797  decode.d1.loss_mask: 1.6326  decode.d1.loss_dice: 1.8029  decode.d2.loss_cls: 0.4944  decode.d2.loss_mask: 1.6903  decode.d2.loss_dice: 1.8199  decode.d3.loss_cls: 0.5368  decode.d3.loss_mask: 1.6898  decode.d3.loss_dice: 1.8371  decode.d4.loss_cls: 0.4976  decode.d4.loss_mask: 1.6930  decode.d4.loss_dice: 1.8135  decode.d5.loss_cls: 0.4851  decode.d5.loss_mask: 1.6956  decode.d5.loss_dice: 1.8050  decode.d6.loss_cls: 0.4943  decode.d6.loss_mask: 1.7125  decode.d6.loss_dice: 1.8351  decode.d7.loss_cls: 0.5557  decode.d7.loss_mask: 1.6841  decode.d7.loss_dice: 1.8391  decode.d8.loss_cls: 0.4780  decode.d8.loss_mask: 1.7410  decode.d8.loss_dice: 1.8424
2025/03/29 13:47:38 - mmengine - INFO - Iter(train) [ 2900/20000]  base_lr: 8.6854e-05 lr: 8.6854e-05  eta: 7:42:21  time: 1.6686  data_time: 0.0155  memory: 10091  loss: 36.0624  decode.loss_cls: 0.5274  decode.loss_mask: 1.4161  decode.loss_dice: 1.6578  decode.d0.loss_cls: 0.7389  decode.d0.loss_mask: 1.3497  decode.d0.loss_dice: 1.7417  decode.d1.loss_cls: 0.5655  decode.d1.loss_mask: 1.3624  decode.d1.loss_dice: 1.6734  decode.d2.loss_cls: 0.5425  decode.d2.loss_mask: 1.4116  decode.d2.loss_dice: 1.6884  decode.d3.loss_cls: 0.4851  decode.d3.loss_mask: 1.3488  decode.d3.loss_dice: 1.6812  decode.d4.loss_cls: 0.5921  decode.d4.loss_mask: 1.2973  decode.d4.loss_dice: 1.6656  decode.d5.loss_cls: 0.5885  decode.d5.loss_mask: 1.3333  decode.d5.loss_dice: 1.6723  decode.d6.loss_cls: 0.5496  decode.d6.loss_mask: 1.3473  decode.d6.loss_dice: 1.6656  decode.d7.loss_cls: 0.5701  decode.d7.loss_mask: 1.3340  decode.d7.loss_dice: 1.6493  decode.d8.loss_cls: 0.6013  decode.d8.loss_mask: 1.3435  decode.d8.loss_dice: 1.6620
2025/03/29 13:49:01 - mmengine - INFO - Iter(train) [ 2950/20000]  base_lr: 8.6625e-05 lr: 8.6625e-05  eta: 7:41:13  time: 1.6689  data_time: 0.0156  memory: 10145  loss: 42.1174  decode.loss_cls: 0.6797  decode.loss_mask: 1.6748  decode.loss_dice: 1.9050  decode.d0.loss_cls: 0.7475  decode.d0.loss_mask: 1.7074  decode.d0.loss_dice: 2.0642  decode.d1.loss_cls: 0.6449  decode.d1.loss_mask: 1.6243  decode.d1.loss_dice: 1.9655  decode.d2.loss_cls: 0.5940  decode.d2.loss_mask: 1.5880  decode.d2.loss_dice: 1.8681  decode.d3.loss_cls: 0.5888  decode.d3.loss_mask: 1.6107  decode.d3.loss_dice: 1.9024  decode.d4.loss_cls: 0.6823  decode.d4.loss_mask: 1.5952  decode.d4.loss_dice: 1.9459  decode.d5.loss_cls: 0.6790  decode.d5.loss_mask: 1.6168  decode.d5.loss_dice: 1.8723  decode.d6.loss_cls: 0.6564  decode.d6.loss_mask: 1.6373  decode.d6.loss_dice: 1.8747  decode.d7.loss_cls: 0.6179  decode.d7.loss_mask: 1.6618  decode.d7.loss_dice: 1.8591  decode.d8.loss_cls: 0.6533  decode.d8.loss_mask: 1.6670  decode.d8.loss_dice: 1.9332
2025/03/29 13:50:25 - mmengine - INFO - Exp name: r2u_20250329_122140
2025/03/29 13:50:25 - mmengine - INFO - Iter(train) [ 3000/20000]  base_lr: 8.6397e-05 lr: 8.6397e-05  eta: 7:40:05  time: 1.6693  data_time: 0.0157  memory: 10083  loss: 41.4376  decode.loss_cls: 0.6514  decode.loss_mask: 1.6519  decode.loss_dice: 1.8497  decode.d0.loss_cls: 0.6888  decode.d0.loss_mask: 1.6884  decode.d0.loss_dice: 1.9707  decode.d1.loss_cls: 0.5727  decode.d1.loss_mask: 1.6570  decode.d1.loss_dice: 1.9564  decode.d2.loss_cls: 0.6255  decode.d2.loss_mask: 1.6317  decode.d2.loss_dice: 1.8653  decode.d3.loss_cls: 0.5530  decode.d3.loss_mask: 1.6065  decode.d3.loss_dice: 1.8408  decode.d4.loss_cls: 0.5878  decode.d4.loss_mask: 1.6139  decode.d4.loss_dice: 1.8973  decode.d5.loss_cls: 0.6192  decode.d5.loss_mask: 1.5971  decode.d5.loss_dice: 1.8499  decode.d6.loss_cls: 0.6168  decode.d6.loss_mask: 1.6304  decode.d6.loss_dice: 1.8360  decode.d7.loss_cls: 0.6333  decode.d7.loss_mask: 1.6680  decode.d7.loss_dice: 1.9078  decode.d8.loss_cls: 0.6100  decode.d8.loss_mask: 1.6792  decode.d8.loss_dice: 1.8810
2025/03/29 13:51:48 - mmengine - INFO - Iter(train) [ 3050/20000]  base_lr: 8.6168e-05 lr: 8.6168e-05  eta: 7:38:57  time: 1.6682  data_time: 0.0154  memory: 10151  loss: 37.7565  decode.loss_cls: 0.4489  decode.loss_mask: 1.6818  decode.loss_dice: 1.6347  decode.d0.loss_cls: 0.6884  decode.d0.loss_mask: 1.6569  decode.d0.loss_dice: 1.7262  decode.d1.loss_cls: 0.4906  decode.d1.loss_mask: 1.6302  decode.d1.loss_dice: 1.6567  decode.d2.loss_cls: 0.4871  decode.d2.loss_mask: 1.6394  decode.d2.loss_dice: 1.6144  decode.d3.loss_cls: 0.5071  decode.d3.loss_mask: 1.6501  decode.d3.loss_dice: 1.6071  decode.d4.loss_cls: 0.4220  decode.d4.loss_mask: 1.6336  decode.d4.loss_dice: 1.6023  decode.d5.loss_cls: 0.5080  decode.d5.loss_mask: 1.6406  decode.d5.loss_dice: 1.6250  decode.d6.loss_cls: 0.5185  decode.d6.loss_mask: 1.6139  decode.d6.loss_dice: 1.6074  decode.d7.loss_cls: 0.4526  decode.d7.loss_mask: 1.6737  decode.d7.loss_dice: 1.6497  decode.d8.loss_cls: 0.4122  decode.d8.loss_mask: 1.6491  decode.d8.loss_dice: 1.6283
2025/03/29 13:53:12 - mmengine - INFO - Iter(train) [ 3100/20000]  base_lr: 8.5939e-05 lr: 8.5939e-05  eta: 7:37:48  time: 1.6684  data_time: 0.0154  memory: 10084  loss: 38.8417  decode.loss_cls: 0.4736  decode.loss_mask: 1.6779  decode.loss_dice: 1.7631  decode.d0.loss_cls: 0.6982  decode.d0.loss_mask: 1.6304  decode.d0.loss_dice: 1.7977  decode.d1.loss_cls: 0.4444  decode.d1.loss_mask: 1.6427  decode.d1.loss_dice: 1.7087  decode.d2.loss_cls: 0.4833  decode.d2.loss_mask: 1.6393  decode.d2.loss_dice: 1.7105  decode.d3.loss_cls: 0.4793  decode.d3.loss_mask: 1.6164  decode.d3.loss_dice: 1.6862  decode.d4.loss_cls: 0.4946  decode.d4.loss_mask: 1.6096  decode.d4.loss_dice: 1.7160  decode.d5.loss_cls: 0.4595  decode.d5.loss_mask: 1.6854  decode.d5.loss_dice: 1.7026  decode.d6.loss_cls: 0.4115  decode.d6.loss_mask: 1.7313  decode.d6.loss_dice: 1.7647  decode.d7.loss_cls: 0.4626  decode.d7.loss_mask: 1.6816  decode.d7.loss_dice: 1.7624  decode.d8.loss_cls: 0.4725  decode.d8.loss_mask: 1.6773  decode.d8.loss_dice: 1.7581
2025/03/29 13:54:35 - mmengine - INFO - Iter(train) [ 3150/20000]  base_lr: 8.5710e-05 lr: 8.5710e-05  eta: 7:36:38  time: 1.6673  data_time: 0.0157  memory: 10136  loss: 38.9289  decode.loss_cls: 0.4653  decode.loss_mask: 1.6799  decode.loss_dice: 1.7094  decode.d0.loss_cls: 0.6463  decode.d0.loss_mask: 1.7016  decode.d0.loss_dice: 1.7767  decode.d1.loss_cls: 0.4474  decode.d1.loss_mask: 1.7244  decode.d1.loss_dice: 1.7346  decode.d2.loss_cls: 0.4403  decode.d2.loss_mask: 1.6847  decode.d2.loss_dice: 1.6614  decode.d3.loss_cls: 0.5042  decode.d3.loss_mask: 1.6652  decode.d3.loss_dice: 1.6973  decode.d4.loss_cls: 0.5203  decode.d4.loss_mask: 1.6816  decode.d4.loss_dice: 1.7071  decode.d5.loss_cls: 0.5198  decode.d5.loss_mask: 1.6720  decode.d5.loss_dice: 1.6820  decode.d6.loss_cls: 0.4374  decode.d6.loss_mask: 1.7198  decode.d6.loss_dice: 1.7001  decode.d7.loss_cls: 0.4789  decode.d7.loss_mask: 1.6747  decode.d7.loss_dice: 1.7422  decode.d8.loss_cls: 0.4806  decode.d8.loss_mask: 1.6565  decode.d8.loss_dice: 1.7172
2025/03/29 13:55:59 - mmengine - INFO - Iter(train) [ 3200/20000]  base_lr: 8.5481e-05 lr: 8.5481e-05  eta: 7:35:29  time: 1.6828  data_time: 0.0156  memory: 10145  loss: 37.6172  decode.loss_cls: 0.5700  decode.loss_mask: 1.5038  decode.loss_dice: 1.6445  decode.d0.loss_cls: 0.7938  decode.d0.loss_mask: 1.5626  decode.d0.loss_dice: 1.7487  decode.d1.loss_cls: 0.5711  decode.d1.loss_mask: 1.5098  decode.d1.loss_dice: 1.6583  decode.d2.loss_cls: 0.5494  decode.d2.loss_mask: 1.4978  decode.d2.loss_dice: 1.6389  decode.d3.loss_cls: 0.5843  decode.d3.loss_mask: 1.5318  decode.d3.loss_dice: 1.6482  decode.d4.loss_cls: 0.6247  decode.d4.loss_mask: 1.4837  decode.d4.loss_dice: 1.6640  decode.d5.loss_cls: 0.5769  decode.d5.loss_mask: 1.5659  decode.d5.loss_dice: 1.6314  decode.d6.loss_cls: 0.6199  decode.d6.loss_mask: 1.4763  decode.d6.loss_dice: 1.6055  decode.d7.loss_cls: 0.5805  decode.d7.loss_mask: 1.4749  decode.d7.loss_dice: 1.6040  decode.d8.loss_cls: 0.5584  decode.d8.loss_mask: 1.4954  decode.d8.loss_dice: 1.6428
2025/03/29 13:57:23 - mmengine - INFO - Iter(train) [ 3250/20000]  base_lr: 8.5252e-05 lr: 8.5252e-05  eta: 7:34:23  time: 1.6867  data_time: 0.0162  memory: 10090  loss: 37.2751  decode.loss_cls: 0.5375  decode.loss_mask: 1.5236  decode.loss_dice: 1.6132  decode.d0.loss_cls: 0.7335  decode.d0.loss_mask: 1.5559  decode.d0.loss_dice: 1.6927  decode.d1.loss_cls: 0.6005  decode.d1.loss_mask: 1.5458  decode.d1.loss_dice: 1.6400  decode.d2.loss_cls: 0.5446  decode.d2.loss_mask: 1.4998  decode.d2.loss_dice: 1.6354  decode.d3.loss_cls: 0.5498  decode.d3.loss_mask: 1.5315  decode.d3.loss_dice: 1.6223  decode.d4.loss_cls: 0.5707  decode.d4.loss_mask: 1.4892  decode.d4.loss_dice: 1.6204  decode.d5.loss_cls: 0.5493  decode.d5.loss_mask: 1.5242  decode.d5.loss_dice: 1.6190  decode.d6.loss_cls: 0.5169  decode.d6.loss_mask: 1.5484  decode.d6.loss_dice: 1.6181  decode.d7.loss_cls: 0.5506  decode.d7.loss_mask: 1.5234  decode.d7.loss_dice: 1.6128  decode.d8.loss_cls: 0.5443  decode.d8.loss_mask: 1.5275  decode.d8.loss_dice: 1.6342
2025/03/29 13:58:47 - mmengine - INFO - Iter(train) [ 3300/20000]  base_lr: 8.5023e-05 lr: 8.5023e-05  eta: 7:33:14  time: 1.6711  data_time: 0.0155  memory: 10091  loss: 36.0997  decode.loss_cls: 0.4295  decode.loss_mask: 1.4104  decode.loss_dice: 1.6887  decode.d0.loss_cls: 0.5541  decode.d0.loss_mask: 1.4883  decode.d0.loss_dice: 1.8183  decode.d1.loss_cls: 0.3996  decode.d1.loss_mask: 1.4698  decode.d1.loss_dice: 1.7499  decode.d2.loss_cls: 0.4335  decode.d2.loss_mask: 1.4113  decode.d2.loss_dice: 1.7061  decode.d3.loss_cls: 0.4156  decode.d3.loss_mask: 1.4430  decode.d3.loss_dice: 1.7331  decode.d4.loss_cls: 0.4471  decode.d4.loss_mask: 1.4186  decode.d4.loss_dice: 1.6754  decode.d5.loss_cls: 0.3921  decode.d5.loss_mask: 1.4569  decode.d5.loss_dice: 1.7493  decode.d6.loss_cls: 0.3914  decode.d6.loss_mask: 1.4336  decode.d6.loss_dice: 1.7091  decode.d7.loss_cls: 0.4436  decode.d7.loss_mask: 1.4594  decode.d7.loss_dice: 1.7598  decode.d8.loss_cls: 0.4927  decode.d8.loss_mask: 1.3957  decode.d8.loss_dice: 1.7236
2025/03/29 14:00:11 - mmengine - INFO - Iter(train) [ 3350/20000]  base_lr: 8.4794e-05 lr: 8.4794e-05  eta: 7:32:03  time: 1.6731  data_time: 0.0154  memory: 10100  loss: 37.6095  decode.loss_cls: 0.5634  decode.loss_mask: 1.4196  decode.loss_dice: 1.7289  decode.d0.loss_cls: 0.6229  decode.d0.loss_mask: 1.5371  decode.d0.loss_dice: 1.8576  decode.d1.loss_cls: 0.5638  decode.d1.loss_mask: 1.4370  decode.d1.loss_dice: 1.7487  decode.d2.loss_cls: 0.5804  decode.d2.loss_mask: 1.4224  decode.d2.loss_dice: 1.7212  decode.d3.loss_cls: 0.5848  decode.d3.loss_mask: 1.4152  decode.d3.loss_dice: 1.6948  decode.d4.loss_cls: 0.5818  decode.d4.loss_mask: 1.4520  decode.d4.loss_dice: 1.7435  decode.d5.loss_cls: 0.6025  decode.d5.loss_mask: 1.4041  decode.d5.loss_dice: 1.7125  decode.d6.loss_cls: 0.5750  decode.d6.loss_mask: 1.4637  decode.d6.loss_dice: 1.7293  decode.d7.loss_cls: 0.5942  decode.d7.loss_mask: 1.4125  decode.d7.loss_dice: 1.7039  decode.d8.loss_cls: 0.5636  decode.d8.loss_mask: 1.4421  decode.d8.loss_dice: 1.7312
2025/03/29 14:01:34 - mmengine - INFO - Iter(train) [ 3400/20000]  base_lr: 8.4565e-05 lr: 8.4565e-05  eta: 7:30:52  time: 1.6692  data_time: 0.0154  memory: 10083  loss: 37.6132  decode.loss_cls: 0.4492  decode.loss_mask: 1.6908  decode.loss_dice: 1.6121  decode.d0.loss_cls: 0.6990  decode.d0.loss_mask: 1.6905  decode.d0.loss_dice: 1.6606  decode.d1.loss_cls: 0.4712  decode.d1.loss_mask: 1.6404  decode.d1.loss_dice: 1.6109  decode.d2.loss_cls: 0.5047  decode.d2.loss_mask: 1.6829  decode.d2.loss_dice: 1.5921  decode.d3.loss_cls: 0.4798  decode.d3.loss_mask: 1.6385  decode.d3.loss_dice: 1.5786  decode.d4.loss_cls: 0.4895  decode.d4.loss_mask: 1.6697  decode.d4.loss_dice: 1.5523  decode.d5.loss_cls: 0.4463  decode.d5.loss_mask: 1.6767  decode.d5.loss_dice: 1.5709  decode.d6.loss_cls: 0.4985  decode.d6.loss_mask: 1.6669  decode.d6.loss_dice: 1.5747  decode.d7.loss_cls: 0.4978  decode.d7.loss_mask: 1.6302  decode.d7.loss_dice: 1.5789  decode.d8.loss_cls: 0.5022  decode.d8.loss_mask: 1.6786  decode.d8.loss_dice: 1.5785
2025/03/29 14:02:58 - mmengine - INFO - Iter(train) [ 3450/20000]  base_lr: 8.4336e-05 lr: 8.4336e-05  eta: 7:29:40  time: 1.6695  data_time: 0.0156  memory: 10088  loss: 41.4050  decode.loss_cls: 0.6421  decode.loss_mask: 1.7421  decode.loss_dice: 1.7715  decode.d0.loss_cls: 0.7016  decode.d0.loss_mask: 1.6921  decode.d0.loss_dice: 1.8518  decode.d1.loss_cls: 0.6237  decode.d1.loss_mask: 1.6570  decode.d1.loss_dice: 1.8060  decode.d2.loss_cls: 0.6475  decode.d2.loss_mask: 1.6958  decode.d2.loss_dice: 1.6912  decode.d3.loss_cls: 0.6166  decode.d3.loss_mask: 1.6633  decode.d3.loss_dice: 1.7306  decode.d4.loss_cls: 0.6087  decode.d4.loss_mask: 1.7420  decode.d4.loss_dice: 1.7451  decode.d5.loss_cls: 0.6310  decode.d5.loss_mask: 1.7601  decode.d5.loss_dice: 1.7785  decode.d6.loss_cls: 0.6352  decode.d6.loss_mask: 1.7827  decode.d6.loss_dice: 1.7850  decode.d7.loss_cls: 0.6662  decode.d7.loss_mask: 1.7357  decode.d7.loss_dice: 1.7643  decode.d8.loss_cls: 0.6333  decode.d8.loss_mask: 1.8156  decode.d8.loss_dice: 1.7887
2025/03/29 14:04:21 - mmengine - INFO - Iter(train) [ 3500/20000]  base_lr: 8.4106e-05 lr: 8.4106e-05  eta: 7:28:29  time: 1.6705  data_time: 0.0157  memory: 10096  loss: 40.4062  decode.loss_cls: 0.5352  decode.loss_mask: 1.6366  decode.loss_dice: 1.9216  decode.d0.loss_cls: 0.5746  decode.d0.loss_mask: 1.6078  decode.d0.loss_dice: 1.9169  decode.d1.loss_cls: 0.4900  decode.d1.loss_mask: 1.5923  decode.d1.loss_dice: 1.9096  decode.d2.loss_cls: 0.4461  decode.d2.loss_mask: 1.6268  decode.d2.loss_dice: 1.9342  decode.d3.loss_cls: 0.4846  decode.d3.loss_mask: 1.5726  decode.d3.loss_dice: 1.9195  decode.d4.loss_cls: 0.4869  decode.d4.loss_mask: 1.6354  decode.d4.loss_dice: 1.9299  decode.d5.loss_cls: 0.4896  decode.d5.loss_mask: 1.6242  decode.d5.loss_dice: 1.9511  decode.d6.loss_cls: 0.5136  decode.d6.loss_mask: 1.6178  decode.d6.loss_dice: 1.9015  decode.d7.loss_cls: 0.5030  decode.d7.loss_mask: 1.6184  decode.d7.loss_dice: 1.9166  decode.d8.loss_cls: 0.4839  decode.d8.loss_mask: 1.6556  decode.d8.loss_dice: 1.9107
2025/03/29 14:05:45 - mmengine - INFO - Iter(train) [ 3550/20000]  base_lr: 8.3877e-05 lr: 8.3877e-05  eta: 7:27:16  time: 1.6689  data_time: 0.0156  memory: 10093  loss: 33.7758  decode.loss_cls: 0.3995  decode.loss_mask: 1.3751  decode.loss_dice: 1.5754  decode.d0.loss_cls: 0.6160  decode.d0.loss_mask: 1.3429  decode.d0.loss_dice: 1.6017  decode.d1.loss_cls: 0.4260  decode.d1.loss_mask: 1.3718  decode.d1.loss_dice: 1.5958  decode.d2.loss_cls: 0.4244  decode.d2.loss_mask: 1.4100  decode.d2.loss_dice: 1.5724  decode.d3.loss_cls: 0.4172  decode.d3.loss_mask: 1.3388  decode.d3.loss_dice: 1.5550  decode.d4.loss_cls: 0.4438  decode.d4.loss_mask: 1.3118  decode.d4.loss_dice: 1.5902  decode.d5.loss_cls: 0.4239  decode.d5.loss_mask: 1.3243  decode.d5.loss_dice: 1.5439  decode.d6.loss_cls: 0.3860  decode.d6.loss_mask: 1.3825  decode.d6.loss_dice: 1.6101  decode.d7.loss_cls: 0.3610  decode.d7.loss_mask: 1.3909  decode.d7.loss_dice: 1.6040  decode.d8.loss_cls: 0.4172  decode.d8.loss_mask: 1.3960  decode.d8.loss_dice: 1.5678
2025/03/29 14:07:08 - mmengine - INFO - Iter(train) [ 3600/20000]  base_lr: 8.3647e-05 lr: 8.3647e-05  eta: 7:26:03  time: 1.6674  data_time: 0.0156  memory: 10095  loss: 37.9341  decode.loss_cls: 0.6523  decode.loss_mask: 1.5898  decode.loss_dice: 1.5772  decode.d0.loss_cls: 0.7164  decode.d0.loss_mask: 1.6439  decode.d0.loss_dice: 1.6223  decode.d1.loss_cls: 0.6070  decode.d1.loss_mask: 1.5653  decode.d1.loss_dice: 1.5632  decode.d2.loss_cls: 0.6619  decode.d2.loss_mask: 1.5658  decode.d2.loss_dice: 1.5399  decode.d3.loss_cls: 0.6402  decode.d3.loss_mask: 1.5743  decode.d3.loss_dice: 1.5789  decode.d4.loss_cls: 0.6598  decode.d4.loss_mask: 1.5336  decode.d4.loss_dice: 1.5352  decode.d5.loss_cls: 0.6492  decode.d5.loss_mask: 1.5842  decode.d5.loss_dice: 1.5505  decode.d6.loss_cls: 0.6378  decode.d6.loss_mask: 1.6078  decode.d6.loss_dice: 1.5792  decode.d7.loss_cls: 0.5916  decode.d7.loss_mask: 1.5961  decode.d7.loss_dice: 1.5699  decode.d8.loss_cls: 0.6282  decode.d8.loss_mask: 1.5650  decode.d8.loss_dice: 1.5478
2025/03/29 14:08:32 - mmengine - INFO - Iter(train) [ 3650/20000]  base_lr: 8.3418e-05 lr: 8.3418e-05  eta: 7:24:50  time: 1.6672  data_time: 0.0154  memory: 10152  loss: 35.6850  decode.loss_cls: 0.5692  decode.loss_mask: 1.3317  decode.loss_dice: 1.6573  decode.d0.loss_cls: 0.5958  decode.d0.loss_mask: 1.3948  decode.d0.loss_dice: 1.8318  decode.d1.loss_cls: 0.6135  decode.d1.loss_mask: 1.2915  decode.d1.loss_dice: 1.6585  decode.d2.loss_cls: 0.5561  decode.d2.loss_mask: 1.3511  decode.d2.loss_dice: 1.6795  decode.d3.loss_cls: 0.5252  decode.d3.loss_mask: 1.3494  decode.d3.loss_dice: 1.6519  decode.d4.loss_cls: 0.5922  decode.d4.loss_mask: 1.3179  decode.d4.loss_dice: 1.6150  decode.d5.loss_cls: 0.5379  decode.d5.loss_mask: 1.3402  decode.d5.loss_dice: 1.6838  decode.d6.loss_cls: 0.5255  decode.d6.loss_mask: 1.3365  decode.d6.loss_dice: 1.6634  decode.d7.loss_cls: 0.5585  decode.d7.loss_mask: 1.3184  decode.d7.loss_dice: 1.6444  decode.d8.loss_cls: 0.5794  decode.d8.loss_mask: 1.3132  decode.d8.loss_dice: 1.6014
2025/03/29 14:09:55 - mmengine - INFO - Iter(train) [ 3700/20000]  base_lr: 8.3188e-05 lr: 8.3188e-05  eta: 7:23:36  time: 1.6680  data_time: 0.0156  memory: 10144  loss: 41.7692  decode.loss_cls: 0.5816  decode.loss_mask: 1.6609  decode.loss_dice: 1.8708  decode.d0.loss_cls: 0.5784  decode.d0.loss_mask: 1.7409  decode.d0.loss_dice: 1.9920  decode.d1.loss_cls: 0.6513  decode.d1.loss_mask: 1.6452  decode.d1.loss_dice: 1.9146  decode.d2.loss_cls: 0.6287  decode.d2.loss_mask: 1.6606  decode.d2.loss_dice: 1.8784  decode.d3.loss_cls: 0.5523  decode.d3.loss_mask: 1.7019  decode.d3.loss_dice: 1.9040  decode.d4.loss_cls: 0.6233  decode.d4.loss_mask: 1.6355  decode.d4.loss_dice: 1.8838  decode.d5.loss_cls: 0.6389  decode.d5.loss_mask: 1.6561  decode.d5.loss_dice: 1.8272  decode.d6.loss_cls: 0.6992  decode.d6.loss_mask: 1.6622  decode.d6.loss_dice: 1.8814  decode.d7.loss_cls: 0.6596  decode.d7.loss_mask: 1.6711  decode.d7.loss_dice: 1.8819  decode.d8.loss_cls: 0.5707  decode.d8.loss_mask: 1.6548  decode.d8.loss_dice: 1.8620
2025/03/29 14:11:19 - mmengine - INFO - Iter(train) [ 3750/20000]  base_lr: 8.2958e-05 lr: 8.2958e-05  eta: 7:22:23  time: 1.6672  data_time: 0.0156  memory: 10089  loss: 36.8702  decode.loss_cls: 0.6263  decode.loss_mask: 1.4389  decode.loss_dice: 1.6611  decode.d0.loss_cls: 0.6798  decode.d0.loss_mask: 1.4805  decode.d0.loss_dice: 1.7637  decode.d1.loss_cls: 0.5467  decode.d1.loss_mask: 1.4205  decode.d1.loss_dice: 1.6343  decode.d2.loss_cls: 0.6094  decode.d2.loss_mask: 1.3978  decode.d2.loss_dice: 1.5738  decode.d3.loss_cls: 0.5730  decode.d3.loss_mask: 1.4599  decode.d3.loss_dice: 1.6169  decode.d4.loss_cls: 0.6154  decode.d4.loss_mask: 1.4288  decode.d4.loss_dice: 1.6126  decode.d5.loss_cls: 0.6275  decode.d5.loss_mask: 1.4167  decode.d5.loss_dice: 1.6380  decode.d6.loss_cls: 0.6181  decode.d6.loss_mask: 1.4398  decode.d6.loss_dice: 1.6348  decode.d7.loss_cls: 0.5512  decode.d7.loss_mask: 1.4543  decode.d7.loss_dice: 1.6184  decode.d8.loss_cls: 0.5414  decode.d8.loss_mask: 1.5186  decode.d8.loss_dice: 1.6717
2025/03/29 14:12:42 - mmengine - INFO - Iter(train) [ 3800/20000]  base_lr: 8.2729e-05 lr: 8.2729e-05  eta: 7:21:09  time: 1.6672  data_time: 0.0157  memory: 10086  loss: 37.7937  decode.loss_cls: 0.5364  decode.loss_mask: 1.5192  decode.loss_dice: 1.7416  decode.d0.loss_cls: 0.5662  decode.d0.loss_mask: 1.6816  decode.d0.loss_dice: 1.8352  decode.d1.loss_cls: 0.5320  decode.d1.loss_mask: 1.4778  decode.d1.loss_dice: 1.7141  decode.d2.loss_cls: 0.5578  decode.d2.loss_mask: 1.4739  decode.d2.loss_dice: 1.6579  decode.d3.loss_cls: 0.5302  decode.d3.loss_mask: 1.4456  decode.d3.loss_dice: 1.6969  decode.d4.loss_cls: 0.6563  decode.d4.loss_mask: 1.3906  decode.d4.loss_dice: 1.6536  decode.d5.loss_cls: 0.5516  decode.d5.loss_mask: 1.4804  decode.d5.loss_dice: 1.7311  decode.d6.loss_cls: 0.5738  decode.d6.loss_mask: 1.4657  decode.d6.loss_dice: 1.7497  decode.d7.loss_cls: 0.5501  decode.d7.loss_mask: 1.5265  decode.d7.loss_dice: 1.7501  decode.d8.loss_cls: 0.5391  decode.d8.loss_mask: 1.5015  decode.d8.loss_dice: 1.7070
2025/03/29 14:14:06 - mmengine - INFO - Iter(train) [ 3850/20000]  base_lr: 8.2499e-05 lr: 8.2499e-05  eta: 7:19:55  time: 1.6686  data_time: 0.0160  memory: 10148  loss: 36.0632  decode.loss_cls: 0.3358  decode.loss_mask: 1.5902  decode.loss_dice: 1.6698  decode.d0.loss_cls: 0.5942  decode.d0.loss_mask: 1.5328  decode.d0.loss_dice: 1.7093  decode.d1.loss_cls: 0.3880  decode.d1.loss_mask: 1.4874  decode.d1.loss_dice: 1.6713  decode.d2.loss_cls: 0.4812  decode.d2.loss_mask: 1.4752  decode.d2.loss_dice: 1.6234  decode.d3.loss_cls: 0.4932  decode.d3.loss_mask: 1.4913  decode.d3.loss_dice: 1.6479  decode.d4.loss_cls: 0.4342  decode.d4.loss_mask: 1.4812  decode.d4.loss_dice: 1.6210  decode.d5.loss_cls: 0.4481  decode.d5.loss_mask: 1.4903  decode.d5.loss_dice: 1.6302  decode.d6.loss_cls: 0.4847  decode.d6.loss_mask: 1.5187  decode.d6.loss_dice: 1.6135  decode.d7.loss_cls: 0.4164  decode.d7.loss_mask: 1.5346  decode.d7.loss_dice: 1.6082  decode.d8.loss_cls: 0.3846  decode.d8.loss_mask: 1.5480  decode.d8.loss_dice: 1.6587
2025/03/29 14:15:29 - mmengine - INFO - Iter(train) [ 3900/20000]  base_lr: 8.2269e-05 lr: 8.2269e-05  eta: 7:18:41  time: 1.6702  data_time: 0.0158  memory: 10096  loss: 34.1986  decode.loss_cls: 0.4183  decode.loss_mask: 1.4444  decode.loss_dice: 1.6108  decode.d0.loss_cls: 0.5413  decode.d0.loss_mask: 1.4074  decode.d0.loss_dice: 1.6129  decode.d1.loss_cls: 0.4153  decode.d1.loss_mask: 1.3960  decode.d1.loss_dice: 1.5625  decode.d2.loss_cls: 0.4107  decode.d2.loss_mask: 1.4321  decode.d2.loss_dice: 1.5616  decode.d3.loss_cls: 0.3395  decode.d3.loss_mask: 1.4479  decode.d3.loss_dice: 1.6093  decode.d4.loss_cls: 0.3960  decode.d4.loss_mask: 1.4138  decode.d4.loss_dice: 1.5935  decode.d5.loss_cls: 0.3896  decode.d5.loss_mask: 1.3967  decode.d5.loss_dice: 1.5619  decode.d6.loss_cls: 0.3990  decode.d6.loss_mask: 1.4376  decode.d6.loss_dice: 1.5766  decode.d7.loss_cls: 0.4117  decode.d7.loss_mask: 1.4149  decode.d7.loss_dice: 1.5888  decode.d8.loss_cls: 0.4137  decode.d8.loss_mask: 1.4252  decode.d8.loss_dice: 1.5695
2025/03/29 14:16:53 - mmengine - INFO - Iter(train) [ 3950/20000]  base_lr: 8.2039e-05 lr: 8.2039e-05  eta: 7:17:26  time: 1.6729  data_time: 0.0157  memory: 10097  loss: 35.2513  decode.loss_cls: 0.4916  decode.loss_mask: 1.4599  decode.loss_dice: 1.5615  decode.d0.loss_cls: 0.6294  decode.d0.loss_mask: 1.4298  decode.d0.loss_dice: 1.6391  decode.d1.loss_cls: 0.4894  decode.d1.loss_mask: 1.4065  decode.d1.loss_dice: 1.5780  decode.d2.loss_cls: 0.5233  decode.d2.loss_mask: 1.4248  decode.d2.loss_dice: 1.5668  decode.d3.loss_cls: 0.4174  decode.d3.loss_mask: 1.4347  decode.d3.loss_dice: 1.5699  decode.d4.loss_cls: 0.4979  decode.d4.loss_mask: 1.4265  decode.d4.loss_dice: 1.6133  decode.d5.loss_cls: 0.5280  decode.d5.loss_mask: 1.4502  decode.d5.loss_dice: 1.5760  decode.d6.loss_cls: 0.5359  decode.d6.loss_mask: 1.4708  decode.d6.loss_dice: 1.5943  decode.d7.loss_cls: 0.4117  decode.d7.loss_mask: 1.4532  decode.d7.loss_dice: 1.5875  decode.d8.loss_cls: 0.4795  decode.d8.loss_mask: 1.4564  decode.d8.loss_dice: 1.5479
2025/03/29 14:18:16 - mmengine - INFO - Exp name: r2u_20250329_122140
2025/03/29 14:18:16 - mmengine - INFO - Iter(train) [ 4000/20000]  base_lr: 8.1809e-05 lr: 8.1809e-05  eta: 7:16:11  time: 1.6688  data_time: 0.0156  memory: 10145  loss: 38.0335  decode.loss_cls: 0.5137  decode.loss_mask: 1.5487  decode.loss_dice: 1.6513  decode.d0.loss_cls: 0.7340  decode.d0.loss_mask: 1.5977  decode.d0.loss_dice: 1.6958  decode.d1.loss_cls: 0.5619  decode.d1.loss_mask: 1.5498  decode.d1.loss_dice: 1.6827  decode.d2.loss_cls: 0.6810  decode.d2.loss_mask: 1.5324  decode.d2.loss_dice: 1.6613  decode.d3.loss_cls: 0.5593  decode.d3.loss_mask: 1.5307  decode.d3.loss_dice: 1.6080  decode.d4.loss_cls: 0.5474  decode.d4.loss_mask: 1.5773  decode.d4.loss_dice: 1.6354  decode.d5.loss_cls: 0.5898  decode.d5.loss_mask: 1.5630  decode.d5.loss_dice: 1.5945  decode.d6.loss_cls: 0.5572  decode.d6.loss_mask: 1.5922  decode.d6.loss_dice: 1.6523  decode.d7.loss_cls: 0.5685  decode.d7.loss_mask: 1.6002  decode.d7.loss_dice: 1.6592  decode.d8.loss_cls: 0.5574  decode.d8.loss_mask: 1.5572  decode.d8.loss_dice: 1.6734
2025/03/29 14:18:16 - mmengine - INFO - Saving checkpoint at 4000 iterations
2025/03/29 14:18:26 - mmengine - INFO - Iter(val) [  50/2708]    eta: 0:07:03  time: 0.1586  data_time: 0.0013  memory: 1856  
2025/03/29 14:18:34 - mmengine - INFO - Iter(val) [ 100/2708]    eta: 0:07:03  time: 0.1669  data_time: 0.0013  memory: 1856  
2025/03/29 14:18:42 - mmengine - INFO - Iter(val) [ 150/2708]    eta: 0:06:52  time: 0.1594  data_time: 0.0013  memory: 1856  
2025/03/29 14:18:50 - mmengine - INFO - Iter(val) [ 200/2708]    eta: 0:06:46  time: 0.1669  data_time: 0.0014  memory: 1856  
2025/03/29 14:18:58 - mmengine - INFO - Iter(val) [ 250/2708]    eta: 0:06:38  time: 0.1615  data_time: 0.0013  memory: 1856  
2025/03/29 14:19:06 - mmengine - INFO - Iter(val) [ 300/2708]    eta: 0:06:29  time: 0.1671  data_time: 0.0013  memory: 1856  
2025/03/29 14:19:14 - mmengine - INFO - Iter(val) [ 350/2708]    eta: 0:06:21  time: 0.1569  data_time: 0.0013  memory: 1856  
2025/03/29 14:19:22 - mmengine - INFO - Iter(val) [ 400/2708]    eta: 0:06:12  time: 0.1670  data_time: 0.0013  memory: 1856  
2025/03/29 14:19:31 - mmengine - INFO - Iter(val) [ 450/2708]    eta: 0:06:05  time: 0.1568  data_time: 0.0013  memory: 1856  
2025/03/29 14:19:39 - mmengine - INFO - Iter(val) [ 500/2708]    eta: 0:05:56  time: 0.1591  data_time: 0.0014  memory: 1856  
2025/03/29 14:19:47 - mmengine - INFO - Iter(val) [ 550/2708]    eta: 0:05:49  time: 0.1589  data_time: 0.0013  memory: 1856  
2025/03/29 14:19:55 - mmengine - INFO - Iter(val) [ 600/2708]    eta: 0:05:40  time: 0.1580  data_time: 0.0014  memory: 1856  
2025/03/29 14:20:03 - mmengine - INFO - Iter(val) [ 650/2708]    eta: 0:05:32  time: 0.1655  data_time: 0.0014  memory: 1856  
2025/03/29 14:20:11 - mmengine - INFO - Iter(val) [ 700/2708]    eta: 0:05:24  time: 0.1577  data_time: 0.0013  memory: 1856  
2025/03/29 14:20:19 - mmengine - INFO - Iter(val) [ 750/2708]    eta: 0:05:16  time: 0.1673  data_time: 0.0014  memory: 1856  
2025/03/29 14:20:27 - mmengine - INFO - Iter(val) [ 800/2708]    eta: 0:05:08  time: 0.1578  data_time: 0.0013  memory: 1856  
2025/03/29 14:20:35 - mmengine - INFO - Iter(val) [ 850/2708]    eta: 0:05:00  time: 0.1669  data_time: 0.0013  memory: 1856  
2025/03/29 14:20:43 - mmengine - INFO - Iter(val) [ 900/2708]    eta: 0:04:52  time: 0.1608  data_time: 0.0012  memory: 1856  
2025/03/29 14:20:51 - mmengine - INFO - Iter(val) [ 950/2708]    eta: 0:04:44  time: 0.1672  data_time: 0.0012  memory: 1856  
2025/03/29 14:20:59 - mmengine - INFO - Iter(val) [1000/2708]    eta: 0:04:36  time: 0.1609  data_time: 0.0013  memory: 1856  
2025/03/29 14:21:08 - mmengine - INFO - Iter(val) [1050/2708]    eta: 0:04:27  time: 0.1667  data_time: 0.0012  memory: 1856  
2025/03/29 14:21:16 - mmengine - INFO - Iter(val) [1100/2708]    eta: 0:04:19  time: 0.1562  data_time: 0.0012  memory: 1856  
2025/03/29 14:21:24 - mmengine - INFO - Iter(val) [1150/2708]    eta: 0:04:11  time: 0.1606  data_time: 0.0014  memory: 1856  
2025/03/29 14:21:32 - mmengine - INFO - Iter(val) [1200/2708]    eta: 0:04:03  time: 0.1591  data_time: 0.0013  memory: 1856  
2025/03/29 14:21:40 - mmengine - INFO - Iter(val) [1250/2708]    eta: 0:03:55  time: 0.1581  data_time: 0.0014  memory: 1856  
2025/03/29 14:21:48 - mmengine - INFO - Iter(val) [1300/2708]    eta: 0:03:47  time: 0.1654  data_time: 0.0013  memory: 1856  
2025/03/29 14:21:56 - mmengine - INFO - Iter(val) [1350/2708]    eta: 0:03:39  time: 0.1560  data_time: 0.0013  memory: 1856  
2025/03/29 14:22:04 - mmengine - INFO - Iter(val) [1400/2708]    eta: 0:03:31  time: 0.1670  data_time: 0.0013  memory: 1856  
2025/03/29 14:22:12 - mmengine - INFO - Iter(val) [1450/2708]    eta: 0:03:23  time: 0.1572  data_time: 0.0013  memory: 1856  
2025/03/29 14:22:20 - mmengine - INFO - Iter(val) [1500/2708]    eta: 0:03:15  time: 0.1669  data_time: 0.0014  memory: 1856  
2025/03/29 14:22:28 - mmengine - INFO - Iter(val) [1550/2708]    eta: 0:03:07  time: 0.1582  data_time: 0.0015  memory: 1856  
2025/03/29 14:22:36 - mmengine - INFO - Iter(val) [1600/2708]    eta: 0:02:58  time: 0.1670  data_time: 0.0013  memory: 1856  
2025/03/29 14:22:45 - mmengine - INFO - Iter(val) [1650/2708]    eta: 0:02:50  time: 0.1615  data_time: 0.0013  memory: 1856  
2025/03/29 14:22:53 - mmengine - INFO - Iter(val) [1700/2708]    eta: 0:02:42  time: 0.1667  data_time: 0.0012  memory: 1856  
2025/03/29 14:23:01 - mmengine - INFO - Iter(val) [1750/2708]    eta: 0:02:34  time: 0.1563  data_time: 0.0012  memory: 1856  
2025/03/29 14:23:09 - mmengine - INFO - Iter(val) [1800/2708]    eta: 0:02:26  time: 0.1601  data_time: 0.0013  memory: 1856  
2025/03/29 14:23:17 - mmengine - INFO - Iter(val) [1850/2708]    eta: 0:02:18  time: 0.1598  data_time: 0.0012  memory: 1856  
2025/03/29 14:23:25 - mmengine - INFO - Iter(val) [1900/2708]    eta: 0:02:10  time: 0.1575  data_time: 0.0013  memory: 1856  
2025/03/29 14:23:33 - mmengine - INFO - Iter(val) [1950/2708]    eta: 0:02:02  time: 0.1653  data_time: 0.0013  memory: 1856  
2025/03/29 14:23:41 - mmengine - INFO - Iter(val) [2000/2708]    eta: 0:01:54  time: 0.1561  data_time: 0.0013  memory: 1856  
2025/03/29 14:23:49 - mmengine - INFO - Iter(val) [2050/2708]    eta: 0:01:46  time: 0.1677  data_time: 0.0014  memory: 1856  
2025/03/29 14:23:57 - mmengine - INFO - Iter(val) [2100/2708]    eta: 0:01:38  time: 0.1568  data_time: 0.0012  memory: 1856  
2025/03/29 14:24:05 - mmengine - INFO - Iter(val) [2150/2708]    eta: 0:01:30  time: 0.1667  data_time: 0.0012  memory: 1856  
2025/03/29 14:24:13 - mmengine - INFO - Iter(val) [2200/2708]    eta: 0:01:22  time: 0.1574  data_time: 0.0012  memory: 1856  
2025/03/29 14:24:22 - mmengine - INFO - Iter(val) [2250/2708]    eta: 0:01:13  time: 0.1666  data_time: 0.0014  memory: 1856  
2025/03/29 14:24:30 - mmengine - INFO - Iter(val) [2300/2708]    eta: 0:01:05  time: 0.1618  data_time: 0.0013  memory: 1856  
2025/03/29 14:24:38 - mmengine - INFO - Iter(val) [2350/2708]    eta: 0:00:57  time: 0.1666  data_time: 0.0014  memory: 1856  
2025/03/29 14:24:46 - mmengine - INFO - Iter(val) [2400/2708]    eta: 0:00:49  time: 0.1567  data_time: 0.0012  memory: 1856  
2025/03/29 14:24:54 - mmengine - INFO - Iter(val) [2450/2708]    eta: 0:00:41  time: 0.1598  data_time: 0.0013  memory: 1856  
2025/03/29 14:25:02 - mmengine - INFO - Iter(val) [2500/2708]    eta: 0:00:33  time: 0.1591  data_time: 0.0013  memory: 1856  
2025/03/29 14:25:10 - mmengine - INFO - Iter(val) [2550/2708]    eta: 0:00:25  time: 0.1576  data_time: 0.0013  memory: 1856  
2025/03/29 14:25:18 - mmengine - INFO - Iter(val) [2600/2708]    eta: 0:00:17  time: 0.1593  data_time: 0.0013  memory: 1856  
2025/03/29 14:25:26 - mmengine - INFO - Iter(val) [2650/2708]    eta: 0:00:09  time: 0.1576  data_time: 0.0012  memory: 1856  
2025/03/29 14:25:34 - mmengine - INFO - Iter(val) [2700/2708]    eta: 0:00:01  time: 0.1666  data_time: 0.0013  memory: 1856  
2025/03/29 14:25:36 - mmengine - INFO - per class results:
2025/03/29 14:25:36 - mmengine - INFO - 
+--------------+-------+-------+
|    Class     |  IoU  |  Acc  |
+--------------+-------+-------+
|  background  | 41.51 | 65.59 |
|   building   | 63.54 | 81.83 |
|     road     | 54.74 | 65.45 |
|    water     | 75.32 | 85.17 |
|    barren    | 42.92 | 53.06 |
|    forest    | 37.52 |  41.6 |
| agricultural | 62.57 | 77.53 |
+--------------+-------+-------+
2025/03/29 14:25:36 - mmengine - INFO - Iter(val) [2708/2708]    aAcc: 69.6900  mIoU: 54.0200  mAcc: 67.1700  data_time: 0.0013  time: 0.1615
2025/03/29 14:25:36 - mmengine - INFO - The previous best checkpoint /home/face/kaichengyang/xiaoxinghu/Earth_Adapter/work_dirs/r2u/DG_spatial_64_cutoff_0.3_fft_pre6/35b71_seed0/best_mIoU_iter_2000.pth is removed
2025/03/29 14:25:37 - mmengine - INFO - The best checkpoint with 54.0200 mIoU at 4000 iter is saved to best_mIoU_iter_4000.pth.
2025/03/29 14:27:02 - mmengine - INFO - Iter(train) [ 4050/20000]  base_lr: 8.1579e-05 lr: 8.1579e-05  eta: 7:15:08  time: 1.6620  data_time: 0.0159  memory: 10158  loss: 37.3210  decode.loss_cls: 0.5331  decode.loss_mask: 1.5076  decode.loss_dice: 1.6702  decode.d0.loss_cls: 0.6163  decode.d0.loss_mask: 1.5842  decode.d0.loss_dice: 1.7160  decode.d1.loss_cls: 0.4843  decode.d1.loss_mask: 1.5397  decode.d1.loss_dice: 1.6631  decode.d2.loss_cls: 0.4712  decode.d2.loss_mask: 1.5748  decode.d2.loss_dice: 1.7118  decode.d3.loss_cls: 0.4857  decode.d3.loss_mask: 1.5293  decode.d3.loss_dice: 1.6523  decode.d4.loss_cls: 0.4732  decode.d4.loss_mask: 1.5771  decode.d4.loss_dice: 1.7163  decode.d5.loss_cls: 0.5347  decode.d5.loss_mask: 1.5226  decode.d5.loss_dice: 1.6684  decode.d6.loss_cls: 0.5193  decode.d6.loss_mask: 1.5225  decode.d6.loss_dice: 1.6693  decode.d7.loss_cls: 0.4830  decode.d7.loss_mask: 1.5557  decode.d7.loss_dice: 1.6543  decode.d8.loss_cls: 0.5330  decode.d8.loss_mask: 1.5004  decode.d8.loss_dice: 1.6517
2025/03/29 14:28:26 - mmengine - INFO - Iter(train) [ 4100/20000]  base_lr: 8.1349e-05 lr: 8.1349e-05  eta: 7:13:55  time: 1.8193  data_time: 0.0156  memory: 10080  loss: 34.5109  decode.loss_cls: 0.4542  decode.loss_mask: 1.3443  decode.loss_dice: 1.6420  decode.d0.loss_cls: 0.5809  decode.d0.loss_mask: 1.3072  decode.d0.loss_dice: 1.6796  decode.d1.loss_cls: 0.4672  decode.d1.loss_mask: 1.3792  decode.d1.loss_dice: 1.6205  decode.d2.loss_cls: 0.4282  decode.d2.loss_mask: 1.3254  decode.d2.loss_dice: 1.5933  decode.d3.loss_cls: 0.4498  decode.d3.loss_mask: 1.3210  decode.d3.loss_dice: 1.6542  decode.d4.loss_cls: 0.3736  decode.d4.loss_mask: 1.4048  decode.d4.loss_dice: 1.7117  decode.d5.loss_cls: 0.4645  decode.d5.loss_mask: 1.3563  decode.d5.loss_dice: 1.6530  decode.d6.loss_cls: 0.4058  decode.d6.loss_mask: 1.3494  decode.d6.loss_dice: 1.6600  decode.d7.loss_cls: 0.4439  decode.d7.loss_mask: 1.3516  decode.d7.loss_dice: 1.6215  decode.d8.loss_cls: 0.4530  decode.d8.loss_mask: 1.3769  decode.d8.loss_dice: 1.6380
2025/03/29 14:29:57 - mmengine - INFO - Iter(train) [ 4150/20000]  base_lr: 8.1118e-05 lr: 8.1118e-05  eta: 7:13:08  time: 1.8206  data_time: 0.0155  memory: 10149  loss: 35.7544  decode.loss_cls: 0.4258  decode.loss_mask: 1.5556  decode.loss_dice: 1.5465  decode.d0.loss_cls: 0.5851  decode.d0.loss_mask: 1.5914  decode.d0.loss_dice: 1.6236  decode.d1.loss_cls: 0.4669  decode.d1.loss_mask: 1.5840  decode.d1.loss_dice: 1.5959  decode.d2.loss_cls: 0.4001  decode.d2.loss_mask: 1.5311  decode.d2.loss_dice: 1.5392  decode.d3.loss_cls: 0.4290  decode.d3.loss_mask: 1.5625  decode.d3.loss_dice: 1.5222  decode.d4.loss_cls: 0.4188  decode.d4.loss_mask: 1.5812  decode.d4.loss_dice: 1.5671  decode.d5.loss_cls: 0.4308  decode.d5.loss_mask: 1.6276  decode.d5.loss_dice: 1.5935  decode.d6.loss_cls: 0.4786  decode.d6.loss_mask: 1.5381  decode.d6.loss_dice: 1.5225  decode.d7.loss_cls: 0.4581  decode.d7.loss_mask: 1.5212  decode.d7.loss_dice: 1.5561  decode.d8.loss_cls: 0.3941  decode.d8.loss_mask: 1.5325  decode.d8.loss_dice: 1.5754
2025/03/29 14:31:28 - mmengine - INFO - Iter(train) [ 4200/20000]  base_lr: 8.0888e-05 lr: 8.0888e-05  eta: 7:12:20  time: 1.8169  data_time: 0.0156  memory: 10149  loss: 34.2841  decode.loss_cls: 0.4472  decode.loss_mask: 1.2898  decode.loss_dice: 1.6788  decode.d0.loss_cls: 0.5054  decode.d0.loss_mask: 1.3062  decode.d0.loss_dice: 1.7345  decode.d1.loss_cls: 0.4206  decode.d1.loss_mask: 1.2917  decode.d1.loss_dice: 1.6822  decode.d2.loss_cls: 0.4303  decode.d2.loss_mask: 1.2726  decode.d2.loss_dice: 1.6763  decode.d3.loss_cls: 0.4451  decode.d3.loss_mask: 1.2815  decode.d3.loss_dice: 1.6806  decode.d4.loss_cls: 0.4420  decode.d4.loss_mask: 1.3261  decode.d4.loss_dice: 1.7179  decode.d5.loss_cls: 0.4152  decode.d5.loss_mask: 1.2912  decode.d5.loss_dice: 1.7054  decode.d6.loss_cls: 0.4171  decode.d6.loss_mask: 1.2652  decode.d6.loss_dice: 1.6916  decode.d7.loss_cls: 0.4085  decode.d7.loss_mask: 1.3013  decode.d7.loss_dice: 1.7398  decode.d8.loss_cls: 0.4267  decode.d8.loss_mask: 1.2849  decode.d8.loss_dice: 1.7086
2025/03/29 14:32:59 - mmengine - INFO - Iter(train) [ 4250/20000]  base_lr: 8.0658e-05 lr: 8.0658e-05  eta: 7:11:29  time: 1.8121  data_time: 0.0157  memory: 10099  loss: 39.6606  decode.loss_cls: 0.5655  decode.loss_mask: 1.7011  decode.loss_dice: 1.6245  decode.d0.loss_cls: 0.6906  decode.d0.loss_mask: 1.7383  decode.d0.loss_dice: 1.6931  decode.d1.loss_cls: 0.6203  decode.d1.loss_mask: 1.6928  decode.d1.loss_dice: 1.6514  decode.d2.loss_cls: 0.5838  decode.d2.loss_mask: 1.7020  decode.d2.loss_dice: 1.6022  decode.d3.loss_cls: 0.6208  decode.d3.loss_mask: 1.7133  decode.d3.loss_dice: 1.6565  decode.d4.loss_cls: 0.6223  decode.d4.loss_mask: 1.7063  decode.d4.loss_dice: 1.6523  decode.d5.loss_cls: 0.5764  decode.d5.loss_mask: 1.7264  decode.d5.loss_dice: 1.6578  decode.d6.loss_cls: 0.6180  decode.d6.loss_mask: 1.7298  decode.d6.loss_dice: 1.6096  decode.d7.loss_cls: 0.5789  decode.d7.loss_mask: 1.7221  decode.d7.loss_dice: 1.6144  decode.d8.loss_cls: 0.5461  decode.d8.loss_mask: 1.7663  decode.d8.loss_dice: 1.6778
2025/03/29 14:34:29 - mmengine - INFO - Iter(train) [ 4300/20000]  base_lr: 8.0427e-05 lr: 8.0427e-05  eta: 7:10:36  time: 1.7950  data_time: 0.0156  memory: 10091  loss: 35.0046  decode.loss_cls: 0.4728  decode.loss_mask: 1.3950  decode.loss_dice: 1.6128  decode.d0.loss_cls: 0.5195  decode.d0.loss_mask: 1.4497  decode.d0.loss_dice: 1.6879  decode.d1.loss_cls: 0.4323  decode.d1.loss_mask: 1.4051  decode.d1.loss_dice: 1.6154  decode.d2.loss_cls: 0.4930  decode.d2.loss_mask: 1.4124  decode.d2.loss_dice: 1.6016  decode.d3.loss_cls: 0.4766  decode.d3.loss_mask: 1.4345  decode.d3.loss_dice: 1.5646  decode.d4.loss_cls: 0.5058  decode.d4.loss_mask: 1.4301  decode.d4.loss_dice: 1.5743  decode.d5.loss_cls: 0.5142  decode.d5.loss_mask: 1.4232  decode.d5.loss_dice: 1.5461  decode.d6.loss_cls: 0.4617  decode.d6.loss_mask: 1.4280  decode.d6.loss_dice: 1.5961  decode.d7.loss_cls: 0.4824  decode.d7.loss_mask: 1.4172  decode.d7.loss_dice: 1.5668  decode.d8.loss_cls: 0.5305  decode.d8.loss_mask: 1.3853  decode.d8.loss_dice: 1.5697
2025/03/29 14:35:59 - mmengine - INFO - Iter(train) [ 4350/20000]  base_lr: 8.0197e-05 lr: 8.0197e-05  eta: 7:09:40  time: 1.7993  data_time: 0.0157  memory: 10085  loss: 38.6250  decode.loss_cls: 0.5663  decode.loss_mask: 1.5643  decode.loss_dice: 1.7448  decode.d0.loss_cls: 0.6716  decode.d0.loss_mask: 1.5943  decode.d0.loss_dice: 1.8025  decode.d1.loss_cls: 0.6087  decode.d1.loss_mask: 1.4775  decode.d1.loss_dice: 1.7045  decode.d2.loss_cls: 0.6141  decode.d2.loss_mask: 1.4717  decode.d2.loss_dice: 1.6992  decode.d3.loss_cls: 0.5960  decode.d3.loss_mask: 1.5256  decode.d3.loss_dice: 1.6794  decode.d4.loss_cls: 0.6448  decode.d4.loss_mask: 1.5009  decode.d4.loss_dice: 1.7034  decode.d5.loss_cls: 0.6237  decode.d5.loss_mask: 1.5397  decode.d5.loss_dice: 1.7404  decode.d6.loss_cls: 0.6491  decode.d6.loss_mask: 1.4683  decode.d6.loss_dice: 1.6728  decode.d7.loss_cls: 0.6442  decode.d7.loss_mask: 1.4875  decode.d7.loss_dice: 1.6665  decode.d8.loss_cls: 0.6420  decode.d8.loss_mask: 1.5875  decode.d8.loss_dice: 1.7338
2025/03/29 14:37:29 - mmengine - INFO - Iter(train) [ 4400/20000]  base_lr: 7.9966e-05 lr: 7.9966e-05  eta: 7:08:46  time: 1.7968  data_time: 0.0155  memory: 10090  loss: 38.5160  decode.loss_cls: 0.3399  decode.loss_mask: 1.6678  decode.loss_dice: 1.8085  decode.d0.loss_cls: 0.5783  decode.d0.loss_mask: 1.6972  decode.d0.loss_dice: 1.8010  decode.d1.loss_cls: 0.4744  decode.d1.loss_mask: 1.6162  decode.d1.loss_dice: 1.7120  decode.d2.loss_cls: 0.4503  decode.d2.loss_mask: 1.6671  decode.d2.loss_dice: 1.7219  decode.d3.loss_cls: 0.4812  decode.d3.loss_mask: 1.6316  decode.d3.loss_dice: 1.7018  decode.d4.loss_cls: 0.4778  decode.d4.loss_mask: 1.6993  decode.d4.loss_dice: 1.7614  decode.d5.loss_cls: 0.4639  decode.d5.loss_mask: 1.6294  decode.d5.loss_dice: 1.7256  decode.d6.loss_cls: 0.4673  decode.d6.loss_mask: 1.5928  decode.d6.loss_dice: 1.7207  decode.d7.loss_cls: 0.4591  decode.d7.loss_mask: 1.6081  decode.d7.loss_dice: 1.7481  decode.d8.loss_cls: 0.3939  decode.d8.loss_mask: 1.6590  decode.d8.loss_dice: 1.7603
2025/03/29 14:38:55 - mmengine - INFO - Iter(train) [ 4450/20000]  base_lr: 7.9735e-05 lr: 7.9735e-05  eta: 7:07:35  time: 1.6884  data_time: 0.0155  memory: 10103  loss: 35.8537  decode.loss_cls: 0.3799  decode.loss_mask: 1.5102  decode.loss_dice: 1.6630  decode.d0.loss_cls: 0.5707  decode.d0.loss_mask: 1.5247  decode.d0.loss_dice: 1.6914  decode.d1.loss_cls: 0.3984  decode.d1.loss_mask: 1.5266  decode.d1.loss_dice: 1.6444  decode.d2.loss_cls: 0.3515  decode.d2.loss_mask: 1.5356  decode.d2.loss_dice: 1.6955  decode.d3.loss_cls: 0.3341  decode.d3.loss_mask: 1.5085  decode.d3.loss_dice: 1.6618  decode.d4.loss_cls: 0.3978  decode.d4.loss_mask: 1.4700  decode.d4.loss_dice: 1.6708  decode.d5.loss_cls: 0.3535  decode.d5.loss_mask: 1.5348  decode.d5.loss_dice: 1.6575  decode.d6.loss_cls: 0.3847  decode.d6.loss_mask: 1.5626  decode.d6.loss_dice: 1.6706  decode.d7.loss_cls: 0.4193  decode.d7.loss_mask: 1.5015  decode.d7.loss_dice: 1.6390  decode.d8.loss_cls: 0.3526  decode.d8.loss_mask: 1.5518  decode.d8.loss_dice: 1.6910
2025/03/29 14:40:18 - mmengine - INFO - Iter(train) [ 4500/20000]  base_lr: 7.9504e-05 lr: 7.9504e-05  eta: 7:06:14  time: 1.6555  data_time: 0.0160  memory: 10155  loss: 36.5430  decode.loss_cls: 0.5544  decode.loss_mask: 1.4122  decode.loss_dice: 1.6322  decode.d0.loss_cls: 0.6410  decode.d0.loss_mask: 1.3654  decode.d0.loss_dice: 1.7077  decode.d1.loss_cls: 0.6139  decode.d1.loss_mask: 1.3983  decode.d1.loss_dice: 1.5404  decode.d2.loss_cls: 0.5494  decode.d2.loss_mask: 1.4729  decode.d2.loss_dice: 1.6362  decode.d3.loss_cls: 0.5979  decode.d3.loss_mask: 1.4247  decode.d3.loss_dice: 1.5803  decode.d4.loss_cls: 0.6260  decode.d4.loss_mask: 1.4340  decode.d4.loss_dice: 1.6090  decode.d5.loss_cls: 0.5575  decode.d5.loss_mask: 1.4406  decode.d5.loss_dice: 1.6603  decode.d6.loss_cls: 0.5552  decode.d6.loss_mask: 1.4942  decode.d6.loss_dice: 1.6572  decode.d7.loss_cls: 0.6131  decode.d7.loss_mask: 1.4691  decode.d7.loss_dice: 1.6528  decode.d8.loss_cls: 0.5632  decode.d8.loss_mask: 1.4486  decode.d8.loss_dice: 1.6352
2025/03/29 14:41:41 - mmengine - INFO - Iter(train) [ 4550/20000]  base_lr: 7.9274e-05 lr: 7.9274e-05  eta: 7:04:55  time: 1.6693  data_time: 0.0157  memory: 10146  loss: 40.2888  decode.loss_cls: 0.4797  decode.loss_mask: 1.7000  decode.loss_dice: 1.7989  decode.d0.loss_cls: 0.5798  decode.d0.loss_mask: 1.7065  decode.d0.loss_dice: 1.8347  decode.d1.loss_cls: 0.5169  decode.d1.loss_mask: 1.6989  decode.d1.loss_dice: 1.8064  decode.d2.loss_cls: 0.4792  decode.d2.loss_mask: 1.6981  decode.d2.loss_dice: 1.7886  decode.d3.loss_cls: 0.5084  decode.d3.loss_mask: 1.7227  decode.d3.loss_dice: 1.8594  decode.d4.loss_cls: 0.5223  decode.d4.loss_mask: 1.6890  decode.d4.loss_dice: 1.8521  decode.d5.loss_cls: 0.5625  decode.d5.loss_mask: 1.7006  decode.d5.loss_dice: 1.8113  decode.d6.loss_cls: 0.5005  decode.d6.loss_mask: 1.6978  decode.d6.loss_dice: 1.8451  decode.d7.loss_cls: 0.4938  decode.d7.loss_mask: 1.6887  decode.d7.loss_dice: 1.8066  decode.d8.loss_cls: 0.3749  decode.d8.loss_mask: 1.7296  decode.d8.loss_dice: 1.8357
2025/03/29 14:43:05 - mmengine - INFO - Iter(train) [ 4600/20000]  base_lr: 7.9043e-05 lr: 7.9043e-05  eta: 7:03:36  time: 1.6688  data_time: 0.0157  memory: 10087  loss: 36.6248  decode.loss_cls: 0.5888  decode.loss_mask: 1.5152  decode.loss_dice: 1.5958  decode.d0.loss_cls: 0.6335  decode.d0.loss_mask: 1.5525  decode.d0.loss_dice: 1.6672  decode.d1.loss_cls: 0.4941  decode.d1.loss_mask: 1.4703  decode.d1.loss_dice: 1.5837  decode.d2.loss_cls: 0.4757  decode.d2.loss_mask: 1.5200  decode.d2.loss_dice: 1.6169  decode.d3.loss_cls: 0.5373  decode.d3.loss_mask: 1.5149  decode.d3.loss_dice: 1.5836  decode.d4.loss_cls: 0.5967  decode.d4.loss_mask: 1.4831  decode.d4.loss_dice: 1.5795  decode.d5.loss_cls: 0.6080  decode.d5.loss_mask: 1.5088  decode.d5.loss_dice: 1.5596  decode.d6.loss_cls: 0.5657  decode.d6.loss_mask: 1.4936  decode.d6.loss_dice: 1.5724  decode.d7.loss_cls: 0.5618  decode.d7.loss_mask: 1.5216  decode.d7.loss_dice: 1.5648  decode.d8.loss_cls: 0.5734  decode.d8.loss_mask: 1.5131  decode.d8.loss_dice: 1.5732
2025/03/29 14:44:28 - mmengine - INFO - Iter(train) [ 4650/20000]  base_lr: 7.8812e-05 lr: 7.8812e-05  eta: 7:02:16  time: 1.6700  data_time: 0.0157  memory: 10150  loss: 40.7153  decode.loss_cls: 0.5715  decode.loss_mask: 1.6600  decode.loss_dice: 1.8110  decode.d0.loss_cls: 0.5961  decode.d0.loss_mask: 1.7506  decode.d0.loss_dice: 1.8889  decode.d1.loss_cls: 0.5731  decode.d1.loss_mask: 1.6690  decode.d1.loss_dice: 1.7777  decode.d2.loss_cls: 0.5419  decode.d2.loss_mask: 1.7268  decode.d2.loss_dice: 1.8338  decode.d3.loss_cls: 0.5501  decode.d3.loss_mask: 1.7261  decode.d3.loss_dice: 1.8098  decode.d4.loss_cls: 0.5313  decode.d4.loss_mask: 1.6952  decode.d4.loss_dice: 1.8456  decode.d5.loss_cls: 0.5202  decode.d5.loss_mask: 1.7232  decode.d5.loss_dice: 1.8233  decode.d6.loss_cls: 0.5139  decode.d6.loss_mask: 1.6882  decode.d6.loss_dice: 1.8034  decode.d7.loss_cls: 0.5410  decode.d7.loss_mask: 1.6788  decode.d7.loss_dice: 1.7976  decode.d8.loss_cls: 0.5188  decode.d8.loss_mask: 1.7078  decode.d8.loss_dice: 1.8403
2025/03/29 14:45:52 - mmengine - INFO - Iter(train) [ 4700/20000]  base_lr: 7.8581e-05 lr: 7.8581e-05  eta: 7:00:57  time: 1.6702  data_time: 0.0158  memory: 10084  loss: 39.8866  decode.loss_cls: 0.4983  decode.loss_mask: 1.7138  decode.loss_dice: 1.7753  decode.d0.loss_cls: 0.5919  decode.d0.loss_mask: 1.6531  decode.d0.loss_dice: 1.8082  decode.d1.loss_cls: 0.4555  decode.d1.loss_mask: 1.6787  decode.d1.loss_dice: 1.7834  decode.d2.loss_cls: 0.4648  decode.d2.loss_mask: 1.7099  decode.d2.loss_dice: 1.7914  decode.d3.loss_cls: 0.4933  decode.d3.loss_mask: 1.7024  decode.d3.loss_dice: 1.7392  decode.d4.loss_cls: 0.5056  decode.d4.loss_mask: 1.7454  decode.d4.loss_dice: 1.7654  decode.d5.loss_cls: 0.5498  decode.d5.loss_mask: 1.7163  decode.d5.loss_dice: 1.7607  decode.d6.loss_cls: 0.5154  decode.d6.loss_mask: 1.6988  decode.d6.loss_dice: 1.7886  decode.d7.loss_cls: 0.4423  decode.d7.loss_mask: 1.7302  decode.d7.loss_dice: 1.8068  decode.d8.loss_cls: 0.4858  decode.d8.loss_mask: 1.7366  decode.d8.loss_dice: 1.7797
2025/03/29 14:47:15 - mmengine - INFO - Iter(train) [ 4750/20000]  base_lr: 7.8349e-05 lr: 7.8349e-05  eta: 6:59:38  time: 1.6789  data_time: 0.0165  memory: 10153  loss: 35.7993  decode.loss_cls: 0.4388  decode.loss_mask: 1.6551  decode.loss_dice: 1.5618  decode.d0.loss_cls: 0.5726  decode.d0.loss_mask: 1.5591  decode.d0.loss_dice: 1.5952  decode.d1.loss_cls: 0.4741  decode.d1.loss_mask: 1.5601  decode.d1.loss_dice: 1.5314  decode.d2.loss_cls: 0.4556  decode.d2.loss_mask: 1.5296  decode.d2.loss_dice: 1.5023  decode.d3.loss_cls: 0.4105  decode.d3.loss_mask: 1.5776  decode.d3.loss_dice: 1.5082  decode.d4.loss_cls: 0.4743  decode.d4.loss_mask: 1.6046  decode.d4.loss_dice: 1.4832  decode.d5.loss_cls: 0.4975  decode.d5.loss_mask: 1.5388  decode.d5.loss_dice: 1.4884  decode.d6.loss_cls: 0.4446  decode.d6.loss_mask: 1.5465  decode.d6.loss_dice: 1.4920  decode.d7.loss_cls: 0.4803  decode.d7.loss_mask: 1.6262  decode.d7.loss_dice: 1.5572  decode.d8.loss_cls: 0.4586  decode.d8.loss_mask: 1.6305  decode.d8.loss_dice: 1.5444
2025/03/29 14:48:39 - mmengine - INFO - Iter(train) [ 4800/20000]  base_lr: 7.8118e-05 lr: 7.8118e-05  eta: 6:58:20  time: 1.6693  data_time: 0.0155  memory: 10094  loss: 36.2281  decode.loss_cls: 0.5538  decode.loss_mask: 1.5314  decode.loss_dice: 1.5932  decode.d0.loss_cls: 0.5318  decode.d0.loss_mask: 1.5303  decode.d0.loss_dice: 1.6243  decode.d1.loss_cls: 0.4584  decode.d1.loss_mask: 1.4996  decode.d1.loss_dice: 1.5472  decode.d2.loss_cls: 0.4730  decode.d2.loss_mask: 1.5139  decode.d2.loss_dice: 1.5479  decode.d3.loss_cls: 0.5139  decode.d3.loss_mask: 1.5288  decode.d3.loss_dice: 1.5477  decode.d4.loss_cls: 0.5071  decode.d4.loss_mask: 1.5119  decode.d4.loss_dice: 1.5725  decode.d5.loss_cls: 0.5484  decode.d5.loss_mask: 1.5043  decode.d5.loss_dice: 1.5669  decode.d6.loss_cls: 0.5668  decode.d6.loss_mask: 1.5515  decode.d6.loss_dice: 1.5835  decode.d7.loss_cls: 0.5149  decode.d7.loss_mask: 1.5804  decode.d7.loss_dice: 1.5747  decode.d8.loss_cls: 0.5105  decode.d8.loss_mask: 1.5691  decode.d8.loss_dice: 1.5704
2025/03/29 14:50:03 - mmengine - INFO - Iter(train) [ 4850/20000]  base_lr: 7.7887e-05 lr: 7.7887e-05  eta: 6:57:00  time: 1.6743  data_time: 0.0157  memory: 10096  loss: 31.5524  decode.loss_cls: 0.2919  decode.loss_mask: 1.4469  decode.loss_dice: 1.4165  decode.d0.loss_cls: 0.4624  decode.d0.loss_mask: 1.4099  decode.d0.loss_dice: 1.4108  decode.d1.loss_cls: 0.3327  decode.d1.loss_mask: 1.4299  decode.d1.loss_dice: 1.4243  decode.d2.loss_cls: 0.2682  decode.d2.loss_mask: 1.4020  decode.d2.loss_dice: 1.4354  decode.d3.loss_cls: 0.3283  decode.d3.loss_mask: 1.4247  decode.d3.loss_dice: 1.4169  decode.d4.loss_cls: 0.3149  decode.d4.loss_mask: 1.4098  decode.d4.loss_dice: 1.4088  decode.d5.loss_cls: 0.3195  decode.d5.loss_mask: 1.4166  decode.d5.loss_dice: 1.4032  decode.d6.loss_cls: 0.3144  decode.d6.loss_mask: 1.3969  decode.d6.loss_dice: 1.3901  decode.d7.loss_cls: 0.2909  decode.d7.loss_mask: 1.4123  decode.d7.loss_dice: 1.4261  decode.d8.loss_cls: 0.3305  decode.d8.loss_mask: 1.4067  decode.d8.loss_dice: 1.4107
2025/03/29 14:51:26 - mmengine - INFO - Iter(train) [ 4900/20000]  base_lr: 7.7655e-05 lr: 7.7655e-05  eta: 6:55:41  time: 1.6726  data_time: 0.0159  memory: 10137  loss: 38.3054  decode.loss_cls: 0.6156  decode.loss_mask: 1.4701  decode.loss_dice: 1.7304  decode.d0.loss_cls: 0.5558  decode.d0.loss_mask: 1.5339  decode.d0.loss_dice: 1.8720  decode.d1.loss_cls: 0.5286  decode.d1.loss_mask: 1.4872  decode.d1.loss_dice: 1.7646  decode.d2.loss_cls: 0.5615  decode.d2.loss_mask: 1.4797  decode.d2.loss_dice: 1.7658  decode.d3.loss_cls: 0.5710  decode.d3.loss_mask: 1.5011  decode.d3.loss_dice: 1.7796  decode.d4.loss_cls: 0.6062  decode.d4.loss_mask: 1.5010  decode.d4.loss_dice: 1.7575  decode.d5.loss_cls: 0.6056  decode.d5.loss_mask: 1.5103  decode.d5.loss_dice: 1.7318  decode.d6.loss_cls: 0.6421  decode.d6.loss_mask: 1.4692  decode.d6.loss_dice: 1.7085  decode.d7.loss_cls: 0.5450  decode.d7.loss_mask: 1.4533  decode.d7.loss_dice: 1.7394  decode.d8.loss_cls: 0.5885  decode.d8.loss_mask: 1.4883  decode.d8.loss_dice: 1.7418
2025/03/29 14:52:50 - mmengine - INFO - Iter(train) [ 4950/20000]  base_lr: 7.7424e-05 lr: 7.7424e-05  eta: 6:54:21  time: 1.6713  data_time: 0.0158  memory: 10138  loss: 38.9684  decode.loss_cls: 0.3789  decode.loss_mask: 1.7710  decode.loss_dice: 1.6919  decode.d0.loss_cls: 0.6476  decode.d0.loss_mask: 1.7439  decode.d0.loss_dice: 1.6935  decode.d1.loss_cls: 0.3828  decode.d1.loss_mask: 1.7810  decode.d1.loss_dice: 1.7008  decode.d2.loss_cls: 0.4328  decode.d2.loss_mask: 1.7446  decode.d2.loss_dice: 1.6506  decode.d3.loss_cls: 0.4735  decode.d3.loss_mask: 1.7451  decode.d3.loss_dice: 1.6937  decode.d4.loss_cls: 0.4965  decode.d4.loss_mask: 1.7756  decode.d4.loss_dice: 1.6679  decode.d5.loss_cls: 0.5136  decode.d5.loss_mask: 1.6937  decode.d5.loss_dice: 1.6401  decode.d6.loss_cls: 0.4689  decode.d6.loss_mask: 1.7271  decode.d6.loss_dice: 1.6562  decode.d7.loss_cls: 0.4164  decode.d7.loss_mask: 1.7428  decode.d7.loss_dice: 1.7252  decode.d8.loss_cls: 0.3792  decode.d8.loss_mask: 1.8314  decode.d8.loss_dice: 1.7020
2025/03/29 14:54:13 - mmengine - INFO - Exp name: r2u_20250329_122140
2025/03/29 14:54:13 - mmengine - INFO - Iter(train) [ 5000/20000]  base_lr: 7.7192e-05 lr: 7.7192e-05  eta: 6:53:01  time: 1.6724  data_time: 0.0157  memory: 10097  loss: 39.2586  decode.loss_cls: 0.5244  decode.loss_mask: 1.5774  decode.loss_dice: 1.8274  decode.d0.loss_cls: 0.5659  decode.d0.loss_mask: 1.6071  decode.d0.loss_dice: 1.9058  decode.d1.loss_cls: 0.4936  decode.d1.loss_mask: 1.5591  decode.d1.loss_dice: 1.7937  decode.d2.loss_cls: 0.4907  decode.d2.loss_mask: 1.5701  decode.d2.loss_dice: 1.8206  decode.d3.loss_cls: 0.4820  decode.d3.loss_mask: 1.6039  decode.d3.loss_dice: 1.8276  decode.d4.loss_cls: 0.5529  decode.d4.loss_mask: 1.5683  decode.d4.loss_dice: 1.8544  decode.d5.loss_cls: 0.4825  decode.d5.loss_mask: 1.5639  decode.d5.loss_dice: 1.8597  decode.d6.loss_cls: 0.5435  decode.d6.loss_mask: 1.5330  decode.d6.loss_dice: 1.8217  decode.d7.loss_cls: 0.4503  decode.d7.loss_mask: 1.5763  decode.d7.loss_dice: 1.8917  decode.d8.loss_cls: 0.4806  decode.d8.loss_mask: 1.5744  decode.d8.loss_dice: 1.8563
2025/03/29 14:55:37 - mmengine - INFO - Iter(train) [ 5050/20000]  base_lr: 7.6961e-05 lr: 7.6961e-05  eta: 6:51:43  time: 1.6838  data_time: 0.0155  memory: 10090  loss: 40.1630  decode.loss_cls: 0.5940  decode.loss_mask: 1.6500  decode.loss_dice: 1.7928  decode.d0.loss_cls: 0.6021  decode.d0.loss_mask: 1.7308  decode.d0.loss_dice: 1.8265  decode.d1.loss_cls: 0.4573  decode.d1.loss_mask: 1.7219  decode.d1.loss_dice: 1.8353  decode.d2.loss_cls: 0.4593  decode.d2.loss_mask: 1.6845  decode.d2.loss_dice: 1.8091  decode.d3.loss_cls: 0.5176  decode.d3.loss_mask: 1.6843  decode.d3.loss_dice: 1.7772  decode.d4.loss_cls: 0.5354  decode.d4.loss_mask: 1.6873  decode.d4.loss_dice: 1.8162  decode.d5.loss_cls: 0.4789  decode.d5.loss_mask: 1.6602  decode.d5.loss_dice: 1.7980  decode.d6.loss_cls: 0.5363  decode.d6.loss_mask: 1.6511  decode.d6.loss_dice: 1.7948  decode.d7.loss_cls: 0.5126  decode.d7.loss_mask: 1.7200  decode.d7.loss_dice: 1.8062  decode.d8.loss_cls: 0.5260  decode.d8.loss_mask: 1.6870  decode.d8.loss_dice: 1.8100
2025/03/29 14:57:01 - mmengine - INFO - Iter(train) [ 5100/20000]  base_lr: 7.6729e-05 lr: 7.6729e-05  eta: 6:50:23  time: 1.6693  data_time: 0.0158  memory: 10142  loss: 34.7192  decode.loss_cls: 0.3910  decode.loss_mask: 1.4817  decode.loss_dice: 1.5897  decode.d0.loss_cls: 0.4948  decode.d0.loss_mask: 1.4737  decode.d0.loss_dice: 1.6158  decode.d1.loss_cls: 0.4262  decode.d1.loss_mask: 1.4851  decode.d1.loss_dice: 1.5802  decode.d2.loss_cls: 0.3810  decode.d2.loss_mask: 1.4938  decode.d2.loss_dice: 1.5747  decode.d3.loss_cls: 0.3882  decode.d3.loss_mask: 1.4816  decode.d3.loss_dice: 1.6299  decode.d4.loss_cls: 0.4171  decode.d4.loss_mask: 1.4991  decode.d4.loss_dice: 1.5682  decode.d5.loss_cls: 0.4159  decode.d5.loss_mask: 1.4867  decode.d5.loss_dice: 1.5647  decode.d6.loss_cls: 0.3790  decode.d6.loss_mask: 1.4580  decode.d6.loss_dice: 1.5523  decode.d7.loss_cls: 0.3956  decode.d7.loss_mask: 1.5052  decode.d7.loss_dice: 1.5523  decode.d8.loss_cls: 0.3797  decode.d8.loss_mask: 1.4942  decode.d8.loss_dice: 1.5640
2025/03/29 14:58:25 - mmengine - INFO - Iter(train) [ 5150/20000]  base_lr: 7.6497e-05 lr: 7.6497e-05  eta: 6:49:03  time: 1.6689  data_time: 0.0155  memory: 10139  loss: 34.4805  decode.loss_cls: 0.4496  decode.loss_mask: 1.3872  decode.loss_dice: 1.5866  decode.d0.loss_cls: 0.5465  decode.d0.loss_mask: 1.4197  decode.d0.loss_dice: 1.6583  decode.d1.loss_cls: 0.5020  decode.d1.loss_mask: 1.3717  decode.d1.loss_dice: 1.5625  decode.d2.loss_cls: 0.4502  decode.d2.loss_mask: 1.4209  decode.d2.loss_dice: 1.6125  decode.d3.loss_cls: 0.4064  decode.d3.loss_mask: 1.4192  decode.d3.loss_dice: 1.6120  decode.d4.loss_cls: 0.4761  decode.d4.loss_mask: 1.3634  decode.d4.loss_dice: 1.6141  decode.d5.loss_cls: 0.4215  decode.d5.loss_mask: 1.3921  decode.d5.loss_dice: 1.6065  decode.d6.loss_cls: 0.4313  decode.d6.loss_mask: 1.3451  decode.d6.loss_dice: 1.5869  decode.d7.loss_cls: 0.4133  decode.d7.loss_mask: 1.3840  decode.d7.loss_dice: 1.6311  decode.d8.loss_cls: 0.4022  decode.d8.loss_mask: 1.3730  decode.d8.loss_dice: 1.6348
2025/03/29 14:59:48 - mmengine - INFO - Iter(train) [ 5200/20000]  base_lr: 7.6265e-05 lr: 7.6265e-05  eta: 6:47:43  time: 1.6695  data_time: 0.0155  memory: 10142  loss: 35.5734  decode.loss_cls: 0.4568  decode.loss_mask: 1.4735  decode.loss_dice: 1.5953  decode.d0.loss_cls: 0.5239  decode.d0.loss_mask: 1.5134  decode.d0.loss_dice: 1.7301  decode.d1.loss_cls: 0.4708  decode.d1.loss_mask: 1.4621  decode.d1.loss_dice: 1.6228  decode.d2.loss_cls: 0.4271  decode.d2.loss_mask: 1.5100  decode.d2.loss_dice: 1.6121  decode.d3.loss_cls: 0.4600  decode.d3.loss_mask: 1.4810  decode.d3.loss_dice: 1.5787  decode.d4.loss_cls: 0.4909  decode.d4.loss_mask: 1.4584  decode.d4.loss_dice: 1.6050  decode.d5.loss_cls: 0.5360  decode.d5.loss_mask: 1.4133  decode.d5.loss_dice: 1.5593  decode.d6.loss_cls: 0.4839  decode.d6.loss_mask: 1.4399  decode.d6.loss_dice: 1.6096  decode.d7.loss_cls: 0.5315  decode.d7.loss_mask: 1.4089  decode.d7.loss_dice: 1.5847  decode.d8.loss_cls: 0.5261  decode.d8.loss_mask: 1.4136  decode.d8.loss_dice: 1.5947
2025/03/29 15:01:12 - mmengine - INFO - Iter(train) [ 5250/20000]  base_lr: 7.6034e-05 lr: 7.6034e-05  eta: 6:46:23  time: 1.6720  data_time: 0.0162  memory: 10089  loss: 37.4827  decode.loss_cls: 0.5214  decode.loss_mask: 1.4665  decode.loss_dice: 1.7150  decode.d0.loss_cls: 0.6137  decode.d0.loss_mask: 1.4746  decode.d0.loss_dice: 1.7640  decode.d1.loss_cls: 0.5097  decode.d1.loss_mask: 1.4832  decode.d1.loss_dice: 1.7170  decode.d2.loss_cls: 0.5244  decode.d2.loss_mask: 1.5090  decode.d2.loss_dice: 1.7004  decode.d3.loss_cls: 0.5719  decode.d3.loss_mask: 1.4476  decode.d3.loss_dice: 1.7252  decode.d4.loss_cls: 0.5543  decode.d4.loss_mask: 1.4774  decode.d4.loss_dice: 1.7307  decode.d5.loss_cls: 0.5747  decode.d5.loss_mask: 1.4223  decode.d5.loss_dice: 1.6957  decode.d6.loss_cls: 0.5841  decode.d6.loss_mask: 1.4484  decode.d6.loss_dice: 1.6641  decode.d7.loss_cls: 0.6389  decode.d7.loss_mask: 1.4874  decode.d7.loss_dice: 1.7205  decode.d8.loss_cls: 0.5664  decode.d8.loss_mask: 1.4719  decode.d8.loss_dice: 1.7022
2025/03/29 15:02:35 - mmengine - INFO - Iter(train) [ 5300/20000]  base_lr: 7.5802e-05 lr: 7.5802e-05  eta: 6:45:03  time: 1.6734  data_time: 0.0156  memory: 10138  loss: 33.6932  decode.loss_cls: 0.4083  decode.loss_mask: 1.3246  decode.loss_dice: 1.6010  decode.d0.loss_cls: 0.4972  decode.d0.loss_mask: 1.3095  decode.d0.loss_dice: 1.7050  decode.d1.loss_cls: 0.4379  decode.d1.loss_mask: 1.3089  decode.d1.loss_dice: 1.6204  decode.d2.loss_cls: 0.4126  decode.d2.loss_mask: 1.3306  decode.d2.loss_dice: 1.5983  decode.d3.loss_cls: 0.4136  decode.d3.loss_mask: 1.3327  decode.d3.loss_dice: 1.6177  decode.d4.loss_cls: 0.4556  decode.d4.loss_mask: 1.3184  decode.d4.loss_dice: 1.5990  decode.d5.loss_cls: 0.4532  decode.d5.loss_mask: 1.2916  decode.d5.loss_dice: 1.6195  decode.d6.loss_cls: 0.4338  decode.d6.loss_mask: 1.2933  decode.d6.loss_dice: 1.6122  decode.d7.loss_cls: 0.4584  decode.d7.loss_mask: 1.3162  decode.d7.loss_dice: 1.5891  decode.d8.loss_cls: 0.4079  decode.d8.loss_mask: 1.3350  decode.d8.loss_dice: 1.5917
2025/03/29 15:03:59 - mmengine - INFO - Iter(train) [ 5350/20000]  base_lr: 7.5569e-05 lr: 7.5569e-05  eta: 6:43:43  time: 1.6744  data_time: 0.0158  memory: 10143  loss: 37.9881  decode.loss_cls: 0.4736  decode.loss_mask: 1.6069  decode.loss_dice: 1.7383  decode.d0.loss_cls: 0.6177  decode.d0.loss_mask: 1.6193  decode.d0.loss_dice: 1.7765  decode.d1.loss_cls: 0.4288  decode.d1.loss_mask: 1.6407  decode.d1.loss_dice: 1.7798  decode.d2.loss_cls: 0.3895  decode.d2.loss_mask: 1.6245  decode.d2.loss_dice: 1.7450  decode.d3.loss_cls: 0.3888  decode.d3.loss_mask: 1.5933  decode.d3.loss_dice: 1.6913  decode.d4.loss_cls: 0.4382  decode.d4.loss_mask: 1.6117  decode.d4.loss_dice: 1.7166  decode.d5.loss_cls: 0.4529  decode.d5.loss_mask: 1.6116  decode.d5.loss_dice: 1.7388  decode.d6.loss_cls: 0.4264  decode.d6.loss_mask: 1.6192  decode.d6.loss_dice: 1.7495  decode.d7.loss_cls: 0.4598  decode.d7.loss_mask: 1.6181  decode.d7.loss_dice: 1.7127  decode.d8.loss_cls: 0.4703  decode.d8.loss_mask: 1.5315  decode.d8.loss_dice: 1.7168
2025/03/29 15:05:22 - mmengine - INFO - Iter(train) [ 5400/20000]  base_lr: 7.5337e-05 lr: 7.5337e-05  eta: 6:42:23  time: 1.6713  data_time: 0.0157  memory: 10085  loss: 37.0094  decode.loss_cls: 0.3621  decode.loss_mask: 1.6895  decode.loss_dice: 1.6291  decode.d0.loss_cls: 0.4561  decode.d0.loss_mask: 1.7039  decode.d0.loss_dice: 1.6784  decode.d1.loss_cls: 0.2961  decode.d1.loss_mask: 1.7377  decode.d1.loss_dice: 1.6817  decode.d2.loss_cls: 0.3816  decode.d2.loss_mask: 1.7090  decode.d2.loss_dice: 1.6318  decode.d3.loss_cls: 0.3487  decode.d3.loss_mask: 1.7085  decode.d3.loss_dice: 1.6370  decode.d4.loss_cls: 0.3357  decode.d4.loss_mask: 1.6887  decode.d4.loss_dice: 1.6365  decode.d5.loss_cls: 0.3338  decode.d5.loss_mask: 1.6776  decode.d5.loss_dice: 1.6078  decode.d6.loss_cls: 0.3199  decode.d6.loss_mask: 1.7068  decode.d6.loss_dice: 1.6349  decode.d7.loss_cls: 0.3163  decode.d7.loss_mask: 1.7409  decode.d7.loss_dice: 1.6425  decode.d8.loss_cls: 0.3297  decode.d8.loss_mask: 1.7339  decode.d8.loss_dice: 1.6532
2025/03/29 15:06:46 - mmengine - INFO - Iter(train) [ 5450/20000]  base_lr: 7.5105e-05 lr: 7.5105e-05  eta: 6:41:02  time: 1.6711  data_time: 0.0161  memory: 10089  loss: 36.9414  decode.loss_cls: 0.3891  decode.loss_mask: 1.5683  decode.loss_dice: 1.7070  decode.d0.loss_cls: 0.5471  decode.d0.loss_mask: 1.5798  decode.d0.loss_dice: 1.7059  decode.d1.loss_cls: 0.4310  decode.d1.loss_mask: 1.5147  decode.d1.loss_dice: 1.6861  decode.d2.loss_cls: 0.4435  decode.d2.loss_mask: 1.5341  decode.d2.loss_dice: 1.6718  decode.d3.loss_cls: 0.4222  decode.d3.loss_mask: 1.5661  decode.d3.loss_dice: 1.7073  decode.d4.loss_cls: 0.3828  decode.d4.loss_mask: 1.5653  decode.d4.loss_dice: 1.6868  decode.d5.loss_cls: 0.3928  decode.d5.loss_mask: 1.6138  decode.d5.loss_dice: 1.6966  decode.d6.loss_cls: 0.4646  decode.d6.loss_mask: 1.5938  decode.d6.loss_dice: 1.7169  decode.d7.loss_cls: 0.3810  decode.d7.loss_mask: 1.6070  decode.d7.loss_dice: 1.7316  decode.d8.loss_cls: 0.3859  decode.d8.loss_mask: 1.5556  decode.d8.loss_dice: 1.6929
2025/03/29 15:08:10 - mmengine - INFO - Iter(train) [ 5500/20000]  base_lr: 7.4873e-05 lr: 7.4873e-05  eta: 6:39:42  time: 1.6717  data_time: 0.0155  memory: 10095  loss: 35.3448  decode.loss_cls: 0.4754  decode.loss_mask: 1.5259  decode.loss_dice: 1.5894  decode.d0.loss_cls: 0.5377  decode.d0.loss_mask: 1.5780  decode.d0.loss_dice: 1.6547  decode.d1.loss_cls: 0.4638  decode.d1.loss_mask: 1.4942  decode.d1.loss_dice: 1.5346  decode.d2.loss_cls: 0.4386  decode.d2.loss_mask: 1.5234  decode.d2.loss_dice: 1.5423  decode.d3.loss_cls: 0.4374  decode.d3.loss_mask: 1.4897  decode.d3.loss_dice: 1.5379  decode.d4.loss_cls: 0.4356  decode.d4.loss_mask: 1.4994  decode.d4.loss_dice: 1.5388  decode.d5.loss_cls: 0.3870  decode.d5.loss_mask: 1.5123  decode.d5.loss_dice: 1.5432  decode.d6.loss_cls: 0.4778  decode.d6.loss_mask: 1.5195  decode.d6.loss_dice: 1.5395  decode.d7.loss_cls: 0.4459  decode.d7.loss_mask: 1.5299  decode.d7.loss_dice: 1.5449  decode.d8.loss_cls: 0.4391  decode.d8.loss_mask: 1.5261  decode.d8.loss_dice: 1.5830
2025/03/29 15:09:33 - mmengine - INFO - Iter(train) [ 5550/20000]  base_lr: 7.4640e-05 lr: 7.4640e-05  eta: 6:38:21  time: 1.6705  data_time: 0.0158  memory: 10143  loss: 36.7422  decode.loss_cls: 0.4452  decode.loss_mask: 1.5414  decode.loss_dice: 1.6390  decode.d0.loss_cls: 0.5511  decode.d0.loss_mask: 1.5423  decode.d0.loss_dice: 1.6975  decode.d1.loss_cls: 0.4617  decode.d1.loss_mask: 1.4975  decode.d1.loss_dice: 1.6579  decode.d2.loss_cls: 0.4611  decode.d2.loss_mask: 1.5233  decode.d2.loss_dice: 1.6587  decode.d3.loss_cls: 0.4651  decode.d3.loss_mask: 1.4990  decode.d3.loss_dice: 1.6613  decode.d4.loss_cls: 0.4721  decode.d4.loss_mask: 1.5269  decode.d4.loss_dice: 1.6666  decode.d5.loss_cls: 0.5462  decode.d5.loss_mask: 1.5445  decode.d5.loss_dice: 1.6819  decode.d6.loss_cls: 0.4804  decode.d6.loss_mask: 1.5463  decode.d6.loss_dice: 1.6771  decode.d7.loss_cls: 0.4470  decode.d7.loss_mask: 1.5251  decode.d7.loss_dice: 1.6659  decode.d8.loss_cls: 0.4098  decode.d8.loss_mask: 1.5750  decode.d8.loss_dice: 1.6749
2025/03/29 15:10:57 - mmengine - INFO - Iter(train) [ 5600/20000]  base_lr: 7.4408e-05 lr: 7.4408e-05  eta: 6:37:01  time: 1.6710  data_time: 0.0156  memory: 10096  loss: 36.0081  decode.loss_cls: 0.4393  decode.loss_mask: 1.4700  decode.loss_dice: 1.6611  decode.d0.loss_cls: 0.5562  decode.d0.loss_mask: 1.5900  decode.d0.loss_dice: 1.6805  decode.d1.loss_cls: 0.4470  decode.d1.loss_mask: 1.4919  decode.d1.loss_dice: 1.6296  decode.d2.loss_cls: 0.4809  decode.d2.loss_mask: 1.4750  decode.d2.loss_dice: 1.6223  decode.d3.loss_cls: 0.4839  decode.d3.loss_mask: 1.5063  decode.d3.loss_dice: 1.6273  decode.d4.loss_cls: 0.4657  decode.d4.loss_mask: 1.4923  decode.d4.loss_dice: 1.6293  decode.d5.loss_cls: 0.4860  decode.d5.loss_mask: 1.4833  decode.d5.loss_dice: 1.5733  decode.d6.loss_cls: 0.4924  decode.d6.loss_mask: 1.4601  decode.d6.loss_dice: 1.5954  decode.d7.loss_cls: 0.4343  decode.d7.loss_mask: 1.5031  decode.d7.loss_dice: 1.6428  decode.d8.loss_cls: 0.4753  decode.d8.loss_mask: 1.4825  decode.d8.loss_dice: 1.6309
2025/03/29 15:12:20 - mmengine - INFO - Iter(train) [ 5650/20000]  base_lr: 7.4175e-05 lr: 7.4175e-05  eta: 6:35:40  time: 1.6693  data_time: 0.0154  memory: 10087  loss: 33.1205  decode.loss_cls: 0.4409  decode.loss_mask: 1.3774  decode.loss_dice: 1.4454  decode.d0.loss_cls: 0.4636  decode.d0.loss_mask: 1.4166  decode.d0.loss_dice: 1.4986  decode.d1.loss_cls: 0.3801  decode.d1.loss_mask: 1.4823  decode.d1.loss_dice: 1.4944  decode.d2.loss_cls: 0.3668  decode.d2.loss_mask: 1.4600  decode.d2.loss_dice: 1.4939  decode.d3.loss_cls: 0.3908  decode.d3.loss_mask: 1.4347  decode.d3.loss_dice: 1.4532  decode.d4.loss_cls: 0.4186  decode.d4.loss_mask: 1.4183  decode.d4.loss_dice: 1.4363  decode.d5.loss_cls: 0.4184  decode.d5.loss_mask: 1.4466  decode.d5.loss_dice: 1.4559  decode.d6.loss_cls: 0.3493  decode.d6.loss_mask: 1.4664  decode.d6.loss_dice: 1.5181  decode.d7.loss_cls: 0.3797  decode.d7.loss_mask: 1.4345  decode.d7.loss_dice: 1.4930  decode.d8.loss_cls: 0.4081  decode.d8.loss_mask: 1.4263  decode.d8.loss_dice: 1.4521
2025/03/29 15:13:43 - mmengine - INFO - Iter(train) [ 5700/20000]  base_lr: 7.3943e-05 lr: 7.3943e-05  eta: 6:34:19  time: 1.6684  data_time: 0.0154  memory: 10085  loss: 32.6895  decode.loss_cls: 0.4453  decode.loss_mask: 1.3745  decode.loss_dice: 1.4859  decode.d0.loss_cls: 0.5056  decode.d0.loss_mask: 1.3725  decode.d0.loss_dice: 1.5708  decode.d1.loss_cls: 0.4221  decode.d1.loss_mask: 1.3424  decode.d1.loss_dice: 1.4765  decode.d2.loss_cls: 0.4363  decode.d2.loss_mask: 1.3312  decode.d2.loss_dice: 1.4453  decode.d3.loss_cls: 0.4731  decode.d3.loss_mask: 1.3290  decode.d3.loss_dice: 1.4288  decode.d4.loss_cls: 0.4501  decode.d4.loss_mask: 1.3200  decode.d4.loss_dice: 1.4839  decode.d5.loss_cls: 0.4153  decode.d5.loss_mask: 1.3467  decode.d5.loss_dice: 1.4413  decode.d6.loss_cls: 0.4222  decode.d6.loss_mask: 1.3227  decode.d6.loss_dice: 1.4735  decode.d7.loss_cls: 0.4543  decode.d7.loss_mask: 1.3339  decode.d7.loss_dice: 1.4969  decode.d8.loss_cls: 0.4270  decode.d8.loss_mask: 1.3594  decode.d8.loss_dice: 1.5030
2025/03/29 15:15:07 - mmengine - INFO - Iter(train) [ 5750/20000]  base_lr: 7.3710e-05 lr: 7.3710e-05  eta: 6:32:58  time: 1.6690  data_time: 0.0154  memory: 10147  loss: 34.3859  decode.loss_cls: 0.5424  decode.loss_mask: 1.2742  decode.loss_dice: 1.6601  decode.d0.loss_cls: 0.5514  decode.d0.loss_mask: 1.2813  decode.d0.loss_dice: 1.6871  decode.d1.loss_cls: 0.4902  decode.d1.loss_mask: 1.2653  decode.d1.loss_dice: 1.6438  decode.d2.loss_cls: 0.5034  decode.d2.loss_mask: 1.2796  decode.d2.loss_dice: 1.6252  decode.d3.loss_cls: 0.4715  decode.d3.loss_mask: 1.2826  decode.d3.loss_dice: 1.6259  decode.d4.loss_cls: 0.4269  decode.d4.loss_mask: 1.3326  decode.d4.loss_dice: 1.6703  decode.d5.loss_cls: 0.3627  decode.d5.loss_mask: 1.3036  decode.d5.loss_dice: 1.6977  decode.d6.loss_cls: 0.4780  decode.d6.loss_mask: 1.2801  decode.d6.loss_dice: 1.6846  decode.d7.loss_cls: 0.4531  decode.d7.loss_mask: 1.3208  decode.d7.loss_dice: 1.7298  decode.d8.loss_cls: 0.4872  decode.d8.loss_mask: 1.3149  decode.d8.loss_dice: 1.6596
2025/03/29 15:16:30 - mmengine - INFO - Iter(train) [ 5800/20000]  base_lr: 7.3477e-05 lr: 7.3477e-05  eta: 6:31:37  time: 1.6676  data_time: 0.0154  memory: 10134  loss: 37.2468  decode.loss_cls: 0.5892  decode.loss_mask: 1.4773  decode.loss_dice: 1.6917  decode.d0.loss_cls: 0.5258  decode.d0.loss_mask: 1.4711  decode.d0.loss_dice: 1.7936  decode.d1.loss_cls: 0.5771  decode.d1.loss_mask: 1.4757  decode.d1.loss_dice: 1.6668  decode.d2.loss_cls: 0.5249  decode.d2.loss_mask: 1.4885  decode.d2.loss_dice: 1.6757  decode.d3.loss_cls: 0.4826  decode.d3.loss_mask: 1.5169  decode.d3.loss_dice: 1.6680  decode.d4.loss_cls: 0.5898  decode.d4.loss_mask: 1.4459  decode.d4.loss_dice: 1.6125  decode.d5.loss_cls: 0.6249  decode.d5.loss_mask: 1.4658  decode.d5.loss_dice: 1.6261  decode.d6.loss_cls: 0.5946  decode.d6.loss_mask: 1.4881  decode.d6.loss_dice: 1.6788  decode.d7.loss_cls: 0.6023  decode.d7.loss_mask: 1.4696  decode.d7.loss_dice: 1.6545  decode.d8.loss_cls: 0.5590  decode.d8.loss_mask: 1.5369  decode.d8.loss_dice: 1.6729
2025/03/29 15:17:54 - mmengine - INFO - Iter(train) [ 5850/20000]  base_lr: 7.3244e-05 lr: 7.3244e-05  eta: 6:30:16  time: 1.6657  data_time: 0.0155  memory: 10151  loss: 32.0444  decode.loss_cls: 0.3603  decode.loss_mask: 1.3380  decode.loss_dice: 1.4923  decode.d0.loss_cls: 0.4651  decode.d0.loss_mask: 1.3367  decode.d0.loss_dice: 1.5151  decode.d1.loss_cls: 0.3169  decode.d1.loss_mask: 1.3879  decode.d1.loss_dice: 1.5222  decode.d2.loss_cls: 0.2938  decode.d2.loss_mask: 1.3604  decode.d2.loss_dice: 1.5207  decode.d3.loss_cls: 0.2928  decode.d3.loss_mask: 1.4167  decode.d3.loss_dice: 1.5077  decode.d4.loss_cls: 0.3035  decode.d4.loss_mask: 1.3825  decode.d4.loss_dice: 1.5283  decode.d5.loss_cls: 0.3212  decode.d5.loss_mask: 1.3448  decode.d5.loss_dice: 1.4745  decode.d6.loss_cls: 0.2983  decode.d6.loss_mask: 1.4001  decode.d6.loss_dice: 1.4764  decode.d7.loss_cls: 0.2978  decode.d7.loss_mask: 1.3771  decode.d7.loss_dice: 1.5020  decode.d8.loss_cls: 0.3342  decode.d8.loss_mask: 1.3730  decode.d8.loss_dice: 1.5042
2025/03/29 15:19:17 - mmengine - INFO - Iter(train) [ 5900/20000]  base_lr: 7.3011e-05 lr: 7.3011e-05  eta: 6:28:54  time: 1.6662  data_time: 0.0155  memory: 10095  loss: 38.4403  decode.loss_cls: 0.5199  decode.loss_mask: 1.5238  decode.loss_dice: 1.7001  decode.d0.loss_cls: 0.6194  decode.d0.loss_mask: 1.5926  decode.d0.loss_dice: 1.8529  decode.d1.loss_cls: 0.4804  decode.d1.loss_mask: 1.5382  decode.d1.loss_dice: 1.7112  decode.d2.loss_cls: 0.4724  decode.d2.loss_mask: 1.5869  decode.d2.loss_dice: 1.7141  decode.d3.loss_cls: 0.4469  decode.d3.loss_mask: 1.5761  decode.d3.loss_dice: 1.7432  decode.d4.loss_cls: 0.4572  decode.d4.loss_mask: 1.6207  decode.d4.loss_dice: 1.7556  decode.d5.loss_cls: 0.4674  decode.d5.loss_mask: 1.6099  decode.d5.loss_dice: 1.7850  decode.d6.loss_cls: 0.4510  decode.d6.loss_mask: 1.6344  decode.d6.loss_dice: 1.8202  decode.d7.loss_cls: 0.4843  decode.d7.loss_mask: 1.6116  decode.d7.loss_dice: 1.7841  decode.d8.loss_cls: 0.4783  decode.d8.loss_mask: 1.6035  decode.d8.loss_dice: 1.7988
2025/03/29 15:20:40 - mmengine - INFO - Iter(train) [ 5950/20000]  base_lr: 7.2778e-05 lr: 7.2778e-05  eta: 6:27:33  time: 1.6660  data_time: 0.0156  memory: 10147  loss: 40.6754  decode.loss_cls: 0.5586  decode.loss_mask: 1.7553  decode.loss_dice: 1.8264  decode.d0.loss_cls: 0.6023  decode.d0.loss_mask: 1.7839  decode.d0.loss_dice: 1.8675  decode.d1.loss_cls: 0.5596  decode.d1.loss_mask: 1.7246  decode.d1.loss_dice: 1.8010  decode.d2.loss_cls: 0.5172  decode.d2.loss_mask: 1.7551  decode.d2.loss_dice: 1.7806  decode.d3.loss_cls: 0.5321  decode.d3.loss_mask: 1.7297  decode.d3.loss_dice: 1.7601  decode.d4.loss_cls: 0.4964  decode.d4.loss_mask: 1.7322  decode.d4.loss_dice: 1.7791  decode.d5.loss_cls: 0.5600  decode.d5.loss_mask: 1.6840  decode.d5.loss_dice: 1.7577  decode.d6.loss_cls: 0.5401  decode.d6.loss_mask: 1.7131  decode.d6.loss_dice: 1.7757  decode.d7.loss_cls: 0.5032  decode.d7.loss_mask: 1.7448  decode.d7.loss_dice: 1.7671  decode.d8.loss_cls: 0.4976  decode.d8.loss_mask: 1.7720  decode.d8.loss_dice: 1.7985
2025/03/29 15:22:04 - mmengine - INFO - Exp name: r2u_20250329_122140
2025/03/29 15:22:04 - mmengine - INFO - Iter(train) [ 6000/20000]  base_lr: 7.2545e-05 lr: 7.2545e-05  eta: 6:26:12  time: 1.6699  data_time: 0.0156  memory: 10088  loss: 35.8481  decode.loss_cls: 0.3848  decode.loss_mask: 1.5457  decode.loss_dice: 1.6145  decode.d0.loss_cls: 0.5635  decode.d0.loss_mask: 1.5819  decode.d0.loss_dice: 1.6386  decode.d1.loss_cls: 0.4155  decode.d1.loss_mask: 1.5405  decode.d1.loss_dice: 1.6174  decode.d2.loss_cls: 0.4447  decode.d2.loss_mask: 1.5567  decode.d2.loss_dice: 1.5572  decode.d3.loss_cls: 0.4657  decode.d3.loss_mask: 1.5414  decode.d3.loss_dice: 1.5683  decode.d4.loss_cls: 0.4635  decode.d4.loss_mask: 1.5464  decode.d4.loss_dice: 1.5704  decode.d5.loss_cls: 0.4296  decode.d5.loss_mask: 1.5761  decode.d5.loss_dice: 1.5816  decode.d6.loss_cls: 0.4184  decode.d6.loss_mask: 1.5557  decode.d6.loss_dice: 1.5868  decode.d7.loss_cls: 0.4222  decode.d7.loss_mask: 1.5586  decode.d7.loss_dice: 1.5868  decode.d8.loss_cls: 0.3528  decode.d8.loss_mask: 1.5659  decode.d8.loss_dice: 1.5969
2025/03/29 15:22:04 - mmengine - INFO - Saving checkpoint at 6000 iterations
2025/03/29 15:22:13 - mmengine - INFO - Iter(val) [  50/2708]    eta: 0:06:59  time: 0.1579  data_time: 0.0014  memory: 1856  
2025/03/29 15:22:22 - mmengine - INFO - Iter(val) [ 100/2708]    eta: 0:07:01  time: 0.1648  data_time: 0.0013  memory: 1856  
2025/03/29 15:22:30 - mmengine - INFO - Iter(val) [ 150/2708]    eta: 0:06:50  time: 0.1591  data_time: 0.0013  memory: 1856  
2025/03/29 15:22:38 - mmengine - INFO - Iter(val) [ 200/2708]    eta: 0:06:44  time: 0.1670  data_time: 0.0012  memory: 1856  
2025/03/29 15:22:46 - mmengine - INFO - Iter(val) [ 250/2708]    eta: 0:06:35  time: 0.1608  data_time: 0.0013  memory: 1856  
2025/03/29 15:22:54 - mmengine - INFO - Iter(val) [ 300/2708]    eta: 0:06:27  time: 0.1604  data_time: 0.0013  memory: 1856  
2025/03/29 15:23:02 - mmengine - INFO - Iter(val) [ 350/2708]    eta: 0:06:18  time: 0.1652  data_time: 0.0013  memory: 1856  
2025/03/29 15:23:10 - mmengine - INFO - Iter(val) [ 400/2708]    eta: 0:06:09  time: 0.1507  data_time: 0.0012  memory: 1856  
2025/03/29 15:23:17 - mmengine - INFO - Iter(val) [ 450/2708]    eta: 0:06:01  time: 0.1571  data_time: 0.0014  memory: 1856  
2025/03/29 15:23:26 - mmengine - INFO - Iter(val) [ 500/2708]    eta: 0:05:53  time: 0.1671  data_time: 0.0013  memory: 1856  
2025/03/29 15:23:33 - mmengine - INFO - Iter(val) [ 550/2708]    eta: 0:05:44  time: 0.1615  data_time: 0.0013  memory: 1856  
2025/03/29 15:23:42 - mmengine - INFO - Iter(val) [ 600/2708]    eta: 0:05:37  time: 0.1653  data_time: 0.0014  memory: 1856  
2025/03/29 15:23:50 - mmengine - INFO - Iter(val) [ 650/2708]    eta: 0:05:29  time: 0.1569  data_time: 0.0013  memory: 1856  
2025/03/29 15:23:58 - mmengine - INFO - Iter(val) [ 700/2708]    eta: 0:05:21  time: 0.1669  data_time: 0.0013  memory: 1856  
2025/03/29 15:24:06 - mmengine - INFO - Iter(val) [ 750/2708]    eta: 0:05:13  time: 0.1580  data_time: 0.0013  memory: 1856  
2025/03/29 15:24:14 - mmengine - INFO - Iter(val) [ 800/2708]    eta: 0:05:05  time: 0.1665  data_time: 0.0013  memory: 1856  
2025/03/29 15:24:22 - mmengine - INFO - Iter(val) [ 850/2708]    eta: 0:04:58  time: 0.1608  data_time: 0.0014  memory: 1856  
2025/03/29 15:24:30 - mmengine - INFO - Iter(val) [ 900/2708]    eta: 0:04:50  time: 0.1669  data_time: 0.0013  memory: 1856  
2025/03/29 15:24:38 - mmengine - INFO - Iter(val) [ 950/2708]    eta: 0:04:42  time: 0.1569  data_time: 0.0014  memory: 1856  
2025/03/29 15:24:46 - mmengine - INFO - Iter(val) [1000/2708]    eta: 0:04:34  time: 0.1641  data_time: 0.0014  memory: 1856  
2025/03/29 15:24:55 - mmengine - INFO - Iter(val) [1050/2708]    eta: 0:04:27  time: 0.1714  data_time: 0.0014  memory: 1856  
2025/03/29 15:25:03 - mmengine - INFO - Iter(val) [1100/2708]    eta: 0:04:19  time: 0.1670  data_time: 0.0013  memory: 1856  
2025/03/29 15:25:11 - mmengine - INFO - Iter(val) [1150/2708]    eta: 0:04:11  time: 0.1568  data_time: 0.0012  memory: 1856  
2025/03/29 15:25:19 - mmengine - INFO - Iter(val) [1200/2708]    eta: 0:04:03  time: 0.1586  data_time: 0.0014  memory: 1856  
2025/03/29 15:25:28 - mmengine - INFO - Iter(val) [1250/2708]    eta: 0:03:55  time: 0.1597  data_time: 0.0017  memory: 1856  
2025/03/29 15:25:36 - mmengine - INFO - Iter(val) [1300/2708]    eta: 0:03:47  time: 0.1577  data_time: 0.0013  memory: 1856  
2025/03/29 15:25:44 - mmengine - INFO - Iter(val) [1350/2708]    eta: 0:03:39  time: 0.1655  data_time: 0.0013  memory: 1856  
2025/03/29 15:25:52 - mmengine - INFO - Iter(val) [1400/2708]    eta: 0:03:31  time: 0.1576  data_time: 0.0013  memory: 1856  
2025/03/29 15:26:00 - mmengine - INFO - Iter(val) [1450/2708]    eta: 0:03:23  time: 0.1718  data_time: 0.0013  memory: 1856  
2025/03/29 15:26:09 - mmengine - INFO - Iter(val) [1500/2708]    eta: 0:03:15  time: 0.1537  data_time: 0.0015  memory: 1856  
2025/03/29 15:26:17 - mmengine - INFO - Iter(val) [1550/2708]    eta: 0:03:08  time: 0.1716  data_time: 0.0013  memory: 1856  
2025/03/29 15:26:26 - mmengine - INFO - Iter(val) [1600/2708]    eta: 0:03:00  time: 0.1670  data_time: 0.0013  memory: 1856  
2025/03/29 15:26:34 - mmengine - INFO - Iter(val) [1650/2708]    eta: 0:02:52  time: 0.1718  data_time: 0.0013  memory: 1856  
2025/03/29 15:26:43 - mmengine - INFO - Iter(val) [1700/2708]    eta: 0:02:44  time: 0.1717  data_time: 0.0013  memory: 1856  
2025/03/29 15:26:52 - mmengine - INFO - Iter(val) [1750/2708]    eta: 0:02:36  time: 0.1715  data_time: 0.0013  memory: 1856  
2025/03/29 15:27:00 - mmengine - INFO - Iter(val) [1800/2708]    eta: 0:02:28  time: 0.1717  data_time: 0.0013  memory: 1856  
2025/03/29 15:27:09 - mmengine - INFO - Iter(val) [1850/2708]    eta: 0:02:20  time: 0.1710  data_time: 0.0013  memory: 1856  
2025/03/29 15:27:17 - mmengine - INFO - Iter(val) [1900/2708]    eta: 0:02:12  time: 0.1695  data_time: 0.0015  memory: 1856  
2025/03/29 15:27:26 - mmengine - INFO - Iter(val) [1950/2708]    eta: 0:02:04  time: 0.1702  data_time: 0.0013  memory: 1856  
2025/03/29 15:27:34 - mmengine - INFO - Iter(val) [2000/2708]    eta: 0:01:56  time: 0.1702  data_time: 0.0013  memory: 1856  
2025/03/29 15:27:43 - mmengine - INFO - Iter(val) [2050/2708]    eta: 0:01:48  time: 0.1716  data_time: 0.0013  memory: 1856  
2025/03/29 15:27:52 - mmengine - INFO - Iter(val) [2100/2708]    eta: 0:01:40  time: 0.1712  data_time: 0.0013  memory: 1856  
2025/03/29 15:28:00 - mmengine - INFO - Iter(val) [2150/2708]    eta: 0:01:31  time: 0.1712  data_time: 0.0013  memory: 1856  
2025/03/29 15:28:08 - mmengine - INFO - Iter(val) [2200/2708]    eta: 0:01:23  time: 0.1629  data_time: 0.0013  memory: 1856  
2025/03/29 15:28:16 - mmengine - INFO - Iter(val) [2250/2708]    eta: 0:01:15  time: 0.1669  data_time: 0.0013  memory: 1856  
2025/03/29 15:28:24 - mmengine - INFO - Iter(val) [2300/2708]    eta: 0:01:07  time: 0.1563  data_time: 0.0012  memory: 1856  
2025/03/29 15:28:32 - mmengine - INFO - Iter(val) [2350/2708]    eta: 0:00:58  time: 0.1600  data_time: 0.0013  memory: 1856  
2025/03/29 15:28:41 - mmengine - INFO - Iter(val) [2400/2708]    eta: 0:00:50  time: 0.1600  data_time: 0.0014  memory: 1856  
2025/03/29 15:28:49 - mmengine - INFO - Iter(val) [2450/2708]    eta: 0:00:42  time: 0.1575  data_time: 0.0013  memory: 1856  
2025/03/29 15:28:57 - mmengine - INFO - Iter(val) [2500/2708]    eta: 0:00:34  time: 0.1653  data_time: 0.0013  memory: 1856  
2025/03/29 15:29:05 - mmengine - INFO - Iter(val) [2550/2708]    eta: 0:00:25  time: 0.1556  data_time: 0.0013  memory: 1856  
2025/03/29 15:29:13 - mmengine - INFO - Iter(val) [2600/2708]    eta: 0:00:17  time: 0.1643  data_time: 0.0014  memory: 1856  
2025/03/29 15:29:21 - mmengine - INFO - Iter(val) [2650/2708]    eta: 0:00:09  time: 0.1547  data_time: 0.0013  memory: 1856  
2025/03/29 15:29:29 - mmengine - INFO - Iter(val) [2700/2708]    eta: 0:00:01  time: 0.1657  data_time: 0.0012  memory: 1856  
2025/03/29 15:29:30 - mmengine - INFO - per class results:
2025/03/29 15:29:30 - mmengine - INFO - 
+--------------+-------+-------+
|    Class     |  IoU  |  Acc  |
+--------------+-------+-------+
|  background  | 41.29 |  63.2 |
|   building   | 65.26 | 82.51 |
|     road     | 57.79 | 71.69 |
|    water     | 76.53 | 84.81 |
|    barren    | 43.79 | 85.64 |
|    forest    | 46.06 | 52.03 |
| agricultural | 60.54 | 67.92 |
+--------------+-------+-------+
2025/03/29 15:29:30 - mmengine - INFO - Iter(val) [2708/2708]    aAcc: 70.0400  mIoU: 55.9000  mAcc: 72.5400  data_time: 0.0013  time: 0.1641
2025/03/29 15:29:30 - mmengine - INFO - The previous best checkpoint /home/face/kaichengyang/xiaoxinghu/Earth_Adapter/work_dirs/r2u/DG_spatial_64_cutoff_0.3_fft_pre6/35b71_seed0/best_mIoU_iter_4000.pth is removed
2025/03/29 15:29:31 - mmengine - INFO - The best checkpoint with 55.9000 mIoU at 6000 iter is saved to best_mIoU_iter_6000.pth.
2025/03/29 15:30:56 - mmengine - INFO - Iter(train) [ 6050/20000]  base_lr: 7.2312e-05 lr: 7.2312e-05  eta: 6:24:56  time: 1.6628  data_time: 0.0156  memory: 10149  loss: 39.0738  decode.loss_cls: 0.4637  decode.loss_mask: 1.7187  decode.loss_dice: 1.7202  decode.d0.loss_cls: 0.5799  decode.d0.loss_mask: 1.6756  decode.d0.loss_dice: 1.7769  decode.d1.loss_cls: 0.4352  decode.d1.loss_mask: 1.6684  decode.d1.loss_dice: 1.7753  decode.d2.loss_cls: 0.4294  decode.d2.loss_mask: 1.7013  decode.d2.loss_dice: 1.7204  decode.d3.loss_cls: 0.4492  decode.d3.loss_mask: 1.7227  decode.d3.loss_dice: 1.7178  decode.d4.loss_cls: 0.4642  decode.d4.loss_mask: 1.7063  decode.d4.loss_dice: 1.7521  decode.d5.loss_cls: 0.4438  decode.d5.loss_mask: 1.6953  decode.d5.loss_dice: 1.7262  decode.d6.loss_cls: 0.4425  decode.d6.loss_mask: 1.6819  decode.d6.loss_dice: 1.7442  decode.d7.loss_cls: 0.4630  decode.d7.loss_mask: 1.6925  decode.d7.loss_dice: 1.7815  decode.d8.loss_cls: 0.4711  decode.d8.loss_mask: 1.6998  decode.d8.loss_dice: 1.7549
2025/03/29 15:32:19 - mmengine - INFO - Iter(train) [ 6100/20000]  base_lr: 7.2079e-05 lr: 7.2079e-05  eta: 6:23:34  time: 1.6479  data_time: 0.0167  memory: 10089  loss: 36.9202  decode.loss_cls: 0.3802  decode.loss_mask: 1.5861  decode.loss_dice: 1.7243  decode.d0.loss_cls: 0.5516  decode.d0.loss_mask: 1.5745  decode.d0.loss_dice: 1.7877  decode.d1.loss_cls: 0.4025  decode.d1.loss_mask: 1.5987  decode.d1.loss_dice: 1.7029  decode.d2.loss_cls: 0.4826  decode.d2.loss_mask: 1.5553  decode.d2.loss_dice: 1.6301  decode.d3.loss_cls: 0.5064  decode.d3.loss_mask: 1.5882  decode.d3.loss_dice: 1.6149  decode.d4.loss_cls: 0.4505  decode.d4.loss_mask: 1.5612  decode.d4.loss_dice: 1.5925  decode.d5.loss_cls: 0.4650  decode.d5.loss_mask: 1.5553  decode.d5.loss_dice: 1.6285  decode.d6.loss_cls: 0.4266  decode.d6.loss_mask: 1.5414  decode.d6.loss_dice: 1.7002  decode.d7.loss_cls: 0.3903  decode.d7.loss_mask: 1.5442  decode.d7.loss_dice: 1.6837  decode.d8.loss_cls: 0.4107  decode.d8.loss_mask: 1.5600  decode.d8.loss_dice: 1.7239
2025/03/29 15:33:42 - mmengine - INFO - Iter(train) [ 6150/20000]  base_lr: 7.1845e-05 lr: 7.1845e-05  eta: 6:22:12  time: 1.6571  data_time: 0.0156  memory: 10152  loss: 35.2536  decode.loss_cls: 0.3868  decode.loss_mask: 1.6582  decode.loss_dice: 1.5029  decode.d0.loss_cls: 0.4844  decode.d0.loss_mask: 1.6535  decode.d0.loss_dice: 1.5722  decode.d1.loss_cls: 0.4117  decode.d1.loss_mask: 1.6161  decode.d1.loss_dice: 1.5146  decode.d2.loss_cls: 0.3248  decode.d2.loss_mask: 1.6348  decode.d2.loss_dice: 1.5437  decode.d3.loss_cls: 0.3395  decode.d3.loss_mask: 1.6041  decode.d3.loss_dice: 1.4822  decode.d4.loss_cls: 0.3487  decode.d4.loss_mask: 1.6084  decode.d4.loss_dice: 1.5148  decode.d5.loss_cls: 0.3440  decode.d5.loss_mask: 1.6478  decode.d5.loss_dice: 1.5175  decode.d6.loss_cls: 0.3809  decode.d6.loss_mask: 1.6092  decode.d6.loss_dice: 1.4920  decode.d7.loss_cls: 0.3441  decode.d7.loss_mask: 1.6747  decode.d7.loss_dice: 1.5001  decode.d8.loss_cls: 0.3726  decode.d8.loss_mask: 1.6799  decode.d8.loss_dice: 1.4891
2025/03/29 15:35:06 - mmengine - INFO - Iter(train) [ 6200/20000]  base_lr: 7.1612e-05 lr: 7.1612e-05  eta: 6:20:52  time: 1.8138  data_time: 0.0156  memory: 10093  loss: 33.1109  decode.loss_cls: 0.3529  decode.loss_mask: 1.3437  decode.loss_dice: 1.5687  decode.d0.loss_cls: 0.5021  decode.d0.loss_mask: 1.3008  decode.d0.loss_dice: 1.6876  decode.d1.loss_cls: 0.4193  decode.d1.loss_mask: 1.3269  decode.d1.loss_dice: 1.5681  decode.d2.loss_cls: 0.4036  decode.d2.loss_mask: 1.3431  decode.d2.loss_dice: 1.5518  decode.d3.loss_cls: 0.3745  decode.d3.loss_mask: 1.3295  decode.d3.loss_dice: 1.5649  decode.d4.loss_cls: 0.4098  decode.d4.loss_mask: 1.2991  decode.d4.loss_dice: 1.5597  decode.d5.loss_cls: 0.4047  decode.d5.loss_mask: 1.3150  decode.d5.loss_dice: 1.5596  decode.d6.loss_cls: 0.3868  decode.d6.loss_mask: 1.3636  decode.d6.loss_dice: 1.5799  decode.d7.loss_cls: 0.3775  decode.d7.loss_mask: 1.3545  decode.d7.loss_dice: 1.5884  decode.d8.loss_cls: 0.3572  decode.d8.loss_mask: 1.3398  decode.d8.loss_dice: 1.5775
2025/03/29 15:36:37 - mmengine - INFO - Iter(train) [ 6250/20000]  base_lr: 7.1378e-05 lr: 7.1378e-05  eta: 6:19:48  time: 1.8174  data_time: 0.0163  memory: 10097  loss: 34.6451  decode.loss_cls: 0.3950  decode.loss_mask: 1.5012  decode.loss_dice: 1.4808  decode.d0.loss_cls: 0.4744  decode.d0.loss_mask: 1.5896  decode.d0.loss_dice: 1.5590  decode.d1.loss_cls: 0.3479  decode.d1.loss_mask: 1.5386  decode.d1.loss_dice: 1.5211  decode.d2.loss_cls: 0.3583  decode.d2.loss_mask: 1.5317  decode.d2.loss_dice: 1.5230  decode.d3.loss_cls: 0.3823  decode.d3.loss_mask: 1.5395  decode.d3.loss_dice: 1.5164  decode.d4.loss_cls: 0.4169  decode.d4.loss_mask: 1.5072  decode.d4.loss_dice: 1.5034  decode.d5.loss_cls: 0.3700  decode.d5.loss_mask: 1.5606  decode.d5.loss_dice: 1.5372  decode.d6.loss_cls: 0.3701  decode.d6.loss_mask: 1.6154  decode.d6.loss_dice: 1.5539  decode.d7.loss_cls: 0.3769  decode.d7.loss_mask: 1.5896  decode.d7.loss_dice: 1.5507  decode.d8.loss_cls: 0.3704  decode.d8.loss_mask: 1.5289  decode.d8.loss_dice: 1.5349
2025/03/29 15:38:04 - mmengine - INFO - Iter(train) [ 6300/20000]  base_lr: 7.1144e-05 lr: 7.1144e-05  eta: 6:18:32  time: 1.8735  data_time: 0.0721  memory: 10151  loss: 36.8576  decode.loss_cls: 0.6114  decode.loss_mask: 1.4345  decode.loss_dice: 1.6392  decode.d0.loss_cls: 0.6358  decode.d0.loss_mask: 1.4500  decode.d0.loss_dice: 1.7618  decode.d1.loss_cls: 0.6308  decode.d1.loss_mask: 1.4602  decode.d1.loss_dice: 1.6387  decode.d2.loss_cls: 0.5907  decode.d2.loss_mask: 1.4337  decode.d2.loss_dice: 1.6369  decode.d3.loss_cls: 0.5589  decode.d3.loss_mask: 1.4165  decode.d3.loss_dice: 1.6653  decode.d4.loss_cls: 0.5753  decode.d4.loss_mask: 1.4341  decode.d4.loss_dice: 1.6239  decode.d5.loss_cls: 0.5359  decode.d5.loss_mask: 1.4689  decode.d5.loss_dice: 1.6497  decode.d6.loss_cls: 0.5951  decode.d6.loss_mask: 1.4384  decode.d6.loss_dice: 1.6450  decode.d7.loss_cls: 0.6205  decode.d7.loss_mask: 1.4175  decode.d7.loss_dice: 1.6344  decode.d8.loss_cls: 0.5890  decode.d8.loss_mask: 1.4295  decode.d8.loss_dice: 1.6361
2025/03/29 15:39:34 - mmengine - INFO - Iter(train) [ 6350/20000]  base_lr: 7.0911e-05 lr: 7.0911e-05  eta: 6:17:26  time: 1.8185  data_time: 0.0157  memory: 10142  loss: 35.6722  decode.loss_cls: 0.4514  decode.loss_mask: 1.5055  decode.loss_dice: 1.6516  decode.d0.loss_cls: 0.5884  decode.d0.loss_mask: 1.5316  decode.d0.loss_dice: 1.6834  decode.d1.loss_cls: 0.4836  decode.d1.loss_mask: 1.5098  decode.d1.loss_dice: 1.5758  decode.d2.loss_cls: 0.4552  decode.d2.loss_mask: 1.4291  decode.d2.loss_dice: 1.5550  decode.d3.loss_cls: 0.4714  decode.d3.loss_mask: 1.4782  decode.d3.loss_dice: 1.5254  decode.d4.loss_cls: 0.4724  decode.d4.loss_mask: 1.5425  decode.d4.loss_dice: 1.5624  decode.d5.loss_cls: 0.4706  decode.d5.loss_mask: 1.5396  decode.d5.loss_dice: 1.5408  decode.d6.loss_cls: 0.4529  decode.d6.loss_mask: 1.5140  decode.d6.loss_dice: 1.5860  decode.d7.loss_cls: 0.4459  decode.d7.loss_mask: 1.4737  decode.d7.loss_dice: 1.6183  decode.d8.loss_cls: 0.4923  decode.d8.loss_mask: 1.4787  decode.d8.loss_dice: 1.5869
2025/03/29 15:41:05 - mmengine - INFO - Iter(train) [ 6400/20000]  base_lr: 7.0677e-05 lr: 7.0677e-05  eta: 6:16:19  time: 1.8141  data_time: 0.0160  memory: 10094  loss: 35.3344  decode.loss_cls: 0.3698  decode.loss_mask: 1.5435  decode.loss_dice: 1.6032  decode.d0.loss_cls: 0.5705  decode.d0.loss_mask: 1.5130  decode.d0.loss_dice: 1.6240  decode.d1.loss_cls: 0.3923  decode.d1.loss_mask: 1.5332  decode.d1.loss_dice: 1.6083  decode.d2.loss_cls: 0.4164  decode.d2.loss_mask: 1.4880  decode.d2.loss_dice: 1.5596  decode.d3.loss_cls: 0.4123  decode.d3.loss_mask: 1.4813  decode.d3.loss_dice: 1.5508  decode.d4.loss_cls: 0.3972  decode.d4.loss_mask: 1.5153  decode.d4.loss_dice: 1.5684  decode.d5.loss_cls: 0.3998  decode.d5.loss_mask: 1.5441  decode.d5.loss_dice: 1.5775  decode.d6.loss_cls: 0.3902  decode.d6.loss_mask: 1.5617  decode.d6.loss_dice: 1.6274  decode.d7.loss_cls: 0.3484  decode.d7.loss_mask: 1.5585  decode.d7.loss_dice: 1.6045  decode.d8.loss_cls: 0.3694  decode.d8.loss_mask: 1.5831  decode.d8.loss_dice: 1.6227
2025/03/29 15:42:35 - mmengine - INFO - Iter(train) [ 6450/20000]  base_lr: 7.0443e-05 lr: 7.0443e-05  eta: 6:15:11  time: 1.8069  data_time: 0.0156  memory: 10143  loss: 37.3883  decode.loss_cls: 0.4802  decode.loss_mask: 1.5116  decode.loss_dice: 1.6980  decode.d0.loss_cls: 0.6113  decode.d0.loss_mask: 1.5356  decode.d0.loss_dice: 1.6695  decode.d1.loss_cls: 0.5323  decode.d1.loss_mask: 1.5356  decode.d1.loss_dice: 1.6230  decode.d2.loss_cls: 0.5208  decode.d2.loss_mask: 1.5479  decode.d2.loss_dice: 1.6267  decode.d3.loss_cls: 0.4755  decode.d3.loss_mask: 1.5493  decode.d3.loss_dice: 1.6677  decode.d4.loss_cls: 0.5163  decode.d4.loss_mask: 1.5100  decode.d4.loss_dice: 1.6954  decode.d5.loss_cls: 0.5541  decode.d5.loss_mask: 1.5174  decode.d5.loss_dice: 1.6657  decode.d6.loss_cls: 0.5422  decode.d6.loss_mask: 1.5202  decode.d6.loss_dice: 1.6973  decode.d7.loss_cls: 0.4995  decode.d7.loss_mask: 1.6058  decode.d7.loss_dice: 1.7058  decode.d8.loss_cls: 0.5114  decode.d8.loss_mask: 1.5450  decode.d8.loss_dice: 1.7172
2025/03/29 15:44:06 - mmengine - INFO - Iter(train) [ 6500/20000]  base_lr: 7.0209e-05 lr: 7.0209e-05  eta: 6:14:04  time: 1.8014  data_time: 0.0158  memory: 10094  loss: 36.1158  decode.loss_cls: 0.4414  decode.loss_mask: 1.5689  decode.loss_dice: 1.6571  decode.d0.loss_cls: 0.4818  decode.d0.loss_mask: 1.5345  decode.d0.loss_dice: 1.6828  decode.d1.loss_cls: 0.3473  decode.d1.loss_mask: 1.5169  decode.d1.loss_dice: 1.6797  decode.d2.loss_cls: 0.3311  decode.d2.loss_mask: 1.5471  decode.d2.loss_dice: 1.6704  decode.d3.loss_cls: 0.4401  decode.d3.loss_mask: 1.5271  decode.d3.loss_dice: 1.6203  decode.d4.loss_cls: 0.4611  decode.d4.loss_mask: 1.5171  decode.d4.loss_dice: 1.6547  decode.d5.loss_cls: 0.3975  decode.d5.loss_mask: 1.5709  decode.d5.loss_dice: 1.6501  decode.d6.loss_cls: 0.4616  decode.d6.loss_mask: 1.5347  decode.d6.loss_dice: 1.6501  decode.d7.loss_cls: 0.3763  decode.d7.loss_mask: 1.5352  decode.d7.loss_dice: 1.6588  decode.d8.loss_cls: 0.3939  decode.d8.loss_mask: 1.5460  decode.d8.loss_dice: 1.6611
2025/03/29 15:45:32 - mmengine - INFO - Iter(train) [ 6550/20000]  base_lr: 6.9975e-05 lr: 6.9975e-05  eta: 6:12:47  time: 1.4452  data_time: 0.0157  memory: 10143  loss: 38.4621  decode.loss_cls: 0.5765  decode.loss_mask: 1.6039  decode.loss_dice: 1.6615  decode.d0.loss_cls: 0.6517  decode.d0.loss_mask: 1.5695  decode.d0.loss_dice: 1.7689  decode.d1.loss_cls: 0.5684  decode.d1.loss_mask: 1.5329  decode.d1.loss_dice: 1.7184  decode.d2.loss_cls: 0.6112  decode.d2.loss_mask: 1.5497  decode.d2.loss_dice: 1.6593  decode.d3.loss_cls: 0.6085  decode.d3.loss_mask: 1.5343  decode.d3.loss_dice: 1.6220  decode.d4.loss_cls: 0.6082  decode.d4.loss_mask: 1.6101  decode.d4.loss_dice: 1.6336  decode.d5.loss_cls: 0.6057  decode.d5.loss_mask: 1.5840  decode.d5.loss_dice: 1.6685  decode.d6.loss_cls: 0.5891  decode.d6.loss_mask: 1.5750  decode.d6.loss_dice: 1.6706  decode.d7.loss_cls: 0.5959  decode.d7.loss_mask: 1.5809  decode.d7.loss_dice: 1.6572  decode.d8.loss_cls: 0.6111  decode.d8.loss_mask: 1.5741  decode.d8.loss_dice: 1.6613
2025/03/29 15:46:55 - mmengine - INFO - Iter(train) [ 6600/20000]  base_lr: 6.9741e-05 lr: 6.9741e-05  eta: 6:11:24  time: 1.6730  data_time: 0.0166  memory: 10149  loss: 36.7148  decode.loss_cls: 0.5113  decode.loss_mask: 1.5315  decode.loss_dice: 1.6215  decode.d0.loss_cls: 0.5701  decode.d0.loss_mask: 1.5403  decode.d0.loss_dice: 1.6553  decode.d1.loss_cls: 0.5965  decode.d1.loss_mask: 1.5039  decode.d1.loss_dice: 1.5606  decode.d2.loss_cls: 0.5515  decode.d2.loss_mask: 1.5171  decode.d2.loss_dice: 1.5727  decode.d3.loss_cls: 0.5309  decode.d3.loss_mask: 1.5485  decode.d3.loss_dice: 1.6148  decode.d4.loss_cls: 0.4820  decode.d4.loss_mask: 1.5049  decode.d4.loss_dice: 1.5625  decode.d5.loss_cls: 0.5635  decode.d5.loss_mask: 1.5419  decode.d5.loss_dice: 1.6072  decode.d6.loss_cls: 0.5205  decode.d6.loss_mask: 1.5195  decode.d6.loss_dice: 1.5846  decode.d7.loss_cls: 0.5012  decode.d7.loss_mask: 1.5433  decode.d7.loss_dice: 1.6355  decode.d8.loss_cls: 0.5313  decode.d8.loss_mask: 1.5461  decode.d8.loss_dice: 1.6443
2025/03/29 15:48:19 - mmengine - INFO - Iter(train) [ 6650/20000]  base_lr: 6.9507e-05 lr: 6.9507e-05  eta: 6:10:02  time: 1.6705  data_time: 0.0153  memory: 10083  loss: 37.3275  decode.loss_cls: 0.5492  decode.loss_mask: 1.5256  decode.loss_dice: 1.6675  decode.d0.loss_cls: 0.5522  decode.d0.loss_mask: 1.5128  decode.d0.loss_dice: 1.7183  decode.d1.loss_cls: 0.5836  decode.d1.loss_mask: 1.5027  decode.d1.loss_dice: 1.6944  decode.d2.loss_cls: 0.5444  decode.d2.loss_mask: 1.5094  decode.d2.loss_dice: 1.6789  decode.d3.loss_cls: 0.4816  decode.d3.loss_mask: 1.4848  decode.d3.loss_dice: 1.6527  decode.d4.loss_cls: 0.5578  decode.d4.loss_mask: 1.4955  decode.d4.loss_dice: 1.6629  decode.d5.loss_cls: 0.5674  decode.d5.loss_mask: 1.5081  decode.d5.loss_dice: 1.6829  decode.d6.loss_cls: 0.5483  decode.d6.loss_mask: 1.5235  decode.d6.loss_dice: 1.6991  decode.d7.loss_cls: 0.5866  decode.d7.loss_mask: 1.4680  decode.d7.loss_dice: 1.6551  decode.d8.loss_cls: 0.4928  decode.d8.loss_mask: 1.5324  decode.d8.loss_dice: 1.6888
2025/03/29 15:49:42 - mmengine - INFO - Iter(train) [ 6700/20000]  base_lr: 6.9272e-05 lr: 6.9272e-05  eta: 6:08:39  time: 1.6661  data_time: 0.0155  memory: 10090  loss: 33.7215  decode.loss_cls: 0.4803  decode.loss_mask: 1.4475  decode.loss_dice: 1.4335  decode.d0.loss_cls: 0.5743  decode.d0.loss_mask: 1.4355  decode.d0.loss_dice: 1.4758  decode.d1.loss_cls: 0.4317  decode.d1.loss_mask: 1.4256  decode.d1.loss_dice: 1.4646  decode.d2.loss_cls: 0.4675  decode.d2.loss_mask: 1.4024  decode.d2.loss_dice: 1.4348  decode.d3.loss_cls: 0.4923  decode.d3.loss_mask: 1.4063  decode.d3.loss_dice: 1.4560  decode.d4.loss_cls: 0.4763  decode.d4.loss_mask: 1.4381  decode.d4.loss_dice: 1.4777  decode.d5.loss_cls: 0.4465  decode.d5.loss_mask: 1.4294  decode.d5.loss_dice: 1.4663  decode.d6.loss_cls: 0.4857  decode.d6.loss_mask: 1.4145  decode.d6.loss_dice: 1.4704  decode.d7.loss_cls: 0.4571  decode.d7.loss_mask: 1.4438  decode.d7.loss_dice: 1.4807  decode.d8.loss_cls: 0.5044  decode.d8.loss_mask: 1.4288  decode.d8.loss_dice: 1.4737
2025/03/29 15:51:06 - mmengine - INFO - Iter(train) [ 6750/20000]  base_lr: 6.9038e-05 lr: 6.9038e-05  eta: 6:07:16  time: 1.6712  data_time: 0.0156  memory: 10143  loss: 34.6187  decode.loss_cls: 0.4817  decode.loss_mask: 1.5148  decode.loss_dice: 1.5685  decode.d0.loss_cls: 0.5911  decode.d0.loss_mask: 1.3835  decode.d0.loss_dice: 1.5708  decode.d1.loss_cls: 0.4827  decode.d1.loss_mask: 1.3885  decode.d1.loss_dice: 1.5083  decode.d2.loss_cls: 0.4281  decode.d2.loss_mask: 1.4260  decode.d2.loss_dice: 1.5359  decode.d3.loss_cls: 0.4051  decode.d3.loss_mask: 1.4109  decode.d3.loss_dice: 1.5288  decode.d4.loss_cls: 0.4142  decode.d4.loss_mask: 1.4542  decode.d4.loss_dice: 1.5616  decode.d5.loss_cls: 0.4032  decode.d5.loss_mask: 1.4735  decode.d5.loss_dice: 1.5661  decode.d6.loss_cls: 0.4405  decode.d6.loss_mask: 1.4818  decode.d6.loss_dice: 1.5513  decode.d7.loss_cls: 0.4796  decode.d7.loss_mask: 1.5090  decode.d7.loss_dice: 1.5520  decode.d8.loss_cls: 0.4472  decode.d8.loss_mask: 1.5083  decode.d8.loss_dice: 1.5515
2025/03/29 15:52:24 - mmengine - INFO - Iter(train) [ 6800/20000]  base_lr: 6.8803e-05 lr: 6.8803e-05  eta: 6:05:45  time: 1.1523  data_time: 0.0155  memory: 10094  loss: 32.1733  decode.loss_cls: 0.4530  decode.loss_mask: 1.3040  decode.loss_dice: 1.4698  decode.d0.loss_cls: 0.5539  decode.d0.loss_mask: 1.2975  decode.d0.loss_dice: 1.5398  decode.d1.loss_cls: 0.5301  decode.d1.loss_mask: 1.2408  decode.d1.loss_dice: 1.4667  decode.d2.loss_cls: 0.4840  decode.d2.loss_mask: 1.2613  decode.d2.loss_dice: 1.4496  decode.d3.loss_cls: 0.5000  decode.d3.loss_mask: 1.2384  decode.d3.loss_dice: 1.4176  decode.d4.loss_cls: 0.5429  decode.d4.loss_mask: 1.2743  decode.d4.loss_dice: 1.4341  decode.d5.loss_cls: 0.4653  decode.d5.loss_mask: 1.2499  decode.d5.loss_dice: 1.4409  decode.d6.loss_cls: 0.4491  decode.d6.loss_mask: 1.2650  decode.d6.loss_dice: 1.4451  decode.d7.loss_cls: 0.4795  decode.d7.loss_mask: 1.2814  decode.d7.loss_dice: 1.4647  decode.d8.loss_cls: 0.4533  decode.d8.loss_mask: 1.2439  decode.d8.loss_dice: 1.4776
2025/03/29 15:53:53 - mmengine - INFO - Iter(train) [ 6850/20000]  base_lr: 6.8569e-05 lr: 6.8569e-05  eta: 6:04:32  time: 1.6616  data_time: 0.0160  memory: 10092  loss: 36.2022  decode.loss_cls: 0.5083  decode.loss_mask: 1.4944  decode.loss_dice: 1.5694  decode.d0.loss_cls: 0.6093  decode.d0.loss_mask: 1.4913  decode.d0.loss_dice: 1.6651  decode.d1.loss_cls: 0.6029  decode.d1.loss_mask: 1.4763  decode.d1.loss_dice: 1.6108  decode.d2.loss_cls: 0.5454  decode.d2.loss_mask: 1.5190  decode.d2.loss_dice: 1.5938  decode.d3.loss_cls: 0.4810  decode.d3.loss_mask: 1.5139  decode.d3.loss_dice: 1.6279  decode.d4.loss_cls: 0.5102  decode.d4.loss_mask: 1.4949  decode.d4.loss_dice: 1.5507  decode.d5.loss_cls: 0.5964  decode.d5.loss_mask: 1.4514  decode.d5.loss_dice: 1.5538  decode.d6.loss_cls: 0.5616  decode.d6.loss_mask: 1.4478  decode.d6.loss_dice: 1.5513  decode.d7.loss_cls: 0.5050  decode.d7.loss_mask: 1.4819  decode.d7.loss_dice: 1.5702  decode.d8.loss_cls: 0.4820  decode.d8.loss_mask: 1.5452  decode.d8.loss_dice: 1.5908
2025/03/29 15:55:16 - mmengine - INFO - Iter(train) [ 6900/20000]  base_lr: 6.8334e-05 lr: 6.8334e-05  eta: 6:03:09  time: 1.6558  data_time: 0.0158  memory: 10148  loss: 33.2799  decode.loss_cls: 0.4346  decode.loss_mask: 1.4528  decode.loss_dice: 1.4383  decode.d0.loss_cls: 0.4593  decode.d0.loss_mask: 1.4885  decode.d0.loss_dice: 1.5192  decode.d1.loss_cls: 0.4587  decode.d1.loss_mask: 1.3767  decode.d1.loss_dice: 1.4247  decode.d2.loss_cls: 0.4204  decode.d2.loss_mask: 1.4047  decode.d2.loss_dice: 1.4181  decode.d3.loss_cls: 0.4530  decode.d3.loss_mask: 1.4223  decode.d3.loss_dice: 1.4133  decode.d4.loss_cls: 0.4139  decode.d4.loss_mask: 1.4559  decode.d4.loss_dice: 1.4810  decode.d5.loss_cls: 0.4506  decode.d5.loss_mask: 1.3818  decode.d5.loss_dice: 1.4640  decode.d6.loss_cls: 0.4595  decode.d6.loss_mask: 1.4555  decode.d6.loss_dice: 1.4175  decode.d7.loss_cls: 0.4446  decode.d7.loss_mask: 1.4380  decode.d7.loss_dice: 1.4742  decode.d8.loss_cls: 0.4511  decode.d8.loss_mask: 1.4402  decode.d8.loss_dice: 1.4677
2025/03/29 15:56:39 - mmengine - INFO - Iter(train) [ 6950/20000]  base_lr: 6.8099e-05 lr: 6.8099e-05  eta: 6:01:46  time: 1.6794  data_time: 0.0166  memory: 10089  loss: 34.7555  decode.loss_cls: 0.4058  decode.loss_mask: 1.4070  decode.loss_dice: 1.5770  decode.d0.loss_cls: 0.5497  decode.d0.loss_mask: 1.4871  decode.d0.loss_dice: 1.6770  decode.d1.loss_cls: 0.4874  decode.d1.loss_mask: 1.4373  decode.d1.loss_dice: 1.5393  decode.d2.loss_cls: 0.4240  decode.d2.loss_mask: 1.4320  decode.d2.loss_dice: 1.5571  decode.d3.loss_cls: 0.4448  decode.d3.loss_mask: 1.4640  decode.d3.loss_dice: 1.5582  decode.d4.loss_cls: 0.4839  decode.d4.loss_mask: 1.4220  decode.d4.loss_dice: 1.5936  decode.d5.loss_cls: 0.4431  decode.d5.loss_mask: 1.4490  decode.d5.loss_dice: 1.5546  decode.d6.loss_cls: 0.4702  decode.d6.loss_mask: 1.4328  decode.d6.loss_dice: 1.5487  decode.d7.loss_cls: 0.4736  decode.d7.loss_mask: 1.4672  decode.d7.loss_dice: 1.5744  decode.d8.loss_cls: 0.4718  decode.d8.loss_mask: 1.3891  decode.d8.loss_dice: 1.5338
2025/03/29 15:58:03 - mmengine - INFO - Exp name: r2u_20250329_122140
2025/03/29 15:58:03 - mmengine - INFO - Iter(train) [ 7000/20000]  base_lr: 6.7864e-05 lr: 6.7864e-05  eta: 6:00:23  time: 1.6720  data_time: 0.0170  memory: 10148  loss: 33.3726  decode.loss_cls: 0.3492  decode.loss_mask: 1.3979  decode.loss_dice: 1.5700  decode.d0.loss_cls: 0.4831  decode.d0.loss_mask: 1.3557  decode.d0.loss_dice: 1.6520  decode.d1.loss_cls: 0.3752  decode.d1.loss_mask: 1.3914  decode.d1.loss_dice: 1.5940  decode.d2.loss_cls: 0.3336  decode.d2.loss_mask: 1.3606  decode.d2.loss_dice: 1.5656  decode.d3.loss_cls: 0.3307  decode.d3.loss_mask: 1.3773  decode.d3.loss_dice: 1.5949  decode.d4.loss_cls: 0.3175  decode.d4.loss_mask: 1.4172  decode.d4.loss_dice: 1.6240  decode.d5.loss_cls: 0.3472  decode.d5.loss_mask: 1.3766  decode.d5.loss_dice: 1.6061  decode.d6.loss_cls: 0.3125  decode.d6.loss_mask: 1.4115  decode.d6.loss_dice: 1.5873  decode.d7.loss_cls: 0.3369  decode.d7.loss_mask: 1.4079  decode.d7.loss_dice: 1.5975  decode.d8.loss_cls: 0.3518  decode.d8.loss_mask: 1.3794  decode.d8.loss_dice: 1.5680
2025/03/29 15:59:27 - mmengine - INFO - Iter(train) [ 7050/20000]  base_lr: 6.7629e-05 lr: 6.7629e-05  eta: 5:59:01  time: 1.6823  data_time: 0.0195  memory: 10142  loss: 37.3360  decode.loss_cls: 0.4671  decode.loss_mask: 1.6049  decode.loss_dice: 1.6112  decode.d0.loss_cls: 0.5586  decode.d0.loss_mask: 1.7183  decode.d0.loss_dice: 1.6618  decode.d1.loss_cls: 0.4973  decode.d1.loss_mask: 1.6042  decode.d1.loss_dice: 1.6404  decode.d2.loss_cls: 0.4257  decode.d2.loss_mask: 1.6276  decode.d2.loss_dice: 1.6420  decode.d3.loss_cls: 0.4374  decode.d3.loss_mask: 1.6161  decode.d3.loss_dice: 1.6176  decode.d4.loss_cls: 0.4380  decode.d4.loss_mask: 1.6272  decode.d4.loss_dice: 1.6191  decode.d5.loss_cls: 0.4947  decode.d5.loss_mask: 1.6056  decode.d5.loss_dice: 1.6303  decode.d6.loss_cls: 0.4817  decode.d6.loss_mask: 1.6490  decode.d6.loss_dice: 1.6241  decode.d7.loss_cls: 0.4938  decode.d7.loss_mask: 1.6447  decode.d7.loss_dice: 1.6098  decode.d8.loss_cls: 0.4659  decode.d8.loss_mask: 1.6331  decode.d8.loss_dice: 1.5889
2025/03/29 16:00:50 - mmengine - INFO - Iter(train) [ 7100/20000]  base_lr: 6.7394e-05 lr: 6.7394e-05  eta: 5:57:39  time: 1.6739  data_time: 0.0172  memory: 10148  loss: 30.5255  decode.loss_cls: 0.3852  decode.loss_mask: 1.3202  decode.loss_dice: 1.2943  decode.d0.loss_cls: 0.5011  decode.d0.loss_mask: 1.3176  decode.d0.loss_dice: 1.3286  decode.d1.loss_cls: 0.4482  decode.d1.loss_mask: 1.3348  decode.d1.loss_dice: 1.2769  decode.d2.loss_cls: 0.4008  decode.d2.loss_mask: 1.3253  decode.d2.loss_dice: 1.2898  decode.d3.loss_cls: 0.3916  decode.d3.loss_mask: 1.3216  decode.d3.loss_dice: 1.3079  decode.d4.loss_cls: 0.4714  decode.d4.loss_mask: 1.3310  decode.d4.loss_dice: 1.2641  decode.d5.loss_cls: 0.4372  decode.d5.loss_mask: 1.3392  decode.d5.loss_dice: 1.3019  decode.d6.loss_cls: 0.4402  decode.d6.loss_mask: 1.3097  decode.d6.loss_dice: 1.2829  decode.d7.loss_cls: 0.4190  decode.d7.loss_mask: 1.3574  decode.d7.loss_dice: 1.3012  decode.d8.loss_cls: 0.4362  decode.d8.loss_mask: 1.3310  decode.d8.loss_dice: 1.2591
2025/03/29 16:02:14 - mmengine - INFO - Iter(train) [ 7150/20000]  base_lr: 6.7159e-05 lr: 6.7159e-05  eta: 5:56:17  time: 1.6737  data_time: 0.0166  memory: 10086  loss: 33.5799  decode.loss_cls: 0.3794  decode.loss_mask: 1.5306  decode.loss_dice: 1.5283  decode.d0.loss_cls: 0.5023  decode.d0.loss_mask: 1.4379  decode.d0.loss_dice: 1.5366  decode.d1.loss_cls: 0.4325  decode.d1.loss_mask: 1.4430  decode.d1.loss_dice: 1.4342  decode.d2.loss_cls: 0.4431  decode.d2.loss_mask: 1.4739  decode.d2.loss_dice: 1.4525  decode.d3.loss_cls: 0.4349  decode.d3.loss_mask: 1.4280  decode.d3.loss_dice: 1.4336  decode.d4.loss_cls: 0.4222  decode.d4.loss_mask: 1.4416  decode.d4.loss_dice: 1.4765  decode.d5.loss_cls: 0.4494  decode.d5.loss_mask: 1.4410  decode.d5.loss_dice: 1.4581  decode.d6.loss_cls: 0.4510  decode.d6.loss_mask: 1.4656  decode.d6.loss_dice: 1.4602  decode.d7.loss_cls: 0.3916  decode.d7.loss_mask: 1.4574  decode.d7.loss_dice: 1.4485  decode.d8.loss_cls: 0.4404  decode.d8.loss_mask: 1.4610  decode.d8.loss_dice: 1.4248
2025/03/29 16:03:38 - mmengine - INFO - Iter(train) [ 7200/20000]  base_lr: 6.6924e-05 lr: 6.6924e-05  eta: 5:54:55  time: 1.6808  data_time: 0.0156  memory: 10088  loss: 34.7775  decode.loss_cls: 0.4230  decode.loss_mask: 1.4447  decode.loss_dice: 1.5903  decode.d0.loss_cls: 0.4726  decode.d0.loss_mask: 1.5176  decode.d0.loss_dice: 1.6874  decode.d1.loss_cls: 0.4406  decode.d1.loss_mask: 1.4232  decode.d1.loss_dice: 1.5767  decode.d2.loss_cls: 0.4130  decode.d2.loss_mask: 1.4344  decode.d2.loss_dice: 1.5818  decode.d3.loss_cls: 0.4160  decode.d3.loss_mask: 1.4095  decode.d3.loss_dice: 1.5692  decode.d4.loss_cls: 0.4548  decode.d4.loss_mask: 1.4470  decode.d4.loss_dice: 1.6019  decode.d5.loss_cls: 0.4287  decode.d5.loss_mask: 1.4511  decode.d5.loss_dice: 1.6138  decode.d6.loss_cls: 0.4350  decode.d6.loss_mask: 1.4247  decode.d6.loss_dice: 1.6033  decode.d7.loss_cls: 0.4302  decode.d7.loss_mask: 1.4201  decode.d7.loss_dice: 1.6286  decode.d8.loss_cls: 0.3635  decode.d8.loss_mask: 1.4576  decode.d8.loss_dice: 1.6172
2025/03/29 16:05:01 - mmengine - INFO - Iter(train) [ 7250/20000]  base_lr: 6.6689e-05 lr: 6.6689e-05  eta: 5:53:32  time: 1.6710  data_time: 0.0157  memory: 10085  loss: 33.6531  decode.loss_cls: 0.2783  decode.loss_mask: 1.5304  decode.loss_dice: 1.5551  decode.d0.loss_cls: 0.4493  decode.d0.loss_mask: 1.4890  decode.d0.loss_dice: 1.5638  decode.d1.loss_cls: 0.3025  decode.d1.loss_mask: 1.4956  decode.d1.loss_dice: 1.5480  decode.d2.loss_cls: 0.2892  decode.d2.loss_mask: 1.4941  decode.d2.loss_dice: 1.5245  decode.d3.loss_cls: 0.3057  decode.d3.loss_mask: 1.5326  decode.d3.loss_dice: 1.4823  decode.d4.loss_cls: 0.3265  decode.d4.loss_mask: 1.5281  decode.d4.loss_dice: 1.5551  decode.d5.loss_cls: 0.2947  decode.d5.loss_mask: 1.5165  decode.d5.loss_dice: 1.5350  decode.d6.loss_cls: 0.2683  decode.d6.loss_mask: 1.5367  decode.d6.loss_dice: 1.5445  decode.d7.loss_cls: 0.2597  decode.d7.loss_mask: 1.5669  decode.d7.loss_dice: 1.5524  decode.d8.loss_cls: 0.2917  decode.d8.loss_mask: 1.5078  decode.d8.loss_dice: 1.5289
2025/03/29 16:06:25 - mmengine - INFO - Iter(train) [ 7300/20000]  base_lr: 6.6453e-05 lr: 6.6453e-05  eta: 5:52:10  time: 1.6703  data_time: 0.0160  memory: 10154  loss: 35.1333  decode.loss_cls: 0.4739  decode.loss_mask: 1.4088  decode.loss_dice: 1.5856  decode.d0.loss_cls: 0.6472  decode.d0.loss_mask: 1.3481  decode.d0.loss_dice: 1.5876  decode.d1.loss_cls: 0.5427  decode.d1.loss_mask: 1.3978  decode.d1.loss_dice: 1.5829  decode.d2.loss_cls: 0.5040  decode.d2.loss_mask: 1.4132  decode.d2.loss_dice: 1.5789  decode.d3.loss_cls: 0.4934  decode.d3.loss_mask: 1.4023  decode.d3.loss_dice: 1.5554  decode.d4.loss_cls: 0.5114  decode.d4.loss_mask: 1.3891  decode.d4.loss_dice: 1.5740  decode.d5.loss_cls: 0.5265  decode.d5.loss_mask: 1.3894  decode.d5.loss_dice: 1.5285  decode.d6.loss_cls: 0.5098  decode.d6.loss_mask: 1.3951  decode.d6.loss_dice: 1.5396  decode.d7.loss_cls: 0.5055  decode.d7.loss_mask: 1.4819  decode.d7.loss_dice: 1.6444  decode.d8.loss_cls: 0.5206  decode.d8.loss_mask: 1.4736  decode.d8.loss_dice: 1.6220
2025/03/29 16:07:49 - mmengine - INFO - Iter(train) [ 7350/20000]  base_lr: 6.6218e-05 lr: 6.6218e-05  eta: 5:50:48  time: 1.6695  data_time: 0.0159  memory: 10137  loss: 37.4436  decode.loss_cls: 0.4865  decode.loss_mask: 1.6219  decode.loss_dice: 1.6791  decode.d0.loss_cls: 0.5579  decode.d0.loss_mask: 1.5786  decode.d0.loss_dice: 1.6977  decode.d1.loss_cls: 0.4594  decode.d1.loss_mask: 1.5590  decode.d1.loss_dice: 1.6460  decode.d2.loss_cls: 0.4420  decode.d2.loss_mask: 1.5935  decode.d2.loss_dice: 1.6868  decode.d3.loss_cls: 0.4688  decode.d3.loss_mask: 1.5717  decode.d3.loss_dice: 1.6518  decode.d4.loss_cls: 0.4317  decode.d4.loss_mask: 1.6198  decode.d4.loss_dice: 1.7228  decode.d5.loss_cls: 0.4903  decode.d5.loss_mask: 1.5852  decode.d5.loss_dice: 1.6839  decode.d6.loss_cls: 0.4413  decode.d6.loss_mask: 1.5953  decode.d6.loss_dice: 1.6988  decode.d7.loss_cls: 0.5293  decode.d7.loss_mask: 1.5723  decode.d7.loss_dice: 1.6490  decode.d8.loss_cls: 0.4490  decode.d8.loss_mask: 1.5897  decode.d8.loss_dice: 1.6846
2025/03/29 16:09:12 - mmengine - INFO - Iter(train) [ 7400/20000]  base_lr: 6.5982e-05 lr: 6.5982e-05  eta: 5:49:25  time: 1.6702  data_time: 0.0157  memory: 10095  loss: 30.7185  decode.loss_cls: 0.3137  decode.loss_mask: 1.2828  decode.loss_dice: 1.4335  decode.d0.loss_cls: 0.4580  decode.d0.loss_mask: 1.2571  decode.d0.loss_dice: 1.5315  decode.d1.loss_cls: 0.3667  decode.d1.loss_mask: 1.2685  decode.d1.loss_dice: 1.4448  decode.d2.loss_cls: 0.3519  decode.d2.loss_mask: 1.3221  decode.d2.loss_dice: 1.3931  decode.d3.loss_cls: 0.3352  decode.d3.loss_mask: 1.2602  decode.d3.loss_dice: 1.4081  decode.d4.loss_cls: 0.3927  decode.d4.loss_mask: 1.2347  decode.d4.loss_dice: 1.3888  decode.d5.loss_cls: 0.3498  decode.d5.loss_mask: 1.2898  decode.d5.loss_dice: 1.4459  decode.d6.loss_cls: 0.3171  decode.d6.loss_mask: 1.3145  decode.d6.loss_dice: 1.4453  decode.d7.loss_cls: 0.3518  decode.d7.loss_mask: 1.2775  decode.d7.loss_dice: 1.4397  decode.d8.loss_cls: 0.3433  decode.d8.loss_mask: 1.2578  decode.d8.loss_dice: 1.4429
2025/03/29 16:10:36 - mmengine - INFO - Iter(train) [ 7450/20000]  base_lr: 6.5746e-05 lr: 6.5746e-05  eta: 5:48:03  time: 1.6684  data_time: 0.0157  memory: 10141  loss: 36.7034  decode.loss_cls: 0.4457  decode.loss_mask: 1.5870  decode.loss_dice: 1.6633  decode.d0.loss_cls: 0.4618  decode.d0.loss_mask: 1.6085  decode.d0.loss_dice: 1.6650  decode.d1.loss_cls: 0.4541  decode.d1.loss_mask: 1.5537  decode.d1.loss_dice: 1.6078  decode.d2.loss_cls: 0.4343  decode.d2.loss_mask: 1.5893  decode.d2.loss_dice: 1.6078  decode.d3.loss_cls: 0.3982  decode.d3.loss_mask: 1.6304  decode.d3.loss_dice: 1.6201  decode.d4.loss_cls: 0.4248  decode.d4.loss_mask: 1.6363  decode.d4.loss_dice: 1.6376  decode.d5.loss_cls: 0.4211  decode.d5.loss_mask: 1.6062  decode.d5.loss_dice: 1.6342  decode.d6.loss_cls: 0.3818  decode.d6.loss_mask: 1.6086  decode.d6.loss_dice: 1.6842  decode.d7.loss_cls: 0.3791  decode.d7.loss_mask: 1.6518  decode.d7.loss_dice: 1.6513  decode.d8.loss_cls: 0.3880  decode.d8.loss_mask: 1.6340  decode.d8.loss_dice: 1.6376
2025/03/29 16:11:59 - mmengine - INFO - Iter(train) [ 7500/20000]  base_lr: 6.5511e-05 lr: 6.5511e-05  eta: 5:46:40  time: 1.6685  data_time: 0.0157  memory: 10078  loss: 31.9684  decode.loss_cls: 0.4329  decode.loss_mask: 1.3322  decode.loss_dice: 1.4823  decode.d0.loss_cls: 0.5510  decode.d0.loss_mask: 1.3294  decode.d0.loss_dice: 1.5088  decode.d1.loss_cls: 0.5017  decode.d1.loss_mask: 1.2580  decode.d1.loss_dice: 1.3537  decode.d2.loss_cls: 0.5339  decode.d2.loss_mask: 1.2243  decode.d2.loss_dice: 1.3395  decode.d3.loss_cls: 0.4759  decode.d3.loss_mask: 1.2716  decode.d3.loss_dice: 1.4220  decode.d4.loss_cls: 0.5352  decode.d4.loss_mask: 1.2690  decode.d4.loss_dice: 1.3577  decode.d5.loss_cls: 0.5133  decode.d5.loss_mask: 1.2463  decode.d5.loss_dice: 1.3637  decode.d6.loss_cls: 0.5005  decode.d6.loss_mask: 1.2855  decode.d6.loss_dice: 1.4322  decode.d7.loss_cls: 0.4928  decode.d7.loss_mask: 1.2814  decode.d7.loss_dice: 1.4030  decode.d8.loss_cls: 0.4916  decode.d8.loss_mask: 1.3425  decode.d8.loss_dice: 1.4368
2025/03/29 16:13:23 - mmengine - INFO - Iter(train) [ 7550/20000]  base_lr: 6.5275e-05 lr: 6.5275e-05  eta: 5:45:17  time: 1.6732  data_time: 0.0156  memory: 10143  loss: 34.4189  decode.loss_cls: 0.4594  decode.loss_mask: 1.4029  decode.loss_dice: 1.5602  decode.d0.loss_cls: 0.5125  decode.d0.loss_mask: 1.4614  decode.d0.loss_dice: 1.6873  decode.d1.loss_cls: 0.4531  decode.d1.loss_mask: 1.4042  decode.d1.loss_dice: 1.5765  decode.d2.loss_cls: 0.5186  decode.d2.loss_mask: 1.3452  decode.d2.loss_dice: 1.5116  decode.d3.loss_cls: 0.4816  decode.d3.loss_mask: 1.3883  decode.d3.loss_dice: 1.5356  decode.d4.loss_cls: 0.5493  decode.d4.loss_mask: 1.3614  decode.d4.loss_dice: 1.4775  decode.d5.loss_cls: 0.5462  decode.d5.loss_mask: 1.3888  decode.d5.loss_dice: 1.4780  decode.d6.loss_cls: 0.5492  decode.d6.loss_mask: 1.3856  decode.d6.loss_dice: 1.4753  decode.d7.loss_cls: 0.5391  decode.d7.loss_mask: 1.3862  decode.d7.loss_dice: 1.5275  decode.d8.loss_cls: 0.4897  decode.d8.loss_mask: 1.4285  decode.d8.loss_dice: 1.5384
2025/03/29 16:14:47 - mmengine - INFO - Iter(train) [ 7600/20000]  base_lr: 6.5039e-05 lr: 6.5039e-05  eta: 5:43:55  time: 1.6680  data_time: 0.0154  memory: 10093  loss: 33.6949  decode.loss_cls: 0.3911  decode.loss_mask: 1.4389  decode.loss_dice: 1.5422  decode.d0.loss_cls: 0.5534  decode.d0.loss_mask: 1.4561  decode.d0.loss_dice: 1.5911  decode.d1.loss_cls: 0.4333  decode.d1.loss_mask: 1.3559  decode.d1.loss_dice: 1.5113  decode.d2.loss_cls: 0.4339  decode.d2.loss_mask: 1.3578  decode.d2.loss_dice: 1.4908  decode.d3.loss_cls: 0.3727  decode.d3.loss_mask: 1.4413  decode.d3.loss_dice: 1.5827  decode.d4.loss_cls: 0.4120  decode.d4.loss_mask: 1.4092  decode.d4.loss_dice: 1.5174  decode.d5.loss_cls: 0.4600  decode.d5.loss_mask: 1.3781  decode.d5.loss_dice: 1.4966  decode.d6.loss_cls: 0.4168  decode.d6.loss_mask: 1.3780  decode.d6.loss_dice: 1.5156  decode.d7.loss_cls: 0.4134  decode.d7.loss_mask: 1.4250  decode.d7.loss_dice: 1.5609  decode.d8.loss_cls: 0.4116  decode.d8.loss_mask: 1.4141  decode.d8.loss_dice: 1.5338
2025/03/29 16:16:10 - mmengine - INFO - Iter(train) [ 7650/20000]  base_lr: 6.4803e-05 lr: 6.4803e-05  eta: 5:42:32  time: 1.6784  data_time: 0.0155  memory: 10149  loss: 34.6880  decode.loss_cls: 0.3368  decode.loss_mask: 1.5833  decode.loss_dice: 1.6136  decode.d0.loss_cls: 0.4484  decode.d0.loss_mask: 1.5256  decode.d0.loss_dice: 1.6051  decode.d1.loss_cls: 0.3851  decode.d1.loss_mask: 1.5240  decode.d1.loss_dice: 1.5809  decode.d2.loss_cls: 0.3874  decode.d2.loss_mask: 1.4997  decode.d2.loss_dice: 1.5448  decode.d3.loss_cls: 0.3916  decode.d3.loss_mask: 1.4899  decode.d3.loss_dice: 1.5132  decode.d4.loss_cls: 0.4067  decode.d4.loss_mask: 1.4792  decode.d4.loss_dice: 1.5313  decode.d5.loss_cls: 0.4256  decode.d5.loss_mask: 1.4625  decode.d5.loss_dice: 1.4875  decode.d6.loss_cls: 0.3807  decode.d6.loss_mask: 1.4933  decode.d6.loss_dice: 1.5361  decode.d7.loss_cls: 0.4008  decode.d7.loss_mask: 1.5066  decode.d7.loss_dice: 1.5993  decode.d8.loss_cls: 0.3382  decode.d8.loss_mask: 1.6018  decode.d8.loss_dice: 1.6089
2025/03/29 16:17:34 - mmengine - INFO - Iter(train) [ 7700/20000]  base_lr: 6.4566e-05 lr: 6.4566e-05  eta: 5:41:10  time: 1.6729  data_time: 0.0168  memory: 10089  loss: 33.8583  decode.loss_cls: 0.4128  decode.loss_mask: 1.4576  decode.loss_dice: 1.4956  decode.d0.loss_cls: 0.4455  decode.d0.loss_mask: 1.4405  decode.d0.loss_dice: 1.5665  decode.d1.loss_cls: 0.4545  decode.d1.loss_mask: 1.4348  decode.d1.loss_dice: 1.5024  decode.d2.loss_cls: 0.3951  decode.d2.loss_mask: 1.4717  decode.d2.loss_dice: 1.4850  decode.d3.loss_cls: 0.3700  decode.d3.loss_mask: 1.4758  decode.d3.loss_dice: 1.4744  decode.d4.loss_cls: 0.4304  decode.d4.loss_mask: 1.4351  decode.d4.loss_dice: 1.4903  decode.d5.loss_cls: 0.4886  decode.d5.loss_mask: 1.4286  decode.d5.loss_dice: 1.4870  decode.d6.loss_cls: 0.4379  decode.d6.loss_mask: 1.4523  decode.d6.loss_dice: 1.5005  decode.d7.loss_cls: 0.4273  decode.d7.loss_mask: 1.4663  decode.d7.loss_dice: 1.5158  decode.d8.loss_cls: 0.4294  decode.d8.loss_mask: 1.4658  decode.d8.loss_dice: 1.5210
2025/03/29 16:18:58 - mmengine - INFO - Iter(train) [ 7750/20000]  base_lr: 6.4330e-05 lr: 6.4330e-05  eta: 5:39:48  time: 1.6730  data_time: 0.0157  memory: 10149  loss: 34.5556  decode.loss_cls: 0.4394  decode.loss_mask: 1.4966  decode.loss_dice: 1.5166  decode.d0.loss_cls: 0.4747  decode.d0.loss_mask: 1.5276  decode.d0.loss_dice: 1.6217  decode.d1.loss_cls: 0.4658  decode.d1.loss_mask: 1.4667  decode.d1.loss_dice: 1.4997  decode.d2.loss_cls: 0.5170  decode.d2.loss_mask: 1.4367  decode.d2.loss_dice: 1.4398  decode.d3.loss_cls: 0.4920  decode.d3.loss_mask: 1.4530  decode.d3.loss_dice: 1.4709  decode.d4.loss_cls: 0.5043  decode.d4.loss_mask: 1.4637  decode.d4.loss_dice: 1.4689  decode.d5.loss_cls: 0.4862  decode.d5.loss_mask: 1.4643  decode.d5.loss_dice: 1.5005  decode.d6.loss_cls: 0.5753  decode.d6.loss_mask: 1.4159  decode.d6.loss_dice: 1.4426  decode.d7.loss_cls: 0.4880  decode.d7.loss_mask: 1.4562  decode.d7.loss_dice: 1.4853  decode.d8.loss_cls: 0.4709  decode.d8.loss_mask: 1.4963  decode.d8.loss_dice: 1.5188
2025/03/29 16:20:21 - mmengine - INFO - Iter(train) [ 7800/20000]  base_lr: 6.4094e-05 lr: 6.4094e-05  eta: 5:38:25  time: 1.6689  data_time: 0.0157  memory: 10079  loss: 36.4647  decode.loss_cls: 0.5187  decode.loss_mask: 1.5039  decode.loss_dice: 1.5708  decode.d0.loss_cls: 0.5401  decode.d0.loss_mask: 1.5335  decode.d0.loss_dice: 1.7245  decode.d1.loss_cls: 0.5368  decode.d1.loss_mask: 1.4924  decode.d1.loss_dice: 1.6001  decode.d2.loss_cls: 0.5265  decode.d2.loss_mask: 1.5025  decode.d2.loss_dice: 1.5763  decode.d3.loss_cls: 0.5107  decode.d3.loss_mask: 1.4807  decode.d3.loss_dice: 1.5762  decode.d4.loss_cls: 0.5549  decode.d4.loss_mask: 1.4998  decode.d4.loss_dice: 1.5613  decode.d5.loss_cls: 0.5496  decode.d5.loss_mask: 1.4949  decode.d5.loss_dice: 1.5969  decode.d6.loss_cls: 0.5258  decode.d6.loss_mask: 1.5466  decode.d6.loss_dice: 1.6238  decode.d7.loss_cls: 0.5052  decode.d7.loss_mask: 1.5088  decode.d7.loss_dice: 1.6305  decode.d8.loss_cls: 0.5675  decode.d8.loss_mask: 1.4926  decode.d8.loss_dice: 1.6128
2025/03/29 16:21:45 - mmengine - INFO - Iter(train) [ 7850/20000]  base_lr: 6.3857e-05 lr: 6.3857e-05  eta: 5:37:02  time: 1.6709  data_time: 0.0159  memory: 10097  loss: 33.9388  decode.loss_cls: 0.3606  decode.loss_mask: 1.4341  decode.loss_dice: 1.5137  decode.d0.loss_cls: 0.5110  decode.d0.loss_mask: 1.4509  decode.d0.loss_dice: 1.6139  decode.d1.loss_cls: 0.3759  decode.d1.loss_mask: 1.4783  decode.d1.loss_dice: 1.5300  decode.d2.loss_cls: 0.3997  decode.d2.loss_mask: 1.4791  decode.d2.loss_dice: 1.5070  decode.d3.loss_cls: 0.3600  decode.d3.loss_mask: 1.4969  decode.d3.loss_dice: 1.5255  decode.d4.loss_cls: 0.3673  decode.d4.loss_mask: 1.4710  decode.d4.loss_dice: 1.5410  decode.d5.loss_cls: 0.4146  decode.d5.loss_mask: 1.4320  decode.d5.loss_dice: 1.5365  decode.d6.loss_cls: 0.4438  decode.d6.loss_mask: 1.4741  decode.d6.loss_dice: 1.5366  decode.d7.loss_cls: 0.3811  decode.d7.loss_mask: 1.4518  decode.d7.loss_dice: 1.5229  decode.d8.loss_cls: 0.3504  decode.d8.loss_mask: 1.4440  decode.d8.loss_dice: 1.5350
2025/03/29 16:23:09 - mmengine - INFO - Iter(train) [ 7900/20000]  base_lr: 6.3621e-05 lr: 6.3621e-05  eta: 5:35:40  time: 1.6791  data_time: 0.0155  memory: 10091  loss: 36.7447  decode.loss_cls: 0.5277  decode.loss_mask: 1.4330  decode.loss_dice: 1.7385  decode.d0.loss_cls: 0.5883  decode.d0.loss_mask: 1.4522  decode.d0.loss_dice: 1.8589  decode.d1.loss_cls: 0.4662  decode.d1.loss_mask: 1.4225  decode.d1.loss_dice: 1.7149  decode.d2.loss_cls: 0.5285  decode.d2.loss_mask: 1.4010  decode.d2.loss_dice: 1.6941  decode.d3.loss_cls: 0.5503  decode.d3.loss_mask: 1.4134  decode.d3.loss_dice: 1.7180  decode.d4.loss_cls: 0.5676  decode.d4.loss_mask: 1.3560  decode.d4.loss_dice: 1.6668  decode.d5.loss_cls: 0.5586  decode.d5.loss_mask: 1.3767  decode.d5.loss_dice: 1.6977  decode.d6.loss_cls: 0.5200  decode.d6.loss_mask: 1.4230  decode.d6.loss_dice: 1.7350  decode.d7.loss_cls: 0.5820  decode.d7.loss_mask: 1.3820  decode.d7.loss_dice: 1.7159  decode.d8.loss_cls: 0.5284  decode.d8.loss_mask: 1.4110  decode.d8.loss_dice: 1.7165
2025/03/29 16:24:32 - mmengine - INFO - Iter(train) [ 7950/20000]  base_lr: 6.3384e-05 lr: 6.3384e-05  eta: 5:34:17  time: 1.6727  data_time: 0.0158  memory: 10094  loss: 36.1218  decode.loss_cls: 0.5383  decode.loss_mask: 1.4792  decode.loss_dice: 1.5935  decode.d0.loss_cls: 0.5799  decode.d0.loss_mask: 1.4702  decode.d0.loss_dice: 1.6698  decode.d1.loss_cls: 0.5367  decode.d1.loss_mask: 1.4733  decode.d1.loss_dice: 1.5851  decode.d2.loss_cls: 0.5573  decode.d2.loss_mask: 1.4437  decode.d2.loss_dice: 1.5947  decode.d3.loss_cls: 0.5588  decode.d3.loss_mask: 1.4235  decode.d3.loss_dice: 1.5778  decode.d4.loss_cls: 0.6036  decode.d4.loss_mask: 1.4758  decode.d4.loss_dice: 1.5770  decode.d5.loss_cls: 0.5368  decode.d5.loss_mask: 1.4858  decode.d5.loss_dice: 1.5762  decode.d6.loss_cls: 0.5625  decode.d6.loss_mask: 1.4475  decode.d6.loss_dice: 1.5481  decode.d7.loss_cls: 0.5462  decode.d7.loss_mask: 1.4937  decode.d7.loss_dice: 1.5789  decode.d8.loss_cls: 0.5489  decode.d8.loss_mask: 1.4856  decode.d8.loss_dice: 1.5735
2025/03/29 16:25:56 - mmengine - INFO - Exp name: r2u_20250329_122140
2025/03/29 16:25:56 - mmengine - INFO - Iter(train) [ 8000/20000]  base_lr: 6.3147e-05 lr: 6.3147e-05  eta: 5:32:55  time: 1.6757  data_time: 0.0161  memory: 10089  loss: 30.4066  decode.loss_cls: 0.3248  decode.loss_mask: 1.3257  decode.loss_dice: 1.4392  decode.d0.loss_cls: 0.4974  decode.d0.loss_mask: 1.2199  decode.d0.loss_dice: 1.4741  decode.d1.loss_cls: 0.4002  decode.d1.loss_mask: 1.2458  decode.d1.loss_dice: 1.3874  decode.d2.loss_cls: 0.3747  decode.d2.loss_mask: 1.2660  decode.d2.loss_dice: 1.3595  decode.d3.loss_cls: 0.3712  decode.d3.loss_mask: 1.2708  decode.d3.loss_dice: 1.3666  decode.d4.loss_cls: 0.3763  decode.d4.loss_mask: 1.2383  decode.d4.loss_dice: 1.3353  decode.d5.loss_cls: 0.3688  decode.d5.loss_mask: 1.2631  decode.d5.loss_dice: 1.3937  decode.d6.loss_cls: 0.4123  decode.d6.loss_mask: 1.2480  decode.d6.loss_dice: 1.3461  decode.d7.loss_cls: 0.3545  decode.d7.loss_mask: 1.2826  decode.d7.loss_dice: 1.3699  decode.d8.loss_cls: 0.4044  decode.d8.loss_mask: 1.3038  decode.d8.loss_dice: 1.3860
2025/03/29 16:25:56 - mmengine - INFO - Saving checkpoint at 8000 iterations
2025/03/29 16:26:06 - mmengine - INFO - Iter(val) [  50/2708]    eta: 0:07:21  time: 0.1673  data_time: 0.0013  memory: 1856  
2025/03/29 16:26:14 - mmengine - INFO - Iter(val) [ 100/2708]    eta: 0:07:04  time: 0.1622  data_time: 0.0012  memory: 1856  
2025/03/29 16:26:22 - mmengine - INFO - Iter(val) [ 150/2708]    eta: 0:06:57  time: 0.1669  data_time: 0.0013  memory: 1856  
2025/03/29 16:26:30 - mmengine - INFO - Iter(val) [ 200/2708]    eta: 0:06:47  time: 0.1570  data_time: 0.0013  memory: 1856  
2025/03/29 16:26:38 - mmengine - INFO - Iter(val) [ 250/2708]    eta: 0:06:39  time: 0.1671  data_time: 0.0013  memory: 1856  
2025/03/29 16:26:47 - mmengine - INFO - Iter(val) [ 300/2708]    eta: 0:06:30  time: 0.1591  data_time: 0.0012  memory: 1856  
2025/03/29 16:26:55 - mmengine - INFO - Iter(val) [ 350/2708]    eta: 0:06:21  time: 0.1670  data_time: 0.0013  memory: 1856  
2025/03/29 16:27:03 - mmengine - INFO - Iter(val) [ 400/2708]    eta: 0:06:14  time: 0.1563  data_time: 0.0013  memory: 1856  
2025/03/29 16:27:11 - mmengine - INFO - Iter(val) [ 450/2708]    eta: 0:06:05  time: 0.1603  data_time: 0.0013  memory: 1856  
2025/03/29 16:27:19 - mmengine - INFO - Iter(val) [ 500/2708]    eta: 0:05:57  time: 0.1579  data_time: 0.0012  memory: 1856  
2025/03/29 16:27:27 - mmengine - INFO - Iter(val) [ 550/2708]    eta: 0:05:48  time: 0.1589  data_time: 0.0012  memory: 1856  
2025/03/29 16:27:35 - mmengine - INFO - Iter(val) [ 600/2708]    eta: 0:05:41  time: 0.1587  data_time: 0.0013  memory: 1856  
2025/03/29 16:27:43 - mmengine - INFO - Iter(val) [ 650/2708]    eta: 0:05:32  time: 0.1588  data_time: 0.0013  memory: 1856  
2025/03/29 16:27:51 - mmengine - INFO - Iter(val) [ 700/2708]    eta: 0:05:25  time: 0.1651  data_time: 0.0013  memory: 1856  
2025/03/29 16:27:59 - mmengine - INFO - Iter(val) [ 750/2708]    eta: 0:05:16  time: 0.1579  data_time: 0.0014  memory: 1856  
2025/03/29 16:28:07 - mmengine - INFO - Iter(val) [ 800/2708]    eta: 0:05:08  time: 0.1672  data_time: 0.0013  memory: 1856  
2025/03/29 16:28:15 - mmengine - INFO - Iter(val) [ 850/2708]    eta: 0:05:00  time: 0.1583  data_time: 0.0013  memory: 1856  
2025/03/29 16:28:23 - mmengine - INFO - Iter(val) [ 900/2708]    eta: 0:04:52  time: 0.1656  data_time: 0.0013  memory: 1856  
2025/03/29 16:28:31 - mmengine - INFO - Iter(val) [ 950/2708]    eta: 0:04:44  time: 0.1580  data_time: 0.0012  memory: 1856  
2025/03/29 16:28:40 - mmengine - INFO - Iter(val) [1000/2708]    eta: 0:04:36  time: 0.1669  data_time: 0.0013  memory: 1856  
2025/03/29 16:28:48 - mmengine - INFO - Iter(val) [1050/2708]    eta: 0:04:27  time: 0.1578  data_time: 0.0012  memory: 1856  
2025/03/29 16:28:56 - mmengine - INFO - Iter(val) [1100/2708]    eta: 0:04:19  time: 0.1668  data_time: 0.0013  memory: 1856  
2025/03/29 16:29:04 - mmengine - INFO - Iter(val) [1150/2708]    eta: 0:04:11  time: 0.1730  data_time: 0.0014  memory: 1856  
2025/03/29 16:29:12 - mmengine - INFO - Iter(val) [1200/2708]    eta: 0:04:03  time: 0.1607  data_time: 0.0013  memory: 1856  
2025/03/29 16:29:20 - mmengine - INFO - Iter(val) [1250/2708]    eta: 0:03:55  time: 0.1591  data_time: 0.0013  memory: 1856  
2025/03/29 16:29:28 - mmengine - INFO - Iter(val) [1300/2708]    eta: 0:03:47  time: 0.1595  data_time: 0.0013  memory: 1856  
2025/03/29 16:29:36 - mmengine - INFO - Iter(val) [1350/2708]    eta: 0:03:39  time: 0.1565  data_time: 0.0013  memory: 1856  
2025/03/29 16:29:44 - mmengine - INFO - Iter(val) [1400/2708]    eta: 0:03:31  time: 0.1680  data_time: 0.0013  memory: 1856  
2025/03/29 16:29:52 - mmengine - INFO - Iter(val) [1450/2708]    eta: 0:03:23  time: 0.1548  data_time: 0.0013  memory: 1856  
2025/03/29 16:30:00 - mmengine - INFO - Iter(val) [1500/2708]    eta: 0:03:15  time: 0.1662  data_time: 0.0013  memory: 1856  
2025/03/29 16:30:08 - mmengine - INFO - Iter(val) [1550/2708]    eta: 0:03:06  time: 0.1584  data_time: 0.0013  memory: 1856  
2025/03/29 16:30:16 - mmengine - INFO - Iter(val) [1600/2708]    eta: 0:02:58  time: 0.1670  data_time: 0.0013  memory: 1856  
2025/03/29 16:30:24 - mmengine - INFO - Iter(val) [1650/2708]    eta: 0:02:50  time: 0.1519  data_time: 0.0013  memory: 1856  
2025/03/29 16:30:33 - mmengine - INFO - Iter(val) [1700/2708]    eta: 0:02:42  time: 0.1668  data_time: 0.0013  memory: 1856  
2025/03/29 16:30:41 - mmengine - INFO - Iter(val) [1750/2708]    eta: 0:02:34  time: 0.1593  data_time: 0.0014  memory: 1856  
2025/03/29 16:30:49 - mmengine - INFO - Iter(val) [1800/2708]    eta: 0:02:26  time: 0.1670  data_time: 0.0013  memory: 1856  
2025/03/29 16:30:57 - mmengine - INFO - Iter(val) [1850/2708]    eta: 0:02:18  time: 0.1611  data_time: 0.0013  memory: 1856  
2025/03/29 16:31:05 - mmengine - INFO - Iter(val) [1900/2708]    eta: 0:02:10  time: 0.1673  data_time: 0.0013  memory: 1856  
2025/03/29 16:31:13 - mmengine - INFO - Iter(val) [1950/2708]    eta: 0:02:02  time: 0.1564  data_time: 0.0014  memory: 1856  
2025/03/29 16:31:21 - mmengine - INFO - Iter(val) [2000/2708]    eta: 0:01:54  time: 0.1604  data_time: 0.0014  memory: 1856  
2025/03/29 16:31:29 - mmengine - INFO - Iter(val) [2050/2708]    eta: 0:01:46  time: 0.1600  data_time: 0.0013  memory: 1856  
2025/03/29 16:31:37 - mmengine - INFO - Iter(val) [2100/2708]    eta: 0:01:38  time: 0.1568  data_time: 0.0013  memory: 1856  
2025/03/29 16:31:46 - mmengine - INFO - Iter(val) [2150/2708]    eta: 0:01:30  time: 0.1667  data_time: 0.0013  memory: 1856  
2025/03/29 16:31:53 - mmengine - INFO - Iter(val) [2200/2708]    eta: 0:01:22  time: 0.1493  data_time: 0.0013  memory: 1856  
2025/03/29 16:32:02 - mmengine - INFO - Iter(val) [2250/2708]    eta: 0:01:13  time: 0.1652  data_time: 0.0013  memory: 1856  
2025/03/29 16:32:10 - mmengine - INFO - Iter(val) [2300/2708]    eta: 0:01:05  time: 0.1575  data_time: 0.0013  memory: 1856  
2025/03/29 16:32:18 - mmengine - INFO - Iter(val) [2350/2708]    eta: 0:00:57  time: 0.1669  data_time: 0.0013  memory: 1856  
2025/03/29 16:32:26 - mmengine - INFO - Iter(val) [2400/2708]    eta: 0:00:49  time: 0.1567  data_time: 0.0013  memory: 1856  
2025/03/29 16:32:34 - mmengine - INFO - Iter(val) [2450/2708]    eta: 0:00:41  time: 0.1670  data_time: 0.0013  memory: 1856  
2025/03/29 16:32:42 - mmengine - INFO - Iter(val) [2500/2708]    eta: 0:00:33  time: 0.1613  data_time: 0.0012  memory: 1856  
2025/03/29 16:32:50 - mmengine - INFO - Iter(val) [2550/2708]    eta: 0:00:25  time: 0.1668  data_time: 0.0013  memory: 1856  
2025/03/29 16:32:58 - mmengine - INFO - Iter(val) [2600/2708]    eta: 0:00:17  time: 0.1565  data_time: 0.0012  memory: 1856  
2025/03/29 16:33:06 - mmengine - INFO - Iter(val) [2650/2708]    eta: 0:00:09  time: 0.1618  data_time: 0.0012  memory: 1856  
2025/03/29 16:33:14 - mmengine - INFO - Iter(val) [2700/2708]    eta: 0:00:01  time: 0.1588  data_time: 0.0012  memory: 1856  
2025/03/29 16:33:16 - mmengine - INFO - per class results:
2025/03/29 16:33:16 - mmengine - INFO - 
+--------------+-------+-------+
|    Class     |  IoU  |  Acc  |
+--------------+-------+-------+
|  background  | 43.09 | 74.33 |
|   building   | 62.68 | 74.44 |
|     road     | 57.26 | 68.23 |
|    water     | 74.93 | 83.71 |
|    barren    | 48.43 | 60.58 |
|    forest    | 51.87 |  62.8 |
| agricultural | 60.04 | 64.42 |
+--------------+-------+-------+
2025/03/29 16:33:16 - mmengine - INFO - Iter(val) [2708/2708]    aAcc: 70.4300  mIoU: 56.9000  mAcc: 69.7900  data_time: 0.0013  time: 0.1615
2025/03/29 16:33:16 - mmengine - INFO - The previous best checkpoint /home/face/kaichengyang/xiaoxinghu/Earth_Adapter/work_dirs/r2u/DG_spatial_64_cutoff_0.3_fft_pre6/35b71_seed0/best_mIoU_iter_6000.pth is removed
2025/03/29 16:33:17 - mmengine - INFO - The best checkpoint with 56.9000 mIoU at 8000 iter is saved to best_mIoU_iter_8000.pth.
2025/03/29 16:34:41 - mmengine - INFO - Iter(train) [ 8050/20000]  base_lr: 6.2911e-05 lr: 6.2911e-05  eta: 5:31:35  time: 1.6733  data_time: 0.0156  memory: 10149  loss: 33.2168  decode.loss_cls: 0.4554  decode.loss_mask: 1.3700  decode.loss_dice: 1.4462  decode.d0.loss_cls: 0.5169  decode.d0.loss_mask: 1.4807  decode.d0.loss_dice: 1.5837  decode.d1.loss_cls: 0.4730  decode.d1.loss_mask: 1.3572  decode.d1.loss_dice: 1.5022  decode.d2.loss_cls: 0.4762  decode.d2.loss_mask: 1.3446  decode.d2.loss_dice: 1.4335  decode.d3.loss_cls: 0.4328  decode.d3.loss_mask: 1.3976  decode.d3.loss_dice: 1.4880  decode.d4.loss_cls: 0.4605  decode.d4.loss_mask: 1.3759  decode.d4.loss_dice: 1.4745  decode.d5.loss_cls: 0.4551  decode.d5.loss_mask: 1.3184  decode.d5.loss_dice: 1.4495  decode.d6.loss_cls: 0.4748  decode.d6.loss_mask: 1.3640  decode.d6.loss_dice: 1.4430  decode.d7.loss_cls: 0.4315  decode.d7.loss_mask: 1.4118  decode.d7.loss_dice: 1.5082  decode.d8.loss_cls: 0.4589  decode.d8.loss_mask: 1.3769  decode.d8.loss_dice: 1.4559
2025/03/29 16:36:05 - mmengine - INFO - Iter(train) [ 8100/20000]  base_lr: 6.2674e-05 lr: 6.2674e-05  eta: 5:30:12  time: 1.6746  data_time: 0.0158  memory: 10091  loss: 36.3262  decode.loss_cls: 0.4527  decode.loss_mask: 1.5855  decode.loss_dice: 1.5890  decode.d0.loss_cls: 0.5697  decode.d0.loss_mask: 1.5940  decode.d0.loss_dice: 1.6442  decode.d1.loss_cls: 0.4690  decode.d1.loss_mask: 1.5911  decode.d1.loss_dice: 1.5716  decode.d2.loss_cls: 0.4536  decode.d2.loss_mask: 1.5656  decode.d2.loss_dice: 1.5587  decode.d3.loss_cls: 0.4895  decode.d3.loss_mask: 1.5632  decode.d3.loss_dice: 1.5603  decode.d4.loss_cls: 0.5017  decode.d4.loss_mask: 1.5531  decode.d4.loss_dice: 1.5978  decode.d5.loss_cls: 0.4613  decode.d5.loss_mask: 1.5284  decode.d5.loss_dice: 1.6097  decode.d6.loss_cls: 0.4408  decode.d6.loss_mask: 1.5617  decode.d6.loss_dice: 1.6010  decode.d7.loss_cls: 0.4855  decode.d7.loss_mask: 1.5678  decode.d7.loss_dice: 1.5800  decode.d8.loss_cls: 0.4495  decode.d8.loss_mask: 1.5497  decode.d8.loss_dice: 1.5805
2025/03/29 16:37:28 - mmengine - INFO - Iter(train) [ 8150/20000]  base_lr: 6.2437e-05 lr: 6.2437e-05  eta: 5:28:49  time: 1.6671  data_time: 0.0155  memory: 10154  loss: 31.2747  decode.loss_cls: 0.3685  decode.loss_mask: 1.3002  decode.loss_dice: 1.4061  decode.d0.loss_cls: 0.4766  decode.d0.loss_mask: 1.2980  decode.d0.loss_dice: 1.5248  decode.d1.loss_cls: 0.4417  decode.d1.loss_mask: 1.3061  decode.d1.loss_dice: 1.4395  decode.d2.loss_cls: 0.3669  decode.d2.loss_mask: 1.3112  decode.d2.loss_dice: 1.4044  decode.d3.loss_cls: 0.3757  decode.d3.loss_mask: 1.3082  decode.d3.loss_dice: 1.4582  decode.d4.loss_cls: 0.3680  decode.d4.loss_mask: 1.2961  decode.d4.loss_dice: 1.4032  decode.d5.loss_cls: 0.3623  decode.d5.loss_mask: 1.3315  decode.d5.loss_dice: 1.4665  decode.d6.loss_cls: 0.3556  decode.d6.loss_mask: 1.3096  decode.d6.loss_dice: 1.4573  decode.d7.loss_cls: 0.3658  decode.d7.loss_mask: 1.2991  decode.d7.loss_dice: 1.4414  decode.d8.loss_cls: 0.3465  decode.d8.loss_mask: 1.3162  decode.d8.loss_dice: 1.3695
2025/03/29 16:38:52 - mmengine - INFO - Iter(train) [ 8200/20000]  base_lr: 6.2199e-05 lr: 6.2199e-05  eta: 5:27:26  time: 1.6691  data_time: 0.0156  memory: 10143  loss: 31.9115  decode.loss_cls: 0.4069  decode.loss_mask: 1.2650  decode.loss_dice: 1.5270  decode.d0.loss_cls: 0.4170  decode.d0.loss_mask: 1.3012  decode.d0.loss_dice: 1.5905  decode.d1.loss_cls: 0.4025  decode.d1.loss_mask: 1.2588  decode.d1.loss_dice: 1.5091  decode.d2.loss_cls: 0.3690  decode.d2.loss_mask: 1.2832  decode.d2.loss_dice: 1.5029  decode.d3.loss_cls: 0.3873  decode.d3.loss_mask: 1.2744  decode.d3.loss_dice: 1.4905  decode.d4.loss_cls: 0.4038  decode.d4.loss_mask: 1.2798  decode.d4.loss_dice: 1.4961  decode.d5.loss_cls: 0.3778  decode.d5.loss_mask: 1.3099  decode.d5.loss_dice: 1.5281  decode.d6.loss_cls: 0.3707  decode.d6.loss_mask: 1.2941  decode.d6.loss_dice: 1.5165  decode.d7.loss_cls: 0.3646  decode.d7.loss_mask: 1.3028  decode.d7.loss_dice: 1.5457  decode.d8.loss_cls: 0.3486  decode.d8.loss_mask: 1.2753  decode.d8.loss_dice: 1.5122
2025/03/29 16:40:16 - mmengine - INFO - Iter(train) [ 8250/20000]  base_lr: 6.1962e-05 lr: 6.1962e-05  eta: 5:26:04  time: 1.6767  data_time: 0.0156  memory: 10160  loss: 33.7618  decode.loss_cls: 0.3380  decode.loss_mask: 1.5096  decode.loss_dice: 1.5454  decode.d0.loss_cls: 0.3701  decode.d0.loss_mask: 1.5069  decode.d0.loss_dice: 1.6257  decode.d1.loss_cls: 0.2785  decode.d1.loss_mask: 1.5231  decode.d1.loss_dice: 1.5306  decode.d2.loss_cls: 0.2696  decode.d2.loss_mask: 1.5232  decode.d2.loss_dice: 1.5476  decode.d3.loss_cls: 0.2764  decode.d3.loss_mask: 1.4553  decode.d3.loss_dice: 1.5782  decode.d4.loss_cls: 0.3048  decode.d4.loss_mask: 1.5046  decode.d4.loss_dice: 1.5849  decode.d5.loss_cls: 0.3182  decode.d5.loss_mask: 1.4970  decode.d5.loss_dice: 1.5675  decode.d6.loss_cls: 0.3300  decode.d6.loss_mask: 1.5038  decode.d6.loss_dice: 1.5294  decode.d7.loss_cls: 0.2845  decode.d7.loss_mask: 1.5359  decode.d7.loss_dice: 1.5847  decode.d8.loss_cls: 0.3333  decode.d8.loss_mask: 1.4883  decode.d8.loss_dice: 1.5168
2025/03/29 16:41:39 - mmengine - INFO - Iter(train) [ 8300/20000]  base_lr: 6.1725e-05 lr: 6.1725e-05  eta: 5:24:41  time: 1.6819  data_time: 0.0156  memory: 10088  loss: 34.4723  decode.loss_cls: 0.4731  decode.loss_mask: 1.3100  decode.loss_dice: 1.6532  decode.d0.loss_cls: 0.5094  decode.d0.loss_mask: 1.3785  decode.d0.loss_dice: 1.7248  decode.d1.loss_cls: 0.4273  decode.d1.loss_mask: 1.3626  decode.d1.loss_dice: 1.6793  decode.d2.loss_cls: 0.4112  decode.d2.loss_mask: 1.3572  decode.d2.loss_dice: 1.6427  decode.d3.loss_cls: 0.4615  decode.d3.loss_mask: 1.3457  decode.d3.loss_dice: 1.6260  decode.d4.loss_cls: 0.4409  decode.d4.loss_mask: 1.3376  decode.d4.loss_dice: 1.6286  decode.d5.loss_cls: 0.3986  decode.d5.loss_mask: 1.3396  decode.d5.loss_dice: 1.6477  decode.d6.loss_cls: 0.4444  decode.d6.loss_mask: 1.3430  decode.d6.loss_dice: 1.6556  decode.d7.loss_cls: 0.4590  decode.d7.loss_mask: 1.3438  decode.d7.loss_dice: 1.6612  decode.d8.loss_cls: 0.4432  decode.d8.loss_mask: 1.3205  decode.d8.loss_dice: 1.6460
2025/03/29 16:43:09 - mmengine - INFO - Iter(train) [ 8350/20000]  base_lr: 6.1487e-05 lr: 6.1487e-05  eta: 5:23:26  time: 1.8215  data_time: 0.0163  memory: 10091  loss: 33.8754  decode.loss_cls: 0.6170  decode.loss_mask: 1.1655  decode.loss_dice: 1.6448  decode.d0.loss_cls: 0.5727  decode.d0.loss_mask: 1.1698  decode.d0.loss_dice: 1.7657  decode.d1.loss_cls: 0.5890  decode.d1.loss_mask: 1.1200  decode.d1.loss_dice: 1.5802  decode.d2.loss_cls: 0.5880  decode.d2.loss_mask: 1.1417  decode.d2.loss_dice: 1.5868  decode.d3.loss_cls: 0.5696  decode.d3.loss_mask: 1.1721  decode.d3.loss_dice: 1.6330  decode.d4.loss_cls: 0.6219  decode.d4.loss_mask: 1.1270  decode.d4.loss_dice: 1.6057  decode.d5.loss_cls: 0.5966  decode.d5.loss_mask: 1.1572  decode.d5.loss_dice: 1.6214  decode.d6.loss_cls: 0.6291  decode.d6.loss_mask: 1.1784  decode.d6.loss_dice: 1.6210  decode.d7.loss_cls: 0.5878  decode.d7.loss_mask: 1.1758  decode.d7.loss_dice: 1.6249  decode.d8.loss_cls: 0.6684  decode.d8.loss_mask: 1.1525  decode.d8.loss_dice: 1.5918
2025/03/29 16:44:39 - mmengine - INFO - Iter(train) [ 8400/20000]  base_lr: 6.1250e-05 lr: 6.1250e-05  eta: 5:22:13  time: 1.8135  data_time: 0.0158  memory: 10087  loss: 36.2190  decode.loss_cls: 0.5355  decode.loss_mask: 1.5954  decode.loss_dice: 1.5639  decode.d0.loss_cls: 0.5811  decode.d0.loss_mask: 1.5761  decode.d0.loss_dice: 1.6240  decode.d1.loss_cls: 0.4201  decode.d1.loss_mask: 1.6281  decode.d1.loss_dice: 1.5645  decode.d2.loss_cls: 0.4211  decode.d2.loss_mask: 1.6146  decode.d2.loss_dice: 1.5437  decode.d3.loss_cls: 0.4314  decode.d3.loss_mask: 1.6062  decode.d3.loss_dice: 1.5400  decode.d4.loss_cls: 0.4754  decode.d4.loss_mask: 1.6167  decode.d4.loss_dice: 1.5518  decode.d5.loss_cls: 0.4427  decode.d5.loss_mask: 1.5758  decode.d5.loss_dice: 1.5258  decode.d6.loss_cls: 0.4548  decode.d6.loss_mask: 1.5483  decode.d6.loss_dice: 1.5166  decode.d7.loss_cls: 0.4265  decode.d7.loss_mask: 1.6658  decode.d7.loss_dice: 1.5654  decode.d8.loss_cls: 0.4294  decode.d8.loss_mask: 1.6110  decode.d8.loss_dice: 1.5671
2025/03/29 16:46:10 - mmengine - INFO - Iter(train) [ 8450/20000]  base_lr: 6.1012e-05 lr: 6.1012e-05  eta: 5:21:00  time: 1.8147  data_time: 0.0157  memory: 10148  loss: 34.6592  decode.loss_cls: 0.4786  decode.loss_mask: 1.5547  decode.loss_dice: 1.4552  decode.d0.loss_cls: 0.5621  decode.d0.loss_mask: 1.4861  decode.d0.loss_dice: 1.5746  decode.d1.loss_cls: 0.4708  decode.d1.loss_mask: 1.4972  decode.d1.loss_dice: 1.4530  decode.d2.loss_cls: 0.4125  decode.d2.loss_mask: 1.6031  decode.d2.loss_dice: 1.4700  decode.d3.loss_cls: 0.4223  decode.d3.loss_mask: 1.5809  decode.d3.loss_dice: 1.5004  decode.d4.loss_cls: 0.4661  decode.d4.loss_mask: 1.5193  decode.d4.loss_dice: 1.4507  decode.d5.loss_cls: 0.4244  decode.d5.loss_mask: 1.5198  decode.d5.loss_dice: 1.4864  decode.d6.loss_cls: 0.4060  decode.d6.loss_mask: 1.5771  decode.d6.loss_dice: 1.4736  decode.d7.loss_cls: 0.4167  decode.d7.loss_mask: 1.5393  decode.d7.loss_dice: 1.4339  decode.d8.loss_cls: 0.3984  decode.d8.loss_mask: 1.5562  decode.d8.loss_dice: 1.4700
2025/03/29 16:47:41 - mmengine - INFO - Iter(train) [ 8500/20000]  base_lr: 6.0774e-05 lr: 6.0774e-05  eta: 5:19:47  time: 1.8123  data_time: 0.0161  memory: 10095  loss: 36.5863  decode.loss_cls: 0.5057  decode.loss_mask: 1.5437  decode.loss_dice: 1.5637  decode.d0.loss_cls: 0.5989  decode.d0.loss_mask: 1.5361  decode.d0.loss_dice: 1.6516  decode.d1.loss_cls: 0.4631  decode.d1.loss_mask: 1.5290  decode.d1.loss_dice: 1.5685  decode.d2.loss_cls: 0.4721  decode.d2.loss_mask: 1.5733  decode.d2.loss_dice: 1.5964  decode.d3.loss_cls: 0.5060  decode.d3.loss_mask: 1.5582  decode.d3.loss_dice: 1.5971  decode.d4.loss_cls: 0.5204  decode.d4.loss_mask: 1.5933  decode.d4.loss_dice: 1.5740  decode.d5.loss_cls: 0.4940  decode.d5.loss_mask: 1.6351  decode.d5.loss_dice: 1.6014  decode.d6.loss_cls: 0.5295  decode.d6.loss_mask: 1.5396  decode.d6.loss_dice: 1.5724  decode.d7.loss_cls: 0.4969  decode.d7.loss_mask: 1.6113  decode.d7.loss_dice: 1.5432  decode.d8.loss_cls: 0.4974  decode.d8.loss_mask: 1.5649  decode.d8.loss_dice: 1.5494
2025/03/29 16:49:11 - mmengine - INFO - Iter(train) [ 8550/20000]  base_lr: 6.0537e-05 lr: 6.0537e-05  eta: 5:18:32  time: 1.7911  data_time: 0.0165  memory: 10137  loss: 33.3597  decode.loss_cls: 0.3862  decode.loss_mask: 1.3625  decode.loss_dice: 1.5562  decode.d0.loss_cls: 0.4444  decode.d0.loss_mask: 1.4053  decode.d0.loss_dice: 1.6084  decode.d1.loss_cls: 0.4200  decode.d1.loss_mask: 1.3808  decode.d1.loss_dice: 1.5549  decode.d2.loss_cls: 0.4168  decode.d2.loss_mask: 1.3617  decode.d2.loss_dice: 1.5203  decode.d3.loss_cls: 0.4072  decode.d3.loss_mask: 1.3806  decode.d3.loss_dice: 1.5333  decode.d4.loss_cls: 0.4602  decode.d4.loss_mask: 1.3729  decode.d4.loss_dice: 1.5256  decode.d5.loss_cls: 0.3717  decode.d5.loss_mask: 1.4075  decode.d5.loss_dice: 1.5195  decode.d6.loss_cls: 0.3967  decode.d6.loss_mask: 1.4098  decode.d6.loss_dice: 1.5220  decode.d7.loss_cls: 0.4229  decode.d7.loss_mask: 1.3802  decode.d7.loss_dice: 1.5434  decode.d8.loss_cls: 0.3619  decode.d8.loss_mask: 1.3938  decode.d8.loss_dice: 1.5330
2025/03/29 16:50:41 - mmengine - INFO - Iter(train) [ 8600/20000]  base_lr: 6.0299e-05 lr: 6.0299e-05  eta: 5:17:17  time: 1.8021  data_time: 0.0171  memory: 10141  loss: 35.2565  decode.loss_cls: 0.4465  decode.loss_mask: 1.5148  decode.loss_dice: 1.5062  decode.d0.loss_cls: 0.5366  decode.d0.loss_mask: 1.5215  decode.d0.loss_dice: 1.6349  decode.d1.loss_cls: 0.5182  decode.d1.loss_mask: 1.5145  decode.d1.loss_dice: 1.5108  decode.d2.loss_cls: 0.5146  decode.d2.loss_mask: 1.5131  decode.d2.loss_dice: 1.4934  decode.d3.loss_cls: 0.4705  decode.d3.loss_mask: 1.5384  decode.d3.loss_dice: 1.5230  decode.d4.loss_cls: 0.4787  decode.d4.loss_mask: 1.5389  decode.d4.loss_dice: 1.4844  decode.d5.loss_cls: 0.4416  decode.d5.loss_mask: 1.5263  decode.d5.loss_dice: 1.5075  decode.d6.loss_cls: 0.4632  decode.d6.loss_mask: 1.5407  decode.d6.loss_dice: 1.5204  decode.d7.loss_cls: 0.4394  decode.d7.loss_mask: 1.5568  decode.d7.loss_dice: 1.5259  decode.d8.loss_cls: 0.4312  decode.d8.loss_mask: 1.5459  decode.d8.loss_dice: 1.4987
2025/03/29 16:52:10 - mmengine - INFO - Iter(train) [ 8650/20000]  base_lr: 6.0060e-05 lr: 6.0060e-05  eta: 5:16:01  time: 1.7754  data_time: 0.0158  memory: 10091  loss: 38.0640  decode.loss_cls: 0.5001  decode.loss_mask: 1.6940  decode.loss_dice: 1.6221  decode.d0.loss_cls: 0.5714  decode.d0.loss_mask: 1.6577  decode.d0.loss_dice: 1.7692  decode.d1.loss_cls: 0.4767  decode.d1.loss_mask: 1.6444  decode.d1.loss_dice: 1.6606  decode.d2.loss_cls: 0.4509  decode.d2.loss_mask: 1.6541  decode.d2.loss_dice: 1.6180  decode.d3.loss_cls: 0.4842  decode.d3.loss_mask: 1.6633  decode.d3.loss_dice: 1.6280  decode.d4.loss_cls: 0.5005  decode.d4.loss_mask: 1.6634  decode.d4.loss_dice: 1.6278  decode.d5.loss_cls: 0.5436  decode.d5.loss_mask: 1.6510  decode.d5.loss_dice: 1.6166  decode.d6.loss_cls: 0.5025  decode.d6.loss_mask: 1.6461  decode.d6.loss_dice: 1.6007  decode.d7.loss_cls: 0.4909  decode.d7.loss_mask: 1.6557  decode.d7.loss_dice: 1.6323  decode.d8.loss_cls: 0.4614  decode.d8.loss_mask: 1.7117  decode.d8.loss_dice: 1.6652
2025/03/29 16:53:31 - mmengine - INFO - Iter(train) [ 8700/20000]  base_lr: 5.9822e-05 lr: 5.9822e-05  eta: 5:14:35  time: 1.6737  data_time: 0.0162  memory: 10139  loss: 35.2890  decode.loss_cls: 0.5310  decode.loss_mask: 1.3838  decode.loss_dice: 1.5626  decode.d0.loss_cls: 0.5734  decode.d0.loss_mask: 1.4671  decode.d0.loss_dice: 1.6381  decode.d1.loss_cls: 0.5300  decode.d1.loss_mask: 1.3614  decode.d1.loss_dice: 1.5491  decode.d2.loss_cls: 0.5651  decode.d2.loss_mask: 1.3525  decode.d2.loss_dice: 1.5755  decode.d3.loss_cls: 0.5209  decode.d3.loss_mask: 1.4209  decode.d3.loss_dice: 1.5899  decode.d4.loss_cls: 0.5516  decode.d4.loss_mask: 1.3830  decode.d4.loss_dice: 1.5897  decode.d5.loss_cls: 0.5787  decode.d5.loss_mask: 1.4208  decode.d5.loss_dice: 1.5861  decode.d6.loss_cls: 0.5533  decode.d6.loss_mask: 1.3863  decode.d6.loss_dice: 1.5627  decode.d7.loss_cls: 0.5043  decode.d7.loss_mask: 1.4285  decode.d7.loss_dice: 1.5835  decode.d8.loss_cls: 0.5354  decode.d8.loss_mask: 1.3972  decode.d8.loss_dice: 1.6066
2025/03/29 16:54:55 - mmengine - INFO - Iter(train) [ 8750/20000]  base_lr: 5.9584e-05 lr: 5.9584e-05  eta: 5:13:11  time: 1.6713  data_time: 0.0159  memory: 10095  loss: 33.6090  decode.loss_cls: 0.4623  decode.loss_mask: 1.4020  decode.loss_dice: 1.4521  decode.d0.loss_cls: 0.5418  decode.d0.loss_mask: 1.4789  decode.d0.loss_dice: 1.5614  decode.d1.loss_cls: 0.4611  decode.d1.loss_mask: 1.4410  decode.d1.loss_dice: 1.4857  decode.d2.loss_cls: 0.4473  decode.d2.loss_mask: 1.4017  decode.d2.loss_dice: 1.4007  decode.d3.loss_cls: 0.4885  decode.d3.loss_mask: 1.4287  decode.d3.loss_dice: 1.4569  decode.d4.loss_cls: 0.4220  decode.d4.loss_mask: 1.4375  decode.d4.loss_dice: 1.4436  decode.d5.loss_cls: 0.4065  decode.d5.loss_mask: 1.4767  decode.d5.loss_dice: 1.4848  decode.d6.loss_cls: 0.4201  decode.d6.loss_mask: 1.4397  decode.d6.loss_dice: 1.4748  decode.d7.loss_cls: 0.4232  decode.d7.loss_mask: 1.4446  decode.d7.loss_dice: 1.4982  decode.d8.loss_cls: 0.4407  decode.d8.loss_mask: 1.4380  decode.d8.loss_dice: 1.4485
2025/03/29 16:56:18 - mmengine - INFO - Iter(train) [ 8800/20000]  base_lr: 5.9346e-05 lr: 5.9346e-05  eta: 5:11:48  time: 1.6719  data_time: 0.0156  memory: 10138  loss: 36.8529  decode.loss_cls: 0.5679  decode.loss_mask: 1.5950  decode.loss_dice: 1.5652  decode.d0.loss_cls: 0.6438  decode.d0.loss_mask: 1.5069  decode.d0.loss_dice: 1.6531  decode.d1.loss_cls: 0.5472  decode.d1.loss_mask: 1.5014  decode.d1.loss_dice: 1.5695  decode.d2.loss_cls: 0.6050  decode.d2.loss_mask: 1.4887  decode.d2.loss_dice: 1.5300  decode.d3.loss_cls: 0.5921  decode.d3.loss_mask: 1.5297  decode.d3.loss_dice: 1.5567  decode.d4.loss_cls: 0.5636  decode.d4.loss_mask: 1.5066  decode.d4.loss_dice: 1.5705  decode.d5.loss_cls: 0.6045  decode.d5.loss_mask: 1.4972  decode.d5.loss_dice: 1.5657  decode.d6.loss_cls: 0.6104  decode.d6.loss_mask: 1.5125  decode.d6.loss_dice: 1.5906  decode.d7.loss_cls: 0.5747  decode.d7.loss_mask: 1.5212  decode.d7.loss_dice: 1.5853  decode.d8.loss_cls: 0.5469  decode.d8.loss_mask: 1.5586  decode.d8.loss_dice: 1.5925
2025/03/29 16:57:42 - mmengine - INFO - Iter(train) [ 8850/20000]  base_lr: 5.9107e-05 lr: 5.9107e-05  eta: 5:10:25  time: 1.6713  data_time: 0.0155  memory: 10097  loss: 36.9799  decode.loss_cls: 0.5144  decode.loss_mask: 1.5980  decode.loss_dice: 1.5049  decode.d0.loss_cls: 0.6968  decode.d0.loss_mask: 1.6117  decode.d0.loss_dice: 1.6577  decode.d1.loss_cls: 0.5234  decode.d1.loss_mask: 1.6027  decode.d1.loss_dice: 1.5912  decode.d2.loss_cls: 0.5136  decode.d2.loss_mask: 1.5846  decode.d2.loss_dice: 1.5221  decode.d3.loss_cls: 0.5674  decode.d3.loss_mask: 1.5978  decode.d3.loss_dice: 1.5450  decode.d4.loss_cls: 0.5055  decode.d4.loss_mask: 1.6307  decode.d4.loss_dice: 1.5236  decode.d5.loss_cls: 0.5539  decode.d5.loss_mask: 1.6298  decode.d5.loss_dice: 1.4947  decode.d6.loss_cls: 0.5343  decode.d6.loss_mask: 1.6196  decode.d6.loss_dice: 1.4742  decode.d7.loss_cls: 0.5512  decode.d7.loss_mask: 1.6269  decode.d7.loss_dice: 1.5044  decode.d8.loss_cls: 0.5044  decode.d8.loss_mask: 1.6396  decode.d8.loss_dice: 1.5556
2025/03/29 16:59:06 - mmengine - INFO - Iter(train) [ 8900/20000]  base_lr: 5.8869e-05 lr: 5.8869e-05  eta: 5:09:01  time: 1.6684  data_time: 0.0158  memory: 10086  loss: 31.1794  decode.loss_cls: 0.4633  decode.loss_mask: 1.2353  decode.loss_dice: 1.3931  decode.d0.loss_cls: 0.4963  decode.d0.loss_mask: 1.2858  decode.d0.loss_dice: 1.5431  decode.d1.loss_cls: 0.4915  decode.d1.loss_mask: 1.2289  decode.d1.loss_dice: 1.3859  decode.d2.loss_cls: 0.4659  decode.d2.loss_mask: 1.2417  decode.d2.loss_dice: 1.3630  decode.d3.loss_cls: 0.4778  decode.d3.loss_mask: 1.2311  decode.d3.loss_dice: 1.3952  decode.d4.loss_cls: 0.4984  decode.d4.loss_mask: 1.2068  decode.d4.loss_dice: 1.3505  decode.d5.loss_cls: 0.4870  decode.d5.loss_mask: 1.2236  decode.d5.loss_dice: 1.3620  decode.d6.loss_cls: 0.5018  decode.d6.loss_mask: 1.2136  decode.d6.loss_dice: 1.3930  decode.d7.loss_cls: 0.4989  decode.d7.loss_mask: 1.2311  decode.d7.loss_dice: 1.3840  decode.d8.loss_cls: 0.5103  decode.d8.loss_mask: 1.2195  decode.d8.loss_dice: 1.4011
2025/03/29 17:00:29 - mmengine - INFO - Iter(train) [ 8950/20000]  base_lr: 5.8630e-05 lr: 5.8630e-05  eta: 5:07:38  time: 1.6667  data_time: 0.0155  memory: 10089  loss: 34.8487  decode.loss_cls: 0.3860  decode.loss_mask: 1.5714  decode.loss_dice: 1.5119  decode.d0.loss_cls: 0.5372  decode.d0.loss_mask: 1.5397  decode.d0.loss_dice: 1.5808  decode.d1.loss_cls: 0.3776  decode.d1.loss_mask: 1.5578  decode.d1.loss_dice: 1.5282  decode.d2.loss_cls: 0.3869  decode.d2.loss_mask: 1.5761  decode.d2.loss_dice: 1.5127  decode.d3.loss_cls: 0.3769  decode.d3.loss_mask: 1.5476  decode.d3.loss_dice: 1.5246  decode.d4.loss_cls: 0.4064  decode.d4.loss_mask: 1.5387  decode.d4.loss_dice: 1.5158  decode.d5.loss_cls: 0.3716  decode.d5.loss_mask: 1.5563  decode.d5.loss_dice: 1.5093  decode.d6.loss_cls: 0.3895  decode.d6.loss_mask: 1.5649  decode.d6.loss_dice: 1.5277  decode.d7.loss_cls: 0.4101  decode.d7.loss_mask: 1.5632  decode.d7.loss_dice: 1.5175  decode.d8.loss_cls: 0.3846  decode.d8.loss_mask: 1.5419  decode.d8.loss_dice: 1.5359
2025/03/29 17:01:53 - mmengine - INFO - Exp name: r2u_20250329_122140
2025/03/29 17:01:53 - mmengine - INFO - Iter(train) [ 9000/20000]  base_lr: 5.8391e-05 lr: 5.8391e-05  eta: 5:06:14  time: 1.6721  data_time: 0.0159  memory: 10147  loss: 32.7602  decode.loss_cls: 0.3824  decode.loss_mask: 1.4843  decode.loss_dice: 1.4142  decode.d0.loss_cls: 0.4625  decode.d0.loss_mask: 1.5311  decode.d0.loss_dice: 1.4407  decode.d1.loss_cls: 0.3575  decode.d1.loss_mask: 1.5087  decode.d1.loss_dice: 1.4247  decode.d2.loss_cls: 0.3681  decode.d2.loss_mask: 1.5322  decode.d2.loss_dice: 1.3747  decode.d3.loss_cls: 0.3747  decode.d3.loss_mask: 1.5129  decode.d3.loss_dice: 1.3930  decode.d4.loss_cls: 0.4105  decode.d4.loss_mask: 1.4486  decode.d4.loss_dice: 1.4025  decode.d5.loss_cls: 0.3796  decode.d5.loss_mask: 1.4628  decode.d5.loss_dice: 1.4044  decode.d6.loss_cls: 0.3567  decode.d6.loss_mask: 1.4735  decode.d6.loss_dice: 1.3919  decode.d7.loss_cls: 0.3660  decode.d7.loss_mask: 1.4634  decode.d7.loss_dice: 1.4062  decode.d8.loss_cls: 0.3780  decode.d8.loss_mask: 1.4654  decode.d8.loss_dice: 1.3889
2025/03/29 17:03:16 - mmengine - INFO - Iter(train) [ 9050/20000]  base_lr: 5.8152e-05 lr: 5.8152e-05  eta: 5:04:51  time: 1.6674  data_time: 0.0155  memory: 10140  loss: 37.4848  decode.loss_cls: 0.4606  decode.loss_mask: 1.6844  decode.loss_dice: 1.6283  decode.d0.loss_cls: 0.5641  decode.d0.loss_mask: 1.6118  decode.d0.loss_dice: 1.6394  decode.d1.loss_cls: 0.4336  decode.d1.loss_mask: 1.6218  decode.d1.loss_dice: 1.6140  decode.d2.loss_cls: 0.4793  decode.d2.loss_mask: 1.6611  decode.d2.loss_dice: 1.5952  decode.d3.loss_cls: 0.4384  decode.d3.loss_mask: 1.6852  decode.d3.loss_dice: 1.6095  decode.d4.loss_cls: 0.4445  decode.d4.loss_mask: 1.6888  decode.d4.loss_dice: 1.6085  decode.d5.loss_cls: 0.4697  decode.d5.loss_mask: 1.6328  decode.d5.loss_dice: 1.5976  decode.d6.loss_cls: 0.4914  decode.d6.loss_mask: 1.6557  decode.d6.loss_dice: 1.5744  decode.d7.loss_cls: 0.5185  decode.d7.loss_mask: 1.7082  decode.d7.loss_dice: 1.6037  decode.d8.loss_cls: 0.4734  decode.d8.loss_mask: 1.6842  decode.d8.loss_dice: 1.6066
2025/03/29 17:04:40 - mmengine - INFO - Iter(train) [ 9100/20000]  base_lr: 5.7913e-05 lr: 5.7913e-05  eta: 5:03:28  time: 1.6817  data_time: 0.0160  memory: 10143  loss: 32.6190  decode.loss_cls: 0.3982  decode.loss_mask: 1.3442  decode.loss_dice: 1.4665  decode.d0.loss_cls: 0.4861  decode.d0.loss_mask: 1.4191  decode.d0.loss_dice: 1.5928  decode.d1.loss_cls: 0.3474  decode.d1.loss_mask: 1.3518  decode.d1.loss_dice: 1.4602  decode.d2.loss_cls: 0.3671  decode.d2.loss_mask: 1.3529  decode.d2.loss_dice: 1.4378  decode.d3.loss_cls: 0.3882  decode.d3.loss_mask: 1.3924  decode.d3.loss_dice: 1.4931  decode.d4.loss_cls: 0.3507  decode.d4.loss_mask: 1.3750  decode.d4.loss_dice: 1.4769  decode.d5.loss_cls: 0.3259  decode.d5.loss_mask: 1.3633  decode.d5.loss_dice: 1.5065  decode.d6.loss_cls: 0.3377  decode.d6.loss_mask: 1.4172  decode.d6.loss_dice: 1.5202  decode.d7.loss_cls: 0.4057  decode.d7.loss_mask: 1.3895  decode.d7.loss_dice: 1.5176  decode.d8.loss_cls: 0.4035  decode.d8.loss_mask: 1.4081  decode.d8.loss_dice: 1.5234
2025/03/29 17:06:04 - mmengine - INFO - Iter(train) [ 9150/20000]  base_lr: 5.7674e-05 lr: 5.7674e-05  eta: 5:02:04  time: 1.6675  data_time: 0.0160  memory: 10090  loss: 34.2042  decode.loss_cls: 0.5305  decode.loss_mask: 1.3927  decode.loss_dice: 1.4914  decode.d0.loss_cls: 0.5922  decode.d0.loss_mask: 1.3576  decode.d0.loss_dice: 1.5438  decode.d1.loss_cls: 0.5326  decode.d1.loss_mask: 1.3398  decode.d1.loss_dice: 1.4812  decode.d2.loss_cls: 0.5376  decode.d2.loss_mask: 1.3869  decode.d2.loss_dice: 1.4944  decode.d3.loss_cls: 0.4901  decode.d3.loss_mask: 1.4109  decode.d3.loss_dice: 1.4979  decode.d4.loss_cls: 0.4824  decode.d4.loss_mask: 1.4171  decode.d4.loss_dice: 1.4854  decode.d5.loss_cls: 0.5209  decode.d5.loss_mask: 1.3872  decode.d5.loss_dice: 1.5007  decode.d6.loss_cls: 0.5312  decode.d6.loss_mask: 1.3895  decode.d6.loss_dice: 1.5091  decode.d7.loss_cls: 0.5177  decode.d7.loss_mask: 1.4258  decode.d7.loss_dice: 1.5000  decode.d8.loss_cls: 0.4892  decode.d8.loss_mask: 1.4486  decode.d8.loss_dice: 1.5199
2025/03/29 17:07:28 - mmengine - INFO - Iter(train) [ 9200/20000]  base_lr: 5.7435e-05 lr: 5.7435e-05  eta: 5:00:41  time: 1.6685  data_time: 0.0157  memory: 10150  loss: 34.8984  decode.loss_cls: 0.4125  decode.loss_mask: 1.4846  decode.loss_dice: 1.5628  decode.d0.loss_cls: 0.5075  decode.d0.loss_mask: 1.5035  decode.d0.loss_dice: 1.6219  decode.d1.loss_cls: 0.4738  decode.d1.loss_mask: 1.4708  decode.d1.loss_dice: 1.5688  decode.d2.loss_cls: 0.4080  decode.d2.loss_mask: 1.4878  decode.d2.loss_dice: 1.5808  decode.d3.loss_cls: 0.4347  decode.d3.loss_mask: 1.4624  decode.d3.loss_dice: 1.5895  decode.d4.loss_cls: 0.4399  decode.d4.loss_mask: 1.4722  decode.d4.loss_dice: 1.5725  decode.d5.loss_cls: 0.4271  decode.d5.loss_mask: 1.4454  decode.d5.loss_dice: 1.5608  decode.d6.loss_cls: 0.4223  decode.d6.loss_mask: 1.4832  decode.d6.loss_dice: 1.5723  decode.d7.loss_cls: 0.3998  decode.d7.loss_mask: 1.4727  decode.d7.loss_dice: 1.5693  decode.d8.loss_cls: 0.4508  decode.d8.loss_mask: 1.4586  decode.d8.loss_dice: 1.5826
2025/03/29 17:08:51 - mmengine - INFO - Iter(train) [ 9250/20000]  base_lr: 5.7195e-05 lr: 5.7195e-05  eta: 4:59:18  time: 1.6780  data_time: 0.0165  memory: 10139  loss: 38.3072  decode.loss_cls: 0.5553  decode.loss_mask: 1.6135  decode.loss_dice: 1.6330  decode.d0.loss_cls: 0.6269  decode.d0.loss_mask: 1.5550  decode.d0.loss_dice: 1.7071  decode.d1.loss_cls: 0.5889  decode.d1.loss_mask: 1.6161  decode.d1.loss_dice: 1.6545  decode.d2.loss_cls: 0.6048  decode.d2.loss_mask: 1.5552  decode.d2.loss_dice: 1.6055  decode.d3.loss_cls: 0.5473  decode.d3.loss_mask: 1.5573  decode.d3.loss_dice: 1.6138  decode.d4.loss_cls: 0.5645  decode.d4.loss_mask: 1.5842  decode.d4.loss_dice: 1.6624  decode.d5.loss_cls: 0.5545  decode.d5.loss_mask: 1.6181  decode.d5.loss_dice: 1.6652  decode.d6.loss_cls: 0.5034  decode.d6.loss_mask: 1.6901  decode.d6.loss_dice: 1.6710  decode.d7.loss_cls: 0.5788  decode.d7.loss_mask: 1.6121  decode.d7.loss_dice: 1.6695  decode.d8.loss_cls: 0.5468  decode.d8.loss_mask: 1.6580  decode.d8.loss_dice: 1.6944
2025/03/29 17:10:15 - mmengine - INFO - Iter(train) [ 9300/20000]  base_lr: 5.6956e-05 lr: 5.6956e-05  eta: 4:57:54  time: 1.6675  data_time: 0.0158  memory: 10143  loss: 31.1545  decode.loss_cls: 0.3504  decode.loss_mask: 1.3052  decode.loss_dice: 1.4177  decode.d0.loss_cls: 0.4471  decode.d0.loss_mask: 1.3477  decode.d0.loss_dice: 1.4589  decode.d1.loss_cls: 0.3887  decode.d1.loss_mask: 1.2833  decode.d1.loss_dice: 1.4118  decode.d2.loss_cls: 0.4119  decode.d2.loss_mask: 1.3206  decode.d2.loss_dice: 1.4233  decode.d3.loss_cls: 0.4000  decode.d3.loss_mask: 1.2641  decode.d3.loss_dice: 1.3821  decode.d4.loss_cls: 0.4005  decode.d4.loss_mask: 1.3106  decode.d4.loss_dice: 1.4330  decode.d5.loss_cls: 0.3817  decode.d5.loss_mask: 1.2895  decode.d5.loss_dice: 1.4042  decode.d6.loss_cls: 0.3907  decode.d6.loss_mask: 1.3207  decode.d6.loss_dice: 1.4173  decode.d7.loss_cls: 0.3653  decode.d7.loss_mask: 1.3067  decode.d7.loss_dice: 1.4066  decode.d8.loss_cls: 0.3669  decode.d8.loss_mask: 1.3126  decode.d8.loss_dice: 1.4354
2025/03/29 17:11:38 - mmengine - INFO - Iter(train) [ 9350/20000]  base_lr: 5.6716e-05 lr: 5.6716e-05  eta: 4:56:30  time: 1.6666  data_time: 0.0155  memory: 10153  loss: 33.8066  decode.loss_cls: 0.3966  decode.loss_mask: 1.5331  decode.loss_dice: 1.4701  decode.d0.loss_cls: 0.5461  decode.d0.loss_mask: 1.5607  decode.d0.loss_dice: 1.4676  decode.d1.loss_cls: 0.3943  decode.d1.loss_mask: 1.5201  decode.d1.loss_dice: 1.4812  decode.d2.loss_cls: 0.3963  decode.d2.loss_mask: 1.5039  decode.d2.loss_dice: 1.4606  decode.d3.loss_cls: 0.4098  decode.d3.loss_mask: 1.4919  decode.d3.loss_dice: 1.4746  decode.d4.loss_cls: 0.4417  decode.d4.loss_mask: 1.4544  decode.d4.loss_dice: 1.4323  decode.d5.loss_cls: 0.3698  decode.d5.loss_mask: 1.4979  decode.d5.loss_dice: 1.4818  decode.d6.loss_cls: 0.4082  decode.d6.loss_mask: 1.4571  decode.d6.loss_dice: 1.4508  decode.d7.loss_cls: 0.3878  decode.d7.loss_mask: 1.4927  decode.d7.loss_dice: 1.4772  decode.d8.loss_cls: 0.3701  decode.d8.loss_mask: 1.4916  decode.d8.loss_dice: 1.4863
2025/03/29 17:13:02 - mmengine - INFO - Iter(train) [ 9400/20000]  base_lr: 5.6477e-05 lr: 5.6477e-05  eta: 4:55:07  time: 1.6708  data_time: 0.0157  memory: 10139  loss: 35.2405  decode.loss_cls: 0.4317  decode.loss_mask: 1.5371  decode.loss_dice: 1.5521  decode.d0.loss_cls: 0.4711  decode.d0.loss_mask: 1.5547  decode.d0.loss_dice: 1.6066  decode.d1.loss_cls: 0.4094  decode.d1.loss_mask: 1.5231  decode.d1.loss_dice: 1.5820  decode.d2.loss_cls: 0.3765  decode.d2.loss_mask: 1.5147  decode.d2.loss_dice: 1.5414  decode.d3.loss_cls: 0.4144  decode.d3.loss_mask: 1.5150  decode.d3.loss_dice: 1.5523  decode.d4.loss_cls: 0.3993  decode.d4.loss_mask: 1.5311  decode.d4.loss_dice: 1.5314  decode.d5.loss_cls: 0.4313  decode.d5.loss_mask: 1.5197  decode.d5.loss_dice: 1.5570  decode.d6.loss_cls: 0.4700  decode.d6.loss_mask: 1.5169  decode.d6.loss_dice: 1.5365  decode.d7.loss_cls: 0.4447  decode.d7.loss_mask: 1.5855  decode.d7.loss_dice: 1.5597  decode.d8.loss_cls: 0.4365  decode.d8.loss_mask: 1.5642  decode.d8.loss_dice: 1.5745
2025/03/29 17:14:25 - mmengine - INFO - Iter(train) [ 9450/20000]  base_lr: 5.6237e-05 lr: 5.6237e-05  eta: 4:53:43  time: 1.6686  data_time: 0.0156  memory: 10140  loss: 35.0424  decode.loss_cls: 0.3934  decode.loss_mask: 1.6380  decode.loss_dice: 1.3970  decode.d0.loss_cls: 0.5347  decode.d0.loss_mask: 1.6925  decode.d0.loss_dice: 1.5066  decode.d1.loss_cls: 0.5037  decode.d1.loss_mask: 1.6649  decode.d1.loss_dice: 1.3974  decode.d2.loss_cls: 0.4051  decode.d2.loss_mask: 1.6942  decode.d2.loss_dice: 1.4287  decode.d3.loss_cls: 0.3742  decode.d3.loss_mask: 1.7082  decode.d3.loss_dice: 1.4312  decode.d4.loss_cls: 0.4171  decode.d4.loss_mask: 1.6954  decode.d4.loss_dice: 1.3910  decode.d5.loss_cls: 0.4231  decode.d5.loss_mask: 1.6323  decode.d5.loss_dice: 1.3730  decode.d6.loss_cls: 0.4056  decode.d6.loss_mask: 1.6512  decode.d6.loss_dice: 1.4019  decode.d7.loss_cls: 0.3898  decode.d7.loss_mask: 1.6699  decode.d7.loss_dice: 1.3881  decode.d8.loss_cls: 0.3693  decode.d8.loss_mask: 1.6573  decode.d8.loss_dice: 1.4073
2025/03/29 17:15:49 - mmengine - INFO - Iter(train) [ 9500/20000]  base_lr: 5.5997e-05 lr: 5.5997e-05  eta: 4:52:20  time: 1.6680  data_time: 0.0155  memory: 10089  loss: 33.8449  decode.loss_cls: 0.4415  decode.loss_mask: 1.3598  decode.loss_dice: 1.5415  decode.d0.loss_cls: 0.5335  decode.d0.loss_mask: 1.4055  decode.d0.loss_dice: 1.6240  decode.d1.loss_cls: 0.5296  decode.d1.loss_mask: 1.3404  decode.d1.loss_dice: 1.5139  decode.d2.loss_cls: 0.4341  decode.d2.loss_mask: 1.3872  decode.d2.loss_dice: 1.5479  decode.d3.loss_cls: 0.4409  decode.d3.loss_mask: 1.4546  decode.d3.loss_dice: 1.5354  decode.d4.loss_cls: 0.4991  decode.d4.loss_mask: 1.3548  decode.d4.loss_dice: 1.4992  decode.d5.loss_cls: 0.5485  decode.d5.loss_mask: 1.3124  decode.d5.loss_dice: 1.4815  decode.d6.loss_cls: 0.4788  decode.d6.loss_mask: 1.3671  decode.d6.loss_dice: 1.5033  decode.d7.loss_cls: 0.4883  decode.d7.loss_mask: 1.3871  decode.d7.loss_dice: 1.5054  decode.d8.loss_cls: 0.4704  decode.d8.loss_mask: 1.3438  decode.d8.loss_dice: 1.5155
2025/03/29 17:17:12 - mmengine - INFO - Iter(train) [ 9550/20000]  base_lr: 5.5757e-05 lr: 5.5757e-05  eta: 4:50:56  time: 1.6698  data_time: 0.0157  memory: 10153  loss: 35.5107  decode.loss_cls: 0.3516  decode.loss_mask: 1.6179  decode.loss_dice: 1.5636  decode.d0.loss_cls: 0.4909  decode.d0.loss_mask: 1.6298  decode.d0.loss_dice: 1.5968  decode.d1.loss_cls: 0.3751  decode.d1.loss_mask: 1.6318  decode.d1.loss_dice: 1.5776  decode.d2.loss_cls: 0.3686  decode.d2.loss_mask: 1.6273  decode.d2.loss_dice: 1.5572  decode.d3.loss_cls: 0.4373  decode.d3.loss_mask: 1.5758  decode.d3.loss_dice: 1.5049  decode.d4.loss_cls: 0.4253  decode.d4.loss_mask: 1.6179  decode.d4.loss_dice: 1.5164  decode.d5.loss_cls: 0.3958  decode.d5.loss_mask: 1.5804  decode.d5.loss_dice: 1.4982  decode.d6.loss_cls: 0.3882  decode.d6.loss_mask: 1.5984  decode.d6.loss_dice: 1.5307  decode.d7.loss_cls: 0.4011  decode.d7.loss_mask: 1.5581  decode.d7.loss_dice: 1.5604  decode.d8.loss_cls: 0.3704  decode.d8.loss_mask: 1.5936  decode.d8.loss_dice: 1.5695
2025/03/29 17:18:36 - mmengine - INFO - Iter(train) [ 9600/20000]  base_lr: 5.5517e-05 lr: 5.5517e-05  eta: 4:49:33  time: 1.6691  data_time: 0.0155  memory: 10088  loss: 33.2878  decode.loss_cls: 0.3917  decode.loss_mask: 1.3408  decode.loss_dice: 1.6289  decode.d0.loss_cls: 0.4453  decode.d0.loss_mask: 1.3407  decode.d0.loss_dice: 1.7054  decode.d1.loss_cls: 0.3990  decode.d1.loss_mask: 1.3102  decode.d1.loss_dice: 1.6018  decode.d2.loss_cls: 0.3645  decode.d2.loss_mask: 1.3069  decode.d2.loss_dice: 1.5604  decode.d3.loss_cls: 0.3948  decode.d3.loss_mask: 1.2829  decode.d3.loss_dice: 1.5665  decode.d4.loss_cls: 0.4245  decode.d4.loss_mask: 1.3239  decode.d4.loss_dice: 1.5907  decode.d5.loss_cls: 0.4103  decode.d5.loss_mask: 1.3204  decode.d5.loss_dice: 1.5884  decode.d6.loss_cls: 0.4294  decode.d6.loss_mask: 1.3289  decode.d6.loss_dice: 1.5887  decode.d7.loss_cls: 0.4208  decode.d7.loss_mask: 1.3049  decode.d7.loss_dice: 1.6039  decode.d8.loss_cls: 0.4280  decode.d8.loss_mask: 1.3158  decode.d8.loss_dice: 1.5693
2025/03/29 17:19:59 - mmengine - INFO - Iter(train) [ 9650/20000]  base_lr: 5.5276e-05 lr: 5.5276e-05  eta: 4:48:09  time: 1.6665  data_time: 0.0155  memory: 10097  loss: 35.7498  decode.loss_cls: 0.4541  decode.loss_mask: 1.5647  decode.loss_dice: 1.5959  decode.d0.loss_cls: 0.4901  decode.d0.loss_mask: 1.4982  decode.d0.loss_dice: 1.6002  decode.d1.loss_cls: 0.4150  decode.d1.loss_mask: 1.5355  decode.d1.loss_dice: 1.5563  decode.d2.loss_cls: 0.4559  decode.d2.loss_mask: 1.5345  decode.d2.loss_dice: 1.5800  decode.d3.loss_cls: 0.4563  decode.d3.loss_mask: 1.5418  decode.d3.loss_dice: 1.5832  decode.d4.loss_cls: 0.4317  decode.d4.loss_mask: 1.5566  decode.d4.loss_dice: 1.5659  decode.d5.loss_cls: 0.4713  decode.d5.loss_mask: 1.5486  decode.d5.loss_dice: 1.5469  decode.d6.loss_cls: 0.4370  decode.d6.loss_mask: 1.5599  decode.d6.loss_dice: 1.6054  decode.d7.loss_cls: 0.4469  decode.d7.loss_mask: 1.5293  decode.d7.loss_dice: 1.6343  decode.d8.loss_cls: 0.4559  decode.d8.loss_mask: 1.5154  decode.d8.loss_dice: 1.5832
2025/03/29 17:21:23 - mmengine - INFO - Iter(train) [ 9700/20000]  base_lr: 5.5036e-05 lr: 5.5036e-05  eta: 4:46:46  time: 1.6720  data_time: 0.0166  memory: 10089  loss: 33.3622  decode.loss_cls: 0.4171  decode.loss_mask: 1.3051  decode.loss_dice: 1.4960  decode.d0.loss_cls: 0.5062  decode.d0.loss_mask: 1.4538  decode.d0.loss_dice: 1.6340  decode.d1.loss_cls: 0.4551  decode.d1.loss_mask: 1.3369  decode.d1.loss_dice: 1.5407  decode.d2.loss_cls: 0.4956  decode.d2.loss_mask: 1.3672  decode.d2.loss_dice: 1.4967  decode.d3.loss_cls: 0.4902  decode.d3.loss_mask: 1.3999  decode.d3.loss_dice: 1.4943  decode.d4.loss_cls: 0.4073  decode.d4.loss_mask: 1.3572  decode.d4.loss_dice: 1.5107  decode.d5.loss_cls: 0.4151  decode.d5.loss_mask: 1.3626  decode.d5.loss_dice: 1.5180  decode.d6.loss_cls: 0.4652  decode.d6.loss_mask: 1.3259  decode.d6.loss_dice: 1.5121  decode.d7.loss_cls: 0.4646  decode.d7.loss_mask: 1.3321  decode.d7.loss_dice: 1.5217  decode.d8.loss_cls: 0.4398  decode.d8.loss_mask: 1.3254  decode.d8.loss_dice: 1.5158
2025/03/29 17:22:46 - mmengine - INFO - Iter(train) [ 9750/20000]  base_lr: 5.4795e-05 lr: 5.4795e-05  eta: 4:45:22  time: 1.6725  data_time: 0.0160  memory: 10152  loss: 29.0928  decode.loss_cls: 0.3211  decode.loss_mask: 1.2361  decode.loss_dice: 1.3086  decode.d0.loss_cls: 0.3613  decode.d0.loss_mask: 1.2526  decode.d0.loss_dice: 1.4297  decode.d1.loss_cls: 0.2981  decode.d1.loss_mask: 1.2707  decode.d1.loss_dice: 1.3557  decode.d2.loss_cls: 0.2727  decode.d2.loss_mask: 1.2338  decode.d2.loss_dice: 1.3196  decode.d3.loss_cls: 0.2701  decode.d3.loss_mask: 1.2550  decode.d3.loss_dice: 1.3398  decode.d4.loss_cls: 0.2872  decode.d4.loss_mask: 1.2433  decode.d4.loss_dice: 1.3607  decode.d5.loss_cls: 0.3053  decode.d5.loss_mask: 1.2552  decode.d5.loss_dice: 1.3519  decode.d6.loss_cls: 0.2917  decode.d6.loss_mask: 1.2725  decode.d6.loss_dice: 1.3405  decode.d7.loss_cls: 0.2937  decode.d7.loss_mask: 1.2873  decode.d7.loss_dice: 1.3667  decode.d8.loss_cls: 0.3014  decode.d8.loss_mask: 1.2604  decode.d8.loss_dice: 1.3499
2025/03/29 17:24:10 - mmengine - INFO - Iter(train) [ 9800/20000]  base_lr: 5.4555e-05 lr: 5.4555e-05  eta: 4:43:59  time: 1.6695  data_time: 0.0157  memory: 10139  loss: 34.3095  decode.loss_cls: 0.4254  decode.loss_mask: 1.4979  decode.loss_dice: 1.4640  decode.d0.loss_cls: 0.6923  decode.d0.loss_mask: 1.4848  decode.d0.loss_dice: 1.5575  decode.d1.loss_cls: 0.4876  decode.d1.loss_mask: 1.5053  decode.d1.loss_dice: 1.4780  decode.d2.loss_cls: 0.3957  decode.d2.loss_mask: 1.4968  decode.d2.loss_dice: 1.5005  decode.d3.loss_cls: 0.4063  decode.d3.loss_mask: 1.5101  decode.d3.loss_dice: 1.4523  decode.d4.loss_cls: 0.4852  decode.d4.loss_mask: 1.4744  decode.d4.loss_dice: 1.4400  decode.d5.loss_cls: 0.4849  decode.d5.loss_mask: 1.4345  decode.d5.loss_dice: 1.4301  decode.d6.loss_cls: 0.4191  decode.d6.loss_mask: 1.5180  decode.d6.loss_dice: 1.4905  decode.d7.loss_cls: 0.4124  decode.d7.loss_mask: 1.5096  decode.d7.loss_dice: 1.5022  decode.d8.loss_cls: 0.4012  decode.d8.loss_mask: 1.4856  decode.d8.loss_dice: 1.4675
2025/03/29 17:25:33 - mmengine - INFO - Iter(train) [ 9850/20000]  base_lr: 5.4314e-05 lr: 5.4314e-05  eta: 4:42:35  time: 1.6695  data_time: 0.0155  memory: 10092  loss: 35.0517  decode.loss_cls: 0.3941  decode.loss_mask: 1.4975  decode.loss_dice: 1.6283  decode.d0.loss_cls: 0.4388  decode.d0.loss_mask: 1.4920  decode.d0.loss_dice: 1.7250  decode.d1.loss_cls: 0.4536  decode.d1.loss_mask: 1.4459  decode.d1.loss_dice: 1.6348  decode.d2.loss_cls: 0.4238  decode.d2.loss_mask: 1.4024  decode.d2.loss_dice: 1.5865  decode.d3.loss_cls: 0.4255  decode.d3.loss_mask: 1.4471  decode.d3.loss_dice: 1.5812  decode.d4.loss_cls: 0.4635  decode.d4.loss_mask: 1.4221  decode.d4.loss_dice: 1.6143  decode.d5.loss_cls: 0.4187  decode.d5.loss_mask: 1.3861  decode.d5.loss_dice: 1.6122  decode.d6.loss_cls: 0.4015  decode.d6.loss_mask: 1.4763  decode.d6.loss_dice: 1.6475  decode.d7.loss_cls: 0.4140  decode.d7.loss_mask: 1.4519  decode.d7.loss_dice: 1.6397  decode.d8.loss_cls: 0.3924  decode.d8.loss_mask: 1.4778  decode.d8.loss_dice: 1.6573
2025/03/29 17:26:57 - mmengine - INFO - Iter(train) [ 9900/20000]  base_lr: 5.4073e-05 lr: 5.4073e-05  eta: 4:41:12  time: 1.6713  data_time: 0.0160  memory: 10147  loss: 32.7112  decode.loss_cls: 0.2787  decode.loss_mask: 1.5043  decode.loss_dice: 1.5185  decode.d0.loss_cls: 0.4069  decode.d0.loss_mask: 1.5035  decode.d0.loss_dice: 1.5354  decode.d1.loss_cls: 0.3099  decode.d1.loss_mask: 1.4728  decode.d1.loss_dice: 1.4650  decode.d2.loss_cls: 0.3066  decode.d2.loss_mask: 1.4504  decode.d2.loss_dice: 1.4762  decode.d3.loss_cls: 0.2927  decode.d3.loss_mask: 1.5106  decode.d3.loss_dice: 1.5119  decode.d4.loss_cls: 0.3250  decode.d4.loss_mask: 1.4481  decode.d4.loss_dice: 1.4499  decode.d5.loss_cls: 0.3043  decode.d5.loss_mask: 1.4380  decode.d5.loss_dice: 1.4446  decode.d6.loss_cls: 0.2808  decode.d6.loss_mask: 1.4860  decode.d6.loss_dice: 1.4787  decode.d7.loss_cls: 0.3052  decode.d7.loss_mask: 1.4572  decode.d7.loss_dice: 1.4899  decode.d8.loss_cls: 0.2977  decode.d8.loss_mask: 1.4884  decode.d8.loss_dice: 1.4740
2025/03/29 17:28:20 - mmengine - INFO - Iter(train) [ 9950/20000]  base_lr: 5.3832e-05 lr: 5.3832e-05  eta: 4:39:48  time: 1.6724  data_time: 0.0157  memory: 10089  loss: 34.6095  decode.loss_cls: 0.4905  decode.loss_mask: 1.4049  decode.loss_dice: 1.5736  decode.d0.loss_cls: 0.6235  decode.d0.loss_mask: 1.3714  decode.d0.loss_dice: 1.6218  decode.d1.loss_cls: 0.4818  decode.d1.loss_mask: 1.4096  decode.d1.loss_dice: 1.5836  decode.d2.loss_cls: 0.5086  decode.d2.loss_mask: 1.3932  decode.d2.loss_dice: 1.5576  decode.d3.loss_cls: 0.4969  decode.d3.loss_mask: 1.3893  decode.d3.loss_dice: 1.5487  decode.d4.loss_cls: 0.5117  decode.d4.loss_mask: 1.3878  decode.d4.loss_dice: 1.5368  decode.d5.loss_cls: 0.4795  decode.d5.loss_mask: 1.3735  decode.d5.loss_dice: 1.5500  decode.d6.loss_cls: 0.4634  decode.d6.loss_mask: 1.3989  decode.d6.loss_dice: 1.5730  decode.d7.loss_cls: 0.4589  decode.d7.loss_mask: 1.4001  decode.d7.loss_dice: 1.5769  decode.d8.loss_cls: 0.4894  decode.d8.loss_mask: 1.3727  decode.d8.loss_dice: 1.5819
2025/03/29 17:29:44 - mmengine - INFO - Exp name: r2u_20250329_122140
2025/03/29 17:29:44 - mmengine - INFO - Iter(train) [10000/20000]  base_lr: 5.3591e-05 lr: 5.3591e-05  eta: 4:38:25  time: 1.6704  data_time: 0.0157  memory: 10087  loss: 32.5845  decode.loss_cls: 0.3984  decode.loss_mask: 1.2681  decode.loss_dice: 1.5879  decode.d0.loss_cls: 0.5325  decode.d0.loss_mask: 1.2450  decode.d0.loss_dice: 1.6440  decode.d1.loss_cls: 0.4428  decode.d1.loss_mask: 1.2597  decode.d1.loss_dice: 1.5533  decode.d2.loss_cls: 0.4688  decode.d2.loss_mask: 1.2187  decode.d2.loss_dice: 1.5372  decode.d3.loss_cls: 0.4664  decode.d3.loss_mask: 1.2257  decode.d3.loss_dice: 1.5213  decode.d4.loss_cls: 0.4835  decode.d4.loss_mask: 1.2271  decode.d4.loss_dice: 1.5594  decode.d5.loss_cls: 0.4648  decode.d5.loss_mask: 1.2443  decode.d5.loss_dice: 1.5491  decode.d6.loss_cls: 0.4931  decode.d6.loss_mask: 1.2150  decode.d6.loss_dice: 1.5271  decode.d7.loss_cls: 0.4733  decode.d7.loss_mask: 1.2225  decode.d7.loss_dice: 1.5394  decode.d8.loss_cls: 0.4505  decode.d8.loss_mask: 1.2264  decode.d8.loss_dice: 1.5391
2025/03/29 17:29:44 - mmengine - INFO - Saving checkpoint at 10000 iterations
2025/03/29 17:29:54 - mmengine - INFO - Iter(val) [  50/2708]    eta: 0:07:15  time: 0.1536  data_time: 0.0014  memory: 1856  
2025/03/29 17:30:02 - mmengine - INFO - Iter(val) [ 100/2708]    eta: 0:06:59  time: 0.1607  data_time: 0.0013  memory: 1856  
2025/03/29 17:30:10 - mmengine - INFO - Iter(val) [ 150/2708]    eta: 0:06:53  time: 0.1533  data_time: 0.0013  memory: 1856  
2025/03/29 17:30:18 - mmengine - INFO - Iter(val) [ 200/2708]    eta: 0:06:44  time: 0.1681  data_time: 0.0013  memory: 1856  
2025/03/29 17:30:26 - mmengine - INFO - Iter(val) [ 250/2708]    eta: 0:06:36  time: 0.1626  data_time: 0.0013  memory: 1856  
2025/03/29 17:30:34 - mmengine - INFO - Iter(val) [ 300/2708]    eta: 0:06:28  time: 0.1674  data_time: 0.0014  memory: 1856  
2025/03/29 17:30:42 - mmengine - INFO - Iter(val) [ 350/2708]    eta: 0:06:20  time: 0.1572  data_time: 0.0013  memory: 1856  
2025/03/29 17:30:50 - mmengine - INFO - Iter(val) [ 400/2708]    eta: 0:06:11  time: 0.1604  data_time: 0.0014  memory: 1856  
2025/03/29 17:30:59 - mmengine - INFO - Iter(val) [ 450/2708]    eta: 0:06:04  time: 0.1596  data_time: 0.0013  memory: 1856  
2025/03/29 17:31:06 - mmengine - INFO - Iter(val) [ 500/2708]    eta: 0:05:56  time: 0.1574  data_time: 0.0012  memory: 1856  
2025/03/29 17:31:15 - mmengine - INFO - Iter(val) [ 550/2708]    eta: 0:05:48  time: 0.1655  data_time: 0.0014  memory: 1856  
2025/03/29 17:31:23 - mmengine - INFO - Iter(val) [ 600/2708]    eta: 0:05:40  time: 0.1536  data_time: 0.0013  memory: 1856  
2025/03/29 17:31:31 - mmengine - INFO - Iter(val) [ 650/2708]    eta: 0:05:32  time: 0.1590  data_time: 0.0013  memory: 1856  
2025/03/29 17:31:39 - mmengine - INFO - Iter(val) [ 700/2708]    eta: 0:05:23  time: 0.1607  data_time: 0.0014  memory: 1856  
2025/03/29 17:31:47 - mmengine - INFO - Iter(val) [ 750/2708]    eta: 0:05:16  time: 0.1575  data_time: 0.0013  memory: 1856  
2025/03/29 17:31:55 - mmengine - INFO - Iter(val) [ 800/2708]    eta: 0:05:07  time: 0.1569  data_time: 0.0013  memory: 1856  
2025/03/29 17:32:03 - mmengine - INFO - Iter(val) [ 850/2708]    eta: 0:05:00  time: 0.1651  data_time: 0.0013  memory: 1856  
2025/03/29 17:32:11 - mmengine - INFO - Iter(val) [ 900/2708]    eta: 0:04:51  time: 0.1529  data_time: 0.0013  memory: 1856  
2025/03/29 17:32:19 - mmengine - INFO - Iter(val) [ 950/2708]    eta: 0:04:43  time: 0.1662  data_time: 0.0014  memory: 1856  
2025/03/29 17:32:27 - mmengine - INFO - Iter(val) [1000/2708]    eta: 0:04:35  time: 0.1584  data_time: 0.0013  memory: 1856  
2025/03/29 17:32:36 - mmengine - INFO - Iter(val) [1050/2708]    eta: 0:04:27  time: 0.1671  data_time: 0.0013  memory: 1856  
2025/03/29 17:32:44 - mmengine - INFO - Iter(val) [1100/2708]    eta: 0:04:19  time: 0.1606  data_time: 0.0014  memory: 1856  
2025/03/29 17:32:52 - mmengine - INFO - Iter(val) [1150/2708]    eta: 0:04:12  time: 0.1719  data_time: 0.0013  memory: 1856  
2025/03/29 17:33:00 - mmengine - INFO - Iter(val) [1200/2708]    eta: 0:04:04  time: 0.1699  data_time: 0.0013  memory: 1856  
2025/03/29 17:33:09 - mmengine - INFO - Iter(val) [1250/2708]    eta: 0:03:56  time: 0.1717  data_time: 0.0013  memory: 1856  
2025/03/29 17:33:17 - mmengine - INFO - Iter(val) [1300/2708]    eta: 0:03:49  time: 0.1678  data_time: 0.0013  memory: 1856  
2025/03/29 17:33:26 - mmengine - INFO - Iter(val) [1350/2708]    eta: 0:03:40  time: 0.1624  data_time: 0.0013  memory: 1856  
2025/03/29 17:33:34 - mmengine - INFO - Iter(val) [1400/2708]    eta: 0:03:32  time: 0.1672  data_time: 0.0013  memory: 1856  
2025/03/29 17:33:42 - mmengine - INFO - Iter(val) [1450/2708]    eta: 0:03:24  time: 0.1556  data_time: 0.0013  memory: 1856  
2025/03/29 17:33:50 - mmengine - INFO - Iter(val) [1500/2708]    eta: 0:03:16  time: 0.1670  data_time: 0.0013  memory: 1856  
2025/03/29 17:33:58 - mmengine - INFO - Iter(val) [1550/2708]    eta: 0:03:08  time: 0.1618  data_time: 0.0013  memory: 1856  
2025/03/29 17:34:06 - mmengine - INFO - Iter(val) [1600/2708]    eta: 0:02:59  time: 0.1670  data_time: 0.0014  memory: 1856  
2025/03/29 17:34:14 - mmengine - INFO - Iter(val) [1650/2708]    eta: 0:02:51  time: 0.1576  data_time: 0.0013  memory: 1856  
2025/03/29 17:34:22 - mmengine - INFO - Iter(val) [1700/2708]    eta: 0:02:43  time: 0.1597  data_time: 0.0014  memory: 1856  
2025/03/29 17:34:30 - mmengine - INFO - Iter(val) [1750/2708]    eta: 0:02:35  time: 0.1582  data_time: 0.0013  memory: 1856  
2025/03/29 17:34:38 - mmengine - INFO - Iter(val) [1800/2708]    eta: 0:02:27  time: 0.1605  data_time: 0.0013  memory: 1856  
2025/03/29 17:34:46 - mmengine - INFO - Iter(val) [1850/2708]    eta: 0:02:19  time: 0.1601  data_time: 0.0014  memory: 1856  
2025/03/29 17:34:54 - mmengine - INFO - Iter(val) [1900/2708]    eta: 0:02:11  time: 0.1618  data_time: 0.0013  memory: 1856  
2025/03/29 17:35:03 - mmengine - INFO - Iter(val) [1950/2708]    eta: 0:02:03  time: 0.1653  data_time: 0.0013  memory: 1856  
2025/03/29 17:35:11 - mmengine - INFO - Iter(val) [2000/2708]    eta: 0:01:54  time: 0.1579  data_time: 0.0013  memory: 1856  
2025/03/29 17:35:19 - mmengine - INFO - Iter(val) [2050/2708]    eta: 0:01:46  time: 0.1672  data_time: 0.0013  memory: 1856  
2025/03/29 17:35:27 - mmengine - INFO - Iter(val) [2100/2708]    eta: 0:01:38  time: 0.1579  data_time: 0.0013  memory: 1856  
2025/03/29 17:35:35 - mmengine - INFO - Iter(val) [2150/2708]    eta: 0:01:30  time: 0.1672  data_time: 0.0013  memory: 1856  
2025/03/29 17:35:43 - mmengine - INFO - Iter(val) [2200/2708]    eta: 0:01:22  time: 0.1614  data_time: 0.0013  memory: 1856  
2025/03/29 17:35:51 - mmengine - INFO - Iter(val) [2250/2708]    eta: 0:01:14  time: 0.1666  data_time: 0.0013  memory: 1856  
2025/03/29 17:35:59 - mmengine - INFO - Iter(val) [2300/2708]    eta: 0:01:06  time: 0.1627  data_time: 0.0014  memory: 1856  
2025/03/29 17:36:07 - mmengine - INFO - Iter(val) [2350/2708]    eta: 0:00:58  time: 0.1670  data_time: 0.0012  memory: 1856  
2025/03/29 17:36:16 - mmengine - INFO - Iter(val) [2400/2708]    eta: 0:00:49  time: 0.1598  data_time: 0.0013  memory: 1856  
2025/03/29 17:36:24 - mmengine - INFO - Iter(val) [2450/2708]    eta: 0:00:41  time: 0.1606  data_time: 0.0013  memory: 1856  
2025/03/29 17:36:32 - mmengine - INFO - Iter(val) [2500/2708]    eta: 0:00:33  time: 0.1593  data_time: 0.0013  memory: 1856  
2025/03/29 17:36:40 - mmengine - INFO - Iter(val) [2550/2708]    eta: 0:00:25  time: 0.1705  data_time: 0.0013  memory: 1856  
2025/03/29 17:36:49 - mmengine - INFO - Iter(val) [2600/2708]    eta: 0:00:17  time: 0.1704  data_time: 0.0014  memory: 1856  
2025/03/29 17:36:57 - mmengine - INFO - Iter(val) [2650/2708]    eta: 0:00:09  time: 0.1586  data_time: 0.0013  memory: 1856  
2025/03/29 17:37:05 - mmengine - INFO - Iter(val) [2700/2708]    eta: 0:00:01  time: 0.1670  data_time: 0.0012  memory: 1856  
2025/03/29 17:37:06 - mmengine - INFO - per class results:
2025/03/29 17:37:06 - mmengine - INFO - 
+--------------+-------+-------+
|    Class     |  IoU  |  Acc  |
+--------------+-------+-------+
|  background  |  39.5 | 56.31 |
|   building   | 65.78 | 80.82 |
|     road     | 56.05 | 74.61 |
|    water     | 75.92 | 83.28 |
|    barren    |  45.2 | 83.91 |
|    forest    | 54.32 | 74.57 |
| agricultural | 62.82 | 69.63 |
+--------------+-------+-------+
2025/03/29 17:37:06 - mmengine - INFO - Iter(val) [2708/2708]    aAcc: 70.8800  mIoU: 57.0800  mAcc: 74.7300  data_time: 0.0013  time: 0.1625
2025/03/29 17:37:06 - mmengine - INFO - The previous best checkpoint /home/face/kaichengyang/xiaoxinghu/Earth_Adapter/work_dirs/r2u/DG_spatial_64_cutoff_0.3_fft_pre6/35b71_seed0/best_mIoU_iter_8000.pth is removed
2025/03/29 17:37:07 - mmengine - INFO - The best checkpoint with 57.0800 mIoU at 10000 iter is saved to best_mIoU_iter_10000.pth.
2025/03/29 17:38:33 - mmengine - INFO - Iter(train) [10050/20000]  base_lr: 5.3350e-05 lr: 5.3350e-05  eta: 4:37:04  time: 1.6648  data_time: 0.0159  memory: 10093  loss: 37.0073  decode.loss_cls: 0.4830  decode.loss_mask: 1.6036  decode.loss_dice: 1.5923  decode.d0.loss_cls: 0.5903  decode.d0.loss_mask: 1.5815  decode.d0.loss_dice: 1.6326  decode.d1.loss_cls: 0.4708  decode.d1.loss_mask: 1.6514  decode.d1.loss_dice: 1.5921  decode.d2.loss_cls: 0.5106  decode.d2.loss_mask: 1.6401  decode.d2.loss_dice: 1.5898  decode.d3.loss_cls: 0.4938  decode.d3.loss_mask: 1.6096  decode.d3.loss_dice: 1.5591  decode.d4.loss_cls: 0.4438  decode.d4.loss_mask: 1.6295  decode.d4.loss_dice: 1.5950  decode.d5.loss_cls: 0.5194  decode.d5.loss_mask: 1.6347  decode.d5.loss_dice: 1.5986  decode.d6.loss_cls: 0.5600  decode.d6.loss_mask: 1.5773  decode.d6.loss_dice: 1.5249  decode.d7.loss_cls: 0.5403  decode.d7.loss_mask: 1.5853  decode.d7.loss_dice: 1.5374  decode.d8.loss_cls: 0.4887  decode.d8.loss_mask: 1.6044  decode.d8.loss_dice: 1.5676
2025/03/29 17:39:56 - mmengine - INFO - Iter(train) [10100/20000]  base_lr: 5.3109e-05 lr: 5.3109e-05  eta: 4:35:40  time: 1.6720  data_time: 0.0163  memory: 10146  loss: 31.6528  decode.loss_cls: 0.2644  decode.loss_mask: 1.5370  decode.loss_dice: 1.3737  decode.d0.loss_cls: 0.4752  decode.d0.loss_mask: 1.4636  decode.d0.loss_dice: 1.4224  decode.d1.loss_cls: 0.3876  decode.d1.loss_mask: 1.4539  decode.d1.loss_dice: 1.3037  decode.d2.loss_cls: 0.3138  decode.d2.loss_mask: 1.4622  decode.d2.loss_dice: 1.3225  decode.d3.loss_cls: 0.3163  decode.d3.loss_mask: 1.4767  decode.d3.loss_dice: 1.3090  decode.d4.loss_cls: 0.3114  decode.d4.loss_mask: 1.4851  decode.d4.loss_dice: 1.3320  decode.d5.loss_cls: 0.3346  decode.d5.loss_mask: 1.5117  decode.d5.loss_dice: 1.3474  decode.d6.loss_cls: 0.2993  decode.d6.loss_mask: 1.5315  decode.d6.loss_dice: 1.3313  decode.d7.loss_cls: 0.3320  decode.d7.loss_mask: 1.5200  decode.d7.loss_dice: 1.3395  decode.d8.loss_cls: 0.3163  decode.d8.loss_mask: 1.4621  decode.d8.loss_dice: 1.3167
2025/03/29 17:41:19 - mmengine - INFO - Iter(train) [10150/20000]  base_lr: 5.2867e-05 lr: 5.2867e-05  eta: 4:34:16  time: 1.6662  data_time: 0.0157  memory: 10091  loss: 36.4919  decode.loss_cls: 0.4140  decode.loss_mask: 1.4966  decode.loss_dice: 1.6680  decode.d0.loss_cls: 0.5214  decode.d0.loss_mask: 1.5316  decode.d0.loss_dice: 1.7286  decode.d1.loss_cls: 0.4131  decode.d1.loss_mask: 1.5230  decode.d1.loss_dice: 1.7009  decode.d2.loss_cls: 0.4570  decode.d2.loss_mask: 1.5231  decode.d2.loss_dice: 1.6667  decode.d3.loss_cls: 0.4097  decode.d3.loss_mask: 1.5841  decode.d3.loss_dice: 1.6838  decode.d4.loss_cls: 0.4236  decode.d4.loss_mask: 1.5617  decode.d4.loss_dice: 1.6849  decode.d5.loss_cls: 0.4190  decode.d5.loss_mask: 1.5095  decode.d5.loss_dice: 1.6586  decode.d6.loss_cls: 0.4407  decode.d6.loss_mask: 1.5579  decode.d6.loss_dice: 1.6590  decode.d7.loss_cls: 0.3994  decode.d7.loss_mask: 1.5436  decode.d7.loss_dice: 1.7017  decode.d8.loss_cls: 0.4399  decode.d8.loss_mask: 1.5028  decode.d8.loss_dice: 1.6681
2025/03/29 17:42:43 - mmengine - INFO - Iter(train) [10200/20000]  base_lr: 5.2625e-05 lr: 5.2625e-05  eta: 4:32:52  time: 1.6810  data_time: 0.0160  memory: 10093  loss: 33.4619  decode.loss_cls: 0.4120  decode.loss_mask: 1.3986  decode.loss_dice: 1.5612  decode.d0.loss_cls: 0.4328  decode.d0.loss_mask: 1.3537  decode.d0.loss_dice: 1.6593  decode.d1.loss_cls: 0.4616  decode.d1.loss_mask: 1.3387  decode.d1.loss_dice: 1.5294  decode.d2.loss_cls: 0.4046  decode.d2.loss_mask: 1.3750  decode.d2.loss_dice: 1.5409  decode.d3.loss_cls: 0.4522  decode.d3.loss_mask: 1.3396  decode.d3.loss_dice: 1.5021  decode.d4.loss_cls: 0.4728  decode.d4.loss_mask: 1.3596  decode.d4.loss_dice: 1.5189  decode.d5.loss_cls: 0.4412  decode.d5.loss_mask: 1.3610  decode.d5.loss_dice: 1.5187  decode.d6.loss_cls: 0.4306  decode.d6.loss_mask: 1.3825  decode.d6.loss_dice: 1.5183  decode.d7.loss_cls: 0.4041  decode.d7.loss_mask: 1.4001  decode.d7.loss_dice: 1.5439  decode.d8.loss_cls: 0.4100  decode.d8.loss_mask: 1.4026  decode.d8.loss_dice: 1.5360
2025/03/29 17:44:07 - mmengine - INFO - Iter(train) [10250/20000]  base_lr: 5.2384e-05 lr: 5.2384e-05  eta: 4:31:29  time: 1.6695  data_time: 0.0159  memory: 10106  loss: 34.9491  decode.loss_cls: 0.3257  decode.loss_mask: 1.5538  decode.loss_dice: 1.5813  decode.d0.loss_cls: 0.4600  decode.d0.loss_mask: 1.5675  decode.d0.loss_dice: 1.6589  decode.d1.loss_cls: 0.4120  decode.d1.loss_mask: 1.5381  decode.d1.loss_dice: 1.5499  decode.d2.loss_cls: 0.3994  decode.d2.loss_mask: 1.5253  decode.d2.loss_dice: 1.5656  decode.d3.loss_cls: 0.3398  decode.d3.loss_mask: 1.5327  decode.d3.loss_dice: 1.5830  decode.d4.loss_cls: 0.3795  decode.d4.loss_mask: 1.5261  decode.d4.loss_dice: 1.5714  decode.d5.loss_cls: 0.3930  decode.d5.loss_mask: 1.5198  decode.d5.loss_dice: 1.5515  decode.d6.loss_cls: 0.3764  decode.d6.loss_mask: 1.5269  decode.d6.loss_dice: 1.5602  decode.d7.loss_cls: 0.3187  decode.d7.loss_mask: 1.5481  decode.d7.loss_dice: 1.5844  decode.d8.loss_cls: 0.3491  decode.d8.loss_mask: 1.5444  decode.d8.loss_dice: 1.6068
2025/03/29 17:45:30 - mmengine - INFO - Iter(train) [10300/20000]  base_lr: 5.2142e-05 lr: 5.2142e-05  eta: 4:30:06  time: 1.6750  data_time: 0.0157  memory: 10081  loss: 36.6272  decode.loss_cls: 0.4393  decode.loss_mask: 1.6031  decode.loss_dice: 1.6225  decode.d0.loss_cls: 0.5436  decode.d0.loss_mask: 1.6065  decode.d0.loss_dice: 1.7010  decode.d1.loss_cls: 0.4417  decode.d1.loss_mask: 1.5547  decode.d1.loss_dice: 1.6275  decode.d2.loss_cls: 0.4536  decode.d2.loss_mask: 1.5433  decode.d2.loss_dice: 1.6137  decode.d3.loss_cls: 0.4629  decode.d3.loss_mask: 1.5749  decode.d3.loss_dice: 1.5940  decode.d4.loss_cls: 0.4863  decode.d4.loss_mask: 1.5588  decode.d4.loss_dice: 1.5978  decode.d5.loss_cls: 0.4254  decode.d5.loss_mask: 1.6024  decode.d5.loss_dice: 1.6048  decode.d6.loss_cls: 0.4443  decode.d6.loss_mask: 1.6083  decode.d6.loss_dice: 1.6142  decode.d7.loss_cls: 0.4620  decode.d7.loss_mask: 1.5640  decode.d7.loss_dice: 1.6115  decode.d8.loss_cls: 0.4535  decode.d8.loss_mask: 1.5978  decode.d8.loss_dice: 1.6136
2025/03/29 17:46:54 - mmengine - INFO - Iter(train) [10350/20000]  base_lr: 5.1900e-05 lr: 5.1900e-05  eta: 4:28:42  time: 1.6686  data_time: 0.0157  memory: 10101  loss: 34.8803  decode.loss_cls: 0.2888  decode.loss_mask: 1.6465  decode.loss_dice: 1.5444  decode.d0.loss_cls: 0.4218  decode.d0.loss_mask: 1.7003  decode.d0.loss_dice: 1.5836  decode.d1.loss_cls: 0.3515  decode.d1.loss_mask: 1.6517  decode.d1.loss_dice: 1.5154  decode.d2.loss_cls: 0.3706  decode.d2.loss_mask: 1.5988  decode.d2.loss_dice: 1.4753  decode.d3.loss_cls: 0.3205  decode.d3.loss_mask: 1.6245  decode.d3.loss_dice: 1.4809  decode.d4.loss_cls: 0.3077  decode.d4.loss_mask: 1.6480  decode.d4.loss_dice: 1.5274  decode.d5.loss_cls: 0.3569  decode.d5.loss_mask: 1.5891  decode.d5.loss_dice: 1.4842  decode.d6.loss_cls: 0.3405  decode.d6.loss_mask: 1.5937  decode.d6.loss_dice: 1.5194  decode.d7.loss_cls: 0.3548  decode.d7.loss_mask: 1.5979  decode.d7.loss_dice: 1.5073  decode.d8.loss_cls: 0.3134  decode.d8.loss_mask: 1.6368  decode.d8.loss_dice: 1.5288
2025/03/29 17:48:17 - mmengine - INFO - Iter(train) [10400/20000]  base_lr: 5.1658e-05 lr: 5.1658e-05  eta: 4:27:19  time: 1.6639  data_time: 0.0156  memory: 10144  loss: 34.0221  decode.loss_cls: 0.4179  decode.loss_mask: 1.4291  decode.loss_dice: 1.5900  decode.d0.loss_cls: 0.4566  decode.d0.loss_mask: 1.4355  decode.d0.loss_dice: 1.6558  decode.d1.loss_cls: 0.4169  decode.d1.loss_mask: 1.4001  decode.d1.loss_dice: 1.5680  decode.d2.loss_cls: 0.4201  decode.d2.loss_mask: 1.3563  decode.d2.loss_dice: 1.5535  decode.d3.loss_cls: 0.4040  decode.d3.loss_mask: 1.3680  decode.d3.loss_dice: 1.5777  decode.d4.loss_cls: 0.4432  decode.d4.loss_mask: 1.3820  decode.d4.loss_dice: 1.5393  decode.d5.loss_cls: 0.3563  decode.d5.loss_mask: 1.4175  decode.d5.loss_dice: 1.5761  decode.d6.loss_cls: 0.3949  decode.d6.loss_mask: 1.4175  decode.d6.loss_dice: 1.5667  decode.d7.loss_cls: 0.4355  decode.d7.loss_mask: 1.4484  decode.d7.loss_dice: 1.5820  decode.d8.loss_cls: 0.4258  decode.d8.loss_mask: 1.4043  decode.d8.loss_dice: 1.5830
2025/03/29 17:49:45 - mmengine - INFO - Iter(train) [10450/20000]  base_lr: 5.1416e-05 lr: 5.1416e-05  eta: 4:25:59  time: 1.8095  data_time: 0.0158  memory: 10150  loss: 35.8422  decode.loss_cls: 0.3903  decode.loss_mask: 1.6189  decode.loss_dice: 1.5992  decode.d0.loss_cls: 0.4346  decode.d0.loss_mask: 1.6156  decode.d0.loss_dice: 1.6320  decode.d1.loss_cls: 0.4191  decode.d1.loss_mask: 1.5789  decode.d1.loss_dice: 1.5260  decode.d2.loss_cls: 0.4257  decode.d2.loss_mask: 1.5774  decode.d2.loss_dice: 1.5748  decode.d3.loss_cls: 0.4596  decode.d3.loss_mask: 1.5608  decode.d3.loss_dice: 1.5379  decode.d4.loss_cls: 0.4515  decode.d4.loss_mask: 1.5428  decode.d4.loss_dice: 1.5309  decode.d5.loss_cls: 0.4489  decode.d5.loss_mask: 1.5735  decode.d5.loss_dice: 1.5437  decode.d6.loss_cls: 0.4251  decode.d6.loss_mask: 1.6274  decode.d6.loss_dice: 1.5502  decode.d7.loss_cls: 0.4289  decode.d7.loss_mask: 1.6282  decode.d7.loss_dice: 1.5640  decode.d8.loss_cls: 0.4386  decode.d8.loss_mask: 1.6090  decode.d8.loss_dice: 1.5287
2025/03/29 17:51:16 - mmengine - INFO - Iter(train) [10500/20000]  base_lr: 5.1173e-05 lr: 5.1173e-05  eta: 4:24:42  time: 1.8140  data_time: 0.0157  memory: 10086  loss: 34.6835  decode.loss_cls: 0.3878  decode.loss_mask: 1.5488  decode.loss_dice: 1.5078  decode.d0.loss_cls: 0.5247  decode.d0.loss_mask: 1.6043  decode.d0.loss_dice: 1.5354  decode.d1.loss_cls: 0.3745  decode.d1.loss_mask: 1.5463  decode.d1.loss_dice: 1.4852  decode.d2.loss_cls: 0.4013  decode.d2.loss_mask: 1.5429  decode.d2.loss_dice: 1.4872  decode.d3.loss_cls: 0.3892  decode.d3.loss_mask: 1.5889  decode.d3.loss_dice: 1.4860  decode.d4.loss_cls: 0.4482  decode.d4.loss_mask: 1.5487  decode.d4.loss_dice: 1.4886  decode.d5.loss_cls: 0.3407  decode.d5.loss_mask: 1.5731  decode.d5.loss_dice: 1.5073  decode.d6.loss_cls: 0.3824  decode.d6.loss_mask: 1.5400  decode.d6.loss_dice: 1.5037  decode.d7.loss_cls: 0.3811  decode.d7.loss_mask: 1.5394  decode.d7.loss_dice: 1.5332  decode.d8.loss_cls: 0.4133  decode.d8.loss_mask: 1.5440  decode.d8.loss_dice: 1.5294
2025/03/29 17:52:46 - mmengine - INFO - Iter(train) [10550/20000]  base_lr: 5.0931e-05 lr: 5.0931e-05  eta: 4:23:25  time: 1.8054  data_time: 0.0156  memory: 10147  loss: 31.4169  decode.loss_cls: 0.3016  decode.loss_mask: 1.3706  decode.loss_dice: 1.4050  decode.d0.loss_cls: 0.4570  decode.d0.loss_mask: 1.4028  decode.d0.loss_dice: 1.4812  decode.d1.loss_cls: 0.3279  decode.d1.loss_mask: 1.3954  decode.d1.loss_dice: 1.4655  decode.d2.loss_cls: 0.3110  decode.d2.loss_mask: 1.4191  decode.d2.loss_dice: 1.4471  decode.d3.loss_cls: 0.3125  decode.d3.loss_mask: 1.3874  decode.d3.loss_dice: 1.4454  decode.d4.loss_cls: 0.2668  decode.d4.loss_mask: 1.3995  decode.d4.loss_dice: 1.4577  decode.d5.loss_cls: 0.2735  decode.d5.loss_mask: 1.4015  decode.d5.loss_dice: 1.4489  decode.d6.loss_cls: 0.2934  decode.d6.loss_mask: 1.3908  decode.d6.loss_dice: 1.4178  decode.d7.loss_cls: 0.2996  decode.d7.loss_mask: 1.3523  decode.d7.loss_dice: 1.4257  decode.d8.loss_cls: 0.3244  decode.d8.loss_mask: 1.3351  decode.d8.loss_dice: 1.4005
2025/03/29 17:54:17 - mmengine - INFO - Iter(train) [10600/20000]  base_lr: 5.0688e-05 lr: 5.0688e-05  eta: 4:22:07  time: 1.8125  data_time: 0.0157  memory: 10147  loss: 33.8409  decode.loss_cls: 0.3848  decode.loss_mask: 1.3716  decode.loss_dice: 1.5781  decode.d0.loss_cls: 0.4389  decode.d0.loss_mask: 1.3905  decode.d0.loss_dice: 1.6942  decode.d1.loss_cls: 0.4142  decode.d1.loss_mask: 1.3542  decode.d1.loss_dice: 1.6193  decode.d2.loss_cls: 0.3781  decode.d2.loss_mask: 1.3771  decode.d2.loss_dice: 1.6048  decode.d3.loss_cls: 0.4086  decode.d3.loss_mask: 1.3443  decode.d3.loss_dice: 1.5791  decode.d4.loss_cls: 0.3753  decode.d4.loss_mask: 1.3807  decode.d4.loss_dice: 1.6250  decode.d5.loss_cls: 0.3640  decode.d5.loss_mask: 1.4210  decode.d5.loss_dice: 1.6132  decode.d6.loss_cls: 0.3564  decode.d6.loss_mask: 1.4263  decode.d6.loss_dice: 1.6362  decode.d7.loss_cls: 0.3686  decode.d7.loss_mask: 1.3916  decode.d7.loss_dice: 1.6066  decode.d8.loss_cls: 0.3945  decode.d8.loss_mask: 1.3728  decode.d8.loss_dice: 1.5709
2025/03/29 17:55:47 - mmengine - INFO - Iter(train) [10650/20000]  base_lr: 5.0446e-05 lr: 5.0446e-05  eta: 4:20:49  time: 1.8128  data_time: 0.0159  memory: 10086  loss: 35.4215  decode.loss_cls: 0.4735  decode.loss_mask: 1.4622  decode.loss_dice: 1.5735  decode.d0.loss_cls: 0.5975  decode.d0.loss_mask: 1.4978  decode.d0.loss_dice: 1.6156  decode.d1.loss_cls: 0.4316  decode.d1.loss_mask: 1.4464  decode.d1.loss_dice: 1.5901  decode.d2.loss_cls: 0.4889  decode.d2.loss_mask: 1.4370  decode.d2.loss_dice: 1.5608  decode.d3.loss_cls: 0.4675  decode.d3.loss_mask: 1.4778  decode.d3.loss_dice: 1.5909  decode.d4.loss_cls: 0.5341  decode.d4.loss_mask: 1.4339  decode.d4.loss_dice: 1.5625  decode.d5.loss_cls: 0.4954  decode.d5.loss_mask: 1.4662  decode.d5.loss_dice: 1.5956  decode.d6.loss_cls: 0.5026  decode.d6.loss_mask: 1.4712  decode.d6.loss_dice: 1.5561  decode.d7.loss_cls: 0.4921  decode.d7.loss_mask: 1.4860  decode.d7.loss_dice: 1.5891  decode.d8.loss_cls: 0.4666  decode.d8.loss_mask: 1.4733  decode.d8.loss_dice: 1.5856
2025/03/29 17:57:17 - mmengine - INFO - Iter(train) [10700/20000]  base_lr: 5.0203e-05 lr: 5.0203e-05  eta: 4:19:31  time: 1.7990  data_time: 0.0156  memory: 10158  loss: 29.2544  decode.loss_cls: 0.3902  decode.loss_mask: 1.2594  decode.loss_dice: 1.2873  decode.d0.loss_cls: 0.4155  decode.d0.loss_mask: 1.3274  decode.d0.loss_dice: 1.4236  decode.d1.loss_cls: 0.3699  decode.d1.loss_mask: 1.2096  decode.d1.loss_dice: 1.3013  decode.d2.loss_cls: 0.3346  decode.d2.loss_mask: 1.2264  decode.d2.loss_dice: 1.2991  decode.d3.loss_cls: 0.3669  decode.d3.loss_mask: 1.2519  decode.d3.loss_dice: 1.2974  decode.d4.loss_cls: 0.3508  decode.d4.loss_mask: 1.2588  decode.d4.loss_dice: 1.3046  decode.d5.loss_cls: 0.3858  decode.d5.loss_mask: 1.2119  decode.d5.loss_dice: 1.3124  decode.d6.loss_cls: 0.3498  decode.d6.loss_mask: 1.2532  decode.d6.loss_dice: 1.3222  decode.d7.loss_cls: 0.3406  decode.d7.loss_mask: 1.2434  decode.d7.loss_dice: 1.2917  decode.d8.loss_cls: 0.3331  decode.d8.loss_mask: 1.2250  decode.d8.loss_dice: 1.3107
2025/03/29 17:58:48 - mmengine - INFO - Iter(train) [10750/20000]  base_lr: 4.9960e-05 lr: 4.9960e-05  eta: 4:18:13  time: 1.8041  data_time: 0.0157  memory: 10083  loss: 32.1021  decode.loss_cls: 0.3303  decode.loss_mask: 1.4148  decode.loss_dice: 1.4154  decode.d0.loss_cls: 0.4631  decode.d0.loss_mask: 1.4881  decode.d0.loss_dice: 1.5341  decode.d1.loss_cls: 0.3297  decode.d1.loss_mask: 1.4229  decode.d1.loss_dice: 1.4242  decode.d2.loss_cls: 0.3092  decode.d2.loss_mask: 1.4305  decode.d2.loss_dice: 1.4288  decode.d3.loss_cls: 0.2643  decode.d3.loss_mask: 1.4805  decode.d3.loss_dice: 1.4438  decode.d4.loss_cls: 0.3399  decode.d4.loss_mask: 1.4589  decode.d4.loss_dice: 1.4308  decode.d5.loss_cls: 0.3288  decode.d5.loss_mask: 1.4620  decode.d5.loss_dice: 1.4192  decode.d6.loss_cls: 0.3538  decode.d6.loss_mask: 1.4042  decode.d6.loss_dice: 1.3726  decode.d7.loss_cls: 0.3451  decode.d7.loss_mask: 1.4101  decode.d7.loss_dice: 1.4425  decode.d8.loss_cls: 0.3376  decode.d8.loss_mask: 1.3846  decode.d8.loss_dice: 1.4323
2025/03/29 18:00:09 - mmengine - INFO - Iter(train) [10800/20000]  base_lr: 4.9717e-05 lr: 4.9717e-05  eta: 4:16:48  time: 1.6678  data_time: 0.0165  memory: 10090  loss: 33.6373  decode.loss_cls: 0.4382  decode.loss_mask: 1.3684  decode.loss_dice: 1.5275  decode.d0.loss_cls: 0.4756  decode.d0.loss_mask: 1.4302  decode.d0.loss_dice: 1.6373  decode.d1.loss_cls: 0.4676  decode.d1.loss_mask: 1.4138  decode.d1.loss_dice: 1.5243  decode.d2.loss_cls: 0.4658  decode.d2.loss_mask: 1.3714  decode.d2.loss_dice: 1.4673  decode.d3.loss_cls: 0.4094  decode.d3.loss_mask: 1.3926  decode.d3.loss_dice: 1.4880  decode.d4.loss_cls: 0.4249  decode.d4.loss_mask: 1.3914  decode.d4.loss_dice: 1.4961  decode.d5.loss_cls: 0.4228  decode.d5.loss_mask: 1.3819  decode.d5.loss_dice: 1.4929  decode.d6.loss_cls: 0.4296  decode.d6.loss_mask: 1.4016  decode.d6.loss_dice: 1.5151  decode.d7.loss_cls: 0.4534  decode.d7.loss_mask: 1.4099  decode.d7.loss_dice: 1.5106  decode.d8.loss_cls: 0.5335  decode.d8.loss_mask: 1.3714  decode.d8.loss_dice: 1.5250
2025/03/29 18:01:33 - mmengine - INFO - Iter(train) [10850/20000]  base_lr: 4.9473e-05 lr: 4.9473e-05  eta: 4:15:24  time: 1.6681  data_time: 0.0176  memory: 10095  loss: 31.9219  decode.loss_cls: 0.3816  decode.loss_mask: 1.3254  decode.loss_dice: 1.4808  decode.d0.loss_cls: 0.4253  decode.d0.loss_mask: 1.4107  decode.d0.loss_dice: 1.6282  decode.d1.loss_cls: 0.4018  decode.d1.loss_mask: 1.3361  decode.d1.loss_dice: 1.4595  decode.d2.loss_cls: 0.3796  decode.d2.loss_mask: 1.3207  decode.d2.loss_dice: 1.4310  decode.d3.loss_cls: 0.3518  decode.d3.loss_mask: 1.3427  decode.d3.loss_dice: 1.4819  decode.d4.loss_cls: 0.3545  decode.d4.loss_mask: 1.3145  decode.d4.loss_dice: 1.5068  decode.d5.loss_cls: 0.3405  decode.d5.loss_mask: 1.3336  decode.d5.loss_dice: 1.4856  decode.d6.loss_cls: 0.3748  decode.d6.loss_mask: 1.3134  decode.d6.loss_dice: 1.4645  decode.d7.loss_cls: 0.3988  decode.d7.loss_mask: 1.2904  decode.d7.loss_dice: 1.4333  decode.d8.loss_cls: 0.3952  decode.d8.loss_mask: 1.2930  decode.d8.loss_dice: 1.4660
2025/03/29 18:02:57 - mmengine - INFO - Iter(train) [10900/20000]  base_lr: 4.9230e-05 lr: 4.9230e-05  eta: 4:14:00  time: 1.6726  data_time: 0.0175  memory: 10097  loss: 34.1444  decode.loss_cls: 0.4321  decode.loss_mask: 1.4221  decode.loss_dice: 1.5362  decode.d0.loss_cls: 0.4072  decode.d0.loss_mask: 1.4615  decode.d0.loss_dice: 1.6039  decode.d1.loss_cls: 0.4254  decode.d1.loss_mask: 1.4400  decode.d1.loss_dice: 1.5414  decode.d2.loss_cls: 0.4296  decode.d2.loss_mask: 1.4678  decode.d2.loss_dice: 1.5326  decode.d3.loss_cls: 0.4598  decode.d3.loss_mask: 1.4398  decode.d3.loss_dice: 1.5022  decode.d4.loss_cls: 0.4743  decode.d4.loss_mask: 1.4356  decode.d4.loss_dice: 1.5239  decode.d5.loss_cls: 0.4452  decode.d5.loss_mask: 1.4407  decode.d5.loss_dice: 1.5449  decode.d6.loss_cls: 0.4112  decode.d6.loss_mask: 1.4169  decode.d6.loss_dice: 1.5468  decode.d7.loss_cls: 0.4195  decode.d7.loss_mask: 1.4510  decode.d7.loss_dice: 1.5227  decode.d8.loss_cls: 0.4749  decode.d8.loss_mask: 1.4171  decode.d8.loss_dice: 1.5181
2025/03/29 18:04:20 - mmengine - INFO - Iter(train) [10950/20000]  base_lr: 4.8986e-05 lr: 4.8986e-05  eta: 4:12:36  time: 1.6826  data_time: 0.0180  memory: 10135  loss: 29.8757  decode.loss_cls: 0.2892  decode.loss_mask: 1.3482  decode.loss_dice: 1.2964  decode.d0.loss_cls: 0.4288  decode.d0.loss_mask: 1.3418  decode.d0.loss_dice: 1.3446  decode.d1.loss_cls: 0.3563  decode.d1.loss_mask: 1.3053  decode.d1.loss_dice: 1.3066  decode.d2.loss_cls: 0.3000  decode.d2.loss_mask: 1.3555  decode.d2.loss_dice: 1.3227  decode.d3.loss_cls: 0.3100  decode.d3.loss_mask: 1.3560  decode.d3.loss_dice: 1.3169  decode.d4.loss_cls: 0.3014  decode.d4.loss_mask: 1.3895  decode.d4.loss_dice: 1.3113  decode.d5.loss_cls: 0.2911  decode.d5.loss_mask: 1.3585  decode.d5.loss_dice: 1.3160  decode.d6.loss_cls: 0.2920  decode.d6.loss_mask: 1.3748  decode.d6.loss_dice: 1.3302  decode.d7.loss_cls: 0.3346  decode.d7.loss_mask: 1.3315  decode.d7.loss_dice: 1.2891  decode.d8.loss_cls: 0.2928  decode.d8.loss_mask: 1.3821  decode.d8.loss_dice: 1.3029
2025/03/29 18:05:44 - mmengine - INFO - Exp name: r2u_20250329_122140
2025/03/29 18:05:44 - mmengine - INFO - Iter(train) [11000/20000]  base_lr: 4.8743e-05 lr: 4.8743e-05  eta: 4:11:13  time: 1.6726  data_time: 0.0174  memory: 10098  loss: 32.9437  decode.loss_cls: 0.4284  decode.loss_mask: 1.4426  decode.loss_dice: 1.4019  decode.d0.loss_cls: 0.4284  decode.d0.loss_mask: 1.5122  decode.d0.loss_dice: 1.5694  decode.d1.loss_cls: 0.3599  decode.d1.loss_mask: 1.4480  decode.d1.loss_dice: 1.4717  decode.d2.loss_cls: 0.3744  decode.d2.loss_mask: 1.4627  decode.d2.loss_dice: 1.4224  decode.d3.loss_cls: 0.4027  decode.d3.loss_mask: 1.4415  decode.d3.loss_dice: 1.4573  decode.d4.loss_cls: 0.4494  decode.d4.loss_mask: 1.4481  decode.d4.loss_dice: 1.4246  decode.d5.loss_cls: 0.4058  decode.d5.loss_mask: 1.4487  decode.d5.loss_dice: 1.4098  decode.d6.loss_cls: 0.4157  decode.d6.loss_mask: 1.4142  decode.d6.loss_dice: 1.4123  decode.d7.loss_cls: 0.3733  decode.d7.loss_mask: 1.4526  decode.d7.loss_dice: 1.4306  decode.d8.loss_cls: 0.4363  decode.d8.loss_mask: 1.3977  decode.d8.loss_dice: 1.4014
2025/03/29 18:07:08 - mmengine - INFO - Iter(train) [11050/20000]  base_lr: 4.8499e-05 lr: 4.8499e-05  eta: 4:09:49  time: 1.6719  data_time: 0.0182  memory: 10157  loss: 38.0224  decode.loss_cls: 0.5253  decode.loss_mask: 1.5674  decode.loss_dice: 1.7603  decode.d0.loss_cls: 0.4912  decode.d0.loss_mask: 1.5900  decode.d0.loss_dice: 1.8534  decode.d1.loss_cls: 0.5482  decode.d1.loss_mask: 1.5289  decode.d1.loss_dice: 1.7728  decode.d2.loss_cls: 0.5364  decode.d2.loss_mask: 1.5425  decode.d2.loss_dice: 1.7252  decode.d3.loss_cls: 0.5791  decode.d3.loss_mask: 1.4489  decode.d3.loss_dice: 1.6786  decode.d4.loss_cls: 0.5726  decode.d4.loss_mask: 1.4861  decode.d4.loss_dice: 1.7257  decode.d5.loss_cls: 0.4842  decode.d5.loss_mask: 1.4880  decode.d5.loss_dice: 1.7535  decode.d6.loss_cls: 0.5205  decode.d6.loss_mask: 1.4829  decode.d6.loss_dice: 1.7532  decode.d7.loss_cls: 0.5300  decode.d7.loss_mask: 1.4976  decode.d7.loss_dice: 1.7697  decode.d8.loss_cls: 0.4726  decode.d8.loss_mask: 1.5283  decode.d8.loss_dice: 1.8093
2025/03/29 18:08:32 - mmengine - INFO - Iter(train) [11100/20000]  base_lr: 4.8255e-05 lr: 4.8255e-05  eta: 4:08:25  time: 1.6728  data_time: 0.0188  memory: 10150  loss: 35.8324  decode.loss_cls: 0.4771  decode.loss_mask: 1.4954  decode.loss_dice: 1.5825  decode.d0.loss_cls: 0.6082  decode.d0.loss_mask: 1.4304  decode.d0.loss_dice: 1.6493  decode.d1.loss_cls: 0.5180  decode.d1.loss_mask: 1.4467  decode.d1.loss_dice: 1.6307  decode.d2.loss_cls: 0.4849  decode.d2.loss_mask: 1.4836  decode.d2.loss_dice: 1.6106  decode.d3.loss_cls: 0.5138  decode.d3.loss_mask: 1.4939  decode.d3.loss_dice: 1.6073  decode.d4.loss_cls: 0.4698  decode.d4.loss_mask: 1.4711  decode.d4.loss_dice: 1.6039  decode.d5.loss_cls: 0.4428  decode.d5.loss_mask: 1.5121  decode.d5.loss_dice: 1.6096  decode.d6.loss_cls: 0.4759  decode.d6.loss_mask: 1.4883  decode.d6.loss_dice: 1.5867  decode.d7.loss_cls: 0.4526  decode.d7.loss_mask: 1.5034  decode.d7.loss_dice: 1.6051  decode.d8.loss_cls: 0.4828  decode.d8.loss_mask: 1.5029  decode.d8.loss_dice: 1.5932
2025/03/29 18:09:56 - mmengine - INFO - Iter(train) [11150/20000]  base_lr: 4.8011e-05 lr: 4.8011e-05  eta: 4:07:02  time: 1.6771  data_time: 0.0183  memory: 10102  loss: 34.2584  decode.loss_cls: 0.3571  decode.loss_mask: 1.4967  decode.loss_dice: 1.5623  decode.d0.loss_cls: 0.4290  decode.d0.loss_mask: 1.5644  decode.d0.loss_dice: 1.5866  decode.d1.loss_cls: 0.4710  decode.d1.loss_mask: 1.4756  decode.d1.loss_dice: 1.5181  decode.d2.loss_cls: 0.3803  decode.d2.loss_mask: 1.4710  decode.d2.loss_dice: 1.5095  decode.d3.loss_cls: 0.3729  decode.d3.loss_mask: 1.4931  decode.d3.loss_dice: 1.5319  decode.d4.loss_cls: 0.3718  decode.d4.loss_mask: 1.5189  decode.d4.loss_dice: 1.5320  decode.d5.loss_cls: 0.3950  decode.d5.loss_mask: 1.5116  decode.d5.loss_dice: 1.5203  decode.d6.loss_cls: 0.3758  decode.d6.loss_mask: 1.4985  decode.d6.loss_dice: 1.5214  decode.d7.loss_cls: 0.3656  decode.d7.loss_mask: 1.5056  decode.d7.loss_dice: 1.5429  decode.d8.loss_cls: 0.3412  decode.d8.loss_mask: 1.4981  decode.d8.loss_dice: 1.5404
2025/03/29 18:11:20 - mmengine - INFO - Iter(train) [11200/20000]  base_lr: 4.7767e-05 lr: 4.7767e-05  eta: 4:05:38  time: 1.6821  data_time: 0.0178  memory: 10095  loss: 30.6291  decode.loss_cls: 0.3277  decode.loss_mask: 1.2987  decode.loss_dice: 1.4092  decode.d0.loss_cls: 0.5037  decode.d0.loss_mask: 1.2942  decode.d0.loss_dice: 1.4487  decode.d1.loss_cls: 0.3499  decode.d1.loss_mask: 1.2795  decode.d1.loss_dice: 1.4119  decode.d2.loss_cls: 0.3920  decode.d2.loss_mask: 1.2633  decode.d2.loss_dice: 1.3651  decode.d3.loss_cls: 0.3553  decode.d3.loss_mask: 1.2852  decode.d3.loss_dice: 1.3946  decode.d4.loss_cls: 0.3707  decode.d4.loss_mask: 1.2999  decode.d4.loss_dice: 1.3958  decode.d5.loss_cls: 0.3737  decode.d5.loss_mask: 1.2926  decode.d5.loss_dice: 1.4008  decode.d6.loss_cls: 0.3251  decode.d6.loss_mask: 1.2932  decode.d6.loss_dice: 1.4081  decode.d7.loss_cls: 0.2990  decode.d7.loss_mask: 1.3236  decode.d7.loss_dice: 1.4228  decode.d8.loss_cls: 0.3097  decode.d8.loss_mask: 1.3083  decode.d8.loss_dice: 1.4266
2025/03/29 18:12:44 - mmengine - INFO - Iter(train) [11250/20000]  base_lr: 4.7523e-05 lr: 4.7523e-05  eta: 4:04:15  time: 1.6770  data_time: 0.0178  memory: 10080  loss: 33.3279  decode.loss_cls: 0.3841  decode.loss_mask: 1.4330  decode.loss_dice: 1.5036  decode.d0.loss_cls: 0.4676  decode.d0.loss_mask: 1.4758  decode.d0.loss_dice: 1.5840  decode.d1.loss_cls: 0.3693  decode.d1.loss_mask: 1.4156  decode.d1.loss_dice: 1.5250  decode.d2.loss_cls: 0.3489  decode.d2.loss_mask: 1.4286  decode.d2.loss_dice: 1.5297  decode.d3.loss_cls: 0.3127  decode.d3.loss_mask: 1.4277  decode.d3.loss_dice: 1.5299  decode.d4.loss_cls: 0.3176  decode.d4.loss_mask: 1.4241  decode.d4.loss_dice: 1.5529  decode.d5.loss_cls: 0.3410  decode.d5.loss_mask: 1.4454  decode.d5.loss_dice: 1.5909  decode.d6.loss_cls: 0.2981  decode.d6.loss_mask: 1.4593  decode.d6.loss_dice: 1.5688  decode.d7.loss_cls: 0.3433  decode.d7.loss_mask: 1.4294  decode.d7.loss_dice: 1.5385  decode.d8.loss_cls: 0.3536  decode.d8.loss_mask: 1.4274  decode.d8.loss_dice: 1.5021
2025/03/29 18:14:08 - mmengine - INFO - Iter(train) [11300/20000]  base_lr: 4.7278e-05 lr: 4.7278e-05  eta: 4:02:51  time: 1.6767  data_time: 0.0180  memory: 10091  loss: 33.6760  decode.loss_cls: 0.6634  decode.loss_mask: 1.2747  decode.loss_dice: 1.4239  decode.d0.loss_cls: 0.5675  decode.d0.loss_mask: 1.3490  decode.d0.loss_dice: 1.6691  decode.d1.loss_cls: 0.5643  decode.d1.loss_mask: 1.2967  decode.d1.loss_dice: 1.4938  decode.d2.loss_cls: 0.5959  decode.d2.loss_mask: 1.2729  decode.d2.loss_dice: 1.4406  decode.d3.loss_cls: 0.6015  decode.d3.loss_mask: 1.2962  decode.d3.loss_dice: 1.4763  decode.d4.loss_cls: 0.5987  decode.d4.loss_mask: 1.2900  decode.d4.loss_dice: 1.5015  decode.d5.loss_cls: 0.6580  decode.d5.loss_mask: 1.2703  decode.d5.loss_dice: 1.4585  decode.d6.loss_cls: 0.6000  decode.d6.loss_mask: 1.2557  decode.d6.loss_dice: 1.4559  decode.d7.loss_cls: 0.6096  decode.d7.loss_mask: 1.2564  decode.d7.loss_dice: 1.4375  decode.d8.loss_cls: 0.6236  decode.d8.loss_mask: 1.2348  decode.d8.loss_dice: 1.4397
2025/03/29 18:15:32 - mmengine - INFO - Iter(train) [11350/20000]  base_lr: 4.7033e-05 lr: 4.7033e-05  eta: 4:01:27  time: 1.6763  data_time: 0.0179  memory: 10143  loss: 32.0616  decode.loss_cls: 0.3743  decode.loss_mask: 1.3194  decode.loss_dice: 1.4876  decode.d0.loss_cls: 0.3465  decode.d0.loss_mask: 1.4312  decode.d0.loss_dice: 1.6293  decode.d1.loss_cls: 0.3537  decode.d1.loss_mask: 1.3263  decode.d1.loss_dice: 1.5184  decode.d2.loss_cls: 0.4239  decode.d2.loss_mask: 1.3120  decode.d2.loss_dice: 1.5052  decode.d3.loss_cls: 0.4297  decode.d3.loss_mask: 1.2746  decode.d3.loss_dice: 1.4307  decode.d4.loss_cls: 0.3848  decode.d4.loss_mask: 1.3141  decode.d4.loss_dice: 1.4909  decode.d5.loss_cls: 0.3973  decode.d5.loss_mask: 1.3093  decode.d5.loss_dice: 1.4739  decode.d6.loss_cls: 0.3902  decode.d6.loss_mask: 1.3264  decode.d6.loss_dice: 1.4746  decode.d7.loss_cls: 0.3942  decode.d7.loss_mask: 1.2964  decode.d7.loss_dice: 1.4668  decode.d8.loss_cls: 0.4394  decode.d8.loss_mask: 1.2875  decode.d8.loss_dice: 1.4530
2025/03/29 18:16:55 - mmengine - INFO - Iter(train) [11400/20000]  base_lr: 4.6789e-05 lr: 4.6789e-05  eta: 4:00:04  time: 1.6800  data_time: 0.0173  memory: 10151  loss: 33.8638  decode.loss_cls: 0.4143  decode.loss_mask: 1.4906  decode.loss_dice: 1.4620  decode.d0.loss_cls: 0.5893  decode.d0.loss_mask: 1.5186  decode.d0.loss_dice: 1.4917  decode.d1.loss_cls: 0.4675  decode.d1.loss_mask: 1.4528  decode.d1.loss_dice: 1.4330  decode.d2.loss_cls: 0.4449  decode.d2.loss_mask: 1.4881  decode.d2.loss_dice: 1.4611  decode.d3.loss_cls: 0.4778  decode.d3.loss_mask: 1.4327  decode.d3.loss_dice: 1.4398  decode.d4.loss_cls: 0.4488  decode.d4.loss_mask: 1.4792  decode.d4.loss_dice: 1.4313  decode.d5.loss_cls: 0.4733  decode.d5.loss_mask: 1.4419  decode.d5.loss_dice: 1.4110  decode.d6.loss_cls: 0.4408  decode.d6.loss_mask: 1.4746  decode.d6.loss_dice: 1.4247  decode.d7.loss_cls: 0.4494  decode.d7.loss_mask: 1.4673  decode.d7.loss_dice: 1.4632  decode.d8.loss_cls: 0.4654  decode.d8.loss_mask: 1.4778  decode.d8.loss_dice: 1.4507
2025/03/29 18:18:19 - mmengine - INFO - Iter(train) [11450/20000]  base_lr: 4.6544e-05 lr: 4.6544e-05  eta: 3:58:40  time: 1.6809  data_time: 0.0164  memory: 10143  loss: 36.3695  decode.loss_cls: 0.3923  decode.loss_mask: 1.6134  decode.loss_dice: 1.5861  decode.d0.loss_cls: 0.6168  decode.d0.loss_mask: 1.5830  decode.d0.loss_dice: 1.6448  decode.d1.loss_cls: 0.4650  decode.d1.loss_mask: 1.6248  decode.d1.loss_dice: 1.6107  decode.d2.loss_cls: 0.4098  decode.d2.loss_mask: 1.6087  decode.d2.loss_dice: 1.5583  decode.d3.loss_cls: 0.3928  decode.d3.loss_mask: 1.6370  decode.d3.loss_dice: 1.5959  decode.d4.loss_cls: 0.3866  decode.d4.loss_mask: 1.5924  decode.d4.loss_dice: 1.5740  decode.d5.loss_cls: 0.3969  decode.d5.loss_mask: 1.6218  decode.d5.loss_dice: 1.5939  decode.d6.loss_cls: 0.4878  decode.d6.loss_mask: 1.5962  decode.d6.loss_dice: 1.5425  decode.d7.loss_cls: 0.4164  decode.d7.loss_mask: 1.6172  decode.d7.loss_dice: 1.5989  decode.d8.loss_cls: 0.3810  decode.d8.loss_mask: 1.6323  decode.d8.loss_dice: 1.5921
2025/03/29 18:19:43 - mmengine - INFO - Iter(train) [11500/20000]  base_lr: 4.6299e-05 lr: 4.6299e-05  eta: 3:57:16  time: 1.6745  data_time: 0.0172  memory: 10087  loss: 33.3755  decode.loss_cls: 0.4939  decode.loss_mask: 1.3954  decode.loss_dice: 1.4370  decode.d0.loss_cls: 0.5886  decode.d0.loss_mask: 1.4359  decode.d0.loss_dice: 1.5543  decode.d1.loss_cls: 0.4594  decode.d1.loss_mask: 1.4172  decode.d1.loss_dice: 1.4584  decode.d2.loss_cls: 0.4486  decode.d2.loss_mask: 1.3757  decode.d2.loss_dice: 1.4570  decode.d3.loss_cls: 0.4808  decode.d3.loss_mask: 1.3781  decode.d3.loss_dice: 1.4422  decode.d4.loss_cls: 0.5059  decode.d4.loss_mask: 1.3815  decode.d4.loss_dice: 1.4264  decode.d5.loss_cls: 0.4162  decode.d5.loss_mask: 1.3990  decode.d5.loss_dice: 1.4796  decode.d6.loss_cls: 0.5176  decode.d6.loss_mask: 1.3668  decode.d6.loss_dice: 1.4377  decode.d7.loss_cls: 0.4595  decode.d7.loss_mask: 1.3918  decode.d7.loss_dice: 1.4668  decode.d8.loss_cls: 0.4796  decode.d8.loss_mask: 1.3804  decode.d8.loss_dice: 1.4443
2025/03/29 18:21:07 - mmengine - INFO - Iter(train) [11550/20000]  base_lr: 4.6054e-05 lr: 4.6054e-05  eta: 3:55:53  time: 1.6746  data_time: 0.0183  memory: 10098  loss: 31.2553  decode.loss_cls: 0.3694  decode.loss_mask: 1.4547  decode.loss_dice: 1.3664  decode.d0.loss_cls: 0.4219  decode.d0.loss_mask: 1.3966  decode.d0.loss_dice: 1.4414  decode.d1.loss_cls: 0.4181  decode.d1.loss_mask: 1.3522  decode.d1.loss_dice: 1.3741  decode.d2.loss_cls: 0.3884  decode.d2.loss_mask: 1.3688  decode.d2.loss_dice: 1.3389  decode.d3.loss_cls: 0.3708  decode.d3.loss_mask: 1.3855  decode.d3.loss_dice: 1.3448  decode.d4.loss_cls: 0.3361  decode.d4.loss_mask: 1.3673  decode.d4.loss_dice: 1.3395  decode.d5.loss_cls: 0.3220  decode.d5.loss_mask: 1.3859  decode.d5.loss_dice: 1.3362  decode.d6.loss_cls: 0.3888  decode.d6.loss_mask: 1.3946  decode.d6.loss_dice: 1.3613  decode.d7.loss_cls: 0.3442  decode.d7.loss_mask: 1.4027  decode.d7.loss_dice: 1.3504  decode.d8.loss_cls: 0.3409  decode.d8.loss_mask: 1.4238  decode.d8.loss_dice: 1.3697
2025/03/29 18:22:30 - mmengine - INFO - Iter(train) [11600/20000]  base_lr: 4.5808e-05 lr: 4.5808e-05  eta: 3:54:29  time: 1.6696  data_time: 0.0155  memory: 10078  loss: 33.1372  decode.loss_cls: 0.3072  decode.loss_mask: 1.4406  decode.loss_dice: 1.5237  decode.d0.loss_cls: 0.5040  decode.d0.loss_mask: 1.4040  decode.d0.loss_dice: 1.5397  decode.d1.loss_cls: 0.3235  decode.d1.loss_mask: 1.4182  decode.d1.loss_dice: 1.5229  decode.d2.loss_cls: 0.3227  decode.d2.loss_mask: 1.4341  decode.d2.loss_dice: 1.5262  decode.d3.loss_cls: 0.3212  decode.d3.loss_mask: 1.4506  decode.d3.loss_dice: 1.5289  decode.d4.loss_cls: 0.3327  decode.d4.loss_mask: 1.4665  decode.d4.loss_dice: 1.5404  decode.d5.loss_cls: 0.3529  decode.d5.loss_mask: 1.4035  decode.d5.loss_dice: 1.5195  decode.d6.loss_cls: 0.3476  decode.d6.loss_mask: 1.4435  decode.d6.loss_dice: 1.5141  decode.d7.loss_cls: 0.3991  decode.d7.loss_mask: 1.4312  decode.d7.loss_dice: 1.4995  decode.d8.loss_cls: 0.3375  decode.d8.loss_mask: 1.4512  decode.d8.loss_dice: 1.5305
2025/03/29 18:23:54 - mmengine - INFO - Iter(train) [11650/20000]  base_lr: 4.5563e-05 lr: 4.5563e-05  eta: 3:53:05  time: 1.6664  data_time: 0.0153  memory: 10088  loss: 30.4578  decode.loss_cls: 0.4036  decode.loss_mask: 1.3228  decode.loss_dice: 1.3018  decode.d0.loss_cls: 0.5400  decode.d0.loss_mask: 1.3197  decode.d0.loss_dice: 1.3562  decode.d1.loss_cls: 0.3898  decode.d1.loss_mask: 1.3011  decode.d1.loss_dice: 1.2797  decode.d2.loss_cls: 0.4176  decode.d2.loss_mask: 1.2742  decode.d2.loss_dice: 1.2734  decode.d3.loss_cls: 0.4052  decode.d3.loss_mask: 1.2893  decode.d3.loss_dice: 1.2829  decode.d4.loss_cls: 0.3956  decode.d4.loss_mask: 1.3828  decode.d4.loss_dice: 1.2955  decode.d5.loss_cls: 0.4243  decode.d5.loss_mask: 1.3415  decode.d5.loss_dice: 1.2994  decode.d6.loss_cls: 0.3919  decode.d6.loss_mask: 1.3714  decode.d6.loss_dice: 1.3166  decode.d7.loss_cls: 0.3893  decode.d7.loss_mask: 1.3763  decode.d7.loss_dice: 1.3088  decode.d8.loss_cls: 0.3914  decode.d8.loss_mask: 1.3225  decode.d8.loss_dice: 1.2935
2025/03/29 18:25:18 - mmengine - INFO - Iter(train) [11700/20000]  base_lr: 4.5317e-05 lr: 4.5317e-05  eta: 3:51:41  time: 1.6812  data_time: 0.0155  memory: 10153  loss: 33.0412  decode.loss_cls: 0.4734  decode.loss_mask: 1.3253  decode.loss_dice: 1.4684  decode.d0.loss_cls: 0.5179  decode.d0.loss_mask: 1.3563  decode.d0.loss_dice: 1.5966  decode.d1.loss_cls: 0.4771  decode.d1.loss_mask: 1.3235  decode.d1.loss_dice: 1.4843  decode.d2.loss_cls: 0.5026  decode.d2.loss_mask: 1.2848  decode.d2.loss_dice: 1.4602  decode.d3.loss_cls: 0.5009  decode.d3.loss_mask: 1.3166  decode.d3.loss_dice: 1.4829  decode.d4.loss_cls: 0.4952  decode.d4.loss_mask: 1.3821  decode.d4.loss_dice: 1.4345  decode.d5.loss_cls: 0.4784  decode.d5.loss_mask: 1.3618  decode.d5.loss_dice: 1.4482  decode.d6.loss_cls: 0.4810  decode.d6.loss_mask: 1.3199  decode.d6.loss_dice: 1.4328  decode.d7.loss_cls: 0.5032  decode.d7.loss_mask: 1.3679  decode.d7.loss_dice: 1.4646  decode.d8.loss_cls: 0.4482  decode.d8.loss_mask: 1.3742  decode.d8.loss_dice: 1.4785
2025/03/29 18:26:42 - mmengine - INFO - Iter(train) [11750/20000]  base_lr: 4.5071e-05 lr: 4.5071e-05  eta: 3:50:18  time: 1.6812  data_time: 0.0156  memory: 10085  loss: 31.5292  decode.loss_cls: 0.3399  decode.loss_mask: 1.3962  decode.loss_dice: 1.4186  decode.d0.loss_cls: 0.5118  decode.d0.loss_mask: 1.3831  decode.d0.loss_dice: 1.5299  decode.d1.loss_cls: 0.3864  decode.d1.loss_mask: 1.3703  decode.d1.loss_dice: 1.4306  decode.d2.loss_cls: 0.3357  decode.d2.loss_mask: 1.3725  decode.d2.loss_dice: 1.4186  decode.d3.loss_cls: 0.3736  decode.d3.loss_mask: 1.3472  decode.d3.loss_dice: 1.3899  decode.d4.loss_cls: 0.3765  decode.d4.loss_mask: 1.3553  decode.d4.loss_dice: 1.4241  decode.d5.loss_cls: 0.3098  decode.d5.loss_mask: 1.3823  decode.d5.loss_dice: 1.4014  decode.d6.loss_cls: 0.3324  decode.d6.loss_mask: 1.3797  decode.d6.loss_dice: 1.4091  decode.d7.loss_cls: 0.3069  decode.d7.loss_mask: 1.3596  decode.d7.loss_dice: 1.4247  decode.d8.loss_cls: 0.2904  decode.d8.loss_mask: 1.3585  decode.d8.loss_dice: 1.4143
2025/03/29 18:28:06 - mmengine - INFO - Iter(train) [11800/20000]  base_lr: 4.4825e-05 lr: 4.4825e-05  eta: 3:48:54  time: 1.6736  data_time: 0.0171  memory: 10152  loss: 28.7034  decode.loss_cls: 0.3742  decode.loss_mask: 1.1835  decode.loss_dice: 1.3172  decode.d0.loss_cls: 0.4083  decode.d0.loss_mask: 1.2421  decode.d0.loss_dice: 1.4058  decode.d1.loss_cls: 0.3960  decode.d1.loss_mask: 1.1721  decode.d1.loss_dice: 1.2956  decode.d2.loss_cls: 0.3749  decode.d2.loss_mask: 1.1695  decode.d2.loss_dice: 1.2878  decode.d3.loss_cls: 0.3369  decode.d3.loss_mask: 1.1861  decode.d3.loss_dice: 1.2838  decode.d4.loss_cls: 0.3949  decode.d4.loss_mask: 1.1782  decode.d4.loss_dice: 1.2635  decode.d5.loss_cls: 0.3880  decode.d5.loss_mask: 1.1824  decode.d5.loss_dice: 1.2610  decode.d6.loss_cls: 0.3901  decode.d6.loss_mask: 1.1927  decode.d6.loss_dice: 1.2978  decode.d7.loss_cls: 0.3901  decode.d7.loss_mask: 1.1858  decode.d7.loss_dice: 1.2888  decode.d8.loss_cls: 0.3980  decode.d8.loss_mask: 1.1859  decode.d8.loss_dice: 1.2725
2025/03/29 18:29:30 - mmengine - INFO - Iter(train) [11850/20000]  base_lr: 4.4579e-05 lr: 4.4579e-05  eta: 3:47:31  time: 1.6790  data_time: 0.0189  memory: 10095  loss: 31.9372  decode.loss_cls: 0.4445  decode.loss_mask: 1.3616  decode.loss_dice: 1.3815  decode.d0.loss_cls: 0.4283  decode.d0.loss_mask: 1.3752  decode.d0.loss_dice: 1.4958  decode.d1.loss_cls: 0.4552  decode.d1.loss_mask: 1.3398  decode.d1.loss_dice: 1.4149  decode.d2.loss_cls: 0.4236  decode.d2.loss_mask: 1.3503  decode.d2.loss_dice: 1.4135  decode.d3.loss_cls: 0.4074  decode.d3.loss_mask: 1.3371  decode.d3.loss_dice: 1.4190  decode.d4.loss_cls: 0.4474  decode.d4.loss_mask: 1.3369  decode.d4.loss_dice: 1.4233  decode.d5.loss_cls: 0.4304  decode.d5.loss_mask: 1.3427  decode.d5.loss_dice: 1.3881  decode.d6.loss_cls: 0.4120  decode.d6.loss_mask: 1.3357  decode.d6.loss_dice: 1.3970  decode.d7.loss_cls: 0.3789  decode.d7.loss_mask: 1.3529  decode.d7.loss_dice: 1.4251  decode.d8.loss_cls: 0.4290  decode.d8.loss_mask: 1.3633  decode.d8.loss_dice: 1.4271
2025/03/29 18:30:54 - mmengine - INFO - Iter(train) [11900/20000]  base_lr: 4.4333e-05 lr: 4.4333e-05  eta: 3:46:07  time: 1.6737  data_time: 0.0184  memory: 10096  loss: 31.9369  decode.loss_cls: 0.3585  decode.loss_mask: 1.4036  decode.loss_dice: 1.3675  decode.d0.loss_cls: 0.5828  decode.d0.loss_mask: 1.4249  decode.d0.loss_dice: 1.4107  decode.d1.loss_cls: 0.4328  decode.d1.loss_mask: 1.4388  decode.d1.loss_dice: 1.3704  decode.d2.loss_cls: 0.3901  decode.d2.loss_mask: 1.4455  decode.d2.loss_dice: 1.3855  decode.d3.loss_cls: 0.3949  decode.d3.loss_mask: 1.4212  decode.d3.loss_dice: 1.3936  decode.d4.loss_cls: 0.4119  decode.d4.loss_mask: 1.3877  decode.d4.loss_dice: 1.3466  decode.d5.loss_cls: 0.3924  decode.d5.loss_mask: 1.3909  decode.d5.loss_dice: 1.3694  decode.d6.loss_cls: 0.3922  decode.d6.loss_mask: 1.4215  decode.d6.loss_dice: 1.3660  decode.d7.loss_cls: 0.3643  decode.d7.loss_mask: 1.4067  decode.d7.loss_dice: 1.3473  decode.d8.loss_cls: 0.3465  decode.d8.loss_mask: 1.4186  decode.d8.loss_dice: 1.3540
2025/03/29 18:32:18 - mmengine - INFO - Iter(train) [11950/20000]  base_lr: 4.4087e-05 lr: 4.4087e-05  eta: 3:44:43  time: 1.6723  data_time: 0.0173  memory: 10090  loss: 32.3419  decode.loss_cls: 0.3413  decode.loss_mask: 1.4618  decode.loss_dice: 1.4645  decode.d0.loss_cls: 0.4485  decode.d0.loss_mask: 1.4277  decode.d0.loss_dice: 1.4936  decode.d1.loss_cls: 0.3370  decode.d1.loss_mask: 1.4260  decode.d1.loss_dice: 1.4636  decode.d2.loss_cls: 0.3038  decode.d2.loss_mask: 1.4571  decode.d2.loss_dice: 1.4605  decode.d3.loss_cls: 0.3616  decode.d3.loss_mask: 1.4077  decode.d3.loss_dice: 1.4558  decode.d4.loss_cls: 0.3428  decode.d4.loss_mask: 1.4159  decode.d4.loss_dice: 1.4697  decode.d5.loss_cls: 0.3544  decode.d5.loss_mask: 1.3833  decode.d5.loss_dice: 1.4318  decode.d6.loss_cls: 0.3190  decode.d6.loss_mask: 1.4294  decode.d6.loss_dice: 1.4450  decode.d7.loss_cls: 0.3474  decode.d7.loss_mask: 1.4262  decode.d7.loss_dice: 1.4532  decode.d8.loss_cls: 0.3696  decode.d8.loss_mask: 1.4002  decode.d8.loss_dice: 1.4434
2025/03/29 18:33:41 - mmengine - INFO - Exp name: r2u_20250329_122140
2025/03/29 18:33:41 - mmengine - INFO - Iter(train) [12000/20000]  base_lr: 4.3840e-05 lr: 4.3840e-05  eta: 3:43:19  time: 1.6749  data_time: 0.0174  memory: 10100  loss: 34.3496  decode.loss_cls: 0.2967  decode.loss_mask: 1.6187  decode.loss_dice: 1.4766  decode.d0.loss_cls: 0.4465  decode.d0.loss_mask: 1.6234  decode.d0.loss_dice: 1.5160  decode.d1.loss_cls: 0.3563  decode.d1.loss_mask: 1.6187  decode.d1.loss_dice: 1.4700  decode.d2.loss_cls: 0.2970  decode.d2.loss_mask: 1.6437  decode.d2.loss_dice: 1.4698  decode.d3.loss_cls: 0.2710  decode.d3.loss_mask: 1.6666  decode.d3.loss_dice: 1.4755  decode.d4.loss_cls: 0.3165  decode.d4.loss_mask: 1.6014  decode.d4.loss_dice: 1.4826  decode.d5.loss_cls: 0.2958  decode.d5.loss_mask: 1.6422  decode.d5.loss_dice: 1.4860  decode.d6.loss_cls: 0.3426  decode.d6.loss_mask: 1.6146  decode.d6.loss_dice: 1.4931  decode.d7.loss_cls: 0.3172  decode.d7.loss_mask: 1.6148  decode.d7.loss_dice: 1.4874  decode.d8.loss_cls: 0.2981  decode.d8.loss_mask: 1.6079  decode.d8.loss_dice: 1.5031
2025/03/29 18:33:42 - mmengine - INFO - Saving checkpoint at 12000 iterations
2025/03/29 18:33:52 - mmengine - INFO - Iter(val) [  50/2708]    eta: 0:07:10  time: 0.1650  data_time: 0.0015  memory: 1856  
2025/03/29 18:34:00 - mmengine - INFO - Iter(val) [ 100/2708]    eta: 0:06:57  time: 0.1635  data_time: 0.0015  memory: 1856  
2025/03/29 18:34:09 - mmengine - INFO - Iter(val) [ 150/2708]    eta: 0:06:53  time: 0.1680  data_time: 0.0013  memory: 1856  
2025/03/29 18:34:17 - mmengine - INFO - Iter(val) [ 200/2708]    eta: 0:06:47  time: 0.1666  data_time: 0.0015  memory: 1856  
2025/03/29 18:34:25 - mmengine - INFO - Iter(val) [ 250/2708]    eta: 0:06:38  time: 0.1679  data_time: 0.0013  memory: 1856  
2025/03/29 18:34:33 - mmengine - INFO - Iter(val) [ 300/2708]    eta: 0:06:29  time: 0.1602  data_time: 0.0013  memory: 1856  
2025/03/29 18:34:41 - mmengine - INFO - Iter(val) [ 350/2708]    eta: 0:06:21  time: 0.1666  data_time: 0.0013  memory: 1856  
2025/03/29 18:34:49 - mmengine - INFO - Iter(val) [ 400/2708]    eta: 0:06:13  time: 0.1606  data_time: 0.0011  memory: 1856  
2025/03/29 18:34:57 - mmengine - INFO - Iter(val) [ 450/2708]    eta: 0:06:04  time: 0.1673  data_time: 0.0014  memory: 1856  
2025/03/29 18:35:05 - mmengine - INFO - Iter(val) [ 500/2708]    eta: 0:05:57  time: 0.1540  data_time: 0.0013  memory: 1856  
2025/03/29 18:35:13 - mmengine - INFO - Iter(val) [ 550/2708]    eta: 0:05:48  time: 0.1672  data_time: 0.0014  memory: 1856  
2025/03/29 18:35:21 - mmengine - INFO - Iter(val) [ 600/2708]    eta: 0:05:40  time: 0.1518  data_time: 0.0014  memory: 1856  
2025/03/29 18:35:29 - mmengine - INFO - Iter(val) [ 650/2708]    eta: 0:05:32  time: 0.1677  data_time: 0.0016  memory: 1856  
2025/03/29 18:35:37 - mmengine - INFO - Iter(val) [ 700/2708]    eta: 0:05:24  time: 0.1607  data_time: 0.0016  memory: 1856  
2025/03/29 18:35:45 - mmengine - INFO - Iter(val) [ 750/2708]    eta: 0:05:16  time: 0.1669  data_time: 0.0013  memory: 1856  
2025/03/29 18:35:54 - mmengine - INFO - Iter(val) [ 800/2708]    eta: 0:05:08  time: 0.1569  data_time: 0.0014  memory: 1856  
2025/03/29 18:36:02 - mmengine - INFO - Iter(val) [ 850/2708]    eta: 0:04:59  time: 0.1654  data_time: 0.0013  memory: 1856  
2025/03/29 18:36:10 - mmengine - INFO - Iter(val) [ 900/2708]    eta: 0:04:51  time: 0.1516  data_time: 0.0012  memory: 1856  
2025/03/29 18:36:18 - mmengine - INFO - Iter(val) [ 950/2708]    eta: 0:04:43  time: 0.1647  data_time: 0.0012  memory: 1856  
2025/03/29 18:36:25 - mmengine - INFO - Iter(val) [1000/2708]    eta: 0:04:35  time: 0.1648  data_time: 0.0013  memory: 1856  
2025/03/29 18:36:34 - mmengine - INFO - Iter(val) [1050/2708]    eta: 0:04:27  time: 0.1562  data_time: 0.0013  memory: 1856  
2025/03/29 18:36:42 - mmengine - INFO - Iter(val) [1100/2708]    eta: 0:04:18  time: 0.1580  data_time: 0.0014  memory: 1856  
2025/03/29 18:36:50 - mmengine - INFO - Iter(val) [1150/2708]    eta: 0:04:10  time: 0.1556  data_time: 0.0014  memory: 1856  
2025/03/29 18:36:58 - mmengine - INFO - Iter(val) [1200/2708]    eta: 0:04:02  time: 0.1657  data_time: 0.0015  memory: 1856  
2025/03/29 18:37:06 - mmengine - INFO - Iter(val) [1250/2708]    eta: 0:03:54  time: 0.1587  data_time: 0.0014  memory: 1856  
2025/03/29 18:37:14 - mmengine - INFO - Iter(val) [1300/2708]    eta: 0:03:46  time: 0.1670  data_time: 0.0013  memory: 1856  
2025/03/29 18:37:22 - mmengine - INFO - Iter(val) [1350/2708]    eta: 0:03:38  time: 0.1585  data_time: 0.0014  memory: 1856  
2025/03/29 18:37:30 - mmengine - INFO - Iter(val) [1400/2708]    eta: 0:03:30  time: 0.1671  data_time: 0.0012  memory: 1856  
2025/03/29 18:37:38 - mmengine - INFO - Iter(val) [1450/2708]    eta: 0:03:22  time: 0.1600  data_time: 0.0014  memory: 1856  
2025/03/29 18:37:46 - mmengine - INFO - Iter(val) [1500/2708]    eta: 0:03:14  time: 0.1671  data_time: 0.0014  memory: 1856  
2025/03/29 18:37:54 - mmengine - INFO - Iter(val) [1550/2708]    eta: 0:03:06  time: 0.1576  data_time: 0.0014  memory: 1856  
2025/03/29 18:38:02 - mmengine - INFO - Iter(val) [1600/2708]    eta: 0:02:58  time: 0.1608  data_time: 0.0013  memory: 1856  
2025/03/29 18:38:10 - mmengine - INFO - Iter(val) [1650/2708]    eta: 0:02:50  time: 0.1586  data_time: 0.0013  memory: 1856  
2025/03/29 18:38:18 - mmengine - INFO - Iter(val) [1700/2708]    eta: 0:02:42  time: 0.1549  data_time: 0.0013  memory: 1856  
2025/03/29 18:38:27 - mmengine - INFO - Iter(val) [1750/2708]    eta: 0:02:34  time: 0.1590  data_time: 0.0013  memory: 1856  
2025/03/29 18:38:35 - mmengine - INFO - Iter(val) [1800/2708]    eta: 0:02:26  time: 0.1573  data_time: 0.0013  memory: 1856  
2025/03/29 18:38:43 - mmengine - INFO - Iter(val) [1850/2708]    eta: 0:02:18  time: 0.1656  data_time: 0.0014  memory: 1856  
2025/03/29 18:38:51 - mmengine - INFO - Iter(val) [1900/2708]    eta: 0:02:10  time: 0.1558  data_time: 0.0012  memory: 1856  
2025/03/29 18:38:59 - mmengine - INFO - Iter(val) [1950/2708]    eta: 0:02:02  time: 0.1670  data_time: 0.0012  memory: 1856  
2025/03/29 18:39:07 - mmengine - INFO - Iter(val) [2000/2708]    eta: 0:01:54  time: 0.1607  data_time: 0.0013  memory: 1856  
2025/03/29 18:39:15 - mmengine - INFO - Iter(val) [2050/2708]    eta: 0:01:46  time: 0.1666  data_time: 0.0014  memory: 1856  
2025/03/29 18:39:23 - mmengine - INFO - Iter(val) [2100/2708]    eta: 0:01:38  time: 0.1545  data_time: 0.0014  memory: 1856  
2025/03/29 18:39:31 - mmengine - INFO - Iter(val) [2150/2708]    eta: 0:01:29  time: 0.1652  data_time: 0.0013  memory: 1856  
2025/03/29 18:39:39 - mmengine - INFO - Iter(val) [2200/2708]    eta: 0:01:21  time: 0.1592  data_time: 0.0013  memory: 1856  
2025/03/29 18:39:47 - mmengine - INFO - Iter(val) [2250/2708]    eta: 0:01:13  time: 0.1670  data_time: 0.0015  memory: 1856  
2025/03/29 18:39:55 - mmengine - INFO - Iter(val) [2300/2708]    eta: 0:01:05  time: 0.1573  data_time: 0.0013  memory: 1856  
2025/03/29 18:40:04 - mmengine - INFO - Iter(val) [2350/2708]    eta: 0:00:57  time: 0.1670  data_time: 0.0012  memory: 1856  
2025/03/29 18:40:12 - mmengine - INFO - Iter(val) [2400/2708]    eta: 0:00:49  time: 0.1607  data_time: 0.0012  memory: 1856  
2025/03/29 18:40:20 - mmengine - INFO - Iter(val) [2450/2708]    eta: 0:00:41  time: 0.1670  data_time: 0.0012  memory: 1856  
2025/03/29 18:40:28 - mmengine - INFO - Iter(val) [2500/2708]    eta: 0:00:33  time: 0.1624  data_time: 0.0013  memory: 1856  
2025/03/29 18:40:36 - mmengine - INFO - Iter(val) [2550/2708]    eta: 0:00:25  time: 0.1669  data_time: 0.0013  memory: 1856  
2025/03/29 18:40:44 - mmengine - INFO - Iter(val) [2600/2708]    eta: 0:00:17  time: 0.1596  data_time: 0.0013  memory: 1856  
2025/03/29 18:40:52 - mmengine - INFO - Iter(val) [2650/2708]    eta: 0:00:09  time: 0.1650  data_time: 0.0011  memory: 1856  
2025/03/29 18:41:00 - mmengine - INFO - Iter(val) [2700/2708]    eta: 0:00:01  time: 0.1548  data_time: 0.0012  memory: 1856  
2025/03/29 18:41:01 - mmengine - INFO - per class results:
2025/03/29 18:41:01 - mmengine - INFO - 
+--------------+-------+-------+
|    Class     |  IoU  |  Acc  |
+--------------+-------+-------+
|  background  | 43.97 | 66.04 |
|   building   | 65.84 | 80.91 |
|     road     | 56.13 | 68.19 |
|    water     | 76.58 | 85.71 |
|    barren    | 51.75 | 78.53 |
|    forest    | 56.45 | 74.87 |
| agricultural | 62.43 | 67.77 |
+--------------+-------+-------+
2025/03/29 18:41:01 - mmengine - INFO - Iter(val) [2708/2708]    aAcc: 72.4700  mIoU: 59.0200  mAcc: 74.5700  data_time: 0.0014  time: 0.1612
2025/03/29 18:41:01 - mmengine - INFO - The previous best checkpoint /home/face/kaichengyang/xiaoxinghu/Earth_Adapter/work_dirs/r2u/DG_spatial_64_cutoff_0.3_fft_pre6/35b71_seed0/best_mIoU_iter_10000.pth is removed
2025/03/29 18:41:02 - mmengine - INFO - The best checkpoint with 59.0200 mIoU at 12000 iter is saved to best_mIoU_iter_12000.pth.
2025/03/29 18:42:28 - mmengine - INFO - Iter(train) [12050/20000]  base_lr: 4.3594e-05 lr: 4.3594e-05  eta: 3:41:58  time: 1.6728  data_time: 0.0166  memory: 10096  loss: 36.3508  decode.loss_cls: 0.3374  decode.loss_mask: 1.7145  decode.loss_dice: 1.5276  decode.d0.loss_cls: 0.5679  decode.d0.loss_mask: 1.7078  decode.d0.loss_dice: 1.5361  decode.d1.loss_cls: 0.4019  decode.d1.loss_mask: 1.6848  decode.d1.loss_dice: 1.5161  decode.d2.loss_cls: 0.3715  decode.d2.loss_mask: 1.7730  decode.d2.loss_dice: 1.5365  decode.d3.loss_cls: 0.3705  decode.d3.loss_mask: 1.7398  decode.d3.loss_dice: 1.5321  decode.d4.loss_cls: 0.3849  decode.d4.loss_mask: 1.7028  decode.d4.loss_dice: 1.5404  decode.d5.loss_cls: 0.3688  decode.d5.loss_mask: 1.7747  decode.d5.loss_dice: 1.5290  decode.d6.loss_cls: 0.3741  decode.d6.loss_mask: 1.6739  decode.d6.loss_dice: 1.5110  decode.d7.loss_cls: 0.3183  decode.d7.loss_mask: 1.7430  decode.d7.loss_dice: 1.5350  decode.d8.loss_cls: 0.3438  decode.d8.loss_mask: 1.6909  decode.d8.loss_dice: 1.5431
2025/03/29 18:43:52 - mmengine - INFO - Iter(train) [12100/20000]  base_lr: 4.3347e-05 lr: 4.3347e-05  eta: 3:40:34  time: 1.6707  data_time: 0.0161  memory: 10088  loss: 34.9310  decode.loss_cls: 0.4349  decode.loss_mask: 1.4376  decode.loss_dice: 1.5731  decode.d0.loss_cls: 0.5187  decode.d0.loss_mask: 1.4358  decode.d0.loss_dice: 1.6842  decode.d1.loss_cls: 0.4618  decode.d1.loss_mask: 1.4030  decode.d1.loss_dice: 1.5945  decode.d2.loss_cls: 0.4491  decode.d2.loss_mask: 1.4708  decode.d2.loss_dice: 1.6185  decode.d3.loss_cls: 0.4336  decode.d3.loss_mask: 1.4524  decode.d3.loss_dice: 1.6037  decode.d4.loss_cls: 0.4143  decode.d4.loss_mask: 1.4757  decode.d4.loss_dice: 1.6013  decode.d5.loss_cls: 0.4095  decode.d5.loss_mask: 1.4499  decode.d5.loss_dice: 1.5938  decode.d6.loss_cls: 0.4352  decode.d6.loss_mask: 1.4168  decode.d6.loss_dice: 1.5795  decode.d7.loss_cls: 0.4472  decode.d7.loss_mask: 1.4704  decode.d7.loss_dice: 1.6144  decode.d8.loss_cls: 0.4462  decode.d8.loss_mask: 1.4358  decode.d8.loss_dice: 1.5694
2025/03/29 18:45:16 - mmengine - INFO - Iter(train) [12150/20000]  base_lr: 4.3100e-05 lr: 4.3100e-05  eta: 3:39:10  time: 1.6741  data_time: 0.0170  memory: 10155  loss: 33.8105  decode.loss_cls: 0.5765  decode.loss_mask: 1.2844  decode.loss_dice: 1.5563  decode.d0.loss_cls: 0.7015  decode.d0.loss_mask: 1.2810  decode.d0.loss_dice: 1.5999  decode.d1.loss_cls: 0.5701  decode.d1.loss_mask: 1.3111  decode.d1.loss_dice: 1.5523  decode.d2.loss_cls: 0.6047  decode.d2.loss_mask: 1.2560  decode.d2.loss_dice: 1.4405  decode.d3.loss_cls: 0.5492  decode.d3.loss_mask: 1.2582  decode.d3.loss_dice: 1.4995  decode.d4.loss_cls: 0.5360  decode.d4.loss_mask: 1.3504  decode.d4.loss_dice: 1.5011  decode.d5.loss_cls: 0.5397  decode.d5.loss_mask: 1.2908  decode.d5.loss_dice: 1.5325  decode.d6.loss_cls: 0.5144  decode.d6.loss_mask: 1.3035  decode.d6.loss_dice: 1.5435  decode.d7.loss_cls: 0.5087  decode.d7.loss_mask: 1.2814  decode.d7.loss_dice: 1.5032  decode.d8.loss_cls: 0.5023  decode.d8.loss_mask: 1.3374  decode.d8.loss_dice: 1.5241
2025/03/29 18:46:39 - mmengine - INFO - Iter(train) [12200/20000]  base_lr: 4.2853e-05 lr: 4.2853e-05  eta: 3:37:46  time: 1.6759  data_time: 0.0164  memory: 10099  loss: 34.5255  decode.loss_cls: 0.3841  decode.loss_mask: 1.5391  decode.loss_dice: 1.5266  decode.d0.loss_cls: 0.5492  decode.d0.loss_mask: 1.5539  decode.d0.loss_dice: 1.5487  decode.d1.loss_cls: 0.3894  decode.d1.loss_mask: 1.5718  decode.d1.loss_dice: 1.5003  decode.d2.loss_cls: 0.3800  decode.d2.loss_mask: 1.5235  decode.d2.loss_dice: 1.4859  decode.d3.loss_cls: 0.3781  decode.d3.loss_mask: 1.5548  decode.d3.loss_dice: 1.4741  decode.d4.loss_cls: 0.3679  decode.d4.loss_mask: 1.5629  decode.d4.loss_dice: 1.4775  decode.d5.loss_cls: 0.3458  decode.d5.loss_mask: 1.5495  decode.d5.loss_dice: 1.4908  decode.d6.loss_cls: 0.3633  decode.d6.loss_mask: 1.5662  decode.d6.loss_dice: 1.5110  decode.d7.loss_cls: 0.3683  decode.d7.loss_mask: 1.5586  decode.d7.loss_dice: 1.5361  decode.d8.loss_cls: 0.3679  decode.d8.loss_mask: 1.5614  decode.d8.loss_dice: 1.5388
2025/03/29 18:48:03 - mmengine - INFO - Iter(train) [12250/20000]  base_lr: 4.2605e-05 lr: 4.2605e-05  eta: 3:36:22  time: 1.6704  data_time: 0.0169  memory: 10142  loss: 32.7853  decode.loss_cls: 0.4308  decode.loss_mask: 1.4062  decode.loss_dice: 1.3880  decode.d0.loss_cls: 0.6280  decode.d0.loss_mask: 1.3713  decode.d0.loss_dice: 1.4737  decode.d1.loss_cls: 0.3968  decode.d1.loss_mask: 1.4424  decode.d1.loss_dice: 1.4486  decode.d2.loss_cls: 0.4326  decode.d2.loss_mask: 1.4256  decode.d2.loss_dice: 1.3886  decode.d3.loss_cls: 0.4163  decode.d3.loss_mask: 1.4313  decode.d3.loss_dice: 1.3858  decode.d4.loss_cls: 0.4148  decode.d4.loss_mask: 1.4235  decode.d4.loss_dice: 1.3705  decode.d5.loss_cls: 0.4728  decode.d5.loss_mask: 1.4289  decode.d5.loss_dice: 1.3770  decode.d6.loss_cls: 0.4466  decode.d6.loss_mask: 1.4140  decode.d6.loss_dice: 1.3631  decode.d7.loss_cls: 0.4323  decode.d7.loss_mask: 1.4656  decode.d7.loss_dice: 1.4113  decode.d8.loss_cls: 0.4101  decode.d8.loss_mask: 1.4593  decode.d8.loss_dice: 1.4292
2025/03/29 18:49:27 - mmengine - INFO - Iter(train) [12300/20000]  base_lr: 4.2358e-05 lr: 4.2358e-05  eta: 3:34:59  time: 1.6799  data_time: 0.0187  memory: 10138  loss: 36.8800  decode.loss_cls: 0.5231  decode.loss_mask: 1.5816  decode.loss_dice: 1.5860  decode.d0.loss_cls: 0.5732  decode.d0.loss_mask: 1.5461  decode.d0.loss_dice: 1.6916  decode.d1.loss_cls: 0.4842  decode.d1.loss_mask: 1.5444  decode.d1.loss_dice: 1.6226  decode.d2.loss_cls: 0.4707  decode.d2.loss_mask: 1.5498  decode.d2.loss_dice: 1.6095  decode.d3.loss_cls: 0.4590  decode.d3.loss_mask: 1.5637  decode.d3.loss_dice: 1.6137  decode.d4.loss_cls: 0.5050  decode.d4.loss_mask: 1.5780  decode.d4.loss_dice: 1.6171  decode.d5.loss_cls: 0.5234  decode.d5.loss_mask: 1.5892  decode.d5.loss_dice: 1.6006  decode.d6.loss_cls: 0.5097  decode.d6.loss_mask: 1.5880  decode.d6.loss_dice: 1.6076  decode.d7.loss_cls: 0.5254  decode.d7.loss_mask: 1.5663  decode.d7.loss_dice: 1.5993  decode.d8.loss_cls: 0.5027  decode.d8.loss_mask: 1.5562  decode.d8.loss_dice: 1.5922
2025/03/29 18:50:51 - mmengine - INFO - Iter(train) [12350/20000]  base_lr: 4.2110e-05 lr: 4.2110e-05  eta: 3:33:35  time: 1.6741  data_time: 0.0170  memory: 10096  loss: 32.6417  decode.loss_cls: 0.3495  decode.loss_mask: 1.5120  decode.loss_dice: 1.3726  decode.d0.loss_cls: 0.5871  decode.d0.loss_mask: 1.4549  decode.d0.loss_dice: 1.4168  decode.d1.loss_cls: 0.3808  decode.d1.loss_mask: 1.5030  decode.d1.loss_dice: 1.4107  decode.d2.loss_cls: 0.3416  decode.d2.loss_mask: 1.4680  decode.d2.loss_dice: 1.3764  decode.d3.loss_cls: 0.3719  decode.d3.loss_mask: 1.4850  decode.d3.loss_dice: 1.3522  decode.d4.loss_cls: 0.3238  decode.d4.loss_mask: 1.5157  decode.d4.loss_dice: 1.3990  decode.d5.loss_cls: 0.3457  decode.d5.loss_mask: 1.5004  decode.d5.loss_dice: 1.4158  decode.d6.loss_cls: 0.3383  decode.d6.loss_mask: 1.4943  decode.d6.loss_dice: 1.4260  decode.d7.loss_cls: 0.3451  decode.d7.loss_mask: 1.5080  decode.d7.loss_dice: 1.4030  decode.d8.loss_cls: 0.3325  decode.d8.loss_mask: 1.5176  decode.d8.loss_dice: 1.3937
2025/03/29 18:52:14 - mmengine - INFO - Iter(train) [12400/20000]  base_lr: 4.1862e-05 lr: 4.1862e-05  eta: 3:32:11  time: 1.6793  data_time: 0.0170  memory: 10099  loss: 32.6518  decode.loss_cls: 0.3795  decode.loss_mask: 1.3680  decode.loss_dice: 1.4802  decode.d0.loss_cls: 0.6042  decode.d0.loss_mask: 1.3892  decode.d0.loss_dice: 1.5483  decode.d1.loss_cls: 0.4170  decode.d1.loss_mask: 1.3751  decode.d1.loss_dice: 1.4454  decode.d2.loss_cls: 0.4543  decode.d2.loss_mask: 1.3439  decode.d2.loss_dice: 1.4288  decode.d3.loss_cls: 0.4063  decode.d3.loss_mask: 1.3424  decode.d3.loss_dice: 1.4763  decode.d4.loss_cls: 0.4059  decode.d4.loss_mask: 1.3767  decode.d4.loss_dice: 1.4613  decode.d5.loss_cls: 0.4398  decode.d5.loss_mask: 1.3346  decode.d5.loss_dice: 1.4311  decode.d6.loss_cls: 0.4307  decode.d6.loss_mask: 1.3665  decode.d6.loss_dice: 1.4536  decode.d7.loss_cls: 0.4288  decode.d7.loss_mask: 1.3404  decode.d7.loss_dice: 1.4558  decode.d8.loss_cls: 0.4033  decode.d8.loss_mask: 1.3627  decode.d8.loss_dice: 1.5018
2025/03/29 18:53:38 - mmengine - INFO - Iter(train) [12450/20000]  base_lr: 4.1615e-05 lr: 4.1615e-05  eta: 3:30:47  time: 1.6743  data_time: 0.0165  memory: 10076  loss: 36.5825  decode.loss_cls: 0.5428  decode.loss_mask: 1.4895  decode.loss_dice: 1.6066  decode.d0.loss_cls: 0.5280  decode.d0.loss_mask: 1.5409  decode.d0.loss_dice: 1.7548  decode.d1.loss_cls: 0.5792  decode.d1.loss_mask: 1.4723  decode.d1.loss_dice: 1.5760  decode.d2.loss_cls: 0.5651  decode.d2.loss_mask: 1.4797  decode.d2.loss_dice: 1.5963  decode.d3.loss_cls: 0.5445  decode.d3.loss_mask: 1.4673  decode.d3.loss_dice: 1.5937  decode.d4.loss_cls: 0.5948  decode.d4.loss_mask: 1.5143  decode.d4.loss_dice: 1.6091  decode.d5.loss_cls: 0.5630  decode.d5.loss_mask: 1.4501  decode.d5.loss_dice: 1.5359  decode.d6.loss_cls: 0.5888  decode.d6.loss_mask: 1.4527  decode.d6.loss_dice: 1.6023  decode.d7.loss_cls: 0.5394  decode.d7.loss_mask: 1.4894  decode.d7.loss_dice: 1.6145  decode.d8.loss_cls: 0.5322  decode.d8.loss_mask: 1.5097  decode.d8.loss_dice: 1.6493
2025/03/29 18:55:02 - mmengine - INFO - Iter(train) [12500/20000]  base_lr: 4.1366e-05 lr: 4.1366e-05  eta: 3:29:24  time: 1.6711  data_time: 0.0167  memory: 10149  loss: 32.0586  decode.loss_cls: 0.4248  decode.loss_mask: 1.2920  decode.loss_dice: 1.4627  decode.d0.loss_cls: 0.5629  decode.d0.loss_mask: 1.2715  decode.d0.loss_dice: 1.5253  decode.d1.loss_cls: 0.4866  decode.d1.loss_mask: 1.2490  decode.d1.loss_dice: 1.4440  decode.d2.loss_cls: 0.4616  decode.d2.loss_mask: 1.2614  decode.d2.loss_dice: 1.4248  decode.d3.loss_cls: 0.4816  decode.d3.loss_mask: 1.2764  decode.d3.loss_dice: 1.4277  decode.d4.loss_cls: 0.4819  decode.d4.loss_mask: 1.2951  decode.d4.loss_dice: 1.4639  decode.d5.loss_cls: 0.4406  decode.d5.loss_mask: 1.3129  decode.d5.loss_dice: 1.4772  decode.d6.loss_cls: 0.4613  decode.d6.loss_mask: 1.3401  decode.d6.loss_dice: 1.4665  decode.d7.loss_cls: 0.4258  decode.d7.loss_mask: 1.2873  decode.d7.loss_dice: 1.4559  decode.d8.loss_cls: 0.4036  decode.d8.loss_mask: 1.2686  decode.d8.loss_dice: 1.4258
2025/03/29 18:56:30 - mmengine - INFO - Iter(train) [12550/20000]  base_lr: 4.1118e-05 lr: 4.1118e-05  eta: 3:28:02  time: 1.8293  data_time: 0.0165  memory: 10156  loss: 30.7863  decode.loss_cls: 0.4177  decode.loss_mask: 1.2199  decode.loss_dice: 1.4011  decode.d0.loss_cls: 0.5323  decode.d0.loss_mask: 1.2774  decode.d0.loss_dice: 1.5446  decode.d1.loss_cls: 0.4559  decode.d1.loss_mask: 1.2372  decode.d1.loss_dice: 1.4342  decode.d2.loss_cls: 0.4752  decode.d2.loss_mask: 1.2289  decode.d2.loss_dice: 1.3660  decode.d3.loss_cls: 0.4083  decode.d3.loss_mask: 1.2147  decode.d3.loss_dice: 1.3790  decode.d4.loss_cls: 0.4097  decode.d4.loss_mask: 1.2479  decode.d4.loss_dice: 1.3936  decode.d5.loss_cls: 0.3918  decode.d5.loss_mask: 1.2363  decode.d5.loss_dice: 1.4157  decode.d6.loss_cls: 0.3958  decode.d6.loss_mask: 1.2529  decode.d6.loss_dice: 1.4315  decode.d7.loss_cls: 0.3944  decode.d7.loss_mask: 1.2156  decode.d7.loss_dice: 1.4021  decode.d8.loss_cls: 0.4414  decode.d8.loss_mask: 1.2065  decode.d8.loss_dice: 1.3588
2025/03/29 18:58:01 - mmengine - INFO - Iter(train) [12600/20000]  base_lr: 4.0870e-05 lr: 4.0870e-05  eta: 3:26:43  time: 1.8325  data_time: 0.0167  memory: 10145  loss: 32.4049  decode.loss_cls: 0.3805  decode.loss_mask: 1.3157  decode.loss_dice: 1.5423  decode.d0.loss_cls: 0.4510  decode.d0.loss_mask: 1.3243  decode.d0.loss_dice: 1.6509  decode.d1.loss_cls: 0.4584  decode.d1.loss_mask: 1.2656  decode.d1.loss_dice: 1.5049  decode.d2.loss_cls: 0.4509  decode.d2.loss_mask: 1.2584  decode.d2.loss_dice: 1.4834  decode.d3.loss_cls: 0.4573  decode.d3.loss_mask: 1.2771  decode.d3.loss_dice: 1.4909  decode.d4.loss_cls: 0.4392  decode.d4.loss_mask: 1.2586  decode.d4.loss_dice: 1.5143  decode.d5.loss_cls: 0.4364  decode.d5.loss_mask: 1.2968  decode.d5.loss_dice: 1.5305  decode.d6.loss_cls: 0.4508  decode.d6.loss_mask: 1.2642  decode.d6.loss_dice: 1.5046  decode.d7.loss_cls: 0.4423  decode.d7.loss_mask: 1.2612  decode.d7.loss_dice: 1.5067  decode.d8.loss_cls: 0.4340  decode.d8.loss_mask: 1.2689  decode.d8.loss_dice: 1.4849
2025/03/29 18:59:32 - mmengine - INFO - Iter(train) [12650/20000]  base_lr: 4.0621e-05 lr: 4.0621e-05  eta: 3:25:24  time: 1.8204  data_time: 0.0166  memory: 10087  loss: 34.6174  decode.loss_cls: 0.4127  decode.loss_mask: 1.4849  decode.loss_dice: 1.5111  decode.d0.loss_cls: 0.5188  decode.d0.loss_mask: 1.5731  decode.d0.loss_dice: 1.6452  decode.d1.loss_cls: 0.3537  decode.d1.loss_mask: 1.5292  decode.d1.loss_dice: 1.5936  decode.d2.loss_cls: 0.3907  decode.d2.loss_mask: 1.5030  decode.d2.loss_dice: 1.5511  decode.d3.loss_cls: 0.3748  decode.d3.loss_mask: 1.4865  decode.d3.loss_dice: 1.4940  decode.d4.loss_cls: 0.4300  decode.d4.loss_mask: 1.4705  decode.d4.loss_dice: 1.5395  decode.d5.loss_cls: 0.4173  decode.d5.loss_mask: 1.4960  decode.d5.loss_dice: 1.5335  decode.d6.loss_cls: 0.3726  decode.d6.loss_mask: 1.5118  decode.d6.loss_dice: 1.5599  decode.d7.loss_cls: 0.4334  decode.d7.loss_mask: 1.4849  decode.d7.loss_dice: 1.5305  decode.d8.loss_cls: 0.4125  decode.d8.loss_mask: 1.4785  decode.d8.loss_dice: 1.5243
2025/03/29 19:01:04 - mmengine - INFO - Iter(train) [12700/20000]  base_lr: 4.0372e-05 lr: 4.0372e-05  eta: 3:24:04  time: 1.8219  data_time: 0.0165  memory: 10084  loss: 33.5509  decode.loss_cls: 0.4472  decode.loss_mask: 1.4120  decode.loss_dice: 1.4817  decode.d0.loss_cls: 0.4978  decode.d0.loss_mask: 1.4429  decode.d0.loss_dice: 1.5818  decode.d1.loss_cls: 0.4224  decode.d1.loss_mask: 1.3975  decode.d1.loss_dice: 1.5054  decode.d2.loss_cls: 0.4076  decode.d2.loss_mask: 1.4337  decode.d2.loss_dice: 1.5025  decode.d3.loss_cls: 0.3907  decode.d3.loss_mask: 1.4376  decode.d3.loss_dice: 1.5138  decode.d4.loss_cls: 0.4454  decode.d4.loss_mask: 1.4151  decode.d4.loss_dice: 1.4828  decode.d5.loss_cls: 0.4031  decode.d5.loss_mask: 1.4234  decode.d5.loss_dice: 1.4981  decode.d6.loss_cls: 0.4424  decode.d6.loss_mask: 1.4134  decode.d6.loss_dice: 1.4767  decode.d7.loss_cls: 0.3972  decode.d7.loss_mask: 1.4180  decode.d7.loss_dice: 1.5062  decode.d8.loss_cls: 0.3921  decode.d8.loss_mask: 1.4377  decode.d8.loss_dice: 1.5247
2025/03/29 19:02:34 - mmengine - INFO - Iter(train) [12750/20000]  base_lr: 4.0123e-05 lr: 4.0123e-05  eta: 3:22:44  time: 1.8058  data_time: 0.0167  memory: 10147  loss: 30.6647  decode.loss_cls: 0.3788  decode.loss_mask: 1.2964  decode.loss_dice: 1.3736  decode.d0.loss_cls: 0.4443  decode.d0.loss_mask: 1.3237  decode.d0.loss_dice: 1.4475  decode.d1.loss_cls: 0.3379  decode.d1.loss_mask: 1.3025  decode.d1.loss_dice: 1.4010  decode.d2.loss_cls: 0.3717  decode.d2.loss_mask: 1.3178  decode.d2.loss_dice: 1.3615  decode.d3.loss_cls: 0.3967  decode.d3.loss_mask: 1.2995  decode.d3.loss_dice: 1.3592  decode.d4.loss_cls: 0.3795  decode.d4.loss_mask: 1.3084  decode.d4.loss_dice: 1.3639  decode.d5.loss_cls: 0.3580  decode.d5.loss_mask: 1.3139  decode.d5.loss_dice: 1.3437  decode.d6.loss_cls: 0.3817  decode.d6.loss_mask: 1.3217  decode.d6.loss_dice: 1.3538  decode.d7.loss_cls: 0.3496  decode.d7.loss_mask: 1.3316  decode.d7.loss_dice: 1.3849  decode.d8.loss_cls: 0.3722  decode.d8.loss_mask: 1.3112  decode.d8.loss_dice: 1.3787
2025/03/29 19:04:05 - mmengine - INFO - Iter(train) [12800/20000]  base_lr: 3.9874e-05 lr: 3.9874e-05  eta: 3:21:24  time: 1.8285  data_time: 0.0168  memory: 10155  loss: 32.6984  decode.loss_cls: 0.3771  decode.loss_mask: 1.5346  decode.loss_dice: 1.3482  decode.d0.loss_cls: 0.5437  decode.d0.loss_mask: 1.5100  decode.d0.loss_dice: 1.3976  decode.d1.loss_cls: 0.4284  decode.d1.loss_mask: 1.5048  decode.d1.loss_dice: 1.3338  decode.d2.loss_cls: 0.4085  decode.d2.loss_mask: 1.5018  decode.d2.loss_dice: 1.3712  decode.d3.loss_cls: 0.4370  decode.d3.loss_mask: 1.4972  decode.d3.loss_dice: 1.2907  decode.d4.loss_cls: 0.4283  decode.d4.loss_mask: 1.4845  decode.d4.loss_dice: 1.3185  decode.d5.loss_cls: 0.4542  decode.d5.loss_mask: 1.4579  decode.d5.loss_dice: 1.3050  decode.d6.loss_cls: 0.4088  decode.d6.loss_mask: 1.4640  decode.d6.loss_dice: 1.3504  decode.d7.loss_cls: 0.4120  decode.d7.loss_mask: 1.5036  decode.d7.loss_dice: 1.3523  decode.d8.loss_cls: 0.4027  decode.d8.loss_mask: 1.5053  decode.d8.loss_dice: 1.3666
2025/03/29 19:05:37 - mmengine - INFO - Iter(train) [12850/20000]  base_lr: 3.9625e-05 lr: 3.9625e-05  eta: 3:20:04  time: 1.8243  data_time: 0.0166  memory: 10088  loss: 30.5853  decode.loss_cls: 0.3479  decode.loss_mask: 1.3228  decode.loss_dice: 1.3262  decode.d0.loss_cls: 0.5715  decode.d0.loss_mask: 1.3527  decode.d0.loss_dice: 1.4258  decode.d1.loss_cls: 0.4068  decode.d1.loss_mask: 1.3213  decode.d1.loss_dice: 1.3468  decode.d2.loss_cls: 0.3617  decode.d2.loss_mask: 1.2920  decode.d2.loss_dice: 1.3385  decode.d3.loss_cls: 0.3609  decode.d3.loss_mask: 1.3097  decode.d3.loss_dice: 1.3499  decode.d4.loss_cls: 0.4102  decode.d4.loss_mask: 1.3229  decode.d4.loss_dice: 1.3228  decode.d5.loss_cls: 0.3659  decode.d5.loss_mask: 1.3136  decode.d5.loss_dice: 1.3202  decode.d6.loss_cls: 0.3469  decode.d6.loss_mask: 1.3370  decode.d6.loss_dice: 1.3421  decode.d7.loss_cls: 0.3798  decode.d7.loss_mask: 1.3175  decode.d7.loss_dice: 1.2985  decode.d8.loss_cls: 0.3520  decode.d8.loss_mask: 1.3549  decode.d8.loss_dice: 1.3665
2025/03/29 19:06:58 - mmengine - INFO - Iter(train) [12900/20000]  base_lr: 3.9375e-05 lr: 3.9375e-05  eta: 3:18:39  time: 1.6732  data_time: 0.0166  memory: 10096  loss: 31.3068  decode.loss_cls: 0.3983  decode.loss_mask: 1.2959  decode.loss_dice: 1.4619  decode.d0.loss_cls: 0.5302  decode.d0.loss_mask: 1.2867  decode.d0.loss_dice: 1.5254  decode.d1.loss_cls: 0.4257  decode.d1.loss_mask: 1.2856  decode.d1.loss_dice: 1.4707  decode.d2.loss_cls: 0.3912  decode.d2.loss_mask: 1.3063  decode.d2.loss_dice: 1.4216  decode.d3.loss_cls: 0.3661  decode.d3.loss_mask: 1.2804  decode.d3.loss_dice: 1.4172  decode.d4.loss_cls: 0.4156  decode.d4.loss_mask: 1.2923  decode.d4.loss_dice: 1.4017  decode.d5.loss_cls: 0.4227  decode.d5.loss_mask: 1.2834  decode.d5.loss_dice: 1.3770  decode.d6.loss_cls: 0.3513  decode.d6.loss_mask: 1.2732  decode.d6.loss_dice: 1.4293  decode.d7.loss_cls: 0.3941  decode.d7.loss_mask: 1.2869  decode.d7.loss_dice: 1.4287  decode.d8.loss_cls: 0.3977  decode.d8.loss_mask: 1.2888  decode.d8.loss_dice: 1.4010
2025/03/29 19:08:22 - mmengine - INFO - Iter(train) [12950/20000]  base_lr: 3.9126e-05 lr: 3.9126e-05  eta: 3:17:15  time: 1.6730  data_time: 0.0167  memory: 10149  loss: 32.4981  decode.loss_cls: 0.3827  decode.loss_mask: 1.4141  decode.loss_dice: 1.5108  decode.d0.loss_cls: 0.5331  decode.d0.loss_mask: 1.4223  decode.d0.loss_dice: 1.5536  decode.d1.loss_cls: 0.4116  decode.d1.loss_mask: 1.3707  decode.d1.loss_dice: 1.4500  decode.d2.loss_cls: 0.3776  decode.d2.loss_mask: 1.3378  decode.d2.loss_dice: 1.4272  decode.d3.loss_cls: 0.3494  decode.d3.loss_mask: 1.4066  decode.d3.loss_dice: 1.4605  decode.d4.loss_cls: 0.4120  decode.d4.loss_mask: 1.3700  decode.d4.loss_dice: 1.4437  decode.d5.loss_cls: 0.3904  decode.d5.loss_mask: 1.3466  decode.d5.loss_dice: 1.4503  decode.d6.loss_cls: 0.3784  decode.d6.loss_mask: 1.3591  decode.d6.loss_dice: 1.4646  decode.d7.loss_cls: 0.3880  decode.d7.loss_mask: 1.3868  decode.d7.loss_dice: 1.4610  decode.d8.loss_cls: 0.3941  decode.d8.loss_mask: 1.3927  decode.d8.loss_dice: 1.4521
2025/03/29 19:09:46 - mmengine - INFO - Exp name: r2u_20250329_122140
2025/03/29 19:09:46 - mmengine - INFO - Iter(train) [13000/20000]  base_lr: 3.8876e-05 lr: 3.8876e-05  eta: 3:15:51  time: 1.6733  data_time: 0.0168  memory: 10099  loss: 31.8949  decode.loss_cls: 0.4885  decode.loss_mask: 1.2337  decode.loss_dice: 1.4750  decode.d0.loss_cls: 0.5218  decode.d0.loss_mask: 1.2188  decode.d0.loss_dice: 1.5598  decode.d1.loss_cls: 0.5500  decode.d1.loss_mask: 1.1453  decode.d1.loss_dice: 1.4363  decode.d2.loss_cls: 0.5153  decode.d2.loss_mask: 1.1901  decode.d2.loss_dice: 1.4702  decode.d3.loss_cls: 0.4837  decode.d3.loss_mask: 1.2610  decode.d3.loss_dice: 1.4968  decode.d4.loss_cls: 0.4918  decode.d4.loss_mask: 1.2319  decode.d4.loss_dice: 1.4656  decode.d5.loss_cls: 0.4742  decode.d5.loss_mask: 1.2157  decode.d5.loss_dice: 1.4620  decode.d6.loss_cls: 0.5046  decode.d6.loss_mask: 1.2140  decode.d6.loss_dice: 1.4615  decode.d7.loss_cls: 0.5121  decode.d7.loss_mask: 1.2009  decode.d7.loss_dice: 1.4387  decode.d8.loss_cls: 0.4751  decode.d8.loss_mask: 1.2178  decode.d8.loss_dice: 1.4828
2025/03/29 19:11:10 - mmengine - INFO - Iter(train) [13050/20000]  base_lr: 3.8626e-05 lr: 3.8626e-05  eta: 3:14:27  time: 1.6718  data_time: 0.0163  memory: 10089  loss: 33.7568  decode.loss_cls: 0.5015  decode.loss_mask: 1.4272  decode.loss_dice: 1.4388  decode.d0.loss_cls: 0.5936  decode.d0.loss_mask: 1.3935  decode.d0.loss_dice: 1.5414  decode.d1.loss_cls: 0.5073  decode.d1.loss_mask: 1.3791  decode.d1.loss_dice: 1.4632  decode.d2.loss_cls: 0.5384  decode.d2.loss_mask: 1.3950  decode.d2.loss_dice: 1.4030  decode.d3.loss_cls: 0.5068  decode.d3.loss_mask: 1.4176  decode.d3.loss_dice: 1.4279  decode.d4.loss_cls: 0.4860  decode.d4.loss_mask: 1.4246  decode.d4.loss_dice: 1.4417  decode.d5.loss_cls: 0.5276  decode.d5.loss_mask: 1.4293  decode.d5.loss_dice: 1.4199  decode.d6.loss_cls: 0.5422  decode.d6.loss_mask: 1.3978  decode.d6.loss_dice: 1.4192  decode.d7.loss_cls: 0.4649  decode.d7.loss_mask: 1.4476  decode.d7.loss_dice: 1.4411  decode.d8.loss_cls: 0.4933  decode.d8.loss_mask: 1.4499  decode.d8.loss_dice: 1.4372
2025/03/29 19:12:33 - mmengine - INFO - Iter(train) [13100/20000]  base_lr: 3.8376e-05 lr: 3.8376e-05  eta: 3:13:03  time: 1.6736  data_time: 0.0163  memory: 10089  loss: 31.1451  decode.loss_cls: 0.3226  decode.loss_mask: 1.3393  decode.loss_dice: 1.4196  decode.d0.loss_cls: 0.3263  decode.d0.loss_mask: 1.4017  decode.d0.loss_dice: 1.5771  decode.d1.loss_cls: 0.3082  decode.d1.loss_mask: 1.3696  decode.d1.loss_dice: 1.4812  decode.d2.loss_cls: 0.3370  decode.d2.loss_mask: 1.3727  decode.d2.loss_dice: 1.4200  decode.d3.loss_cls: 0.3069  decode.d3.loss_mask: 1.3522  decode.d3.loss_dice: 1.4097  decode.d4.loss_cls: 0.2957  decode.d4.loss_mask: 1.3610  decode.d4.loss_dice: 1.4366  decode.d5.loss_cls: 0.2853  decode.d5.loss_mask: 1.3507  decode.d5.loss_dice: 1.4201  decode.d6.loss_cls: 0.3053  decode.d6.loss_mask: 1.3533  decode.d6.loss_dice: 1.4227  decode.d7.loss_cls: 0.2714  decode.d7.loss_mask: 1.3411  decode.d7.loss_dice: 1.4582  decode.d8.loss_cls: 0.3014  decode.d8.loss_mask: 1.3652  decode.d8.loss_dice: 1.4328
2025/03/29 19:13:57 - mmengine - INFO - Iter(train) [13150/20000]  base_lr: 3.8125e-05 lr: 3.8125e-05  eta: 3:11:39  time: 1.6758  data_time: 0.0168  memory: 10090  loss: 33.7115  decode.loss_cls: 0.3409  decode.loss_mask: 1.5838  decode.loss_dice: 1.4513  decode.d0.loss_cls: 0.4582  decode.d0.loss_mask: 1.6466  decode.d0.loss_dice: 1.5311  decode.d1.loss_cls: 0.3507  decode.d1.loss_mask: 1.5927  decode.d1.loss_dice: 1.4266  decode.d2.loss_cls: 0.3055  decode.d2.loss_mask: 1.5772  decode.d2.loss_dice: 1.3822  decode.d3.loss_cls: 0.2965  decode.d3.loss_mask: 1.5682  decode.d3.loss_dice: 1.3876  decode.d4.loss_cls: 0.2996  decode.d4.loss_mask: 1.6049  decode.d4.loss_dice: 1.4436  decode.d5.loss_cls: 0.3070  decode.d5.loss_mask: 1.6193  decode.d5.loss_dice: 1.4507  decode.d6.loss_cls: 0.3291  decode.d6.loss_mask: 1.5876  decode.d6.loss_dice: 1.4361  decode.d7.loss_cls: 0.3172  decode.d7.loss_mask: 1.6028  decode.d7.loss_dice: 1.4385  decode.d8.loss_cls: 0.3026  decode.d8.loss_mask: 1.6341  decode.d8.loss_dice: 1.4392
2025/03/29 19:15:21 - mmengine - INFO - Iter(train) [13200/20000]  base_lr: 3.7875e-05 lr: 3.7875e-05  eta: 3:10:15  time: 1.6741  data_time: 0.0164  memory: 10153  loss: 33.8644  decode.loss_cls: 0.3944  decode.loss_mask: 1.4099  decode.loss_dice: 1.5045  decode.d0.loss_cls: 0.5045  decode.d0.loss_mask: 1.4532  decode.d0.loss_dice: 1.6304  decode.d1.loss_cls: 0.4873  decode.d1.loss_mask: 1.4063  decode.d1.loss_dice: 1.5583  decode.d2.loss_cls: 0.4742  decode.d2.loss_mask: 1.4043  decode.d2.loss_dice: 1.5294  decode.d3.loss_cls: 0.4183  decode.d3.loss_mask: 1.3923  decode.d3.loss_dice: 1.5174  decode.d4.loss_cls: 0.3836  decode.d4.loss_mask: 1.4091  decode.d4.loss_dice: 1.5359  decode.d5.loss_cls: 0.4203  decode.d5.loss_mask: 1.4051  decode.d5.loss_dice: 1.5280  decode.d6.loss_cls: 0.4198  decode.d6.loss_mask: 1.4174  decode.d6.loss_dice: 1.5528  decode.d7.loss_cls: 0.3650  decode.d7.loss_mask: 1.4435  decode.d7.loss_dice: 1.5611  decode.d8.loss_cls: 0.4020  decode.d8.loss_mask: 1.4117  decode.d8.loss_dice: 1.5245
2025/03/29 19:16:44 - mmengine - INFO - Iter(train) [13250/20000]  base_lr: 3.7624e-05 lr: 3.7624e-05  eta: 3:08:51  time: 1.6710  data_time: 0.0166  memory: 10093  loss: 32.5398  decode.loss_cls: 0.3067  decode.loss_mask: 1.4587  decode.loss_dice: 1.5039  decode.d0.loss_cls: 0.4303  decode.d0.loss_mask: 1.5180  decode.d0.loss_dice: 1.5137  decode.d1.loss_cls: 0.3080  decode.d1.loss_mask: 1.4490  decode.d1.loss_dice: 1.4443  decode.d2.loss_cls: 0.3159  decode.d2.loss_mask: 1.4570  decode.d2.loss_dice: 1.4703  decode.d3.loss_cls: 0.3232  decode.d3.loss_mask: 1.4577  decode.d3.loss_dice: 1.4754  decode.d4.loss_cls: 0.3075  decode.d4.loss_mask: 1.4610  decode.d4.loss_dice: 1.4582  decode.d5.loss_cls: 0.3356  decode.d5.loss_mask: 1.4390  decode.d5.loss_dice: 1.4420  decode.d6.loss_cls: 0.3316  decode.d6.loss_mask: 1.4331  decode.d6.loss_dice: 1.4454  decode.d7.loss_cls: 0.3069  decode.d7.loss_mask: 1.4460  decode.d7.loss_dice: 1.4572  decode.d8.loss_cls: 0.3119  decode.d8.loss_mask: 1.4632  decode.d8.loss_dice: 1.4692
2025/03/29 19:18:08 - mmengine - INFO - Iter(train) [13300/20000]  base_lr: 3.7373e-05 lr: 3.7373e-05  eta: 3:07:27  time: 1.6701  data_time: 0.0165  memory: 10161  loss: 30.1781  decode.loss_cls: 0.4723  decode.loss_mask: 1.2435  decode.loss_dice: 1.2669  decode.d0.loss_cls: 0.6361  decode.d0.loss_mask: 1.2372  decode.d0.loss_dice: 1.3249  decode.d1.loss_cls: 0.5599  decode.d1.loss_mask: 1.2648  decode.d1.loss_dice: 1.2728  decode.d2.loss_cls: 0.5823  decode.d2.loss_mask: 1.2237  decode.d2.loss_dice: 1.2131  decode.d3.loss_cls: 0.5102  decode.d3.loss_mask: 1.2162  decode.d3.loss_dice: 1.2378  decode.d4.loss_cls: 0.5454  decode.d4.loss_mask: 1.2256  decode.d4.loss_dice: 1.2323  decode.d5.loss_cls: 0.5472  decode.d5.loss_mask: 1.2323  decode.d5.loss_dice: 1.2329  decode.d6.loss_cls: 0.5183  decode.d6.loss_mask: 1.2090  decode.d6.loss_dice: 1.2150  decode.d7.loss_cls: 0.4969  decode.d7.loss_mask: 1.2316  decode.d7.loss_dice: 1.2386  decode.d8.loss_cls: 0.4870  decode.d8.loss_mask: 1.2450  decode.d8.loss_dice: 1.2594
2025/03/29 19:19:32 - mmengine - INFO - Iter(train) [13350/20000]  base_lr: 3.7122e-05 lr: 3.7122e-05  eta: 3:06:03  time: 1.6701  data_time: 0.0166  memory: 10083  loss: 32.6646  decode.loss_cls: 0.3118  decode.loss_mask: 1.4270  decode.loss_dice: 1.5269  decode.d0.loss_cls: 0.4920  decode.d0.loss_mask: 1.4054  decode.d0.loss_dice: 1.5806  decode.d1.loss_cls: 0.4343  decode.d1.loss_mask: 1.3816  decode.d1.loss_dice: 1.4744  decode.d2.loss_cls: 0.4122  decode.d2.loss_mask: 1.3481  decode.d2.loss_dice: 1.4616  decode.d3.loss_cls: 0.3924  decode.d3.loss_mask: 1.3783  decode.d3.loss_dice: 1.4364  decode.d4.loss_cls: 0.4208  decode.d4.loss_mask: 1.3497  decode.d4.loss_dice: 1.4270  decode.d5.loss_cls: 0.3784  decode.d5.loss_mask: 1.4157  decode.d5.loss_dice: 1.4471  decode.d6.loss_cls: 0.3717  decode.d6.loss_mask: 1.3979  decode.d6.loss_dice: 1.4993  decode.d7.loss_cls: 0.3884  decode.d7.loss_mask: 1.3757  decode.d7.loss_dice: 1.5058  decode.d8.loss_cls: 0.3809  decode.d8.loss_mask: 1.3631  decode.d8.loss_dice: 1.4802
2025/03/29 19:20:55 - mmengine - INFO - Iter(train) [13400/20000]  base_lr: 3.6871e-05 lr: 3.6871e-05  eta: 3:04:39  time: 1.6711  data_time: 0.0165  memory: 10095  loss: 32.5783  decode.loss_cls: 0.4105  decode.loss_mask: 1.3694  decode.loss_dice: 1.4746  decode.d0.loss_cls: 0.4831  decode.d0.loss_mask: 1.4015  decode.d0.loss_dice: 1.5791  decode.d1.loss_cls: 0.4711  decode.d1.loss_mask: 1.3780  decode.d1.loss_dice: 1.4438  decode.d2.loss_cls: 0.4551  decode.d2.loss_mask: 1.3680  decode.d2.loss_dice: 1.4247  decode.d3.loss_cls: 0.4296  decode.d3.loss_mask: 1.3739  decode.d3.loss_dice: 1.4193  decode.d4.loss_cls: 0.4318  decode.d4.loss_mask: 1.3496  decode.d4.loss_dice: 1.4462  decode.d5.loss_cls: 0.4165  decode.d5.loss_mask: 1.3508  decode.d5.loss_dice: 1.4470  decode.d6.loss_cls: 0.4179  decode.d6.loss_mask: 1.3688  decode.d6.loss_dice: 1.4343  decode.d7.loss_cls: 0.3943  decode.d7.loss_mask: 1.3871  decode.d7.loss_dice: 1.4519  decode.d8.loss_cls: 0.4043  decode.d8.loss_mask: 1.3543  decode.d8.loss_dice: 1.4419
2025/03/29 19:22:19 - mmengine - INFO - Iter(train) [13450/20000]  base_lr: 3.6619e-05 lr: 3.6619e-05  eta: 3:03:14  time: 1.6726  data_time: 0.0168  memory: 10145  loss: 33.8728  decode.loss_cls: 0.5986  decode.loss_mask: 1.2623  decode.loss_dice: 1.5240  decode.d0.loss_cls: 0.6467  decode.d0.loss_mask: 1.3152  decode.d0.loss_dice: 1.6314  decode.d1.loss_cls: 0.5385  decode.d1.loss_mask: 1.2862  decode.d1.loss_dice: 1.5136  decode.d2.loss_cls: 0.6194  decode.d2.loss_mask: 1.2671  decode.d2.loss_dice: 1.5136  decode.d3.loss_cls: 0.5919  decode.d3.loss_mask: 1.2397  decode.d3.loss_dice: 1.5129  decode.d4.loss_cls: 0.5878  decode.d4.loss_mask: 1.2586  decode.d4.loss_dice: 1.4957  decode.d5.loss_cls: 0.5418  decode.d5.loss_mask: 1.2948  decode.d5.loss_dice: 1.5622  decode.d6.loss_cls: 0.5796  decode.d6.loss_mask: 1.2604  decode.d6.loss_dice: 1.4821  decode.d7.loss_cls: 0.5542  decode.d7.loss_mask: 1.3040  decode.d7.loss_dice: 1.5383  decode.d8.loss_cls: 0.5432  decode.d8.loss_mask: 1.2832  decode.d8.loss_dice: 1.5258
2025/03/29 19:23:43 - mmengine - INFO - Iter(train) [13500/20000]  base_lr: 3.6368e-05 lr: 3.6368e-05  eta: 3:01:50  time: 1.6776  data_time: 0.0179  memory: 10090  loss: 32.4935  decode.loss_cls: 0.4249  decode.loss_mask: 1.3553  decode.loss_dice: 1.4514  decode.d0.loss_cls: 0.5228  decode.d0.loss_mask: 1.3627  decode.d0.loss_dice: 1.5869  decode.d1.loss_cls: 0.4535  decode.d1.loss_mask: 1.3224  decode.d1.loss_dice: 1.4479  decode.d2.loss_cls: 0.4180  decode.d2.loss_mask: 1.3514  decode.d2.loss_dice: 1.4976  decode.d3.loss_cls: 0.4693  decode.d3.loss_mask: 1.2951  decode.d3.loss_dice: 1.4218  decode.d4.loss_cls: 0.4348  decode.d4.loss_mask: 1.3686  decode.d4.loss_dice: 1.4809  decode.d5.loss_cls: 0.4319  decode.d5.loss_mask: 1.3474  decode.d5.loss_dice: 1.4276  decode.d6.loss_cls: 0.4506  decode.d6.loss_mask: 1.2982  decode.d6.loss_dice: 1.4221  decode.d7.loss_cls: 0.4182  decode.d7.loss_mask: 1.3355  decode.d7.loss_dice: 1.4932  decode.d8.loss_cls: 0.4159  decode.d8.loss_mask: 1.3186  decode.d8.loss_dice: 1.4690
2025/03/29 19:25:06 - mmengine - INFO - Iter(train) [13550/20000]  base_lr: 3.6116e-05 lr: 3.6116e-05  eta: 3:00:26  time: 1.6716  data_time: 0.0168  memory: 10159  loss: 33.6668  decode.loss_cls: 0.4786  decode.loss_mask: 1.4255  decode.loss_dice: 1.4428  decode.d0.loss_cls: 0.5811  decode.d0.loss_mask: 1.4325  decode.d0.loss_dice: 1.5680  decode.d1.loss_cls: 0.5182  decode.d1.loss_mask: 1.3797  decode.d1.loss_dice: 1.4880  decode.d2.loss_cls: 0.4683  decode.d2.loss_mask: 1.4393  decode.d2.loss_dice: 1.4798  decode.d3.loss_cls: 0.4813  decode.d3.loss_mask: 1.4173  decode.d3.loss_dice: 1.4400  decode.d4.loss_cls: 0.5022  decode.d4.loss_mask: 1.3947  decode.d4.loss_dice: 1.4289  decode.d5.loss_cls: 0.5205  decode.d5.loss_mask: 1.3721  decode.d5.loss_dice: 1.4213  decode.d6.loss_cls: 0.5475  decode.d6.loss_mask: 1.3837  decode.d6.loss_dice: 1.4291  decode.d7.loss_cls: 0.4625  decode.d7.loss_mask: 1.4181  decode.d7.loss_dice: 1.4458  decode.d8.loss_cls: 0.4404  decode.d8.loss_mask: 1.3951  decode.d8.loss_dice: 1.4643
2025/03/29 19:26:30 - mmengine - INFO - Iter(train) [13600/20000]  base_lr: 3.5864e-05 lr: 3.5864e-05  eta: 2:59:02  time: 1.6701  data_time: 0.0164  memory: 10092  loss: 29.7744  decode.loss_cls: 0.3435  decode.loss_mask: 1.2644  decode.loss_dice: 1.3812  decode.d0.loss_cls: 0.3701  decode.d0.loss_mask: 1.2740  decode.d0.loss_dice: 1.4911  decode.d1.loss_cls: 0.3627  decode.d1.loss_mask: 1.2429  decode.d1.loss_dice: 1.3923  decode.d2.loss_cls: 0.3506  decode.d2.loss_mask: 1.2519  decode.d2.loss_dice: 1.3572  decode.d3.loss_cls: 0.3261  decode.d3.loss_mask: 1.2653  decode.d3.loss_dice: 1.3587  decode.d4.loss_cls: 0.3312  decode.d4.loss_mask: 1.2414  decode.d4.loss_dice: 1.3530  decode.d5.loss_cls: 0.3722  decode.d5.loss_mask: 1.2479  decode.d5.loss_dice: 1.3354  decode.d6.loss_cls: 0.3582  decode.d6.loss_mask: 1.2470  decode.d6.loss_dice: 1.3513  decode.d7.loss_cls: 0.3500  decode.d7.loss_mask: 1.2488  decode.d7.loss_dice: 1.3600  decode.d8.loss_cls: 0.3269  decode.d8.loss_mask: 1.2505  decode.d8.loss_dice: 1.3685
2025/03/29 19:27:53 - mmengine - INFO - Iter(train) [13650/20000]  base_lr: 3.5611e-05 lr: 3.5611e-05  eta: 2:57:38  time: 1.6741  data_time: 0.0182  memory: 10087  loss: 32.8711  decode.loss_cls: 0.3726  decode.loss_mask: 1.4520  decode.loss_dice: 1.4399  decode.d0.loss_cls: 0.5045  decode.d0.loss_mask: 1.5164  decode.d0.loss_dice: 1.5110  decode.d1.loss_cls: 0.4035  decode.d1.loss_mask: 1.4415  decode.d1.loss_dice: 1.4377  decode.d2.loss_cls: 0.3847  decode.d2.loss_mask: 1.4212  decode.d2.loss_dice: 1.4227  decode.d3.loss_cls: 0.3731  decode.d3.loss_mask: 1.4822  decode.d3.loss_dice: 1.4784  decode.d4.loss_cls: 0.3881  decode.d4.loss_mask: 1.4511  decode.d4.loss_dice: 1.4497  decode.d5.loss_cls: 0.3530  decode.d5.loss_mask: 1.4411  decode.d5.loss_dice: 1.4042  decode.d6.loss_cls: 0.3539  decode.d6.loss_mask: 1.4367  decode.d6.loss_dice: 1.4519  decode.d7.loss_cls: 0.3623  decode.d7.loss_mask: 1.4283  decode.d7.loss_dice: 1.4240  decode.d8.loss_cls: 0.2998  decode.d8.loss_mask: 1.4886  decode.d8.loss_dice: 1.4971
2025/03/29 19:29:17 - mmengine - INFO - Iter(train) [13700/20000]  base_lr: 3.5359e-05 lr: 3.5359e-05  eta: 2:56:14  time: 1.6793  data_time: 0.0195  memory: 10144  loss: 30.9287  decode.loss_cls: 0.2943  decode.loss_mask: 1.4342  decode.loss_dice: 1.3408  decode.d0.loss_cls: 0.3915  decode.d0.loss_mask: 1.4835  decode.d0.loss_dice: 1.4527  decode.d1.loss_cls: 0.3630  decode.d1.loss_mask: 1.4216  decode.d1.loss_dice: 1.3826  decode.d2.loss_cls: 0.3006  decode.d2.loss_mask: 1.4189  decode.d2.loss_dice: 1.3195  decode.d3.loss_cls: 0.3027  decode.d3.loss_mask: 1.4474  decode.d3.loss_dice: 1.3420  decode.d4.loss_cls: 0.2911  decode.d4.loss_mask: 1.3986  decode.d4.loss_dice: 1.3271  decode.d5.loss_cls: 0.3226  decode.d5.loss_mask: 1.4282  decode.d5.loss_dice: 1.3044  decode.d6.loss_cls: 0.3452  decode.d6.loss_mask: 1.4082  decode.d6.loss_dice: 1.3039  decode.d7.loss_cls: 0.3176  decode.d7.loss_mask: 1.3998  decode.d7.loss_dice: 1.3236  decode.d8.loss_cls: 0.2787  decode.d8.loss_mask: 1.4583  decode.d8.loss_dice: 1.3260
2025/03/29 19:30:41 - mmengine - INFO - Iter(train) [13750/20000]  base_lr: 3.5106e-05 lr: 3.5106e-05  eta: 2:54:50  time: 1.6719  data_time: 0.0167  memory: 10089  loss: 32.8617  decode.loss_cls: 0.4043  decode.loss_mask: 1.4277  decode.loss_dice: 1.3975  decode.d0.loss_cls: 0.4353  decode.d0.loss_mask: 1.4813  decode.d0.loss_dice: 1.5408  decode.d1.loss_cls: 0.4210  decode.d1.loss_mask: 1.4120  decode.d1.loss_dice: 1.4263  decode.d2.loss_cls: 0.4176  decode.d2.loss_mask: 1.4572  decode.d2.loss_dice: 1.4152  decode.d3.loss_cls: 0.4118  decode.d3.loss_mask: 1.4441  decode.d3.loss_dice: 1.4181  decode.d4.loss_cls: 0.4278  decode.d4.loss_mask: 1.4318  decode.d4.loss_dice: 1.3924  decode.d5.loss_cls: 0.4239  decode.d5.loss_mask: 1.4329  decode.d5.loss_dice: 1.4154  decode.d6.loss_cls: 0.4558  decode.d6.loss_mask: 1.4385  decode.d6.loss_dice: 1.3956  decode.d7.loss_cls: 0.4360  decode.d7.loss_mask: 1.4214  decode.d7.loss_dice: 1.4076  decode.d8.loss_cls: 0.4026  decode.d8.loss_mask: 1.4513  decode.d8.loss_dice: 1.4184
2025/03/29 19:32:05 - mmengine - INFO - Iter(train) [13800/20000]  base_lr: 3.4853e-05 lr: 3.4853e-05  eta: 2:53:26  time: 1.6747  data_time: 0.0173  memory: 10149  loss: 32.7978  decode.loss_cls: 0.3637  decode.loss_mask: 1.4147  decode.loss_dice: 1.4524  decode.d0.loss_cls: 0.4613  decode.d0.loss_mask: 1.5006  decode.d0.loss_dice: 1.5168  decode.d1.loss_cls: 0.3834  decode.d1.loss_mask: 1.4574  decode.d1.loss_dice: 1.4479  decode.d2.loss_cls: 0.3534  decode.d2.loss_mask: 1.4685  decode.d2.loss_dice: 1.4560  decode.d3.loss_cls: 0.3093  decode.d3.loss_mask: 1.4875  decode.d3.loss_dice: 1.4692  decode.d4.loss_cls: 0.3552  decode.d4.loss_mask: 1.4559  decode.d4.loss_dice: 1.4478  decode.d5.loss_cls: 0.3611  decode.d5.loss_mask: 1.4739  decode.d5.loss_dice: 1.4389  decode.d6.loss_cls: 0.3936  decode.d6.loss_mask: 1.4594  decode.d6.loss_dice: 1.4068  decode.d7.loss_cls: 0.3483  decode.d7.loss_mask: 1.4553  decode.d7.loss_dice: 1.4434  decode.d8.loss_cls: 0.3298  decode.d8.loss_mask: 1.4361  decode.d8.loss_dice: 1.4502
2025/03/29 19:33:28 - mmengine - INFO - Iter(train) [13850/20000]  base_lr: 3.4600e-05 lr: 3.4600e-05  eta: 2:52:02  time: 1.6727  data_time: 0.0166  memory: 10089  loss: 31.2266  decode.loss_cls: 0.4805  decode.loss_mask: 1.2830  decode.loss_dice: 1.3337  decode.d0.loss_cls: 0.4393  decode.d0.loss_mask: 1.3576  decode.d0.loss_dice: 1.4923  decode.d1.loss_cls: 0.4213  decode.d1.loss_mask: 1.3133  decode.d1.loss_dice: 1.3749  decode.d2.loss_cls: 0.4016  decode.d2.loss_mask: 1.3145  decode.d2.loss_dice: 1.3487  decode.d3.loss_cls: 0.3822  decode.d3.loss_mask: 1.3101  decode.d3.loss_dice: 1.3918  decode.d4.loss_cls: 0.4062  decode.d4.loss_mask: 1.3060  decode.d4.loss_dice: 1.3739  decode.d5.loss_cls: 0.3901  decode.d5.loss_mask: 1.3504  decode.d5.loss_dice: 1.3931  decode.d6.loss_cls: 0.3912  decode.d6.loss_mask: 1.3296  decode.d6.loss_dice: 1.3692  decode.d7.loss_cls: 0.4458  decode.d7.loss_mask: 1.3084  decode.d7.loss_dice: 1.3870  decode.d8.loss_cls: 0.4578  decode.d8.loss_mask: 1.3142  decode.d8.loss_dice: 1.3587
2025/03/29 19:34:52 - mmengine - INFO - Iter(train) [13900/20000]  base_lr: 3.4347e-05 lr: 3.4347e-05  eta: 2:50:38  time: 1.6703  data_time: 0.0163  memory: 10097  loss: 33.4118  decode.loss_cls: 0.3773  decode.loss_mask: 1.4184  decode.loss_dice: 1.5213  decode.d0.loss_cls: 0.4912  decode.d0.loss_mask: 1.4894  decode.d0.loss_dice: 1.5876  decode.d1.loss_cls: 0.3712  decode.d1.loss_mask: 1.4229  decode.d1.loss_dice: 1.4901  decode.d2.loss_cls: 0.3570  decode.d2.loss_mask: 1.4203  decode.d2.loss_dice: 1.4954  decode.d3.loss_cls: 0.3634  decode.d3.loss_mask: 1.4350  decode.d3.loss_dice: 1.5152  decode.d4.loss_cls: 0.3814  decode.d4.loss_mask: 1.4548  decode.d4.loss_dice: 1.5337  decode.d5.loss_cls: 0.3899  decode.d5.loss_mask: 1.4296  decode.d5.loss_dice: 1.5021  decode.d6.loss_cls: 0.3616  decode.d6.loss_mask: 1.4534  decode.d6.loss_dice: 1.5146  decode.d7.loss_cls: 0.4042  decode.d7.loss_mask: 1.4297  decode.d7.loss_dice: 1.4750  decode.d8.loss_cls: 0.3829  decode.d8.loss_mask: 1.4203  decode.d8.loss_dice: 1.5228
2025/03/29 19:36:16 - mmengine - INFO - Iter(train) [13950/20000]  base_lr: 3.4094e-05 lr: 3.4094e-05  eta: 2:49:14  time: 1.6710  data_time: 0.0165  memory: 10146  loss: 32.1243  decode.loss_cls: 0.4544  decode.loss_mask: 1.2093  decode.loss_dice: 1.5069  decode.d0.loss_cls: 0.5196  decode.d0.loss_mask: 1.2114  decode.d0.loss_dice: 1.6283  decode.d1.loss_cls: 0.4976  decode.d1.loss_mask: 1.2066  decode.d1.loss_dice: 1.5378  decode.d2.loss_cls: 0.4384  decode.d2.loss_mask: 1.2144  decode.d2.loss_dice: 1.5095  decode.d3.loss_cls: 0.4067  decode.d3.loss_mask: 1.2327  decode.d3.loss_dice: 1.5162  decode.d4.loss_cls: 0.4174  decode.d4.loss_mask: 1.2467  decode.d4.loss_dice: 1.5537  decode.d5.loss_cls: 0.3813  decode.d5.loss_mask: 1.2453  decode.d5.loss_dice: 1.6060  decode.d6.loss_cls: 0.4318  decode.d6.loss_mask: 1.2720  decode.d6.loss_dice: 1.5443  decode.d7.loss_cls: 0.4469  decode.d7.loss_mask: 1.2320  decode.d7.loss_dice: 1.5298  decode.d8.loss_cls: 0.4176  decode.d8.loss_mask: 1.2294  decode.d8.loss_dice: 1.4804
2025/03/29 19:37:39 - mmengine - INFO - Exp name: r2u_20250329_122140
2025/03/29 19:37:39 - mmengine - INFO - Iter(train) [14000/20000]  base_lr: 3.3840e-05 lr: 3.3840e-05  eta: 2:47:50  time: 1.6743  data_time: 0.0170  memory: 10154  loss: 31.1987  decode.loss_cls: 0.2802  decode.loss_mask: 1.4005  decode.loss_dice: 1.3783  decode.d0.loss_cls: 0.4046  decode.d0.loss_mask: 1.4153  decode.d0.loss_dice: 1.4557  decode.d1.loss_cls: 0.2458  decode.d1.loss_mask: 1.4209  decode.d1.loss_dice: 1.4225  decode.d2.loss_cls: 0.2723  decode.d2.loss_mask: 1.4473  decode.d2.loss_dice: 1.3999  decode.d3.loss_cls: 0.2518  decode.d3.loss_mask: 1.4680  decode.d3.loss_dice: 1.4320  decode.d4.loss_cls: 0.2581  decode.d4.loss_mask: 1.4382  decode.d4.loss_dice: 1.4168  decode.d5.loss_cls: 0.2716  decode.d5.loss_mask: 1.4423  decode.d5.loss_dice: 1.4090  decode.d6.loss_cls: 0.2574  decode.d6.loss_mask: 1.4312  decode.d6.loss_dice: 1.4383  decode.d7.loss_cls: 0.2594  decode.d7.loss_mask: 1.4015  decode.d7.loss_dice: 1.4000  decode.d8.loss_cls: 0.2299  decode.d8.loss_mask: 1.4363  decode.d8.loss_dice: 1.4137
2025/03/29 19:37:39 - mmengine - INFO - Saving checkpoint at 14000 iterations
2025/03/29 19:37:49 - mmengine - INFO - Iter(val) [  50/2708]    eta: 0:07:16  time: 0.1577  data_time: 0.0014  memory: 1856  
2025/03/29 19:37:57 - mmengine - INFO - Iter(val) [ 100/2708]    eta: 0:06:58  time: 0.1565  data_time: 0.0012  memory: 1856  
2025/03/29 19:38:05 - mmengine - INFO - Iter(val) [ 150/2708]    eta: 0:06:52  time: 0.1555  data_time: 0.0012  memory: 1856  
2025/03/29 19:38:13 - mmengine - INFO - Iter(val) [ 200/2708]    eta: 0:06:43  time: 0.1606  data_time: 0.0013  memory: 1856  
2025/03/29 19:38:22 - mmengine - INFO - Iter(val) [ 250/2708]    eta: 0:06:37  time: 0.1600  data_time: 0.0013  memory: 1856  
2025/03/29 19:38:30 - mmengine - INFO - Iter(val) [ 300/2708]    eta: 0:06:28  time: 0.1580  data_time: 0.0013  memory: 1856  
2025/03/29 19:38:38 - mmengine - INFO - Iter(val) [ 350/2708]    eta: 0:06:21  time: 0.1651  data_time: 0.0013  memory: 1856  
2025/03/29 19:38:46 - mmengine - INFO - Iter(val) [ 400/2708]    eta: 0:06:12  time: 0.1587  data_time: 0.0013  memory: 1856  
2025/03/29 19:38:54 - mmengine - INFO - Iter(val) [ 450/2708]    eta: 0:06:05  time: 0.1656  data_time: 0.0014  memory: 1856  
2025/03/29 19:39:02 - mmengine - INFO - Iter(val) [ 500/2708]    eta: 0:05:56  time: 0.1648  data_time: 0.0013  memory: 1856  
2025/03/29 19:39:10 - mmengine - INFO - Iter(val) [ 550/2708]    eta: 0:05:48  time: 0.1592  data_time: 0.0012  memory: 1856  
2025/03/29 19:39:18 - mmengine - INFO - Iter(val) [ 600/2708]    eta: 0:05:39  time: 0.1658  data_time: 0.0015  memory: 1856  
2025/03/29 19:39:26 - mmengine - INFO - Iter(val) [ 650/2708]    eta: 0:05:31  time: 0.1525  data_time: 0.0013  memory: 1856  
2025/03/29 19:39:34 - mmengine - INFO - Iter(val) [ 700/2708]    eta: 0:05:23  time: 0.1510  data_time: 0.0012  memory: 1856  
2025/03/29 19:39:42 - mmengine - INFO - Iter(val) [ 750/2708]    eta: 0:05:14  time: 0.1672  data_time: 0.0013  memory: 1856  
2025/03/29 19:39:50 - mmengine - INFO - Iter(val) [ 800/2708]    eta: 0:05:06  time: 0.1574  data_time: 0.0012  memory: 1856  
2025/03/29 19:39:58 - mmengine - INFO - Iter(val) [ 850/2708]    eta: 0:04:59  time: 0.1714  data_time: 0.0014  memory: 1856  
2025/03/29 19:40:07 - mmengine - INFO - Iter(val) [ 900/2708]    eta: 0:04:51  time: 0.1672  data_time: 0.0013  memory: 1856  
2025/03/29 19:40:15 - mmengine - INFO - Iter(val) [ 950/2708]    eta: 0:04:43  time: 0.1592  data_time: 0.0013  memory: 1856  
2025/03/29 19:40:23 - mmengine - INFO - Iter(val) [1000/2708]    eta: 0:04:35  time: 0.1671  data_time: 0.0013  memory: 1856  
2025/03/29 19:40:31 - mmengine - INFO - Iter(val) [1050/2708]    eta: 0:04:27  time: 0.1559  data_time: 0.0012  memory: 1856  
2025/03/29 19:40:39 - mmengine - INFO - Iter(val) [1100/2708]    eta: 0:04:19  time: 0.1655  data_time: 0.0016  memory: 1856  
2025/03/29 19:40:47 - mmengine - INFO - Iter(val) [1150/2708]    eta: 0:04:11  time: 0.1695  data_time: 0.0014  memory: 1856  
2025/03/29 19:40:56 - mmengine - INFO - Iter(val) [1200/2708]    eta: 0:04:04  time: 0.1699  data_time: 0.0013  memory: 1856  
2025/03/29 19:41:04 - mmengine - INFO - Iter(val) [1250/2708]    eta: 0:03:56  time: 0.1558  data_time: 0.0012  memory: 1856  
2025/03/29 19:41:12 - mmengine - INFO - Iter(val) [1300/2708]    eta: 0:03:48  time: 0.1600  data_time: 0.0012  memory: 1856  
2025/03/29 19:41:20 - mmengine - INFO - Iter(val) [1350/2708]    eta: 0:03:40  time: 0.1670  data_time: 0.0014  memory: 1856  
2025/03/29 19:41:28 - mmengine - INFO - Iter(val) [1400/2708]    eta: 0:03:32  time: 0.1577  data_time: 0.0012  memory: 1856  
2025/03/29 19:41:37 - mmengine - INFO - Iter(val) [1450/2708]    eta: 0:03:24  time: 0.1681  data_time: 0.0016  memory: 1856  
2025/03/29 19:41:45 - mmengine - INFO - Iter(val) [1500/2708]    eta: 0:03:15  time: 0.1603  data_time: 0.0012  memory: 1856  
2025/03/29 19:41:53 - mmengine - INFO - Iter(val) [1550/2708]    eta: 0:03:07  time: 0.1670  data_time: 0.0011  memory: 1856  
2025/03/29 19:42:01 - mmengine - INFO - Iter(val) [1600/2708]    eta: 0:02:59  time: 0.1559  data_time: 0.0014  memory: 1856  
2025/03/29 19:42:09 - mmengine - INFO - Iter(val) [1650/2708]    eta: 0:02:51  time: 0.1566  data_time: 0.0013  memory: 1856  
2025/03/29 19:42:17 - mmengine - INFO - Iter(val) [1700/2708]    eta: 0:02:43  time: 0.1583  data_time: 0.0015  memory: 1856  
2025/03/29 19:42:26 - mmengine - INFO - Iter(val) [1750/2708]    eta: 0:02:35  time: 0.1707  data_time: 0.0016  memory: 1856  
2025/03/29 19:42:34 - mmengine - INFO - Iter(val) [1800/2708]    eta: 0:02:27  time: 0.1666  data_time: 0.0012  memory: 1856  
2025/03/29 19:42:42 - mmengine - INFO - Iter(val) [1850/2708]    eta: 0:02:19  time: 0.1669  data_time: 0.0013  memory: 1856  
2025/03/29 19:42:50 - mmengine - INFO - Iter(val) [1900/2708]    eta: 0:02:11  time: 0.1574  data_time: 0.0011  memory: 1856  
2025/03/29 19:42:58 - mmengine - INFO - Iter(val) [1950/2708]    eta: 0:02:03  time: 0.1653  data_time: 0.0010  memory: 1856  
2025/03/29 19:43:07 - mmengine - INFO - Iter(val) [2000/2708]    eta: 0:01:55  time: 0.1595  data_time: 0.0013  memory: 1856  
2025/03/29 19:43:15 - mmengine - INFO - Iter(val) [2050/2708]    eta: 0:01:46  time: 0.1576  data_time: 0.0014  memory: 1856  
2025/03/29 19:43:23 - mmengine - INFO - Iter(val) [2100/2708]    eta: 0:01:38  time: 0.1695  data_time: 0.0019  memory: 1856  
2025/03/29 19:43:31 - mmengine - INFO - Iter(val) [2150/2708]    eta: 0:01:30  time: 0.1597  data_time: 0.0013  memory: 1856  
2025/03/29 19:43:39 - mmengine - INFO - Iter(val) [2200/2708]    eta: 0:01:22  time: 0.1670  data_time: 0.0013  memory: 1856  
2025/03/29 19:43:47 - mmengine - INFO - Iter(val) [2250/2708]    eta: 0:01:14  time: 0.1613  data_time: 0.0014  memory: 1856  
2025/03/29 19:43:55 - mmengine - INFO - Iter(val) [2300/2708]    eta: 0:01:06  time: 0.1671  data_time: 0.0013  memory: 1856  
2025/03/29 19:44:03 - mmengine - INFO - Iter(val) [2350/2708]    eta: 0:00:58  time: 0.1618  data_time: 0.0015  memory: 1856  
2025/03/29 19:44:11 - mmengine - INFO - Iter(val) [2400/2708]    eta: 0:00:50  time: 0.1672  data_time: 0.0012  memory: 1856  
2025/03/29 19:44:19 - mmengine - INFO - Iter(val) [2450/2708]    eta: 0:00:41  time: 0.1568  data_time: 0.0016  memory: 1856  
2025/03/29 19:44:27 - mmengine - INFO - Iter(val) [2500/2708]    eta: 0:00:33  time: 0.1607  data_time: 0.0013  memory: 1856  
2025/03/29 19:44:36 - mmengine - INFO - Iter(val) [2550/2708]    eta: 0:00:25  time: 0.1599  data_time: 0.0012  memory: 1856  
2025/03/29 19:44:44 - mmengine - INFO - Iter(val) [2600/2708]    eta: 0:00:17  time: 0.1580  data_time: 0.0014  memory: 1856  
2025/03/29 19:44:52 - mmengine - INFO - Iter(val) [2650/2708]    eta: 0:00:09  time: 0.1655  data_time: 0.0013  memory: 1856  
2025/03/29 19:45:00 - mmengine - INFO - Iter(val) [2700/2708]    eta: 0:00:01  time: 0.1555  data_time: 0.0013  memory: 1856  
2025/03/29 19:45:01 - mmengine - INFO - per class results:
2025/03/29 19:45:01 - mmengine - INFO - 
+--------------+-------+-------+
|    Class     |  IoU  |  Acc  |
+--------------+-------+-------+
|  background  | 42.42 | 66.43 |
|   building   | 66.37 | 81.81 |
|     road     | 55.09 |  71.9 |
|    water     | 75.16 | 84.39 |
|    barren    | 51.74 | 70.98 |
|    forest    | 56.14 | 75.86 |
| agricultural | 58.85 | 62.47 |
+--------------+-------+-------+
2025/03/29 19:45:01 - mmengine - INFO - Iter(val) [2708/2708]    aAcc: 71.1500  mIoU: 57.9700  mAcc: 73.4100  data_time: 0.0013  time: 0.1623
2025/03/29 19:46:25 - mmengine - INFO - Iter(train) [14050/20000]  base_lr: 3.3586e-05 lr: 3.3586e-05  eta: 2:46:26  time: 1.6722  data_time: 0.0174  memory: 10087  loss: 30.3794  decode.loss_cls: 0.2378  decode.loss_mask: 1.4766  decode.loss_dice: 1.3165  decode.d0.loss_cls: 0.3962  decode.d0.loss_mask: 1.4329  decode.d0.loss_dice: 1.3667  decode.d1.loss_cls: 0.2841  decode.d1.loss_mask: 1.4457  decode.d1.loss_dice: 1.3065  decode.d2.loss_cls: 0.2834  decode.d2.loss_mask: 1.4194  decode.d2.loss_dice: 1.3052  decode.d3.loss_cls: 0.2386  decode.d3.loss_mask: 1.4314  decode.d3.loss_dice: 1.3296  decode.d4.loss_cls: 0.2376  decode.d4.loss_mask: 1.4398  decode.d4.loss_dice: 1.3078  decode.d5.loss_cls: 0.2083  decode.d5.loss_mask: 1.4404  decode.d5.loss_dice: 1.3267  decode.d6.loss_cls: 0.2393  decode.d6.loss_mask: 1.4352  decode.d6.loss_dice: 1.3274  decode.d7.loss_cls: 0.2556  decode.d7.loss_mask: 1.4973  decode.d7.loss_dice: 1.3520  decode.d8.loss_cls: 0.2495  decode.d8.loss_mask: 1.4764  decode.d8.loss_dice: 1.3159
2025/03/29 19:47:49 - mmengine - INFO - Iter(train) [14100/20000]  base_lr: 3.3332e-05 lr: 3.3332e-05  eta: 2:45:02  time: 1.6761  data_time: 0.0166  memory: 10149  loss: 28.5110  decode.loss_cls: 0.3910  decode.loss_mask: 1.0629  decode.loss_dice: 1.3253  decode.d0.loss_cls: 0.4487  decode.d0.loss_mask: 1.0814  decode.d0.loss_dice: 1.5138  decode.d1.loss_cls: 0.4497  decode.d1.loss_mask: 1.0492  decode.d1.loss_dice: 1.3376  decode.d2.loss_cls: 0.3995  decode.d2.loss_mask: 1.0574  decode.d2.loss_dice: 1.3008  decode.d3.loss_cls: 0.3903  decode.d3.loss_mask: 1.0713  decode.d3.loss_dice: 1.3315  decode.d4.loss_cls: 0.4021  decode.d4.loss_mask: 1.0815  decode.d4.loss_dice: 1.3505  decode.d5.loss_cls: 0.4217  decode.d5.loss_mask: 1.0836  decode.d5.loss_dice: 1.3072  decode.d6.loss_cls: 0.3695  decode.d6.loss_mask: 1.1332  decode.d6.loss_dice: 1.3973  decode.d7.loss_cls: 0.4089  decode.d7.loss_mask: 1.0717  decode.d7.loss_dice: 1.3889  decode.d8.loss_cls: 0.3861  decode.d8.loss_mask: 1.0979  decode.d8.loss_dice: 1.4005
2025/03/29 19:49:12 - mmengine - INFO - Iter(train) [14150/20000]  base_lr: 3.3078e-05 lr: 3.3078e-05  eta: 2:43:38  time: 1.6742  data_time: 0.0168  memory: 10083  loss: 31.4547  decode.loss_cls: 0.4241  decode.loss_mask: 1.2705  decode.loss_dice: 1.4661  decode.d0.loss_cls: 0.4680  decode.d0.loss_mask: 1.3257  decode.d0.loss_dice: 1.5466  decode.d1.loss_cls: 0.4199  decode.d1.loss_mask: 1.3047  decode.d1.loss_dice: 1.4717  decode.d2.loss_cls: 0.4019  decode.d2.loss_mask: 1.2807  decode.d2.loss_dice: 1.4691  decode.d3.loss_cls: 0.3528  decode.d3.loss_mask: 1.2784  decode.d3.loss_dice: 1.4832  decode.d4.loss_cls: 0.3512  decode.d4.loss_mask: 1.2625  decode.d4.loss_dice: 1.4653  decode.d5.loss_cls: 0.3954  decode.d5.loss_mask: 1.2742  decode.d5.loss_dice: 1.4512  decode.d6.loss_cls: 0.3931  decode.d6.loss_mask: 1.2530  decode.d6.loss_dice: 1.4202  decode.d7.loss_cls: 0.4137  decode.d7.loss_mask: 1.2705  decode.d7.loss_dice: 1.4575  decode.d8.loss_cls: 0.4012  decode.d8.loss_mask: 1.2472  decode.d8.loss_dice: 1.4351
2025/03/29 19:50:36 - mmengine - INFO - Iter(train) [14200/20000]  base_lr: 3.2823e-05 lr: 3.2823e-05  eta: 2:42:14  time: 1.6709  data_time: 0.0169  memory: 10090  loss: 31.5708  decode.loss_cls: 0.3325  decode.loss_mask: 1.3609  decode.loss_dice: 1.4853  decode.d0.loss_cls: 0.4249  decode.d0.loss_mask: 1.3546  decode.d0.loss_dice: 1.4962  decode.d1.loss_cls: 0.3309  decode.d1.loss_mask: 1.3435  decode.d1.loss_dice: 1.4498  decode.d2.loss_cls: 0.3452  decode.d2.loss_mask: 1.2912  decode.d2.loss_dice: 1.4280  decode.d3.loss_cls: 0.3415  decode.d3.loss_mask: 1.3230  decode.d3.loss_dice: 1.4675  decode.d4.loss_cls: 0.3601  decode.d4.loss_mask: 1.3766  decode.d4.loss_dice: 1.4620  decode.d5.loss_cls: 0.2887  decode.d5.loss_mask: 1.3731  decode.d5.loss_dice: 1.4737  decode.d6.loss_cls: 0.3022  decode.d6.loss_mask: 1.3796  decode.d6.loss_dice: 1.4579  decode.d7.loss_cls: 0.2798  decode.d7.loss_mask: 1.4096  decode.d7.loss_dice: 1.4744  decode.d8.loss_cls: 0.3118  decode.d8.loss_mask: 1.3675  decode.d8.loss_dice: 1.4787
2025/03/29 19:52:00 - mmengine - INFO - Iter(train) [14250/20000]  base_lr: 3.2568e-05 lr: 3.2568e-05  eta: 2:40:50  time: 1.6733  data_time: 0.0167  memory: 10144  loss: 32.4756  decode.loss_cls: 0.3549  decode.loss_mask: 1.4247  decode.loss_dice: 1.4099  decode.d0.loss_cls: 0.5206  decode.d0.loss_mask: 1.4847  decode.d0.loss_dice: 1.4679  decode.d1.loss_cls: 0.4099  decode.d1.loss_mask: 1.4507  decode.d1.loss_dice: 1.4163  decode.d2.loss_cls: 0.4116  decode.d2.loss_mask: 1.4467  decode.d2.loss_dice: 1.3925  decode.d3.loss_cls: 0.3868  decode.d3.loss_mask: 1.4258  decode.d3.loss_dice: 1.3998  decode.d4.loss_cls: 0.3925  decode.d4.loss_mask: 1.4569  decode.d4.loss_dice: 1.3717  decode.d5.loss_cls: 0.3804  decode.d5.loss_mask: 1.4446  decode.d5.loss_dice: 1.3810  decode.d6.loss_cls: 0.4111  decode.d6.loss_mask: 1.4453  decode.d6.loss_dice: 1.3995  decode.d7.loss_cls: 0.4169  decode.d7.loss_mask: 1.4321  decode.d7.loss_dice: 1.3733  decode.d8.loss_cls: 0.3681  decode.d8.loss_mask: 1.4227  decode.d8.loss_dice: 1.3770
2025/03/29 19:53:24 - mmengine - INFO - Iter(train) [14300/20000]  base_lr: 3.2313e-05 lr: 3.2313e-05  eta: 2:39:26  time: 1.6728  data_time: 0.0164  memory: 10100  loss: 35.0326  decode.loss_cls: 0.5168  decode.loss_mask: 1.4728  decode.loss_dice: 1.4934  decode.d0.loss_cls: 0.6308  decode.d0.loss_mask: 1.4904  decode.d0.loss_dice: 1.5778  decode.d1.loss_cls: 0.5250  decode.d1.loss_mask: 1.4612  decode.d1.loss_dice: 1.5370  decode.d2.loss_cls: 0.5447  decode.d2.loss_mask: 1.4660  decode.d2.loss_dice: 1.5208  decode.d3.loss_cls: 0.5180  decode.d3.loss_mask: 1.4980  decode.d3.loss_dice: 1.5398  decode.d4.loss_cls: 0.5334  decode.d4.loss_mask: 1.4664  decode.d4.loss_dice: 1.4934  decode.d5.loss_cls: 0.4614  decode.d5.loss_mask: 1.4497  decode.d5.loss_dice: 1.5000  decode.d6.loss_cls: 0.5283  decode.d6.loss_mask: 1.4171  decode.d6.loss_dice: 1.4480  decode.d7.loss_cls: 0.5474  decode.d7.loss_mask: 1.4339  decode.d7.loss_dice: 1.4598  decode.d8.loss_cls: 0.5073  decode.d8.loss_mask: 1.4828  decode.d8.loss_dice: 1.5111
2025/03/29 19:54:47 - mmengine - INFO - Iter(train) [14350/20000]  base_lr: 3.2058e-05 lr: 3.2058e-05  eta: 2:38:02  time: 1.6743  data_time: 0.0166  memory: 10092  loss: 34.5484  decode.loss_cls: 0.3950  decode.loss_mask: 1.4417  decode.loss_dice: 1.6182  decode.d0.loss_cls: 0.4493  decode.d0.loss_mask: 1.4192  decode.d0.loss_dice: 1.7124  decode.d1.loss_cls: 0.4394  decode.d1.loss_mask: 1.3980  decode.d1.loss_dice: 1.6071  decode.d2.loss_cls: 0.4037  decode.d2.loss_mask: 1.3909  decode.d2.loss_dice: 1.5570  decode.d3.loss_cls: 0.4260  decode.d3.loss_mask: 1.4331  decode.d3.loss_dice: 1.5777  decode.d4.loss_cls: 0.4418  decode.d4.loss_mask: 1.4606  decode.d4.loss_dice: 1.5763  decode.d5.loss_cls: 0.3942  decode.d5.loss_mask: 1.4592  decode.d5.loss_dice: 1.5825  decode.d6.loss_cls: 0.4058  decode.d6.loss_mask: 1.4607  decode.d6.loss_dice: 1.6198  decode.d7.loss_cls: 0.3991  decode.d7.loss_mask: 1.4698  decode.d7.loss_dice: 1.5754  decode.d8.loss_cls: 0.3787  decode.d8.loss_mask: 1.4524  decode.d8.loss_dice: 1.6035
2025/03/29 19:56:11 - mmengine - INFO - Iter(train) [14400/20000]  base_lr: 3.1803e-05 lr: 3.1803e-05  eta: 2:36:38  time: 1.6738  data_time: 0.0171  memory: 10101  loss: 34.9665  decode.loss_cls: 0.5173  decode.loss_mask: 1.5225  decode.loss_dice: 1.4916  decode.d0.loss_cls: 0.6090  decode.d0.loss_mask: 1.4442  decode.d0.loss_dice: 1.6287  decode.d1.loss_cls: 0.5568  decode.d1.loss_mask: 1.4650  decode.d1.loss_dice: 1.5076  decode.d2.loss_cls: 0.5238  decode.d2.loss_mask: 1.4503  decode.d2.loss_dice: 1.5268  decode.d3.loss_cls: 0.4608  decode.d3.loss_mask: 1.4616  decode.d3.loss_dice: 1.5011  decode.d4.loss_cls: 0.4737  decode.d4.loss_mask: 1.4581  decode.d4.loss_dice: 1.5102  decode.d5.loss_cls: 0.4483  decode.d5.loss_mask: 1.4727  decode.d5.loss_dice: 1.5151  decode.d6.loss_cls: 0.4834  decode.d6.loss_mask: 1.4680  decode.d6.loss_dice: 1.5047  decode.d7.loss_cls: 0.5055  decode.d7.loss_mask: 1.4823  decode.d7.loss_dice: 1.5204  decode.d8.loss_cls: 0.4533  decode.d8.loss_mask: 1.4988  decode.d8.loss_dice: 1.5050
2025/03/29 19:57:35 - mmengine - INFO - Iter(train) [14450/20000]  base_lr: 3.1547e-05 lr: 3.1547e-05  eta: 2:35:14  time: 1.6743  data_time: 0.0167  memory: 10092  loss: 32.7652  decode.loss_cls: 0.4488  decode.loss_mask: 1.3661  decode.loss_dice: 1.4338  decode.d0.loss_cls: 0.5138  decode.d0.loss_mask: 1.3788  decode.d0.loss_dice: 1.5029  decode.d1.loss_cls: 0.5044  decode.d1.loss_mask: 1.3356  decode.d1.loss_dice: 1.3750  decode.d2.loss_cls: 0.4799  decode.d2.loss_mask: 1.3848  decode.d2.loss_dice: 1.4103  decode.d3.loss_cls: 0.4494  decode.d3.loss_mask: 1.4342  decode.d3.loss_dice: 1.4118  decode.d4.loss_cls: 0.4717  decode.d4.loss_mask: 1.3883  decode.d4.loss_dice: 1.4042  decode.d5.loss_cls: 0.3953  decode.d5.loss_mask: 1.4415  decode.d5.loss_dice: 1.4594  decode.d6.loss_cls: 0.3975  decode.d6.loss_mask: 1.4418  decode.d6.loss_dice: 1.4764  decode.d7.loss_cls: 0.3976  decode.d7.loss_mask: 1.3662  decode.d7.loss_dice: 1.4435  decode.d8.loss_cls: 0.4519  decode.d8.loss_mask: 1.3630  decode.d8.loss_dice: 1.4369
2025/03/29 19:58:59 - mmengine - INFO - Iter(train) [14500/20000]  base_lr: 3.1291e-05 lr: 3.1291e-05  eta: 2:33:50  time: 1.6834  data_time: 0.0167  memory: 10149  loss: 30.9599  decode.loss_cls: 0.3399  decode.loss_mask: 1.3105  decode.loss_dice: 1.4120  decode.d0.loss_cls: 0.4983  decode.d0.loss_mask: 1.3648  decode.d0.loss_dice: 1.5301  decode.d1.loss_cls: 0.4262  decode.d1.loss_mask: 1.2673  decode.d1.loss_dice: 1.3771  decode.d2.loss_cls: 0.3823  decode.d2.loss_mask: 1.2741  decode.d2.loss_dice: 1.3338  decode.d3.loss_cls: 0.3723  decode.d3.loss_mask: 1.2894  decode.d3.loss_dice: 1.3646  decode.d4.loss_cls: 0.3992  decode.d4.loss_mask: 1.2789  decode.d4.loss_dice: 1.4051  decode.d5.loss_cls: 0.3769  decode.d5.loss_mask: 1.2865  decode.d5.loss_dice: 1.4164  decode.d6.loss_cls: 0.3598  decode.d6.loss_mask: 1.2920  decode.d6.loss_dice: 1.4243  decode.d7.loss_cls: 0.3715  decode.d7.loss_mask: 1.2969  decode.d7.loss_dice: 1.4118  decode.d8.loss_cls: 0.3578  decode.d8.loss_mask: 1.3190  decode.d8.loss_dice: 1.4211
2025/03/29 20:00:23 - mmengine - INFO - Iter(train) [14550/20000]  base_lr: 3.1035e-05 lr: 3.1035e-05  eta: 2:32:26  time: 1.6855  data_time: 0.0192  memory: 10145  loss: 34.6128  decode.loss_cls: 0.5013  decode.loss_mask: 1.5057  decode.loss_dice: 1.4617  decode.d0.loss_cls: 0.6480  decode.d0.loss_mask: 1.4666  decode.d0.loss_dice: 1.5317  decode.d1.loss_cls: 0.4758  decode.d1.loss_mask: 1.4623  decode.d1.loss_dice: 1.5131  decode.d2.loss_cls: 0.4500  decode.d2.loss_mask: 1.4766  decode.d2.loss_dice: 1.4817  decode.d3.loss_cls: 0.4447  decode.d3.loss_mask: 1.4714  decode.d3.loss_dice: 1.4576  decode.d4.loss_cls: 0.4669  decode.d4.loss_mask: 1.5005  decode.d4.loss_dice: 1.4924  decode.d5.loss_cls: 0.4625  decode.d5.loss_mask: 1.4929  decode.d5.loss_dice: 1.4643  decode.d6.loss_cls: 0.4726  decode.d6.loss_mask: 1.5085  decode.d6.loss_dice: 1.4736  decode.d7.loss_cls: 0.4500  decode.d7.loss_mask: 1.4997  decode.d7.loss_dice: 1.5022  decode.d8.loss_cls: 0.4465  decode.d8.loss_mask: 1.5097  decode.d8.loss_dice: 1.5224
2025/03/29 20:01:46 - mmengine - INFO - Iter(train) [14600/20000]  base_lr: 3.0778e-05 lr: 3.0778e-05  eta: 2:31:02  time: 1.6742  data_time: 0.0165  memory: 10083  loss: 30.4995  decode.loss_cls: 0.4140  decode.loss_mask: 1.2380  decode.loss_dice: 1.3800  decode.d0.loss_cls: 0.4554  decode.d0.loss_mask: 1.2994  decode.d0.loss_dice: 1.4988  decode.d1.loss_cls: 0.3879  decode.d1.loss_mask: 1.2552  decode.d1.loss_dice: 1.3912  decode.d2.loss_cls: 0.3753  decode.d2.loss_mask: 1.2512  decode.d2.loss_dice: 1.3538  decode.d3.loss_cls: 0.3886  decode.d3.loss_mask: 1.2650  decode.d3.loss_dice: 1.3441  decode.d4.loss_cls: 0.4139  decode.d4.loss_mask: 1.2619  decode.d4.loss_dice: 1.3572  decode.d5.loss_cls: 0.4611  decode.d5.loss_mask: 1.2423  decode.d5.loss_dice: 1.3536  decode.d6.loss_cls: 0.4241  decode.d6.loss_mask: 1.2585  decode.d6.loss_dice: 1.3558  decode.d7.loss_cls: 0.4328  decode.d7.loss_mask: 1.2343  decode.d7.loss_dice: 1.3933  decode.d8.loss_cls: 0.4197  decode.d8.loss_mask: 1.2335  decode.d8.loss_dice: 1.3596
2025/03/29 20:03:13 - mmengine - INFO - Iter(train) [14650/20000]  base_lr: 3.0522e-05 lr: 3.0522e-05  eta: 2:29:39  time: 1.8114  data_time: 0.0166  memory: 10091  loss: 32.9834  decode.loss_cls: 0.3604  decode.loss_mask: 1.4269  decode.loss_dice: 1.4265  decode.d0.loss_cls: 0.5441  decode.d0.loss_mask: 1.4353  decode.d0.loss_dice: 1.4616  decode.d1.loss_cls: 0.3906  decode.d1.loss_mask: 1.4503  decode.d1.loss_dice: 1.4825  decode.d2.loss_cls: 0.3358  decode.d2.loss_mask: 1.4644  decode.d2.loss_dice: 1.4679  decode.d3.loss_cls: 0.3792  decode.d3.loss_mask: 1.4541  decode.d3.loss_dice: 1.4626  decode.d4.loss_cls: 0.3605  decode.d4.loss_mask: 1.4722  decode.d4.loss_dice: 1.4924  decode.d5.loss_cls: 0.3720  decode.d5.loss_mask: 1.4620  decode.d5.loss_dice: 1.4641  decode.d6.loss_cls: 0.3471  decode.d6.loss_mask: 1.4377  decode.d6.loss_dice: 1.4550  decode.d7.loss_cls: 0.3385  decode.d7.loss_mask: 1.4625  decode.d7.loss_dice: 1.4682  decode.d8.loss_cls: 0.3562  decode.d8.loss_mask: 1.4862  decode.d8.loss_dice: 1.4666
2025/03/29 20:04:43 - mmengine - INFO - Iter(train) [14700/20000]  base_lr: 3.0265e-05 lr: 3.0265e-05  eta: 2:28:18  time: 1.8076  data_time: 0.0168  memory: 10138  loss: 33.5156  decode.loss_cls: 0.3070  decode.loss_mask: 1.5677  decode.loss_dice: 1.4585  decode.d0.loss_cls: 0.4666  decode.d0.loss_mask: 1.5558  decode.d0.loss_dice: 1.4543  decode.d1.loss_cls: 0.3427  decode.d1.loss_mask: 1.5927  decode.d1.loss_dice: 1.4516  decode.d2.loss_cls: 0.3101  decode.d2.loss_mask: 1.5929  decode.d2.loss_dice: 1.4390  decode.d3.loss_cls: 0.2868  decode.d3.loss_mask: 1.5719  decode.d3.loss_dice: 1.4546  decode.d4.loss_cls: 0.3394  decode.d4.loss_mask: 1.5334  decode.d4.loss_dice: 1.4040  decode.d5.loss_cls: 0.3267  decode.d5.loss_mask: 1.5659  decode.d5.loss_dice: 1.4660  decode.d6.loss_cls: 0.3200  decode.d6.loss_mask: 1.5567  decode.d6.loss_dice: 1.4512  decode.d7.loss_cls: 0.3371  decode.d7.loss_mask: 1.5359  decode.d7.loss_dice: 1.4500  decode.d8.loss_cls: 0.3330  decode.d8.loss_mask: 1.5700  decode.d8.loss_dice: 1.4741
2025/03/29 20:06:13 - mmengine - INFO - Iter(train) [14750/20000]  base_lr: 3.0008e-05 lr: 3.0008e-05  eta: 2:26:56  time: 1.7963  data_time: 0.0167  memory: 10084  loss: 32.6618  decode.loss_cls: 0.4013  decode.loss_mask: 1.3792  decode.loss_dice: 1.4427  decode.d0.loss_cls: 0.5490  decode.d0.loss_mask: 1.4183  decode.d0.loss_dice: 1.5045  decode.d1.loss_cls: 0.4628  decode.d1.loss_mask: 1.4283  decode.d1.loss_dice: 1.4785  decode.d2.loss_cls: 0.4220  decode.d2.loss_mask: 1.3665  decode.d2.loss_dice: 1.4542  decode.d3.loss_cls: 0.3954  decode.d3.loss_mask: 1.3597  decode.d3.loss_dice: 1.4345  decode.d4.loss_cls: 0.4490  decode.d4.loss_mask: 1.3520  decode.d4.loss_dice: 1.3981  decode.d5.loss_cls: 0.4204  decode.d5.loss_mask: 1.3774  decode.d5.loss_dice: 1.4025  decode.d6.loss_cls: 0.4399  decode.d6.loss_mask: 1.3942  decode.d6.loss_dice: 1.4136  decode.d7.loss_cls: 0.4370  decode.d7.loss_mask: 1.3925  decode.d7.loss_dice: 1.4442  decode.d8.loss_cls: 0.3755  decode.d8.loss_mask: 1.4085  decode.d8.loss_dice: 1.4601
2025/03/29 20:07:43 - mmengine - INFO - Iter(train) [14800/20000]  base_lr: 2.9751e-05 lr: 2.9751e-05  eta: 2:25:34  time: 1.7998  data_time: 0.0167  memory: 10090  loss: 30.5455  decode.loss_cls: 0.4400  decode.loss_mask: 1.1883  decode.loss_dice: 1.4057  decode.d0.loss_cls: 0.4906  decode.d0.loss_mask: 1.2176  decode.d0.loss_dice: 1.4958  decode.d1.loss_cls: 0.4324  decode.d1.loss_mask: 1.2245  decode.d1.loss_dice: 1.4486  decode.d2.loss_cls: 0.4514  decode.d2.loss_mask: 1.1746  decode.d2.loss_dice: 1.3937  decode.d3.loss_cls: 0.3996  decode.d3.loss_mask: 1.2134  decode.d3.loss_dice: 1.4463  decode.d4.loss_cls: 0.4353  decode.d4.loss_mask: 1.1809  decode.d4.loss_dice: 1.3881  decode.d5.loss_cls: 0.4217  decode.d5.loss_mask: 1.1876  decode.d5.loss_dice: 1.3980  decode.d6.loss_cls: 0.4718  decode.d6.loss_mask: 1.1815  decode.d6.loss_dice: 1.3824  decode.d7.loss_cls: 0.4266  decode.d7.loss_mask: 1.1930  decode.d7.loss_dice: 1.4178  decode.d8.loss_cls: 0.4205  decode.d8.loss_mask: 1.2013  decode.d8.loss_dice: 1.4162
2025/03/29 20:09:12 - mmengine - INFO - Iter(train) [14850/20000]  base_lr: 2.9493e-05 lr: 2.9493e-05  eta: 2:24:12  time: 1.7780  data_time: 0.0166  memory: 10093  loss: 32.2935  decode.loss_cls: 0.4927  decode.loss_mask: 1.3302  decode.loss_dice: 1.3757  decode.d0.loss_cls: 0.5458  decode.d0.loss_mask: 1.3957  decode.d0.loss_dice: 1.5559  decode.d1.loss_cls: 0.4880  decode.d1.loss_mask: 1.3599  decode.d1.loss_dice: 1.4317  decode.d2.loss_cls: 0.4834  decode.d2.loss_mask: 1.3779  decode.d2.loss_dice: 1.3904  decode.d3.loss_cls: 0.4299  decode.d3.loss_mask: 1.3578  decode.d3.loss_dice: 1.4270  decode.d4.loss_cls: 0.4376  decode.d4.loss_mask: 1.3505  decode.d4.loss_dice: 1.3734  decode.d5.loss_cls: 0.4268  decode.d5.loss_mask: 1.3487  decode.d5.loss_dice: 1.3860  decode.d6.loss_cls: 0.4921  decode.d6.loss_mask: 1.3473  decode.d6.loss_dice: 1.3399  decode.d7.loss_cls: 0.4700  decode.d7.loss_mask: 1.3371  decode.d7.loss_dice: 1.3697  decode.d8.loss_cls: 0.4862  decode.d8.loss_mask: 1.3222  decode.d8.loss_dice: 1.3638
2025/03/29 20:10:42 - mmengine - INFO - Iter(train) [14900/20000]  base_lr: 2.9235e-05 lr: 2.9235e-05  eta: 2:22:50  time: 1.7789  data_time: 0.0165  memory: 10084  loss: 32.7705  decode.loss_cls: 0.3748  decode.loss_mask: 1.4667  decode.loss_dice: 1.4155  decode.d0.loss_cls: 0.4783  decode.d0.loss_mask: 1.4856  decode.d0.loss_dice: 1.4731  decode.d1.loss_cls: 0.3732  decode.d1.loss_mask: 1.4797  decode.d1.loss_dice: 1.4481  decode.d2.loss_cls: 0.3542  decode.d2.loss_mask: 1.4778  decode.d2.loss_dice: 1.4198  decode.d3.loss_cls: 0.3595  decode.d3.loss_mask: 1.4772  decode.d3.loss_dice: 1.3949  decode.d4.loss_cls: 0.3349  decode.d4.loss_mask: 1.5019  decode.d4.loss_dice: 1.4326  decode.d5.loss_cls: 0.3599  decode.d5.loss_mask: 1.4759  decode.d5.loss_dice: 1.4042  decode.d6.loss_cls: 0.3683  decode.d6.loss_mask: 1.4613  decode.d6.loss_dice: 1.4306  decode.d7.loss_cls: 0.3529  decode.d7.loss_mask: 1.4826  decode.d7.loss_dice: 1.4313  decode.d8.loss_cls: 0.3703  decode.d8.loss_mask: 1.4561  decode.d8.loss_dice: 1.4293
2025/03/29 20:12:11 - mmengine - INFO - Iter(train) [14950/20000]  base_lr: 2.8977e-05 lr: 2.8977e-05  eta: 2:21:27  time: 1.7909  data_time: 0.0168  memory: 10146  loss: 27.9950  decode.loss_cls: 0.2771  decode.loss_mask: 1.2980  decode.loss_dice: 1.1744  decode.d0.loss_cls: 0.4279  decode.d0.loss_mask: 1.2951  decode.d0.loss_dice: 1.2305  decode.d1.loss_cls: 0.3626  decode.d1.loss_mask: 1.2689  decode.d1.loss_dice: 1.1782  decode.d2.loss_cls: 0.2884  decode.d2.loss_mask: 1.3015  decode.d2.loss_dice: 1.1936  decode.d3.loss_cls: 0.3133  decode.d3.loss_mask: 1.3132  decode.d3.loss_dice: 1.1944  decode.d4.loss_cls: 0.3162  decode.d4.loss_mask: 1.2629  decode.d4.loss_dice: 1.1821  decode.d5.loss_cls: 0.3210  decode.d5.loss_mask: 1.2973  decode.d5.loss_dice: 1.1753  decode.d6.loss_cls: 0.3014  decode.d6.loss_mask: 1.2959  decode.d6.loss_dice: 1.1803  decode.d7.loss_cls: 0.2916  decode.d7.loss_mask: 1.3241  decode.d7.loss_dice: 1.1867  decode.d8.loss_cls: 0.2810  decode.d8.loss_mask: 1.2998  decode.d8.loss_dice: 1.1622
2025/03/29 20:13:36 - mmengine - INFO - Exp name: r2u_20250329_122140
2025/03/29 20:13:36 - mmengine - INFO - Iter(train) [15000/20000]  base_lr: 2.8719e-05 lr: 2.8719e-05  eta: 2:20:04  time: 1.6721  data_time: 0.0164  memory: 10145  loss: 30.3729  decode.loss_cls: 0.4173  decode.loss_mask: 1.2863  decode.loss_dice: 1.3398  decode.d0.loss_cls: 0.4344  decode.d0.loss_mask: 1.3566  decode.d0.loss_dice: 1.4176  decode.d1.loss_cls: 0.3813  decode.d1.loss_mask: 1.3125  decode.d1.loss_dice: 1.3482  decode.d2.loss_cls: 0.3727  decode.d2.loss_mask: 1.3158  decode.d2.loss_dice: 1.3204  decode.d3.loss_cls: 0.3544  decode.d3.loss_mask: 1.2987  decode.d3.loss_dice: 1.3503  decode.d4.loss_cls: 0.3904  decode.d4.loss_mask: 1.2874  decode.d4.loss_dice: 1.3329  decode.d5.loss_cls: 0.3610  decode.d5.loss_mask: 1.3052  decode.d5.loss_dice: 1.3387  decode.d6.loss_cls: 0.3945  decode.d6.loss_mask: 1.2759  decode.d6.loss_dice: 1.3480  decode.d7.loss_cls: 0.3757  decode.d7.loss_mask: 1.3037  decode.d7.loss_dice: 1.3448  decode.d8.loss_cls: 0.3644  decode.d8.loss_mask: 1.2895  decode.d8.loss_dice: 1.3542
2025/03/29 20:15:00 - mmengine - INFO - Iter(train) [15050/20000]  base_lr: 2.8460e-05 lr: 2.8460e-05  eta: 2:18:40  time: 1.6727  data_time: 0.0172  memory: 10102  loss: 35.2087  decode.loss_cls: 0.3362  decode.loss_mask: 1.6430  decode.loss_dice: 1.4614  decode.d0.loss_cls: 0.4744  decode.d0.loss_mask: 1.6472  decode.d0.loss_dice: 1.5310  decode.d1.loss_cls: 0.3274  decode.d1.loss_mask: 1.7279  decode.d1.loss_dice: 1.5212  decode.d2.loss_cls: 0.3410  decode.d2.loss_mask: 1.7109  decode.d2.loss_dice: 1.4813  decode.d3.loss_cls: 0.3537  decode.d3.loss_mask: 1.6752  decode.d3.loss_dice: 1.5039  decode.d4.loss_cls: 0.3584  decode.d4.loss_mask: 1.6952  decode.d4.loss_dice: 1.4842  decode.d5.loss_cls: 0.3221  decode.d5.loss_mask: 1.7124  decode.d5.loss_dice: 1.4643  decode.d6.loss_cls: 0.3611  decode.d6.loss_mask: 1.6543  decode.d6.loss_dice: 1.4562  decode.d7.loss_cls: 0.3350  decode.d7.loss_mask: 1.6759  decode.d7.loss_dice: 1.4981  decode.d8.loss_cls: 0.2952  decode.d8.loss_mask: 1.6708  decode.d8.loss_dice: 1.4897
2025/03/29 20:16:24 - mmengine - INFO - Iter(train) [15100/20000]  base_lr: 2.8201e-05 lr: 2.8201e-05  eta: 2:17:16  time: 1.6732  data_time: 0.0169  memory: 10100  loss: 32.1717  decode.loss_cls: 0.4000  decode.loss_mask: 1.4139  decode.loss_dice: 1.3083  decode.d0.loss_cls: 0.5279  decode.d0.loss_mask: 1.4720  decode.d0.loss_dice: 1.4435  decode.d1.loss_cls: 0.4455  decode.d1.loss_mask: 1.4063  decode.d1.loss_dice: 1.3402  decode.d2.loss_cls: 0.4126  decode.d2.loss_mask: 1.4078  decode.d2.loss_dice: 1.3158  decode.d3.loss_cls: 0.4022  decode.d3.loss_mask: 1.4501  decode.d3.loss_dice: 1.3391  decode.d4.loss_cls: 0.4027  decode.d4.loss_mask: 1.4540  decode.d4.loss_dice: 1.3171  decode.d5.loss_cls: 0.4489  decode.d5.loss_mask: 1.4552  decode.d5.loss_dice: 1.3159  decode.d6.loss_cls: 0.4405  decode.d6.loss_mask: 1.4433  decode.d6.loss_dice: 1.3605  decode.d7.loss_cls: 0.4435  decode.d7.loss_mask: 1.4600  decode.d7.loss_dice: 1.3389  decode.d8.loss_cls: 0.4436  decode.d8.loss_mask: 1.4401  decode.d8.loss_dice: 1.3220
2025/03/29 20:17:48 - mmengine - INFO - Iter(train) [15150/20000]  base_lr: 2.7942e-05 lr: 2.7942e-05  eta: 2:15:51  time: 1.7039  data_time: 0.0217  memory: 10082  loss: 30.0236  decode.loss_cls: 0.3023  decode.loss_mask: 1.2808  decode.loss_dice: 1.3286  decode.d0.loss_cls: 0.4464  decode.d0.loss_mask: 1.3856  decode.d0.loss_dice: 1.4093  decode.d1.loss_cls: 0.2712  decode.d1.loss_mask: 1.3619  decode.d1.loss_dice: 1.3693  decode.d2.loss_cls: 0.2704  decode.d2.loss_mask: 1.3215  decode.d2.loss_dice: 1.3409  decode.d3.loss_cls: 0.2221  decode.d3.loss_mask: 1.3659  decode.d3.loss_dice: 1.3920  decode.d4.loss_cls: 0.2847  decode.d4.loss_mask: 1.3365  decode.d4.loss_dice: 1.3429  decode.d5.loss_cls: 0.2579  decode.d5.loss_mask: 1.3703  decode.d5.loss_dice: 1.3717  decode.d6.loss_cls: 0.2756  decode.d6.loss_mask: 1.3517  decode.d6.loss_dice: 1.3831  decode.d7.loss_cls: 0.2740  decode.d7.loss_mask: 1.3804  decode.d7.loss_dice: 1.3703  decode.d8.loss_cls: 0.2779  decode.d8.loss_mask: 1.3204  decode.d8.loss_dice: 1.3577
2025/03/29 20:19:12 - mmengine - INFO - Iter(train) [15200/20000]  base_lr: 2.7683e-05 lr: 2.7683e-05  eta: 2:14:27  time: 1.6800  data_time: 0.0181  memory: 10087  loss: 34.8095  decode.loss_cls: 0.4285  decode.loss_mask: 1.5483  decode.loss_dice: 1.4269  decode.d0.loss_cls: 0.5272  decode.d0.loss_mask: 1.6209  decode.d0.loss_dice: 1.5218  decode.d1.loss_cls: 0.4040  decode.d1.loss_mask: 1.6014  decode.d1.loss_dice: 1.4591  decode.d2.loss_cls: 0.4003  decode.d2.loss_mask: 1.6094  decode.d2.loss_dice: 1.4521  decode.d3.loss_cls: 0.4064  decode.d3.loss_mask: 1.6019  decode.d3.loss_dice: 1.4865  decode.d4.loss_cls: 0.3990  decode.d4.loss_mask: 1.6007  decode.d4.loss_dice: 1.4724  decode.d5.loss_cls: 0.4438  decode.d5.loss_mask: 1.5691  decode.d5.loss_dice: 1.4209  decode.d6.loss_cls: 0.4522  decode.d6.loss_mask: 1.5937  decode.d6.loss_dice: 1.4517  decode.d7.loss_cls: 0.4267  decode.d7.loss_mask: 1.6033  decode.d7.loss_dice: 1.4398  decode.d8.loss_cls: 0.4153  decode.d8.loss_mask: 1.5661  decode.d8.loss_dice: 1.4600
2025/03/29 20:20:37 - mmengine - INFO - Iter(train) [15250/20000]  base_lr: 2.7423e-05 lr: 2.7423e-05  eta: 2:13:04  time: 1.7647  data_time: 0.0394  memory: 10163  loss: 27.7360  decode.loss_cls: 0.2467  decode.loss_mask: 1.3321  decode.loss_dice: 1.1296  decode.d0.loss_cls: 0.4882  decode.d0.loss_mask: 1.3439  decode.d0.loss_dice: 1.2682  decode.d1.loss_cls: 0.2488  decode.d1.loss_mask: 1.3439  decode.d1.loss_dice: 1.1809  decode.d2.loss_cls: 0.2340  decode.d2.loss_mask: 1.3121  decode.d2.loss_dice: 1.1541  decode.d3.loss_cls: 0.2512  decode.d3.loss_mask: 1.3276  decode.d3.loss_dice: 1.1665  decode.d4.loss_cls: 0.2792  decode.d4.loss_mask: 1.3481  decode.d4.loss_dice: 1.1321  decode.d5.loss_cls: 0.2454  decode.d5.loss_mask: 1.3465  decode.d5.loss_dice: 1.1527  decode.d6.loss_cls: 0.2628  decode.d6.loss_mask: 1.3304  decode.d6.loss_dice: 1.1425  decode.d7.loss_cls: 0.2507  decode.d7.loss_mask: 1.3593  decode.d7.loss_dice: 1.1465  decode.d8.loss_cls: 0.2302  decode.d8.loss_mask: 1.3515  decode.d8.loss_dice: 1.1303
2025/03/29 20:22:03 - mmengine - INFO - Iter(train) [15300/20000]  base_lr: 2.7163e-05 lr: 2.7163e-05  eta: 2:11:40  time: 1.7093  data_time: 0.0224  memory: 10084  loss: 29.3731  decode.loss_cls: 0.3117  decode.loss_mask: 1.3059  decode.loss_dice: 1.3148  decode.d0.loss_cls: 0.5135  decode.d0.loss_mask: 1.2667  decode.d0.loss_dice: 1.3396  decode.d1.loss_cls: 0.3338  decode.d1.loss_mask: 1.2939  decode.d1.loss_dice: 1.3264  decode.d2.loss_cls: 0.3151  decode.d2.loss_mask: 1.3161  decode.d2.loss_dice: 1.3312  decode.d3.loss_cls: 0.3358  decode.d3.loss_mask: 1.2855  decode.d3.loss_dice: 1.3114  decode.d4.loss_cls: 0.3097  decode.d4.loss_mask: 1.2548  decode.d4.loss_dice: 1.3054  decode.d5.loss_cls: 0.3196  decode.d5.loss_mask: 1.2698  decode.d5.loss_dice: 1.2827  decode.d6.loss_cls: 0.3092  decode.d6.loss_mask: 1.2742  decode.d6.loss_dice: 1.3141  decode.d7.loss_cls: 0.3187  decode.d7.loss_mask: 1.2936  decode.d7.loss_dice: 1.3321  decode.d8.loss_cls: 0.2906  decode.d8.loss_mask: 1.2842  decode.d8.loss_dice: 1.3129
2025/03/29 20:23:31 - mmengine - INFO - Iter(train) [15350/20000]  base_lr: 2.6903e-05 lr: 2.6903e-05  eta: 2:10:17  time: 1.7728  data_time: 0.0368  memory: 10141  loss: 31.5026  decode.loss_cls: 0.3049  decode.loss_mask: 1.3631  decode.loss_dice: 1.4325  decode.d0.loss_cls: 0.3434  decode.d0.loss_mask: 1.4699  decode.d0.loss_dice: 1.5415  decode.d1.loss_cls: 0.3219  decode.d1.loss_mask: 1.3565  decode.d1.loss_dice: 1.4646  decode.d2.loss_cls: 0.2852  decode.d2.loss_mask: 1.3858  decode.d2.loss_dice: 1.4578  decode.d3.loss_cls: 0.3284  decode.d3.loss_mask: 1.3906  decode.d3.loss_dice: 1.4442  decode.d4.loss_cls: 0.3474  decode.d4.loss_mask: 1.4162  decode.d4.loss_dice: 1.4347  decode.d5.loss_cls: 0.3158  decode.d5.loss_mask: 1.3558  decode.d5.loss_dice: 1.4186  decode.d6.loss_cls: 0.3297  decode.d6.loss_mask: 1.3530  decode.d6.loss_dice: 1.4054  decode.d7.loss_cls: 0.3281  decode.d7.loss_mask: 1.3591  decode.d7.loss_dice: 1.4350  decode.d8.loss_cls: 0.2562  decode.d8.loss_mask: 1.3967  decode.d8.loss_dice: 1.4604
2025/03/29 20:24:59 - mmengine - INFO - Iter(train) [15400/20000]  base_lr: 2.6642e-05 lr: 2.6642e-05  eta: 2:08:55  time: 1.7503  data_time: 0.0309  memory: 10089  loss: 34.2649  decode.loss_cls: 0.4306  decode.loss_mask: 1.5232  decode.loss_dice: 1.4631  decode.d0.loss_cls: 0.5025  decode.d0.loss_mask: 1.5454  decode.d0.loss_dice: 1.5726  decode.d1.loss_cls: 0.4899  decode.d1.loss_mask: 1.4810  decode.d1.loss_dice: 1.4438  decode.d2.loss_cls: 0.4223  decode.d2.loss_mask: 1.4817  decode.d2.loss_dice: 1.4765  decode.d3.loss_cls: 0.3923  decode.d3.loss_mask: 1.4962  decode.d3.loss_dice: 1.4720  decode.d4.loss_cls: 0.4571  decode.d4.loss_mask: 1.4676  decode.d4.loss_dice: 1.4608  decode.d5.loss_cls: 0.4650  decode.d5.loss_mask: 1.4930  decode.d5.loss_dice: 1.4691  decode.d6.loss_cls: 0.4581  decode.d6.loss_mask: 1.5105  decode.d6.loss_dice: 1.4854  decode.d7.loss_cls: 0.4451  decode.d7.loss_mask: 1.5080  decode.d7.loss_dice: 1.4908  decode.d8.loss_cls: 0.4131  decode.d8.loss_mask: 1.5057  decode.d8.loss_dice: 1.4429
2025/03/29 20:26:27 - mmengine - INFO - Iter(train) [15450/20000]  base_lr: 2.6382e-05 lr: 2.6382e-05  eta: 2:07:32  time: 1.7445  data_time: 0.0320  memory: 10090  loss: 35.7049  decode.loss_cls: 0.4979  decode.loss_mask: 1.5924  decode.loss_dice: 1.5091  decode.d0.loss_cls: 0.6485  decode.d0.loss_mask: 1.5421  decode.d0.loss_dice: 1.5044  decode.d1.loss_cls: 0.4755  decode.d1.loss_mask: 1.5722  decode.d1.loss_dice: 1.5159  decode.d2.loss_cls: 0.4099  decode.d2.loss_mask: 1.5808  decode.d2.loss_dice: 1.5261  decode.d3.loss_cls: 0.4203  decode.d3.loss_mask: 1.5534  decode.d3.loss_dice: 1.4995  decode.d4.loss_cls: 0.5177  decode.d4.loss_mask: 1.5526  decode.d4.loss_dice: 1.4801  decode.d5.loss_cls: 0.5129  decode.d5.loss_mask: 1.5779  decode.d5.loss_dice: 1.4590  decode.d6.loss_cls: 0.5545  decode.d6.loss_mask: 1.5413  decode.d6.loss_dice: 1.5065  decode.d7.loss_cls: 0.4726  decode.d7.loss_mask: 1.6007  decode.d7.loss_dice: 1.5227  decode.d8.loss_cls: 0.4852  decode.d8.loss_mask: 1.5646  decode.d8.loss_dice: 1.5087
2025/03/29 20:27:55 - mmengine - INFO - Iter(train) [15500/20000]  base_lr: 2.6121e-05 lr: 2.6121e-05  eta: 2:06:09  time: 1.8071  data_time: 0.0329  memory: 10087  loss: 33.4008  decode.loss_cls: 0.3674  decode.loss_mask: 1.4613  decode.loss_dice: 1.5253  decode.d0.loss_cls: 0.4399  decode.d0.loss_mask: 1.4538  decode.d0.loss_dice: 1.5099  decode.d1.loss_cls: 0.4405  decode.d1.loss_mask: 1.4222  decode.d1.loss_dice: 1.4542  decode.d2.loss_cls: 0.4418  decode.d2.loss_mask: 1.4707  decode.d2.loss_dice: 1.4667  decode.d3.loss_cls: 0.4077  decode.d3.loss_mask: 1.4270  decode.d3.loss_dice: 1.4797  decode.d4.loss_cls: 0.4222  decode.d4.loss_mask: 1.4119  decode.d4.loss_dice: 1.4720  decode.d5.loss_cls: 0.4364  decode.d5.loss_mask: 1.4130  decode.d5.loss_dice: 1.4767  decode.d6.loss_cls: 0.4412  decode.d6.loss_mask: 1.4421  decode.d6.loss_dice: 1.4999  decode.d7.loss_cls: 0.4001  decode.d7.loss_mask: 1.3986  decode.d7.loss_dice: 1.4703  decode.d8.loss_cls: 0.3624  decode.d8.loss_mask: 1.4429  decode.d8.loss_dice: 1.5429
2025/03/29 20:29:21 - mmengine - INFO - Iter(train) [15550/20000]  base_lr: 2.5859e-05 lr: 2.5859e-05  eta: 2:04:45  time: 1.6738  data_time: 0.0171  memory: 10102  loss: 29.3590  decode.loss_cls: 0.3280  decode.loss_mask: 1.1625  decode.loss_dice: 1.3731  decode.d0.loss_cls: 0.4595  decode.d0.loss_mask: 1.2022  decode.d0.loss_dice: 1.5124  decode.d1.loss_cls: 0.4166  decode.d1.loss_mask: 1.1863  decode.d1.loss_dice: 1.3853  decode.d2.loss_cls: 0.3726  decode.d2.loss_mask: 1.1754  decode.d2.loss_dice: 1.3827  decode.d3.loss_cls: 0.3166  decode.d3.loss_mask: 1.1506  decode.d3.loss_dice: 1.4190  decode.d4.loss_cls: 0.3086  decode.d4.loss_mask: 1.1958  decode.d4.loss_dice: 1.4247  decode.d5.loss_cls: 0.3248  decode.d5.loss_mask: 1.1685  decode.d5.loss_dice: 1.4062  decode.d6.loss_cls: 0.3241  decode.d6.loss_mask: 1.1805  decode.d6.loss_dice: 1.4044  decode.d7.loss_cls: 0.3399  decode.d7.loss_mask: 1.1692  decode.d7.loss_dice: 1.3710  decode.d8.loss_cls: 0.3496  decode.d8.loss_mask: 1.1778  decode.d8.loss_dice: 1.3711
2025/03/29 20:30:44 - mmengine - INFO - Iter(train) [15600/20000]  base_lr: 2.5598e-05 lr: 2.5598e-05  eta: 2:03:21  time: 1.6697  data_time: 0.0165  memory: 10090  loss: 28.3657  decode.loss_cls: 0.4119  decode.loss_mask: 1.1353  decode.loss_dice: 1.3010  decode.d0.loss_cls: 0.4699  decode.d0.loss_mask: 1.1634  decode.d0.loss_dice: 1.3924  decode.d1.loss_cls: 0.3577  decode.d1.loss_mask: 1.1249  decode.d1.loss_dice: 1.3218  decode.d2.loss_cls: 0.3682  decode.d2.loss_mask: 1.1216  decode.d2.loss_dice: 1.3060  decode.d3.loss_cls: 0.4048  decode.d3.loss_mask: 1.1160  decode.d3.loss_dice: 1.3152  decode.d4.loss_cls: 0.3635  decode.d4.loss_mask: 1.1277  decode.d4.loss_dice: 1.3275  decode.d5.loss_cls: 0.3778  decode.d5.loss_mask: 1.1105  decode.d5.loss_dice: 1.3003  decode.d6.loss_cls: 0.4004  decode.d6.loss_mask: 1.0974  decode.d6.loss_dice: 1.2888  decode.d7.loss_cls: 0.4275  decode.d7.loss_mask: 1.1109  decode.d7.loss_dice: 1.2858  decode.d8.loss_cls: 0.3837  decode.d8.loss_mask: 1.1323  decode.d8.loss_dice: 1.3216
2025/03/29 20:32:08 - mmengine - INFO - Iter(train) [15650/20000]  base_lr: 2.5336e-05 lr: 2.5336e-05  eta: 2:01:57  time: 1.6685  data_time: 0.0164  memory: 10100  loss: 31.3529  decode.loss_cls: 0.3315  decode.loss_mask: 1.3096  decode.loss_dice: 1.4356  decode.d0.loss_cls: 0.3654  decode.d0.loss_mask: 1.4189  decode.d0.loss_dice: 1.5638  decode.d1.loss_cls: 0.3429  decode.d1.loss_mask: 1.3410  decode.d1.loss_dice: 1.4560  decode.d2.loss_cls: 0.3025  decode.d2.loss_mask: 1.3652  decode.d2.loss_dice: 1.4423  decode.d3.loss_cls: 0.2944  decode.d3.loss_mask: 1.3448  decode.d3.loss_dice: 1.4477  decode.d4.loss_cls: 0.3450  decode.d4.loss_mask: 1.3514  decode.d4.loss_dice: 1.4250  decode.d5.loss_cls: 0.2893  decode.d5.loss_mask: 1.3411  decode.d5.loss_dice: 1.4739  decode.d6.loss_cls: 0.3064  decode.d6.loss_mask: 1.3799  decode.d6.loss_dice: 1.4633  decode.d7.loss_cls: 0.2992  decode.d7.loss_mask: 1.3481  decode.d7.loss_dice: 1.4870  decode.d8.loss_cls: 0.3375  decode.d8.loss_mask: 1.3293  decode.d8.loss_dice: 1.4150
2025/03/29 20:33:31 - mmengine - INFO - Iter(train) [15700/20000]  base_lr: 2.5073e-05 lr: 2.5073e-05  eta: 2:00:32  time: 1.6612  data_time: 0.0168  memory: 10141  loss: 31.7006  decode.loss_cls: 0.3771  decode.loss_mask: 1.4035  decode.loss_dice: 1.3835  decode.d0.loss_cls: 0.4936  decode.d0.loss_mask: 1.3724  decode.d0.loss_dice: 1.4099  decode.d1.loss_cls: 0.3601  decode.d1.loss_mask: 1.3904  decode.d1.loss_dice: 1.4022  decode.d2.loss_cls: 0.3713  decode.d2.loss_mask: 1.3683  decode.d2.loss_dice: 1.4142  decode.d3.loss_cls: 0.3806  decode.d3.loss_mask: 1.3772  decode.d3.loss_dice: 1.4140  decode.d4.loss_cls: 0.3851  decode.d4.loss_mask: 1.3555  decode.d4.loss_dice: 1.4068  decode.d5.loss_cls: 0.3951  decode.d5.loss_mask: 1.3922  decode.d5.loss_dice: 1.3753  decode.d6.loss_cls: 0.3935  decode.d6.loss_mask: 1.3598  decode.d6.loss_dice: 1.3682  decode.d7.loss_cls: 0.3490  decode.d7.loss_mask: 1.4012  decode.d7.loss_dice: 1.4062  decode.d8.loss_cls: 0.3893  decode.d8.loss_mask: 1.3902  decode.d8.loss_dice: 1.4150
2025/03/29 20:34:54 - mmengine - INFO - Iter(train) [15750/20000]  base_lr: 2.4811e-05 lr: 2.4811e-05  eta: 1:59:08  time: 1.6719  data_time: 0.0166  memory: 10151  loss: 30.6880  decode.loss_cls: 0.3703  decode.loss_mask: 1.3357  decode.loss_dice: 1.3509  decode.d0.loss_cls: 0.6040  decode.d0.loss_mask: 1.3206  decode.d0.loss_dice: 1.4095  decode.d1.loss_cls: 0.3718  decode.d1.loss_mask: 1.3095  decode.d1.loss_dice: 1.3605  decode.d2.loss_cls: 0.3678  decode.d2.loss_mask: 1.3501  decode.d2.loss_dice: 1.3716  decode.d3.loss_cls: 0.3538  decode.d3.loss_mask: 1.3216  decode.d3.loss_dice: 1.3445  decode.d4.loss_cls: 0.3657  decode.d4.loss_mask: 1.3057  decode.d4.loss_dice: 1.3813  decode.d5.loss_cls: 0.3374  decode.d5.loss_mask: 1.3165  decode.d5.loss_dice: 1.3629  decode.d6.loss_cls: 0.3477  decode.d6.loss_mask: 1.3147  decode.d6.loss_dice: 1.3582  decode.d7.loss_cls: 0.3292  decode.d7.loss_mask: 1.3358  decode.d7.loss_dice: 1.3485  decode.d8.loss_cls: 0.3651  decode.d8.loss_mask: 1.3423  decode.d8.loss_dice: 1.3347
2025/03/29 20:36:18 - mmengine - INFO - Iter(train) [15800/20000]  base_lr: 2.4548e-05 lr: 2.4548e-05  eta: 1:57:44  time: 1.6681  data_time: 0.0165  memory: 10099  loss: 29.2723  decode.loss_cls: 0.3288  decode.loss_mask: 1.2813  decode.loss_dice: 1.2776  decode.d0.loss_cls: 0.4659  decode.d0.loss_mask: 1.3168  decode.d0.loss_dice: 1.3783  decode.d1.loss_cls: 0.2732  decode.d1.loss_mask: 1.3267  decode.d1.loss_dice: 1.3014  decode.d2.loss_cls: 0.2945  decode.d2.loss_mask: 1.2950  decode.d2.loss_dice: 1.3007  decode.d3.loss_cls: 0.3359  decode.d3.loss_mask: 1.2972  decode.d3.loss_dice: 1.3038  decode.d4.loss_cls: 0.3858  decode.d4.loss_mask: 1.2522  decode.d4.loss_dice: 1.2326  decode.d5.loss_cls: 0.3591  decode.d5.loss_mask: 1.2806  decode.d5.loss_dice: 1.2625  decode.d6.loss_cls: 0.3610  decode.d6.loss_mask: 1.2635  decode.d6.loss_dice: 1.2754  decode.d7.loss_cls: 0.3371  decode.d7.loss_mask: 1.3103  decode.d7.loss_dice: 1.2760  decode.d8.loss_cls: 0.3378  decode.d8.loss_mask: 1.2655  decode.d8.loss_dice: 1.2958
2025/03/29 20:37:41 - mmengine - INFO - Iter(train) [15850/20000]  base_lr: 2.4285e-05 lr: 2.4285e-05  eta: 1:56:19  time: 1.6755  data_time: 0.0168  memory: 10151  loss: 32.5271  decode.loss_cls: 0.4531  decode.loss_mask: 1.3639  decode.loss_dice: 1.3964  decode.d0.loss_cls: 0.5532  decode.d0.loss_mask: 1.4024  decode.d0.loss_dice: 1.4540  decode.d1.loss_cls: 0.4600  decode.d1.loss_mask: 1.3777  decode.d1.loss_dice: 1.3897  decode.d2.loss_cls: 0.4347  decode.d2.loss_mask: 1.3646  decode.d2.loss_dice: 1.3778  decode.d3.loss_cls: 0.4417  decode.d3.loss_mask: 1.3959  decode.d3.loss_dice: 1.3832  decode.d4.loss_cls: 0.4514  decode.d4.loss_mask: 1.4066  decode.d4.loss_dice: 1.4142  decode.d5.loss_cls: 0.4863  decode.d5.loss_mask: 1.3820  decode.d5.loss_dice: 1.3803  decode.d6.loss_cls: 0.4340  decode.d6.loss_mask: 1.4050  decode.d6.loss_dice: 1.4079  decode.d7.loss_cls: 0.4482  decode.d7.loss_mask: 1.3991  decode.d7.loss_dice: 1.4298  decode.d8.loss_cls: 0.4799  decode.d8.loss_mask: 1.3538  decode.d8.loss_dice: 1.4002
2025/03/29 20:39:05 - mmengine - INFO - Iter(train) [15900/20000]  base_lr: 2.4021e-05 lr: 2.4021e-05  eta: 1:54:55  time: 1.6739  data_time: 0.0174  memory: 10090  loss: 31.7576  decode.loss_cls: 0.3677  decode.loss_mask: 1.2973  decode.loss_dice: 1.4671  decode.d0.loss_cls: 0.4196  decode.d0.loss_mask: 1.3137  decode.d0.loss_dice: 1.5655  decode.d1.loss_cls: 0.3746  decode.d1.loss_mask: 1.3107  decode.d1.loss_dice: 1.4900  decode.d2.loss_cls: 0.4438  decode.d2.loss_mask: 1.2730  decode.d2.loss_dice: 1.4724  decode.d3.loss_cls: 0.3707  decode.d3.loss_mask: 1.2956  decode.d3.loss_dice: 1.4780  decode.d4.loss_cls: 0.4090  decode.d4.loss_mask: 1.2945  decode.d4.loss_dice: 1.4733  decode.d5.loss_cls: 0.3749  decode.d5.loss_mask: 1.3104  decode.d5.loss_dice: 1.4856  decode.d6.loss_cls: 0.3373  decode.d6.loss_mask: 1.2975  decode.d6.loss_dice: 1.4941  decode.d7.loss_cls: 0.3849  decode.d7.loss_mask: 1.2933  decode.d7.loss_dice: 1.4932  decode.d8.loss_cls: 0.4144  decode.d8.loss_mask: 1.2936  decode.d8.loss_dice: 1.4619
2025/03/29 20:40:29 - mmengine - INFO - Iter(train) [15950/20000]  base_lr: 2.3758e-05 lr: 2.3758e-05  eta: 1:53:31  time: 1.6760  data_time: 0.0176  memory: 10149  loss: 32.9765  decode.loss_cls: 0.3575  decode.loss_mask: 1.4408  decode.loss_dice: 1.4592  decode.d0.loss_cls: 0.4488  decode.d0.loss_mask: 1.4749  decode.d0.loss_dice: 1.5749  decode.d1.loss_cls: 0.4042  decode.d1.loss_mask: 1.4266  decode.d1.loss_dice: 1.4885  decode.d2.loss_cls: 0.3972  decode.d2.loss_mask: 1.4267  decode.d2.loss_dice: 1.4443  decode.d3.loss_cls: 0.3993  decode.d3.loss_mask: 1.4481  decode.d3.loss_dice: 1.4482  decode.d4.loss_cls: 0.3847  decode.d4.loss_mask: 1.4618  decode.d4.loss_dice: 1.4448  decode.d5.loss_cls: 0.3603  decode.d5.loss_mask: 1.4584  decode.d5.loss_dice: 1.4472  decode.d6.loss_cls: 0.3398  decode.d6.loss_mask: 1.4348  decode.d6.loss_dice: 1.4952  decode.d7.loss_cls: 0.3559  decode.d7.loss_mask: 1.4214  decode.d7.loss_dice: 1.4463  decode.d8.loss_cls: 0.4194  decode.d8.loss_mask: 1.4324  decode.d8.loss_dice: 1.4348
2025/03/29 20:41:53 - mmengine - INFO - Exp name: r2u_20250329_122140
2025/03/29 20:41:53 - mmengine - INFO - Iter(train) [16000/20000]  base_lr: 2.3493e-05 lr: 2.3493e-05  eta: 1:52:07  time: 1.6791  data_time: 0.0193  memory: 10088  loss: 33.5200  decode.loss_cls: 0.4340  decode.loss_mask: 1.3757  decode.loss_dice: 1.5042  decode.d0.loss_cls: 0.4759  decode.d0.loss_mask: 1.4535  decode.d0.loss_dice: 1.7021  decode.d1.loss_cls: 0.5071  decode.d1.loss_mask: 1.3627  decode.d1.loss_dice: 1.4950  decode.d2.loss_cls: 0.4444  decode.d2.loss_mask: 1.3803  decode.d2.loss_dice: 1.4826  decode.d3.loss_cls: 0.4888  decode.d3.loss_mask: 1.3615  decode.d3.loss_dice: 1.4616  decode.d4.loss_cls: 0.5007  decode.d4.loss_mask: 1.3487  decode.d4.loss_dice: 1.4490  decode.d5.loss_cls: 0.4654  decode.d5.loss_mask: 1.3625  decode.d5.loss_dice: 1.4732  decode.d6.loss_cls: 0.4602  decode.d6.loss_mask: 1.3642  decode.d6.loss_dice: 1.4750  decode.d7.loss_cls: 0.5146  decode.d7.loss_mask: 1.3752  decode.d7.loss_dice: 1.4712  decode.d8.loss_cls: 0.4293  decode.d8.loss_mask: 1.3936  decode.d8.loss_dice: 1.5079
2025/03/29 20:41:55 - mmengine - INFO - Saving checkpoint at 16000 iterations
2025/03/29 20:42:06 - mmengine - INFO - Iter(val) [  50/2708]    eta: 0:07:25  time: 0.1684  data_time: 0.0018  memory: 1856  
2025/03/29 20:42:14 - mmengine - INFO - Iter(val) [ 100/2708]    eta: 0:07:00  time: 0.1213  data_time: 0.0016  memory: 1856  
2025/03/29 20:42:21 - mmengine - INFO - Iter(val) [ 150/2708]    eta: 0:06:34  time: 0.1708  data_time: 0.0018  memory: 1856  
2025/03/29 20:42:29 - mmengine - INFO - Iter(val) [ 200/2708]    eta: 0:06:30  time: 0.1685  data_time: 0.0021  memory: 1856  
2025/03/29 20:42:37 - mmengine - INFO - Iter(val) [ 250/2708]    eta: 0:06:26  time: 0.1555  data_time: 0.0014  memory: 1856  
2025/03/29 20:42:45 - mmengine - INFO - Iter(val) [ 300/2708]    eta: 0:06:20  time: 0.1616  data_time: 0.0020  memory: 1856  
2025/03/29 20:42:53 - mmengine - INFO - Iter(val) [ 350/2708]    eta: 0:06:16  time: 0.1682  data_time: 0.0016  memory: 1856  
2025/03/29 20:43:02 - mmengine - INFO - Iter(val) [ 400/2708]    eta: 0:06:08  time: 0.1593  data_time: 0.0016  memory: 1856  
2025/03/29 20:43:10 - mmengine - INFO - Iter(val) [ 450/2708]    eta: 0:06:01  time: 0.1677  data_time: 0.0016  memory: 1856  
2025/03/29 20:43:18 - mmengine - INFO - Iter(val) [ 500/2708]    eta: 0:05:54  time: 0.1614  data_time: 0.0019  memory: 1856  
2025/03/29 20:43:26 - mmengine - INFO - Iter(val) [ 550/2708]    eta: 0:05:47  time: 0.1703  data_time: 0.0025  memory: 1856  
2025/03/29 20:43:34 - mmengine - INFO - Iter(val) [ 600/2708]    eta: 0:05:39  time: 0.1699  data_time: 0.0017  memory: 1856  
2025/03/29 20:43:43 - mmengine - INFO - Iter(val) [ 650/2708]    eta: 0:05:32  time: 0.1644  data_time: 0.0016  memory: 1856  
2025/03/29 20:43:49 - mmengine - INFO - Iter(val) [ 700/2708]    eta: 0:05:19  time: 0.1606  data_time: 0.0015  memory: 1856  
2025/03/29 20:43:57 - mmengine - INFO - Iter(val) [ 750/2708]    eta: 0:05:11  time: 0.1562  data_time: 0.0014  memory: 1856  
2025/03/29 20:44:05 - mmengine - INFO - Iter(val) [ 800/2708]    eta: 0:05:04  time: 0.1681  data_time: 0.0018  memory: 1856  
2025/03/29 20:44:14 - mmengine - INFO - Iter(val) [ 850/2708]    eta: 0:04:56  time: 0.1590  data_time: 0.0017  memory: 1856  
2025/03/29 20:44:22 - mmengine - INFO - Iter(val) [ 900/2708]    eta: 0:04:49  time: 0.1683  data_time: 0.0019  memory: 1856  
2025/03/29 20:44:30 - mmengine - INFO - Iter(val) [ 950/2708]    eta: 0:04:41  time: 0.1682  data_time: 0.0018  memory: 1856  
2025/03/29 20:44:38 - mmengine - INFO - Iter(val) [1000/2708]    eta: 0:04:33  time: 0.1589  data_time: 0.0016  memory: 1856  
2025/03/29 20:44:46 - mmengine - INFO - Iter(val) [1050/2708]    eta: 0:04:26  time: 0.1672  data_time: 0.0015  memory: 1856  
2025/03/29 20:44:55 - mmengine - INFO - Iter(val) [1100/2708]    eta: 0:04:18  time: 0.1605  data_time: 0.0023  memory: 1856  
2025/03/29 20:45:03 - mmengine - INFO - Iter(val) [1150/2708]    eta: 0:04:10  time: 0.1669  data_time: 0.0017  memory: 1856  
2025/03/29 20:45:11 - mmengine - INFO - Iter(val) [1200/2708]    eta: 0:04:02  time: 0.1626  data_time: 0.0015  memory: 1856  
2025/03/29 20:45:18 - mmengine - INFO - Iter(val) [1250/2708]    eta: 0:03:53  time: 0.1248  data_time: 0.0017  memory: 1856  
2025/03/29 20:45:26 - mmengine - INFO - Iter(val) [1300/2708]    eta: 0:03:45  time: 0.1605  data_time: 0.0017  memory: 1856  
2025/03/29 20:45:35 - mmengine - INFO - Iter(val) [1350/2708]    eta: 0:03:37  time: 0.1683  data_time: 0.0015  memory: 1856  
2025/03/29 20:45:43 - mmengine - INFO - Iter(val) [1400/2708]    eta: 0:03:30  time: 0.1625  data_time: 0.0017  memory: 1856  
2025/03/29 20:45:51 - mmengine - INFO - Iter(val) [1450/2708]    eta: 0:03:22  time: 0.1593  data_time: 0.0016  memory: 1856  
2025/03/29 20:45:59 - mmengine - INFO - Iter(val) [1500/2708]    eta: 0:03:14  time: 0.1688  data_time: 0.0017  memory: 1856  
2025/03/29 20:46:08 - mmengine - INFO - Iter(val) [1550/2708]    eta: 0:03:06  time: 0.1706  data_time: 0.0018  memory: 1856  
2025/03/29 20:46:16 - mmengine - INFO - Iter(val) [1600/2708]    eta: 0:02:58  time: 0.1661  data_time: 0.0021  memory: 1856  
2025/03/29 20:46:24 - mmengine - INFO - Iter(val) [1650/2708]    eta: 0:02:50  time: 0.1689  data_time: 0.0016  memory: 1856  
2025/03/29 20:46:32 - mmengine - INFO - Iter(val) [1700/2708]    eta: 0:02:42  time: 0.1617  data_time: 0.0016  memory: 1856  
2025/03/29 20:46:40 - mmengine - INFO - Iter(val) [1750/2708]    eta: 0:02:34  time: 0.1563  data_time: 0.0015  memory: 1856  
2025/03/29 20:46:48 - mmengine - INFO - Iter(val) [1800/2708]    eta: 0:02:26  time: 0.0977  data_time: 0.0016  memory: 1856  
2025/03/29 20:46:55 - mmengine - INFO - Iter(val) [1850/2708]    eta: 0:02:17  time: 0.1680  data_time: 0.0021  memory: 1856  
2025/03/29 20:47:03 - mmengine - INFO - Iter(val) [1900/2708]    eta: 0:02:09  time: 0.1647  data_time: 0.0016  memory: 1856  
2025/03/29 20:47:11 - mmengine - INFO - Iter(val) [1950/2708]    eta: 0:02:01  time: 0.1695  data_time: 0.0019  memory: 1856  
2025/03/29 20:47:20 - mmengine - INFO - Iter(val) [2000/2708]    eta: 0:01:53  time: 0.1676  data_time: 0.0016  memory: 1856  
2025/03/29 20:47:28 - mmengine - INFO - Iter(val) [2050/2708]    eta: 0:01:45  time: 0.1645  data_time: 0.0016  memory: 1856  
2025/03/29 20:47:36 - mmengine - INFO - Iter(val) [2100/2708]    eta: 0:01:37  time: 0.1684  data_time: 0.0021  memory: 1856  
2025/03/29 20:47:44 - mmengine - INFO - Iter(val) [2150/2708]    eta: 0:01:29  time: 0.1594  data_time: 0.0016  memory: 1856  
2025/03/29 20:47:52 - mmengine - INFO - Iter(val) [2200/2708]    eta: 0:01:21  time: 0.1565  data_time: 0.0016  memory: 1856  
2025/03/29 20:48:01 - mmengine - INFO - Iter(val) [2250/2708]    eta: 0:01:13  time: 0.1682  data_time: 0.0016  memory: 1856  
2025/03/29 20:48:09 - mmengine - INFO - Iter(val) [2300/2708]    eta: 0:01:05  time: 0.1663  data_time: 0.0015  memory: 1856  
2025/03/29 20:48:17 - mmengine - INFO - Iter(val) [2350/2708]    eta: 0:00:57  time: 0.1672  data_time: 0.0015  memory: 1856  
2025/03/29 20:48:24 - mmengine - INFO - Iter(val) [2400/2708]    eta: 0:00:49  time: 0.1661  data_time: 0.0016  memory: 1856  
2025/03/29 20:48:32 - mmengine - INFO - Iter(val) [2450/2708]    eta: 0:00:41  time: 0.1573  data_time: 0.0015  memory: 1856  
2025/03/29 20:48:40 - mmengine - INFO - Iter(val) [2500/2708]    eta: 0:00:33  time: 0.1686  data_time: 0.0015  memory: 1856  
2025/03/29 20:48:49 - mmengine - INFO - Iter(val) [2550/2708]    eta: 0:00:25  time: 0.1675  data_time: 0.0016  memory: 1856  
2025/03/29 20:48:57 - mmengine - INFO - Iter(val) [2600/2708]    eta: 0:00:17  time: 0.1746  data_time: 0.0017  memory: 1856  
2025/03/29 20:49:05 - mmengine - INFO - Iter(val) [2650/2708]    eta: 0:00:09  time: 0.1683  data_time: 0.0015  memory: 1856  
2025/03/29 20:49:13 - mmengine - INFO - Iter(val) [2700/2708]    eta: 0:00:01  time: 0.1613  data_time: 0.0023  memory: 1856  
2025/03/29 20:49:15 - mmengine - INFO - per class results:
2025/03/29 20:49:15 - mmengine - INFO - 
+--------------+-------+-------+
|    Class     |  IoU  |  Acc  |
+--------------+-------+-------+
|  background  | 40.88 | 64.47 |
|   building   | 66.37 | 84.66 |
|     road     | 55.65 | 72.57 |
|    water     | 74.82 | 84.85 |
|    barren    | 52.03 | 69.88 |
|    forest    | 55.07 |  71.0 |
| agricultural | 59.02 | 63.34 |
+--------------+-------+-------+
2025/03/29 20:49:15 - mmengine - INFO - Iter(val) [2708/2708]    aAcc: 70.7400  mIoU: 57.6900  mAcc: 72.9700  data_time: 0.0018  time: 0.1611
2025/03/29 20:50:38 - mmengine - INFO - Iter(train) [16050/20000]  base_lr: 2.3229e-05 lr: 2.3229e-05  eta: 1:50:42  time: 1.6817  data_time: 0.0189  memory: 10137  loss: 32.3703  decode.loss_cls: 0.4744  decode.loss_mask: 1.2811  decode.loss_dice: 1.4972  decode.d0.loss_cls: 0.5607  decode.d0.loss_mask: 1.2713  decode.d0.loss_dice: 1.6116  decode.d1.loss_cls: 0.5277  decode.d1.loss_mask: 1.2190  decode.d1.loss_dice: 1.4810  decode.d2.loss_cls: 0.4186  decode.d2.loss_mask: 1.2711  decode.d2.loss_dice: 1.4908  decode.d3.loss_cls: 0.4539  decode.d3.loss_mask: 1.2499  decode.d3.loss_dice: 1.4766  decode.d4.loss_cls: 0.4829  decode.d4.loss_mask: 1.2731  decode.d4.loss_dice: 1.4755  decode.d5.loss_cls: 0.4839  decode.d5.loss_mask: 1.2487  decode.d5.loss_dice: 1.4979  decode.d6.loss_cls: 0.4093  decode.d6.loss_mask: 1.2962  decode.d6.loss_dice: 1.4761  decode.d7.loss_cls: 0.4939  decode.d7.loss_mask: 1.2644  decode.d7.loss_dice: 1.5013  decode.d8.loss_cls: 0.4437  decode.d8.loss_mask: 1.2690  decode.d8.loss_dice: 1.4696
2025/03/29 20:52:02 - mmengine - INFO - Iter(train) [16100/20000]  base_lr: 2.2964e-05 lr: 2.2964e-05  eta: 1:49:18  time: 1.6750  data_time: 0.0177  memory: 10095  loss: 35.6523  decode.loss_cls: 0.4137  decode.loss_mask: 1.5998  decode.loss_dice: 1.5343  decode.d0.loss_cls: 0.5852  decode.d0.loss_mask: 1.6039  decode.d0.loss_dice: 1.5734  decode.d1.loss_cls: 0.4711  decode.d1.loss_mask: 1.5967  decode.d1.loss_dice: 1.5179  decode.d2.loss_cls: 0.4359  decode.d2.loss_mask: 1.6167  decode.d2.loss_dice: 1.5130  decode.d3.loss_cls: 0.4064  decode.d3.loss_mask: 1.6359  decode.d3.loss_dice: 1.5257  decode.d4.loss_cls: 0.4160  decode.d4.loss_mask: 1.5998  decode.d4.loss_dice: 1.5052  decode.d5.loss_cls: 0.4106  decode.d5.loss_mask: 1.5903  decode.d5.loss_dice: 1.5087  decode.d6.loss_cls: 0.4046  decode.d6.loss_mask: 1.6375  decode.d6.loss_dice: 1.5090  decode.d7.loss_cls: 0.4349  decode.d7.loss_mask: 1.6387  decode.d7.loss_dice: 1.4693  decode.d8.loss_cls: 0.4163  decode.d8.loss_mask: 1.6077  decode.d8.loss_dice: 1.4743
2025/03/29 20:53:28 - mmengine - INFO - Iter(train) [16150/20000]  base_lr: 2.2699e-05 lr: 2.2699e-05  eta: 1:47:55  time: 1.6748  data_time: 0.0176  memory: 10084  loss: 33.1352  decode.loss_cls: 0.3444  decode.loss_mask: 1.4963  decode.loss_dice: 1.4459  decode.d0.loss_cls: 0.5614  decode.d0.loss_mask: 1.4847  decode.d0.loss_dice: 1.5134  decode.d1.loss_cls: 0.4188  decode.d1.loss_mask: 1.4480  decode.d1.loss_dice: 1.4505  decode.d2.loss_cls: 0.3836  decode.d2.loss_mask: 1.4653  decode.d2.loss_dice: 1.4253  decode.d3.loss_cls: 0.4333  decode.d3.loss_mask: 1.4566  decode.d3.loss_dice: 1.4245  decode.d4.loss_cls: 0.3891  decode.d4.loss_mask: 1.4606  decode.d4.loss_dice: 1.4361  decode.d5.loss_cls: 0.3409  decode.d5.loss_mask: 1.4985  decode.d5.loss_dice: 1.4314  decode.d6.loss_cls: 0.3513  decode.d6.loss_mask: 1.4921  decode.d6.loss_dice: 1.4286  decode.d7.loss_cls: 0.3724  decode.d7.loss_mask: 1.4629  decode.d7.loss_dice: 1.4231  decode.d8.loss_cls: 0.3518  decode.d8.loss_mask: 1.5000  decode.d8.loss_dice: 1.4446
2025/03/29 20:54:52 - mmengine - INFO - Iter(train) [16200/20000]  base_lr: 2.2434e-05 lr: 2.2434e-05  eta: 1:46:31  time: 1.6694  data_time: 0.0170  memory: 10145  loss: 30.4963  decode.loss_cls: 0.2841  decode.loss_mask: 1.3658  decode.loss_dice: 1.3475  decode.d0.loss_cls: 0.4024  decode.d0.loss_mask: 1.4586  decode.d0.loss_dice: 1.4451  decode.d1.loss_cls: 0.3371  decode.d1.loss_mask: 1.3463  decode.d1.loss_dice: 1.3471  decode.d2.loss_cls: 0.2853  decode.d2.loss_mask: 1.3509  decode.d2.loss_dice: 1.3524  decode.d3.loss_cls: 0.2701  decode.d3.loss_mask: 1.4024  decode.d3.loss_dice: 1.3833  decode.d4.loss_cls: 0.2928  decode.d4.loss_mask: 1.3799  decode.d4.loss_dice: 1.3510  decode.d5.loss_cls: 0.3115  decode.d5.loss_mask: 1.3859  decode.d5.loss_dice: 1.3485  decode.d6.loss_cls: 0.2812  decode.d6.loss_mask: 1.4184  decode.d6.loss_dice: 1.3559  decode.d7.loss_cls: 0.2927  decode.d7.loss_mask: 1.3593  decode.d7.loss_dice: 1.3531  decode.d8.loss_cls: 0.2990  decode.d8.loss_mask: 1.3386  decode.d8.loss_dice: 1.3502
2025/03/29 20:56:15 - mmengine - INFO - Iter(train) [16250/20000]  base_lr: 2.2168e-05 lr: 2.2168e-05  eta: 1:45:06  time: 1.6952  data_time: 0.0184  memory: 10144  loss: 33.6927  decode.loss_cls: 0.4628  decode.loss_mask: 1.3964  decode.loss_dice: 1.5300  decode.d0.loss_cls: 0.5310  decode.d0.loss_mask: 1.4139  decode.d0.loss_dice: 1.6279  decode.d1.loss_cls: 0.4602  decode.d1.loss_mask: 1.3960  decode.d1.loss_dice: 1.5257  decode.d2.loss_cls: 0.4254  decode.d2.loss_mask: 1.4104  decode.d2.loss_dice: 1.4822  decode.d3.loss_cls: 0.4252  decode.d3.loss_mask: 1.3860  decode.d3.loss_dice: 1.4992  decode.d4.loss_cls: 0.4564  decode.d4.loss_mask: 1.4197  decode.d4.loss_dice: 1.5215  decode.d5.loss_cls: 0.4444  decode.d5.loss_mask: 1.3670  decode.d5.loss_dice: 1.4817  decode.d6.loss_cls: 0.4525  decode.d6.loss_mask: 1.3867  decode.d6.loss_dice: 1.4946  decode.d7.loss_cls: 0.4581  decode.d7.loss_mask: 1.4040  decode.d7.loss_dice: 1.4864  decode.d8.loss_cls: 0.4718  decode.d8.loss_mask: 1.3625  decode.d8.loss_dice: 1.5132
2025/03/29 20:57:39 - mmengine - INFO - Iter(train) [16300/20000]  base_lr: 2.1902e-05 lr: 2.1902e-05  eta: 1:43:42  time: 1.6661  data_time: 0.0167  memory: 10151  loss: 30.3521  decode.loss_cls: 0.3644  decode.loss_mask: 1.2691  decode.loss_dice: 1.3708  decode.d0.loss_cls: 0.5004  decode.d0.loss_mask: 1.2971  decode.d0.loss_dice: 1.5075  decode.d1.loss_cls: 0.4195  decode.d1.loss_mask: 1.2635  decode.d1.loss_dice: 1.3786  decode.d2.loss_cls: 0.3838  decode.d2.loss_mask: 1.2468  decode.d2.loss_dice: 1.3742  decode.d3.loss_cls: 0.3742  decode.d3.loss_mask: 1.2709  decode.d3.loss_dice: 1.3804  decode.d4.loss_cls: 0.3791  decode.d4.loss_mask: 1.2388  decode.d4.loss_dice: 1.3770  decode.d5.loss_cls: 0.3720  decode.d5.loss_mask: 1.2552  decode.d5.loss_dice: 1.3778  decode.d6.loss_cls: 0.3756  decode.d6.loss_mask: 1.2432  decode.d6.loss_dice: 1.3692  decode.d7.loss_cls: 0.3591  decode.d7.loss_mask: 1.2583  decode.d7.loss_dice: 1.3722  decode.d8.loss_cls: 0.3531  decode.d8.loss_mask: 1.2502  decode.d8.loss_dice: 1.3701
2025/03/29 20:59:02 - mmengine - INFO - Iter(train) [16350/20000]  base_lr: 2.1635e-05 lr: 2.1635e-05  eta: 1:42:18  time: 1.6704  data_time: 0.0169  memory: 10143  loss: 29.8816  decode.loss_cls: 0.3023  decode.loss_mask: 1.2831  decode.loss_dice: 1.3794  decode.d0.loss_cls: 0.3856  decode.d0.loss_mask: 1.3332  decode.d0.loss_dice: 1.4782  decode.d1.loss_cls: 0.3203  decode.d1.loss_mask: 1.3092  decode.d1.loss_dice: 1.4099  decode.d2.loss_cls: 0.2784  decode.d2.loss_mask: 1.3041  decode.d2.loss_dice: 1.3712  decode.d3.loss_cls: 0.2890  decode.d3.loss_mask: 1.3050  decode.d3.loss_dice: 1.3760  decode.d4.loss_cls: 0.2716  decode.d4.loss_mask: 1.3006  decode.d4.loss_dice: 1.3827  decode.d5.loss_cls: 0.2959  decode.d5.loss_mask: 1.2738  decode.d5.loss_dice: 1.3573  decode.d6.loss_cls: 0.2939  decode.d6.loss_mask: 1.2855  decode.d6.loss_dice: 1.3722  decode.d7.loss_cls: 0.3000  decode.d7.loss_mask: 1.2844  decode.d7.loss_dice: 1.3935  decode.d8.loss_cls: 0.2997  decode.d8.loss_mask: 1.2824  decode.d8.loss_dice: 1.3631
2025/03/29 21:00:26 - mmengine - INFO - Iter(train) [16400/20000]  base_lr: 2.1368e-05 lr: 2.1368e-05  eta: 1:40:54  time: 1.6710  data_time: 0.0167  memory: 10085  loss: 30.3826  decode.loss_cls: 0.2832  decode.loss_mask: 1.3815  decode.loss_dice: 1.3641  decode.d0.loss_cls: 0.4467  decode.d0.loss_mask: 1.3831  decode.d0.loss_dice: 1.3903  decode.d1.loss_cls: 0.3846  decode.d1.loss_mask: 1.3098  decode.d1.loss_dice: 1.3224  decode.d2.loss_cls: 0.3019  decode.d2.loss_mask: 1.3856  decode.d2.loss_dice: 1.3447  decode.d3.loss_cls: 0.3205  decode.d3.loss_mask: 1.3342  decode.d3.loss_dice: 1.3350  decode.d4.loss_cls: 0.3011  decode.d4.loss_mask: 1.3712  decode.d4.loss_dice: 1.3778  decode.d5.loss_cls: 0.2878  decode.d5.loss_mask: 1.3590  decode.d5.loss_dice: 1.3660  decode.d6.loss_cls: 0.2573  decode.d6.loss_mask: 1.3592  decode.d6.loss_dice: 1.3756  decode.d7.loss_cls: 0.2661  decode.d7.loss_mask: 1.3788  decode.d7.loss_dice: 1.3797  decode.d8.loss_cls: 0.3110  decode.d8.loss_mask: 1.3619  decode.d8.loss_dice: 1.3424
2025/03/29 21:01:50 - mmengine - INFO - Iter(train) [16450/20000]  base_lr: 2.1101e-05 lr: 2.1101e-05  eta: 1:39:30  time: 1.6744  data_time: 0.0164  memory: 10084  loss: 28.9735  decode.loss_cls: 0.3840  decode.loss_mask: 1.2593  decode.loss_dice: 1.2534  decode.d0.loss_cls: 0.4480  decode.d0.loss_mask: 1.2645  decode.d0.loss_dice: 1.3491  decode.d1.loss_cls: 0.4091  decode.d1.loss_mask: 1.2585  decode.d1.loss_dice: 1.2703  decode.d2.loss_cls: 0.3875  decode.d2.loss_mask: 1.2293  decode.d2.loss_dice: 1.2700  decode.d3.loss_cls: 0.3724  decode.d3.loss_mask: 1.2666  decode.d3.loss_dice: 1.2529  decode.d4.loss_cls: 0.3921  decode.d4.loss_mask: 1.1807  decode.d4.loss_dice: 1.2315  decode.d5.loss_cls: 0.3829  decode.d5.loss_mask: 1.2144  decode.d5.loss_dice: 1.2833  decode.d6.loss_cls: 0.3964  decode.d6.loss_mask: 1.2244  decode.d6.loss_dice: 1.2619  decode.d7.loss_cls: 0.4011  decode.d7.loss_mask: 1.2283  decode.d7.loss_dice: 1.2242  decode.d8.loss_cls: 0.4102  decode.d8.loss_mask: 1.2231  decode.d8.loss_dice: 1.2441
2025/03/29 21:03:14 - mmengine - INFO - Iter(train) [16500/20000]  base_lr: 2.0833e-05 lr: 2.0833e-05  eta: 1:38:05  time: 1.6685  data_time: 0.0166  memory: 10087  loss: 34.9215  decode.loss_cls: 0.4700  decode.loss_mask: 1.4970  decode.loss_dice: 1.4492  decode.d0.loss_cls: 0.5062  decode.d0.loss_mask: 1.5839  decode.d0.loss_dice: 1.6146  decode.d1.loss_cls: 0.4579  decode.d1.loss_mask: 1.5771  decode.d1.loss_dice: 1.4939  decode.d2.loss_cls: 0.4247  decode.d2.loss_mask: 1.5488  decode.d2.loss_dice: 1.4876  decode.d3.loss_cls: 0.4654  decode.d3.loss_mask: 1.5338  decode.d3.loss_dice: 1.4784  decode.d4.loss_cls: 0.4533  decode.d4.loss_mask: 1.5532  decode.d4.loss_dice: 1.4767  decode.d5.loss_cls: 0.4506  decode.d5.loss_mask: 1.5672  decode.d5.loss_dice: 1.4518  decode.d6.loss_cls: 0.4586  decode.d6.loss_mask: 1.5209  decode.d6.loss_dice: 1.4596  decode.d7.loss_cls: 0.4957  decode.d7.loss_mask: 1.5397  decode.d7.loss_dice: 1.4409  decode.d8.loss_cls: 0.4341  decode.d8.loss_mask: 1.5645  decode.d8.loss_dice: 1.4662
2025/03/29 21:04:37 - mmengine - INFO - Iter(train) [16550/20000]  base_lr: 2.0565e-05 lr: 2.0565e-05  eta: 1:36:41  time: 1.6718  data_time: 0.0177  memory: 10088  loss: 29.8500  decode.loss_cls: 0.3356  decode.loss_mask: 1.2974  decode.loss_dice: 1.3534  decode.d0.loss_cls: 0.4092  decode.d0.loss_mask: 1.3136  decode.d0.loss_dice: 1.4516  decode.d1.loss_cls: 0.3520  decode.d1.loss_mask: 1.3033  decode.d1.loss_dice: 1.3815  decode.d2.loss_cls: 0.3251  decode.d2.loss_mask: 1.2845  decode.d2.loss_dice: 1.3733  decode.d3.loss_cls: 0.3370  decode.d3.loss_mask: 1.2893  decode.d3.loss_dice: 1.3276  decode.d4.loss_cls: 0.3410  decode.d4.loss_mask: 1.2692  decode.d4.loss_dice: 1.3242  decode.d5.loss_cls: 0.3250  decode.d5.loss_mask: 1.2722  decode.d5.loss_dice: 1.3388  decode.d6.loss_cls: 0.3710  decode.d6.loss_mask: 1.2483  decode.d6.loss_dice: 1.3242  decode.d7.loss_cls: 0.3073  decode.d7.loss_mask: 1.2642  decode.d7.loss_dice: 1.3388  decode.d8.loss_cls: 0.3168  decode.d8.loss_mask: 1.3200  decode.d8.loss_dice: 1.3546
2025/03/29 21:06:01 - mmengine - INFO - Iter(train) [16600/20000]  base_lr: 2.0297e-05 lr: 2.0297e-05  eta: 1:35:17  time: 1.6750  data_time: 0.0166  memory: 10148  loss: 33.0807  decode.loss_cls: 0.3581  decode.loss_mask: 1.5097  decode.loss_dice: 1.4449  decode.d0.loss_cls: 0.4800  decode.d0.loss_mask: 1.4680  decode.d0.loss_dice: 1.5278  decode.d1.loss_cls: 0.3696  decode.d1.loss_mask: 1.4153  decode.d1.loss_dice: 1.4918  decode.d2.loss_cls: 0.3385  decode.d2.loss_mask: 1.4282  decode.d2.loss_dice: 1.4558  decode.d3.loss_cls: 0.3374  decode.d3.loss_mask: 1.4604  decode.d3.loss_dice: 1.4827  decode.d4.loss_cls: 0.3070  decode.d4.loss_mask: 1.4654  decode.d4.loss_dice: 1.5004  decode.d5.loss_cls: 0.3806  decode.d5.loss_mask: 1.4747  decode.d5.loss_dice: 1.4625  decode.d6.loss_cls: 0.3292  decode.d6.loss_mask: 1.4962  decode.d6.loss_dice: 1.5034  decode.d7.loss_cls: 0.3768  decode.d7.loss_mask: 1.4498  decode.d7.loss_dice: 1.4552  decode.d8.loss_cls: 0.4025  decode.d8.loss_mask: 1.4523  decode.d8.loss_dice: 1.4565
2025/03/29 21:07:25 - mmengine - INFO - Iter(train) [16650/20000]  base_lr: 2.0028e-05 lr: 2.0028e-05  eta: 1:33:53  time: 1.6701  data_time: 0.0159  memory: 10146  loss: 27.2569  decode.loss_cls: 0.3252  decode.loss_mask: 1.1674  decode.loss_dice: 1.2429  decode.d0.loss_cls: 0.4673  decode.d0.loss_mask: 1.1399  decode.d0.loss_dice: 1.3328  decode.d1.loss_cls: 0.3160  decode.d1.loss_mask: 1.1481  decode.d1.loss_dice: 1.2706  decode.d2.loss_cls: 0.3083  decode.d2.loss_mask: 1.1416  decode.d2.loss_dice: 1.2476  decode.d3.loss_cls: 0.2822  decode.d3.loss_mask: 1.1722  decode.d3.loss_dice: 1.2722  decode.d4.loss_cls: 0.3003  decode.d4.loss_mask: 1.1411  decode.d4.loss_dice: 1.2568  decode.d5.loss_cls: 0.3115  decode.d5.loss_mask: 1.1124  decode.d5.loss_dice: 1.2399  decode.d6.loss_cls: 0.2941  decode.d6.loss_mask: 1.1303  decode.d6.loss_dice: 1.2759  decode.d7.loss_cls: 0.2886  decode.d7.loss_mask: 1.1147  decode.d7.loss_dice: 1.2744  decode.d8.loss_cls: 0.3510  decode.d8.loss_mask: 1.1259  decode.d8.loss_dice: 1.2055
2025/03/29 21:08:48 - mmengine - INFO - Iter(train) [16700/20000]  base_lr: 1.9759e-05 lr: 1.9759e-05  eta: 1:32:29  time: 1.6680  data_time: 0.0156  memory: 10094  loss: 32.9749  decode.loss_cls: 0.2755  decode.loss_mask: 1.4835  decode.loss_dice: 1.4809  decode.d0.loss_cls: 0.4831  decode.d0.loss_mask: 1.4708  decode.d0.loss_dice: 1.5730  decode.d1.loss_cls: 0.3283  decode.d1.loss_mask: 1.4542  decode.d1.loss_dice: 1.5058  decode.d2.loss_cls: 0.2699  decode.d2.loss_mask: 1.4840  decode.d2.loss_dice: 1.4932  decode.d3.loss_cls: 0.2871  decode.d3.loss_mask: 1.4726  decode.d3.loss_dice: 1.4728  decode.d4.loss_cls: 0.2990  decode.d4.loss_mask: 1.5151  decode.d4.loss_dice: 1.5044  decode.d5.loss_cls: 0.3412  decode.d5.loss_mask: 1.4986  decode.d5.loss_dice: 1.4849  decode.d6.loss_cls: 0.3236  decode.d6.loss_mask: 1.4835  decode.d6.loss_dice: 1.4984  decode.d7.loss_cls: 0.3062  decode.d7.loss_mask: 1.4677  decode.d7.loss_dice: 1.4959  decode.d8.loss_cls: 0.2984  decode.d8.loss_mask: 1.4493  decode.d8.loss_dice: 1.4739
2025/03/29 21:10:15 - mmengine - INFO - Iter(train) [16750/20000]  base_lr: 1.9489e-05 lr: 1.9489e-05  eta: 1:31:05  time: 1.7929  data_time: 0.0168  memory: 10092  loss: 29.3049  decode.loss_cls: 0.2436  decode.loss_mask: 1.3148  decode.loss_dice: 1.2797  decode.d0.loss_cls: 0.4396  decode.d0.loss_mask: 1.3934  decode.d0.loss_dice: 1.3982  decode.d1.loss_cls: 0.2922  decode.d1.loss_mask: 1.3402  decode.d1.loss_dice: 1.2747  decode.d2.loss_cls: 0.2753  decode.d2.loss_mask: 1.3029  decode.d2.loss_dice: 1.3010  decode.d3.loss_cls: 0.2113  decode.d3.loss_mask: 1.3512  decode.d3.loss_dice: 1.3409  decode.d4.loss_cls: 0.2914  decode.d4.loss_mask: 1.2752  decode.d4.loss_dice: 1.3063  decode.d5.loss_cls: 0.3097  decode.d5.loss_mask: 1.2893  decode.d5.loss_dice: 1.3073  decode.d6.loss_cls: 0.3063  decode.d6.loss_mask: 1.2911  decode.d6.loss_dice: 1.3242  decode.d7.loss_cls: 0.2577  decode.d7.loss_mask: 1.3197  decode.d7.loss_dice: 1.3473  decode.d8.loss_cls: 0.2832  decode.d8.loss_mask: 1.3144  decode.d8.loss_dice: 1.3229
2025/03/29 21:11:45 - mmengine - INFO - Iter(train) [16800/20000]  base_lr: 1.9219e-05 lr: 1.9219e-05  eta: 1:29:42  time: 1.8038  data_time: 0.0164  memory: 10089  loss: 31.6897  decode.loss_cls: 0.3669  decode.loss_mask: 1.3510  decode.loss_dice: 1.4381  decode.d0.loss_cls: 0.5152  decode.d0.loss_mask: 1.3535  decode.d0.loss_dice: 1.5025  decode.d1.loss_cls: 0.4795  decode.d1.loss_mask: 1.3155  decode.d1.loss_dice: 1.3595  decode.d2.loss_cls: 0.4435  decode.d2.loss_mask: 1.3232  decode.d2.loss_dice: 1.3992  decode.d3.loss_cls: 0.4193  decode.d3.loss_mask: 1.3165  decode.d3.loss_dice: 1.4473  decode.d4.loss_cls: 0.4300  decode.d4.loss_mask: 1.3165  decode.d4.loss_dice: 1.3818  decode.d5.loss_cls: 0.3913  decode.d5.loss_mask: 1.3483  decode.d5.loss_dice: 1.4104  decode.d6.loss_cls: 0.4269  decode.d6.loss_mask: 1.3510  decode.d6.loss_dice: 1.3602  decode.d7.loss_cls: 0.4560  decode.d7.loss_mask: 1.3187  decode.d7.loss_dice: 1.3737  decode.d8.loss_cls: 0.3489  decode.d8.loss_mask: 1.3472  decode.d8.loss_dice: 1.3980
2025/03/29 21:13:14 - mmengine - INFO - Iter(train) [16850/20000]  base_lr: 1.8948e-05 lr: 1.8948e-05  eta: 1:28:19  time: 1.8132  data_time: 0.0176  memory: 10087  loss: 30.6727  decode.loss_cls: 0.3531  decode.loss_mask: 1.3412  decode.loss_dice: 1.3841  decode.d0.loss_cls: 0.4520  decode.d0.loss_mask: 1.3357  decode.d0.loss_dice: 1.4553  decode.d1.loss_cls: 0.3542  decode.d1.loss_mask: 1.3145  decode.d1.loss_dice: 1.3782  decode.d2.loss_cls: 0.3263  decode.d2.loss_mask: 1.3428  decode.d2.loss_dice: 1.3865  decode.d3.loss_cls: 0.3591  decode.d3.loss_mask: 1.2955  decode.d3.loss_dice: 1.3594  decode.d4.loss_cls: 0.3607  decode.d4.loss_mask: 1.3183  decode.d4.loss_dice: 1.3798  decode.d5.loss_cls: 0.3154  decode.d5.loss_mask: 1.3359  decode.d5.loss_dice: 1.3661  decode.d6.loss_cls: 0.3321  decode.d6.loss_mask: 1.3102  decode.d6.loss_dice: 1.3835  decode.d7.loss_cls: 0.3395  decode.d7.loss_mask: 1.3232  decode.d7.loss_dice: 1.3674  decode.d8.loss_cls: 0.3593  decode.d8.loss_mask: 1.3673  decode.d8.loss_dice: 1.3762
2025/03/29 21:14:44 - mmengine - INFO - Iter(train) [16900/20000]  base_lr: 1.8677e-05 lr: 1.8677e-05  eta: 1:26:56  time: 1.8004  data_time: 0.0158  memory: 10148  loss: 29.0619  decode.loss_cls: 0.4021  decode.loss_mask: 1.1855  decode.loss_dice: 1.3004  decode.d0.loss_cls: 0.5161  decode.d0.loss_mask: 1.2035  decode.d0.loss_dice: 1.3364  decode.d1.loss_cls: 0.3863  decode.d1.loss_mask: 1.1877  decode.d1.loss_dice: 1.3273  decode.d2.loss_cls: 0.3637  decode.d2.loss_mask: 1.1809  decode.d2.loss_dice: 1.3307  decode.d3.loss_cls: 0.3456  decode.d3.loss_mask: 1.2170  decode.d3.loss_dice: 1.3256  decode.d4.loss_cls: 0.3662  decode.d4.loss_mask: 1.2024  decode.d4.loss_dice: 1.3193  decode.d5.loss_cls: 0.3954  decode.d5.loss_mask: 1.2021  decode.d5.loss_dice: 1.3156  decode.d6.loss_cls: 0.3842  decode.d6.loss_mask: 1.2209  decode.d6.loss_dice: 1.3178  decode.d7.loss_cls: 0.3836  decode.d7.loss_mask: 1.1654  decode.d7.loss_dice: 1.2986  decode.d8.loss_cls: 0.4028  decode.d8.loss_mask: 1.1709  decode.d8.loss_dice: 1.3079
2025/03/29 21:16:14 - mmengine - INFO - Iter(train) [16950/20000]  base_lr: 1.8406e-05 lr: 1.8406e-05  eta: 1:25:33  time: 1.8011  data_time: 0.0156  memory: 10076  loss: 33.3837  decode.loss_cls: 0.5356  decode.loss_mask: 1.3750  decode.loss_dice: 1.4735  decode.d0.loss_cls: 0.5953  decode.d0.loss_mask: 1.3887  decode.d0.loss_dice: 1.5083  decode.d1.loss_cls: 0.5043  decode.d1.loss_mask: 1.4341  decode.d1.loss_dice: 1.4317  decode.d2.loss_cls: 0.4810  decode.d2.loss_mask: 1.4105  decode.d2.loss_dice: 1.4163  decode.d3.loss_cls: 0.5116  decode.d3.loss_mask: 1.3856  decode.d3.loss_dice: 1.4285  decode.d4.loss_cls: 0.5516  decode.d4.loss_mask: 1.3602  decode.d4.loss_dice: 1.3746  decode.d5.loss_cls: 0.5625  decode.d5.loss_mask: 1.3184  decode.d5.loss_dice: 1.3985  decode.d6.loss_cls: 0.5178  decode.d6.loss_mask: 1.3554  decode.d6.loss_dice: 1.4223  decode.d7.loss_cls: 0.5347  decode.d7.loss_mask: 1.3644  decode.d7.loss_dice: 1.4026  decode.d8.loss_cls: 0.5364  decode.d8.loss_mask: 1.4027  decode.d8.loss_dice: 1.4016
2025/03/29 21:17:44 - mmengine - INFO - Exp name: r2u_20250329_122140
2025/03/29 21:17:44 - mmengine - INFO - Iter(train) [17000/20000]  base_lr: 1.8134e-05 lr: 1.8134e-05  eta: 1:24:10  time: 1.7817  data_time: 0.0155  memory: 10084  loss: 32.5112  decode.loss_cls: 0.3733  decode.loss_mask: 1.4200  decode.loss_dice: 1.4811  decode.d0.loss_cls: 0.5713  decode.d0.loss_mask: 1.3901  decode.d0.loss_dice: 1.5238  decode.d1.loss_cls: 0.3856  decode.d1.loss_mask: 1.4238  decode.d1.loss_dice: 1.4892  decode.d2.loss_cls: 0.3970  decode.d2.loss_mask: 1.3583  decode.d2.loss_dice: 1.4400  decode.d3.loss_cls: 0.4168  decode.d3.loss_mask: 1.3550  decode.d3.loss_dice: 1.4737  decode.d4.loss_cls: 0.3973  decode.d4.loss_mask: 1.4048  decode.d4.loss_dice: 1.4441  decode.d5.loss_cls: 0.3741  decode.d5.loss_mask: 1.3569  decode.d5.loss_dice: 1.4386  decode.d6.loss_cls: 0.3577  decode.d6.loss_mask: 1.3477  decode.d6.loss_dice: 1.4143  decode.d7.loss_cls: 0.3922  decode.d7.loss_mask: 1.3879  decode.d7.loss_dice: 1.4562  decode.d8.loss_cls: 0.3883  decode.d8.loss_mask: 1.3814  decode.d8.loss_dice: 1.4706
2025/03/29 21:19:14 - mmengine - INFO - Iter(train) [17050/20000]  base_lr: 1.7862e-05 lr: 1.7862e-05  eta: 1:22:47  time: 1.7932  data_time: 0.0182  memory: 10089  loss: 33.3827  decode.loss_cls: 0.4581  decode.loss_mask: 1.4018  decode.loss_dice: 1.4479  decode.d0.loss_cls: 0.5318  decode.d0.loss_mask: 1.4491  decode.d0.loss_dice: 1.5608  decode.d1.loss_cls: 0.4135  decode.d1.loss_mask: 1.4488  decode.d1.loss_dice: 1.4784  decode.d2.loss_cls: 0.3865  decode.d2.loss_mask: 1.4437  decode.d2.loss_dice: 1.5178  decode.d3.loss_cls: 0.4022  decode.d3.loss_mask: 1.4700  decode.d3.loss_dice: 1.4915  decode.d4.loss_cls: 0.3647  decode.d4.loss_mask: 1.4482  decode.d4.loss_dice: 1.4856  decode.d5.loss_cls: 0.3922  decode.d5.loss_mask: 1.4520  decode.d5.loss_dice: 1.4975  decode.d6.loss_cls: 0.3657  decode.d6.loss_mask: 1.4228  decode.d6.loss_dice: 1.4838  decode.d7.loss_cls: 0.3588  decode.d7.loss_mask: 1.4306  decode.d7.loss_dice: 1.4721  decode.d8.loss_cls: 0.4103  decode.d8.loss_mask: 1.4082  decode.d8.loss_dice: 1.4882
2025/03/29 21:20:39 - mmengine - INFO - Iter(train) [17100/20000]  base_lr: 1.7589e-05 lr: 1.7589e-05  eta: 1:21:23  time: 1.6586  data_time: 0.0165  memory: 10092  loss: 32.8778  decode.loss_cls: 0.4420  decode.loss_mask: 1.3820  decode.loss_dice: 1.4251  decode.d0.loss_cls: 0.4835  decode.d0.loss_mask: 1.4786  decode.d0.loss_dice: 1.5632  decode.d1.loss_cls: 0.4384  decode.d1.loss_mask: 1.3995  decode.d1.loss_dice: 1.4786  decode.d2.loss_cls: 0.4017  decode.d2.loss_mask: 1.3955  decode.d2.loss_dice: 1.4870  decode.d3.loss_cls: 0.4240  decode.d3.loss_mask: 1.3814  decode.d3.loss_dice: 1.4222  decode.d4.loss_cls: 0.4232  decode.d4.loss_mask: 1.3926  decode.d4.loss_dice: 1.4326  decode.d5.loss_cls: 0.3637  decode.d5.loss_mask: 1.4143  decode.d5.loss_dice: 1.5075  decode.d6.loss_cls: 0.3930  decode.d6.loss_mask: 1.3895  decode.d6.loss_dice: 1.5022  decode.d7.loss_cls: 0.4242  decode.d7.loss_mask: 1.3631  decode.d7.loss_dice: 1.4342  decode.d8.loss_cls: 0.4024  decode.d8.loss_mask: 1.3948  decode.d8.loss_dice: 1.4374
2025/03/29 21:22:03 - mmengine - INFO - Iter(train) [17150/20000]  base_lr: 1.7316e-05 lr: 1.7316e-05  eta: 1:19:58  time: 1.6684  data_time: 0.0163  memory: 10136  loss: 32.8717  decode.loss_cls: 0.4183  decode.loss_mask: 1.3962  decode.loss_dice: 1.4266  decode.d0.loss_cls: 0.5499  decode.d0.loss_mask: 1.5109  decode.d0.loss_dice: 1.5409  decode.d1.loss_cls: 0.4682  decode.d1.loss_mask: 1.4064  decode.d1.loss_dice: 1.4512  decode.d2.loss_cls: 0.3993  decode.d2.loss_mask: 1.4212  decode.d2.loss_dice: 1.4192  decode.d3.loss_cls: 0.4250  decode.d3.loss_mask: 1.3982  decode.d3.loss_dice: 1.4187  decode.d4.loss_cls: 0.4104  decode.d4.loss_mask: 1.3870  decode.d4.loss_dice: 1.4275  decode.d5.loss_cls: 0.3955  decode.d5.loss_mask: 1.3921  decode.d5.loss_dice: 1.4434  decode.d6.loss_cls: 0.3916  decode.d6.loss_mask: 1.4269  decode.d6.loss_dice: 1.4473  decode.d7.loss_cls: 0.3908  decode.d7.loss_mask: 1.4376  decode.d7.loss_dice: 1.4582  decode.d8.loss_cls: 0.4092  decode.d8.loss_mask: 1.3798  decode.d8.loss_dice: 1.4240
2025/03/29 21:23:26 - mmengine - INFO - Iter(train) [17200/20000]  base_lr: 1.7043e-05 lr: 1.7043e-05  eta: 1:18:34  time: 1.6679  data_time: 0.0165  memory: 10095  loss: 31.7480  decode.loss_cls: 0.4338  decode.loss_mask: 1.3670  decode.loss_dice: 1.3831  decode.d0.loss_cls: 0.5742  decode.d0.loss_mask: 1.3405  decode.d0.loss_dice: 1.4848  decode.d1.loss_cls: 0.4426  decode.d1.loss_mask: 1.3278  decode.d1.loss_dice: 1.4058  decode.d2.loss_cls: 0.4595  decode.d2.loss_mask: 1.3211  decode.d2.loss_dice: 1.3914  decode.d3.loss_cls: 0.4389  decode.d3.loss_mask: 1.3026  decode.d3.loss_dice: 1.3804  decode.d4.loss_cls: 0.4331  decode.d4.loss_mask: 1.3236  decode.d4.loss_dice: 1.3718  decode.d5.loss_cls: 0.4034  decode.d5.loss_mask: 1.3474  decode.d5.loss_dice: 1.3898  decode.d6.loss_cls: 0.4132  decode.d6.loss_mask: 1.3442  decode.d6.loss_dice: 1.3704  decode.d7.loss_cls: 0.4178  decode.d7.loss_mask: 1.3278  decode.d7.loss_dice: 1.3851  decode.d8.loss_cls: 0.3739  decode.d8.loss_mask: 1.3939  decode.d8.loss_dice: 1.3992
2025/03/29 21:24:50 - mmengine - INFO - Iter(train) [17250/20000]  base_lr: 1.6768e-05 lr: 1.6768e-05  eta: 1:17:10  time: 1.6862  data_time: 0.0171  memory: 10086  loss: 30.5339  decode.loss_cls: 0.4119  decode.loss_mask: 1.3469  decode.loss_dice: 1.2436  decode.d0.loss_cls: 0.5105  decode.d0.loss_mask: 1.4068  decode.d0.loss_dice: 1.3045  decode.d1.loss_cls: 0.4026  decode.d1.loss_mask: 1.3603  decode.d1.loss_dice: 1.2451  decode.d2.loss_cls: 0.4109  decode.d2.loss_mask: 1.3600  decode.d2.loss_dice: 1.2569  decode.d3.loss_cls: 0.3806  decode.d3.loss_mask: 1.4346  decode.d3.loss_dice: 1.2798  decode.d4.loss_cls: 0.4271  decode.d4.loss_mask: 1.3554  decode.d4.loss_dice: 1.2399  decode.d5.loss_cls: 0.3737  decode.d5.loss_mask: 1.3867  decode.d5.loss_dice: 1.2545  decode.d6.loss_cls: 0.3992  decode.d6.loss_mask: 1.3780  decode.d6.loss_dice: 1.2598  decode.d7.loss_cls: 0.3863  decode.d7.loss_mask: 1.4112  decode.d7.loss_dice: 1.2968  decode.d8.loss_cls: 0.4110  decode.d8.loss_mask: 1.3768  decode.d8.loss_dice: 1.2225
2025/03/29 21:26:13 - mmengine - INFO - Iter(train) [17300/20000]  base_lr: 1.6494e-05 lr: 1.6494e-05  eta: 1:15:45  time: 1.6821  data_time: 0.0166  memory: 10083  loss: 30.4621  decode.loss_cls: 0.3966  decode.loss_mask: 1.3207  decode.loss_dice: 1.3377  decode.d0.loss_cls: 0.4727  decode.d0.loss_mask: 1.3774  decode.d0.loss_dice: 1.4511  decode.d1.loss_cls: 0.4205  decode.d1.loss_mask: 1.3168  decode.d1.loss_dice: 1.3537  decode.d2.loss_cls: 0.3778  decode.d2.loss_mask: 1.3277  decode.d2.loss_dice: 1.3362  decode.d3.loss_cls: 0.3876  decode.d3.loss_mask: 1.2644  decode.d3.loss_dice: 1.3103  decode.d4.loss_cls: 0.3967  decode.d4.loss_mask: 1.2778  decode.d4.loss_dice: 1.3138  decode.d5.loss_cls: 0.3810  decode.d5.loss_mask: 1.3008  decode.d5.loss_dice: 1.3289  decode.d6.loss_cls: 0.3703  decode.d6.loss_mask: 1.2969  decode.d6.loss_dice: 1.3611  decode.d7.loss_cls: 0.3661  decode.d7.loss_mask: 1.2751  decode.d7.loss_dice: 1.3600  decode.d8.loss_cls: 0.3823  decode.d8.loss_mask: 1.2722  decode.d8.loss_dice: 1.3280
2025/03/29 21:27:37 - mmengine - INFO - Iter(train) [17350/20000]  base_lr: 1.6219e-05 lr: 1.6219e-05  eta: 1:14:21  time: 1.6691  data_time: 0.0162  memory: 10103  loss: 29.2777  decode.loss_cls: 0.3879  decode.loss_mask: 1.2570  decode.loss_dice: 1.2650  decode.d0.loss_cls: 0.4990  decode.d0.loss_mask: 1.2612  decode.d0.loss_dice: 1.3012  decode.d1.loss_cls: 0.3756  decode.d1.loss_mask: 1.2663  decode.d1.loss_dice: 1.2800  decode.d2.loss_cls: 0.3475  decode.d2.loss_mask: 1.2539  decode.d2.loss_dice: 1.2741  decode.d3.loss_cls: 0.3500  decode.d3.loss_mask: 1.2480  decode.d3.loss_dice: 1.2887  decode.d4.loss_cls: 0.3519  decode.d4.loss_mask: 1.2744  decode.d4.loss_dice: 1.3025  decode.d5.loss_cls: 0.3812  decode.d5.loss_mask: 1.2510  decode.d5.loss_dice: 1.2823  decode.d6.loss_cls: 0.3753  decode.d6.loss_mask: 1.2816  decode.d6.loss_dice: 1.2857  decode.d7.loss_cls: 0.3082  decode.d7.loss_mask: 1.2973  decode.d7.loss_dice: 1.3229  decode.d8.loss_cls: 0.3643  decode.d8.loss_mask: 1.2624  decode.d8.loss_dice: 1.2813
2025/03/29 21:29:00 - mmengine - INFO - Iter(train) [17400/20000]  base_lr: 1.5943e-05 lr: 1.5943e-05  eta: 1:12:57  time: 1.6728  data_time: 0.0166  memory: 10094  loss: 32.8921  decode.loss_cls: 0.4013  decode.loss_mask: 1.4030  decode.loss_dice: 1.4101  decode.d0.loss_cls: 0.5384  decode.d0.loss_mask: 1.4450  decode.d0.loss_dice: 1.5315  decode.d1.loss_cls: 0.4161  decode.d1.loss_mask: 1.3850  decode.d1.loss_dice: 1.4554  decode.d2.loss_cls: 0.4387  decode.d2.loss_mask: 1.4016  decode.d2.loss_dice: 1.4204  decode.d3.loss_cls: 0.4549  decode.d3.loss_mask: 1.3972  decode.d3.loss_dice: 1.4231  decode.d4.loss_cls: 0.4407  decode.d4.loss_mask: 1.4013  decode.d4.loss_dice: 1.4331  decode.d5.loss_cls: 0.4204  decode.d5.loss_mask: 1.3975  decode.d5.loss_dice: 1.4195  decode.d6.loss_cls: 0.4119  decode.d6.loss_mask: 1.4194  decode.d6.loss_dice: 1.4569  decode.d7.loss_cls: 0.4156  decode.d7.loss_mask: 1.4172  decode.d7.loss_dice: 1.4591  decode.d8.loss_cls: 0.4698  decode.d8.loss_mask: 1.3860  decode.d8.loss_dice: 1.4223
2025/03/29 21:30:24 - mmengine - INFO - Iter(train) [17450/20000]  base_lr: 1.5667e-05 lr: 1.5667e-05  eta: 1:11:33  time: 1.6641  data_time: 0.0165  memory: 10084  loss: 33.2316  decode.loss_cls: 0.3425  decode.loss_mask: 1.4194  decode.loss_dice: 1.5412  decode.d0.loss_cls: 0.4223  decode.d0.loss_mask: 1.4784  decode.d0.loss_dice: 1.5996  decode.d1.loss_cls: 0.3889  decode.d1.loss_mask: 1.3962  decode.d1.loss_dice: 1.4998  decode.d2.loss_cls: 0.3542  decode.d2.loss_mask: 1.4221  decode.d2.loss_dice: 1.5173  decode.d3.loss_cls: 0.3529  decode.d3.loss_mask: 1.4033  decode.d3.loss_dice: 1.5162  decode.d4.loss_cls: 0.3616  decode.d4.loss_mask: 1.4092  decode.d4.loss_dice: 1.5132  decode.d5.loss_cls: 0.3814  decode.d5.loss_mask: 1.4168  decode.d5.loss_dice: 1.5214  decode.d6.loss_cls: 0.3719  decode.d6.loss_mask: 1.4258  decode.d6.loss_dice: 1.5212  decode.d7.loss_cls: 0.3928  decode.d7.loss_mask: 1.4139  decode.d7.loss_dice: 1.5382  decode.d8.loss_cls: 0.3731  decode.d8.loss_mask: 1.4085  decode.d8.loss_dice: 1.5281
2025/03/29 21:31:47 - mmengine - INFO - Iter(train) [17500/20000]  base_lr: 1.5390e-05 lr: 1.5390e-05  eta: 1:10:08  time: 1.6696  data_time: 0.0166  memory: 10135  loss: 32.8241  decode.loss_cls: 0.3916  decode.loss_mask: 1.4764  decode.loss_dice: 1.3954  decode.d0.loss_cls: 0.5407  decode.d0.loss_mask: 1.4906  decode.d0.loss_dice: 1.4556  decode.d1.loss_cls: 0.4869  decode.d1.loss_mask: 1.4431  decode.d1.loss_dice: 1.3768  decode.d2.loss_cls: 0.4162  decode.d2.loss_mask: 1.4359  decode.d2.loss_dice: 1.3919  decode.d3.loss_cls: 0.4155  decode.d3.loss_mask: 1.4448  decode.d3.loss_dice: 1.3611  decode.d4.loss_cls: 0.4959  decode.d4.loss_mask: 1.4330  decode.d4.loss_dice: 1.3435  decode.d5.loss_cls: 0.4461  decode.d5.loss_mask: 1.4690  decode.d5.loss_dice: 1.3894  decode.d6.loss_cls: 0.4142  decode.d6.loss_mask: 1.4605  decode.d6.loss_dice: 1.3856  decode.d7.loss_cls: 0.3840  decode.d7.loss_mask: 1.4646  decode.d7.loss_dice: 1.3905  decode.d8.loss_cls: 0.3909  decode.d8.loss_mask: 1.4484  decode.d8.loss_dice: 1.3861
2025/03/29 21:33:11 - mmengine - INFO - Iter(train) [17550/20000]  base_lr: 1.5113e-05 lr: 1.5113e-05  eta: 1:08:44  time: 1.6687  data_time: 0.0164  memory: 10092  loss: 31.4914  decode.loss_cls: 0.4436  decode.loss_mask: 1.3787  decode.loss_dice: 1.3155  decode.d0.loss_cls: 0.5960  decode.d0.loss_mask: 1.4391  decode.d0.loss_dice: 1.3870  decode.d1.loss_cls: 0.4744  decode.d1.loss_mask: 1.3847  decode.d1.loss_dice: 1.3230  decode.d2.loss_cls: 0.4233  decode.d2.loss_mask: 1.3775  decode.d2.loss_dice: 1.3182  decode.d3.loss_cls: 0.4076  decode.d3.loss_mask: 1.3587  decode.d3.loss_dice: 1.2717  decode.d4.loss_cls: 0.4068  decode.d4.loss_mask: 1.3697  decode.d4.loss_dice: 1.3195  decode.d5.loss_cls: 0.3934  decode.d5.loss_mask: 1.4056  decode.d5.loss_dice: 1.3401  decode.d6.loss_cls: 0.4206  decode.d6.loss_mask: 1.3878  decode.d6.loss_dice: 1.3354  decode.d7.loss_cls: 0.4126  decode.d7.loss_mask: 1.3703  decode.d7.loss_dice: 1.2975  decode.d8.loss_cls: 0.4020  decode.d8.loss_mask: 1.4138  decode.d8.loss_dice: 1.3173
2025/03/29 21:34:35 - mmengine - INFO - Iter(train) [17600/20000]  base_lr: 1.4835e-05 lr: 1.4835e-05  eta: 1:07:20  time: 1.6715  data_time: 0.0164  memory: 10094  loss: 30.2497  decode.loss_cls: 0.3681  decode.loss_mask: 1.3476  decode.loss_dice: 1.3061  decode.d0.loss_cls: 0.4938  decode.d0.loss_mask: 1.3566  decode.d0.loss_dice: 1.4182  decode.d1.loss_cls: 0.3269  decode.d1.loss_mask: 1.3729  decode.d1.loss_dice: 1.3509  decode.d2.loss_cls: 0.3452  decode.d2.loss_mask: 1.3480  decode.d2.loss_dice: 1.3001  decode.d3.loss_cls: 0.3123  decode.d3.loss_mask: 1.3556  decode.d3.loss_dice: 1.3190  decode.d4.loss_cls: 0.3447  decode.d4.loss_mask: 1.3442  decode.d4.loss_dice: 1.3214  decode.d5.loss_cls: 0.3559  decode.d5.loss_mask: 1.3586  decode.d5.loss_dice: 1.2994  decode.d6.loss_cls: 0.3315  decode.d6.loss_mask: 1.3426  decode.d6.loss_dice: 1.2931  decode.d7.loss_cls: 0.2998  decode.d7.loss_mask: 1.3281  decode.d7.loss_dice: 1.3272  decode.d8.loss_cls: 0.3090  decode.d8.loss_mask: 1.3476  decode.d8.loss_dice: 1.3257
2025/03/29 21:35:58 - mmengine - INFO - Iter(train) [17650/20000]  base_lr: 1.4556e-05 lr: 1.4556e-05  eta: 1:05:56  time: 1.6698  data_time: 0.0165  memory: 10150  loss: 33.7382  decode.loss_cls: 0.3423  decode.loss_mask: 1.4509  decode.loss_dice: 1.5704  decode.d0.loss_cls: 0.4984  decode.d0.loss_mask: 1.4640  decode.d0.loss_dice: 1.6617  decode.d1.loss_cls: 0.3971  decode.d1.loss_mask: 1.4174  decode.d1.loss_dice: 1.5508  decode.d2.loss_cls: 0.3166  decode.d2.loss_mask: 1.4417  decode.d2.loss_dice: 1.5838  decode.d3.loss_cls: 0.3224  decode.d3.loss_mask: 1.4646  decode.d3.loss_dice: 1.5733  decode.d4.loss_cls: 0.3022  decode.d4.loss_mask: 1.4584  decode.d4.loss_dice: 1.5813  decode.d5.loss_cls: 0.3325  decode.d5.loss_mask: 1.4380  decode.d5.loss_dice: 1.5576  decode.d6.loss_cls: 0.2844  decode.d6.loss_mask: 1.4448  decode.d6.loss_dice: 1.5788  decode.d7.loss_cls: 0.3457  decode.d7.loss_mask: 1.4465  decode.d7.loss_dice: 1.5525  decode.d8.loss_cls: 0.3497  decode.d8.loss_mask: 1.4492  decode.d8.loss_dice: 1.5612
2025/03/29 21:37:22 - mmengine - INFO - Iter(train) [17700/20000]  base_lr: 1.4277e-05 lr: 1.4277e-05  eta: 1:04:31  time: 1.6757  data_time: 0.0165  memory: 10100  loss: 28.9209  decode.loss_cls: 0.2782  decode.loss_mask: 1.2169  decode.loss_dice: 1.4154  decode.d0.loss_cls: 0.3778  decode.d0.loss_mask: 1.1822  decode.d0.loss_dice: 1.4659  decode.d1.loss_cls: 0.2919  decode.d1.loss_mask: 1.1881  decode.d1.loss_dice: 1.4397  decode.d2.loss_cls: 0.2863  decode.d2.loss_mask: 1.1783  decode.d2.loss_dice: 1.4235  decode.d3.loss_cls: 0.2603  decode.d3.loss_mask: 1.1929  decode.d3.loss_dice: 1.4160  decode.d4.loss_cls: 0.2836  decode.d4.loss_mask: 1.1879  decode.d4.loss_dice: 1.4272  decode.d5.loss_cls: 0.3166  decode.d5.loss_mask: 1.1632  decode.d5.loss_dice: 1.3738  decode.d6.loss_cls: 0.3058  decode.d6.loss_mask: 1.1683  decode.d6.loss_dice: 1.3636  decode.d7.loss_cls: 0.3132  decode.d7.loss_mask: 1.1722  decode.d7.loss_dice: 1.3612  decode.d8.loss_cls: 0.3032  decode.d8.loss_mask: 1.1817  decode.d8.loss_dice: 1.3857
2025/03/29 21:38:46 - mmengine - INFO - Iter(train) [17750/20000]  base_lr: 1.3998e-05 lr: 1.3998e-05  eta: 1:03:07  time: 1.6701  data_time: 0.0165  memory: 10092  loss: 29.6228  decode.loss_cls: 0.3627  decode.loss_mask: 1.2674  decode.loss_dice: 1.3001  decode.d0.loss_cls: 0.5387  decode.d0.loss_mask: 1.2999  decode.d0.loss_dice: 1.3374  decode.d1.loss_cls: 0.3982  decode.d1.loss_mask: 1.2850  decode.d1.loss_dice: 1.2988  decode.d2.loss_cls: 0.3844  decode.d2.loss_mask: 1.2685  decode.d2.loss_dice: 1.2726  decode.d3.loss_cls: 0.3616  decode.d3.loss_mask: 1.2687  decode.d3.loss_dice: 1.3039  decode.d4.loss_cls: 0.3667  decode.d4.loss_mask: 1.2990  decode.d4.loss_dice: 1.3339  decode.d5.loss_cls: 0.3623  decode.d5.loss_mask: 1.2760  decode.d5.loss_dice: 1.2847  decode.d6.loss_cls: 0.3717  decode.d6.loss_mask: 1.2465  decode.d6.loss_dice: 1.2647  decode.d7.loss_cls: 0.3375  decode.d7.loss_mask: 1.3029  decode.d7.loss_dice: 1.3129  decode.d8.loss_cls: 0.3556  decode.d8.loss_mask: 1.2577  decode.d8.loss_dice: 1.3031
2025/03/29 21:40:09 - mmengine - INFO - Iter(train) [17800/20000]  base_lr: 1.3717e-05 lr: 1.3717e-05  eta: 1:01:43  time: 1.6678  data_time: 0.0166  memory: 10146  loss: 28.9324  decode.loss_cls: 0.3348  decode.loss_mask: 1.2182  decode.loss_dice: 1.2563  decode.d0.loss_cls: 0.4301  decode.d0.loss_mask: 1.3094  decode.d0.loss_dice: 1.3656  decode.d1.loss_cls: 0.3755  decode.d1.loss_mask: 1.2342  decode.d1.loss_dice: 1.2797  decode.d2.loss_cls: 0.3510  decode.d2.loss_mask: 1.2366  decode.d2.loss_dice: 1.2909  decode.d3.loss_cls: 0.3174  decode.d3.loss_mask: 1.2755  decode.d3.loss_dice: 1.2980  decode.d4.loss_cls: 0.2993  decode.d4.loss_mask: 1.3496  decode.d4.loss_dice: 1.3139  decode.d5.loss_cls: 0.3094  decode.d5.loss_mask: 1.2790  decode.d5.loss_dice: 1.2929  decode.d6.loss_cls: 0.3338  decode.d6.loss_mask: 1.2500  decode.d6.loss_dice: 1.2758  decode.d7.loss_cls: 0.3255  decode.d7.loss_mask: 1.2214  decode.d7.loss_dice: 1.2726  decode.d8.loss_cls: 0.3655  decode.d8.loss_mask: 1.1953  decode.d8.loss_dice: 1.2752
2025/03/29 21:41:33 - mmengine - INFO - Iter(train) [17850/20000]  base_lr: 1.3437e-05 lr: 1.3437e-05  eta: 1:00:19  time: 1.6697  data_time: 0.0168  memory: 10091  loss: 36.2226  decode.loss_cls: 0.4322  decode.loss_mask: 1.6705  decode.loss_dice: 1.5269  decode.d0.loss_cls: 0.5246  decode.d0.loss_mask: 1.7252  decode.d0.loss_dice: 1.5833  decode.d1.loss_cls: 0.4488  decode.d1.loss_mask: 1.6248  decode.d1.loss_dice: 1.4751  decode.d2.loss_cls: 0.4080  decode.d2.loss_mask: 1.6888  decode.d2.loss_dice: 1.5456  decode.d3.loss_cls: 0.4504  decode.d3.loss_mask: 1.6304  decode.d3.loss_dice: 1.4891  decode.d4.loss_cls: 0.4758  decode.d4.loss_mask: 1.6336  decode.d4.loss_dice: 1.5024  decode.d5.loss_cls: 0.4452  decode.d5.loss_mask: 1.6358  decode.d5.loss_dice: 1.4955  decode.d6.loss_cls: 0.4491  decode.d6.loss_mask: 1.6829  decode.d6.loss_dice: 1.5116  decode.d7.loss_cls: 0.4456  decode.d7.loss_mask: 1.6104  decode.d7.loss_dice: 1.5289  decode.d8.loss_cls: 0.4441  decode.d8.loss_mask: 1.6168  decode.d8.loss_dice: 1.5213
2025/03/29 21:42:56 - mmengine - INFO - Iter(train) [17900/20000]  base_lr: 1.3155e-05 lr: 1.3155e-05  eta: 0:58:54  time: 1.6698  data_time: 0.0167  memory: 10141  loss: 31.9759  decode.loss_cls: 0.4043  decode.loss_mask: 1.3930  decode.loss_dice: 1.3798  decode.d0.loss_cls: 0.5639  decode.d0.loss_mask: 1.4160  decode.d0.loss_dice: 1.4574  decode.d1.loss_cls: 0.4429  decode.d1.loss_mask: 1.3786  decode.d1.loss_dice: 1.3674  decode.d2.loss_cls: 0.4424  decode.d2.loss_mask: 1.3657  decode.d2.loss_dice: 1.3536  decode.d3.loss_cls: 0.4359  decode.d3.loss_mask: 1.3819  decode.d3.loss_dice: 1.3306  decode.d4.loss_cls: 0.4363  decode.d4.loss_mask: 1.4103  decode.d4.loss_dice: 1.3502  decode.d5.loss_cls: 0.4050  decode.d5.loss_mask: 1.4130  decode.d5.loss_dice: 1.3354  decode.d6.loss_cls: 0.4240  decode.d6.loss_mask: 1.3810  decode.d6.loss_dice: 1.3472  decode.d7.loss_cls: 0.4159  decode.d7.loss_mask: 1.4145  decode.d7.loss_dice: 1.3695  decode.d8.loss_cls: 0.4222  decode.d8.loss_mask: 1.3848  decode.d8.loss_dice: 1.3530
2025/03/29 21:44:20 - mmengine - INFO - Iter(train) [17950/20000]  base_lr: 1.2873e-05 lr: 1.2873e-05  eta: 0:57:30  time: 1.6738  data_time: 0.0170  memory: 10154  loss: 29.3507  decode.loss_cls: 0.3140  decode.loss_mask: 1.2776  decode.loss_dice: 1.3018  decode.d0.loss_cls: 0.4957  decode.d0.loss_mask: 1.2755  decode.d0.loss_dice: 1.4129  decode.d1.loss_cls: 0.4039  decode.d1.loss_mask: 1.2423  decode.d1.loss_dice: 1.3520  decode.d2.loss_cls: 0.3552  decode.d2.loss_mask: 1.2993  decode.d2.loss_dice: 1.3365  decode.d3.loss_cls: 0.3395  decode.d3.loss_mask: 1.2575  decode.d3.loss_dice: 1.3157  decode.d4.loss_cls: 0.3148  decode.d4.loss_mask: 1.2292  decode.d4.loss_dice: 1.3127  decode.d5.loss_cls: 0.3411  decode.d5.loss_mask: 1.1940  decode.d5.loss_dice: 1.3039  decode.d6.loss_cls: 0.3328  decode.d6.loss_mask: 1.2216  decode.d6.loss_dice: 1.2996  decode.d7.loss_cls: 0.3110  decode.d7.loss_mask: 1.2898  decode.d7.loss_dice: 1.3186  decode.d8.loss_cls: 0.3320  decode.d8.loss_mask: 1.2654  decode.d8.loss_dice: 1.3048
2025/03/29 21:45:43 - mmengine - INFO - Exp name: r2u_20250329_122140
2025/03/29 21:45:43 - mmengine - INFO - Iter(train) [18000/20000]  base_lr: 1.2590e-05 lr: 1.2590e-05  eta: 0:56:06  time: 1.6684  data_time: 0.0170  memory: 10096  loss: 32.2419  decode.loss_cls: 0.4278  decode.loss_mask: 1.3248  decode.loss_dice: 1.4514  decode.d0.loss_cls: 0.4866  decode.d0.loss_mask: 1.3639  decode.d0.loss_dice: 1.6076  decode.d1.loss_cls: 0.4315  decode.d1.loss_mask: 1.3097  decode.d1.loss_dice: 1.4932  decode.d2.loss_cls: 0.3917  decode.d2.loss_mask: 1.3428  decode.d2.loss_dice: 1.4707  decode.d3.loss_cls: 0.4012  decode.d3.loss_mask: 1.3219  decode.d3.loss_dice: 1.4539  decode.d4.loss_cls: 0.4277  decode.d4.loss_mask: 1.3206  decode.d4.loss_dice: 1.4542  decode.d5.loss_cls: 0.4255  decode.d5.loss_mask: 1.3154  decode.d5.loss_dice: 1.4553  decode.d6.loss_cls: 0.4252  decode.d6.loss_mask: 1.3198  decode.d6.loss_dice: 1.4587  decode.d7.loss_cls: 0.3826  decode.d7.loss_mask: 1.3247  decode.d7.loss_dice: 1.4522  decode.d8.loss_cls: 0.4244  decode.d8.loss_mask: 1.3376  decode.d8.loss_dice: 1.4390
2025/03/29 21:45:43 - mmengine - INFO - Saving checkpoint at 18000 iterations
2025/03/29 21:45:53 - mmengine - INFO - Iter(val) [  50/2708]    eta: 0:07:01  time: 0.1566  data_time: 0.0014  memory: 1856  
2025/03/29 21:46:01 - mmengine - INFO - Iter(val) [ 100/2708]    eta: 0:07:01  time: 0.1660  data_time: 0.0013  memory: 1856  
2025/03/29 21:46:09 - mmengine - INFO - Iter(val) [ 150/2708]    eta: 0:06:50  time: 0.1574  data_time: 0.0013  memory: 1856  
2025/03/29 21:46:17 - mmengine - INFO - Iter(val) [ 200/2708]    eta: 0:06:44  time: 0.1662  data_time: 0.0013  memory: 1856  
2025/03/29 21:46:25 - mmengine - INFO - Iter(val) [ 250/2708]    eta: 0:06:33  time: 0.1662  data_time: 0.0014  memory: 1856  
2025/03/29 21:46:33 - mmengine - INFO - Iter(val) [ 300/2708]    eta: 0:06:24  time: 0.1549  data_time: 0.0014  memory: 1856  
2025/03/29 21:46:41 - mmengine - INFO - Iter(val) [ 350/2708]    eta: 0:06:17  time: 0.1561  data_time: 0.0013  memory: 1856  
2025/03/29 21:46:49 - mmengine - INFO - Iter(val) [ 400/2708]    eta: 0:06:08  time: 0.1606  data_time: 0.0014  memory: 1856  
2025/03/29 21:46:57 - mmengine - INFO - Iter(val) [ 450/2708]    eta: 0:06:01  time: 0.1578  data_time: 0.0013  memory: 1856  
2025/03/29 21:47:05 - mmengine - INFO - Iter(val) [ 500/2708]    eta: 0:05:53  time: 0.1594  data_time: 0.0015  memory: 1856  
2025/03/29 21:47:13 - mmengine - INFO - Iter(val) [ 550/2708]    eta: 0:05:46  time: 0.1650  data_time: 0.0013  memory: 1856  
2025/03/29 21:47:21 - mmengine - INFO - Iter(val) [ 600/2708]    eta: 0:05:38  time: 0.1595  data_time: 0.0013  memory: 1856  
2025/03/29 21:47:29 - mmengine - INFO - Iter(val) [ 650/2708]    eta: 0:05:30  time: 0.1669  data_time: 0.0014  memory: 1856  
2025/03/29 21:47:37 - mmengine - INFO - Iter(val) [ 700/2708]    eta: 0:05:22  time: 0.1584  data_time: 0.0014  memory: 1856  
2025/03/29 21:47:46 - mmengine - INFO - Iter(val) [ 750/2708]    eta: 0:05:14  time: 0.1663  data_time: 0.0013  memory: 1856  
2025/03/29 21:47:54 - mmengine - INFO - Iter(val) [ 800/2708]    eta: 0:05:06  time: 0.1535  data_time: 0.0012  memory: 1856  
2025/03/29 21:48:02 - mmengine - INFO - Iter(val) [ 850/2708]    eta: 0:04:58  time: 0.1665  data_time: 0.0012  memory: 1856  
2025/03/29 21:48:10 - mmengine - INFO - Iter(val) [ 900/2708]    eta: 0:04:50  time: 0.1645  data_time: 0.0016  memory: 1856  
2025/03/29 21:48:18 - mmengine - INFO - Iter(val) [ 950/2708]    eta: 0:04:42  time: 0.1675  data_time: 0.0013  memory: 1856  
2025/03/29 21:48:26 - mmengine - INFO - Iter(val) [1000/2708]    eta: 0:04:34  time: 0.1610  data_time: 0.0013  memory: 1856  
2025/03/29 21:48:34 - mmengine - INFO - Iter(val) [1050/2708]    eta: 0:04:26  time: 0.1666  data_time: 0.0015  memory: 1856  
2025/03/29 21:48:42 - mmengine - INFO - Iter(val) [1100/2708]    eta: 0:04:18  time: 0.1620  data_time: 0.0014  memory: 1856  
2025/03/29 21:48:50 - mmengine - INFO - Iter(val) [1150/2708]    eta: 0:04:10  time: 0.1601  data_time: 0.0013  memory: 1856  
2025/03/29 21:48:58 - mmengine - INFO - Iter(val) [1200/2708]    eta: 0:04:02  time: 0.1591  data_time: 0.0013  memory: 1856  
2025/03/29 21:49:06 - mmengine - INFO - Iter(val) [1250/2708]    eta: 0:03:54  time: 0.1572  data_time: 0.0013  memory: 1856  
2025/03/29 21:49:14 - mmengine - INFO - Iter(val) [1300/2708]    eta: 0:03:46  time: 0.1654  data_time: 0.0014  memory: 1856  
2025/03/29 21:49:22 - mmengine - INFO - Iter(val) [1350/2708]    eta: 0:03:38  time: 0.1573  data_time: 0.0013  memory: 1856  
2025/03/29 21:49:31 - mmengine - INFO - Iter(val) [1400/2708]    eta: 0:03:30  time: 0.1653  data_time: 0.0013  memory: 1856  
2025/03/29 21:49:39 - mmengine - INFO - Iter(val) [1450/2708]    eta: 0:03:22  time: 0.1552  data_time: 0.0014  memory: 1856  
2025/03/29 21:49:47 - mmengine - INFO - Iter(val) [1500/2708]    eta: 0:03:14  time: 0.1662  data_time: 0.0013  memory: 1856  
2025/03/29 21:49:55 - mmengine - INFO - Iter(val) [1550/2708]    eta: 0:03:06  time: 0.1572  data_time: 0.0014  memory: 1856  
2025/03/29 21:50:03 - mmengine - INFO - Iter(val) [1600/2708]    eta: 0:02:58  time: 0.1665  data_time: 0.0014  memory: 1856  
2025/03/29 21:50:11 - mmengine - INFO - Iter(val) [1650/2708]    eta: 0:02:50  time: 0.1595  data_time: 0.0013  memory: 1856  
2025/03/29 21:50:19 - mmengine - INFO - Iter(val) [1700/2708]    eta: 0:02:42  time: 0.1665  data_time: 0.0014  memory: 1856  
2025/03/29 21:50:27 - mmengine - INFO - Iter(val) [1750/2708]    eta: 0:02:34  time: 0.1581  data_time: 0.0013  memory: 1856  
2025/03/29 21:50:35 - mmengine - INFO - Iter(val) [1800/2708]    eta: 0:02:26  time: 0.1558  data_time: 0.0013  memory: 1856  
2025/03/29 21:50:43 - mmengine - INFO - Iter(val) [1850/2708]    eta: 0:02:18  time: 0.1586  data_time: 0.0014  memory: 1856  
2025/03/29 21:50:51 - mmengine - INFO - Iter(val) [1900/2708]    eta: 0:02:10  time: 0.1584  data_time: 0.0013  memory: 1856  
2025/03/29 21:50:59 - mmengine - INFO - Iter(val) [1950/2708]    eta: 0:02:02  time: 0.1582  data_time: 0.0014  memory: 1856  
2025/03/29 21:51:07 - mmengine - INFO - Iter(val) [2000/2708]    eta: 0:01:53  time: 0.1574  data_time: 0.0014  memory: 1856  
2025/03/29 21:51:16 - mmengine - INFO - Iter(val) [2050/2708]    eta: 0:01:46  time: 0.1670  data_time: 0.0013  memory: 1856  
2025/03/29 21:51:24 - mmengine - INFO - Iter(val) [2100/2708]    eta: 0:01:37  time: 0.1563  data_time: 0.0013  memory: 1856  
2025/03/29 21:51:32 - mmengine - INFO - Iter(val) [2150/2708]    eta: 0:01:29  time: 0.1665  data_time: 0.0013  memory: 1856  
2025/03/29 21:51:40 - mmengine - INFO - Iter(val) [2200/2708]    eta: 0:01:21  time: 0.1587  data_time: 0.0014  memory: 1856  
2025/03/29 21:51:48 - mmengine - INFO - Iter(val) [2250/2708]    eta: 0:01:13  time: 0.1665  data_time: 0.0013  memory: 1856  
2025/03/29 21:51:56 - mmengine - INFO - Iter(val) [2300/2708]    eta: 0:01:05  time: 0.1615  data_time: 0.0013  memory: 1856  
2025/03/29 21:52:04 - mmengine - INFO - Iter(val) [2350/2708]    eta: 0:00:57  time: 0.1661  data_time: 0.0013  memory: 1856  
2025/03/29 21:52:12 - mmengine - INFO - Iter(val) [2400/2708]    eta: 0:00:49  time: 0.1499  data_time: 0.0013  memory: 1856  
2025/03/29 21:52:20 - mmengine - INFO - Iter(val) [2450/2708]    eta: 0:00:41  time: 0.1565  data_time: 0.0012  memory: 1856  
2025/03/29 21:52:28 - mmengine - INFO - Iter(val) [2500/2708]    eta: 0:00:33  time: 0.1667  data_time: 0.0014  memory: 1856  
2025/03/29 21:52:36 - mmengine - INFO - Iter(val) [2550/2708]    eta: 0:00:25  time: 0.1606  data_time: 0.0013  memory: 1856  
2025/03/29 21:52:44 - mmengine - INFO - Iter(val) [2600/2708]    eta: 0:00:17  time: 0.1663  data_time: 0.0014  memory: 1856  
2025/03/29 21:52:52 - mmengine - INFO - Iter(val) [2650/2708]    eta: 0:00:09  time: 0.1564  data_time: 0.0014  memory: 1856  
2025/03/29 21:53:00 - mmengine - INFO - Iter(val) [2700/2708]    eta: 0:00:01  time: 0.1603  data_time: 0.0013  memory: 1856  
2025/03/29 21:53:02 - mmengine - INFO - per class results:
2025/03/29 21:53:02 - mmengine - INFO - 
+--------------+-------+-------+
|    Class     |  IoU  |  Acc  |
+--------------+-------+-------+
|  background  | 41.05 | 63.58 |
|   building   |  66.6 | 82.72 |
|     road     |  55.2 | 72.99 |
|    water     | 75.31 | 83.85 |
|    barren    | 49.93 | 77.21 |
|    forest    | 56.28 | 75.27 |
| agricultural | 58.47 | 61.99 |
+--------------+-------+-------+
2025/03/29 21:53:02 - mmengine - INFO - Iter(val) [2708/2708]    aAcc: 70.7000  mIoU: 57.5500  mAcc: 73.9500  data_time: 0.0014  time: 0.1610
2025/03/29 21:54:25 - mmengine - INFO - Iter(train) [18050/20000]  base_lr: 1.2306e-05 lr: 1.2306e-05  eta: 0:54:42  time: 1.6733  data_time: 0.0167  memory: 10096  loss: 32.5161  decode.loss_cls: 0.4501  decode.loss_mask: 1.2849  decode.loss_dice: 1.4678  decode.d0.loss_cls: 0.5095  decode.d0.loss_mask: 1.3338  decode.d0.loss_dice: 1.6468  decode.d1.loss_cls: 0.4753  decode.d1.loss_mask: 1.3051  decode.d1.loss_dice: 1.5049  decode.d2.loss_cls: 0.4457  decode.d2.loss_mask: 1.3120  decode.d2.loss_dice: 1.5045  decode.d3.loss_cls: 0.4142  decode.d3.loss_mask: 1.3228  decode.d3.loss_dice: 1.5096  decode.d4.loss_cls: 0.4538  decode.d4.loss_mask: 1.3081  decode.d4.loss_dice: 1.4867  decode.d5.loss_cls: 0.4467  decode.d5.loss_mask: 1.2897  decode.d5.loss_dice: 1.4843  decode.d6.loss_cls: 0.4422  decode.d6.loss_mask: 1.2907  decode.d6.loss_dice: 1.4773  decode.d7.loss_cls: 0.4304  decode.d7.loss_mask: 1.2860  decode.d7.loss_dice: 1.4669  decode.d8.loss_cls: 0.4432  decode.d8.loss_mask: 1.2703  decode.d8.loss_dice: 1.4531
2025/03/29 21:55:49 - mmengine - INFO - Iter(train) [18100/20000]  base_lr: 1.2022e-05 lr: 1.2022e-05  eta: 0:53:17  time: 1.6707  data_time: 0.0168  memory: 10093  loss: 31.6343  decode.loss_cls: 0.4132  decode.loss_mask: 1.3056  decode.loss_dice: 1.3422  decode.d0.loss_cls: 0.5204  decode.d0.loss_mask: 1.3575  decode.d0.loss_dice: 1.5375  decode.d1.loss_cls: 0.4310  decode.d1.loss_mask: 1.3395  decode.d1.loss_dice: 1.3762  decode.d2.loss_cls: 0.4321  decode.d2.loss_mask: 1.3423  decode.d2.loss_dice: 1.3725  decode.d3.loss_cls: 0.4067  decode.d3.loss_mask: 1.3453  decode.d3.loss_dice: 1.3690  decode.d4.loss_cls: 0.4353  decode.d4.loss_mask: 1.3473  decode.d4.loss_dice: 1.3959  decode.d5.loss_cls: 0.3932  decode.d5.loss_mask: 1.3444  decode.d5.loss_dice: 1.3728  decode.d6.loss_cls: 0.3942  decode.d6.loss_mask: 1.3351  decode.d6.loss_dice: 1.3887  decode.d7.loss_cls: 0.3643  decode.d7.loss_mask: 1.3532  decode.d7.loss_dice: 1.4208  decode.d8.loss_cls: 0.3955  decode.d8.loss_mask: 1.3753  decode.d8.loss_dice: 1.4273
2025/03/29 21:57:12 - mmengine - INFO - Iter(train) [18150/20000]  base_lr: 1.1737e-05 lr: 1.1737e-05  eta: 0:51:53  time: 1.6696  data_time: 0.0167  memory: 10090  loss: 30.1992  decode.loss_cls: 0.2858  decode.loss_mask: 1.3207  decode.loss_dice: 1.3943  decode.d0.loss_cls: 0.4667  decode.d0.loss_mask: 1.3149  decode.d0.loss_dice: 1.4572  decode.d1.loss_cls: 0.3389  decode.d1.loss_mask: 1.3053  decode.d1.loss_dice: 1.3771  decode.d2.loss_cls: 0.2906  decode.d2.loss_mask: 1.3023  decode.d2.loss_dice: 1.3798  decode.d3.loss_cls: 0.3317  decode.d3.loss_mask: 1.3027  decode.d3.loss_dice: 1.3524  decode.d4.loss_cls: 0.3265  decode.d4.loss_mask: 1.2965  decode.d4.loss_dice: 1.4001  decode.d5.loss_cls: 0.2929  decode.d5.loss_mask: 1.3125  decode.d5.loss_dice: 1.3802  decode.d6.loss_cls: 0.2766  decode.d6.loss_mask: 1.3281  decode.d6.loss_dice: 1.4078  decode.d7.loss_cls: 0.3507  decode.d7.loss_mask: 1.2693  decode.d7.loss_dice: 1.3562  decode.d8.loss_cls: 0.3209  decode.d8.loss_mask: 1.2909  decode.d8.loss_dice: 1.3697
2025/03/29 21:58:36 - mmengine - INFO - Iter(train) [18200/20000]  base_lr: 1.1451e-05 lr: 1.1451e-05  eta: 0:50:29  time: 1.6691  data_time: 0.0172  memory: 10089  loss: 31.5111  decode.loss_cls: 0.3196  decode.loss_mask: 1.4600  decode.loss_dice: 1.3273  decode.d0.loss_cls: 0.4329  decode.d0.loss_mask: 1.4505  decode.d0.loss_dice: 1.4586  decode.d1.loss_cls: 0.3966  decode.d1.loss_mask: 1.4443  decode.d1.loss_dice: 1.3414  decode.d2.loss_cls: 0.3006  decode.d2.loss_mask: 1.4634  decode.d2.loss_dice: 1.3549  decode.d3.loss_cls: 0.3274  decode.d3.loss_mask: 1.4590  decode.d3.loss_dice: 1.3328  decode.d4.loss_cls: 0.3091  decode.d4.loss_mask: 1.4449  decode.d4.loss_dice: 1.3502  decode.d5.loss_cls: 0.3165  decode.d5.loss_mask: 1.4840  decode.d5.loss_dice: 1.3592  decode.d6.loss_cls: 0.3214  decode.d6.loss_mask: 1.4910  decode.d6.loss_dice: 1.3539  decode.d7.loss_cls: 0.3203  decode.d7.loss_mask: 1.4620  decode.d7.loss_dice: 1.3443  decode.d8.loss_cls: 0.3261  decode.d8.loss_mask: 1.4281  decode.d8.loss_dice: 1.3307
2025/03/29 22:00:00 - mmengine - INFO - Iter(train) [18250/20000]  base_lr: 1.1164e-05 lr: 1.1164e-05  eta: 0:49:05  time: 1.6829  data_time: 0.0165  memory: 10084  loss: 32.6697  decode.loss_cls: 0.3202  decode.loss_mask: 1.4389  decode.loss_dice: 1.4670  decode.d0.loss_cls: 0.4773  decode.d0.loss_mask: 1.4644  decode.d0.loss_dice: 1.5516  decode.d1.loss_cls: 0.3758  decode.d1.loss_mask: 1.4209  decode.d1.loss_dice: 1.4438  decode.d2.loss_cls: 0.4105  decode.d2.loss_mask: 1.4118  decode.d2.loss_dice: 1.4377  decode.d3.loss_cls: 0.3802  decode.d3.loss_mask: 1.4371  decode.d3.loss_dice: 1.4196  decode.d4.loss_cls: 0.4226  decode.d4.loss_mask: 1.4219  decode.d4.loss_dice: 1.4461  decode.d5.loss_cls: 0.4309  decode.d5.loss_mask: 1.4118  decode.d5.loss_dice: 1.4243  decode.d6.loss_cls: 0.3777  decode.d6.loss_mask: 1.4137  decode.d6.loss_dice: 1.4413  decode.d7.loss_cls: 0.3945  decode.d7.loss_mask: 1.4070  decode.d7.loss_dice: 1.4273  decode.d8.loss_cls: 0.3357  decode.d8.loss_mask: 1.4095  decode.d8.loss_dice: 1.4486
2025/03/29 22:01:23 - mmengine - INFO - Iter(train) [18300/20000]  base_lr: 1.0877e-05 lr: 1.0877e-05  eta: 0:47:41  time: 1.6677  data_time: 0.0165  memory: 10084  loss: 29.1042  decode.loss_cls: 0.2669  decode.loss_mask: 1.2783  decode.loss_dice: 1.3350  decode.d0.loss_cls: 0.3849  decode.d0.loss_mask: 1.3077  decode.d0.loss_dice: 1.4311  decode.d1.loss_cls: 0.2436  decode.d1.loss_mask: 1.3118  decode.d1.loss_dice: 1.3640  decode.d2.loss_cls: 0.2472  decode.d2.loss_mask: 1.2906  decode.d2.loss_dice: 1.3335  decode.d3.loss_cls: 0.2385  decode.d3.loss_mask: 1.2878  decode.d3.loss_dice: 1.3313  decode.d4.loss_cls: 0.2123  decode.d4.loss_mask: 1.3199  decode.d4.loss_dice: 1.3618  decode.d5.loss_cls: 0.2600  decode.d5.loss_mask: 1.2935  decode.d5.loss_dice: 1.3378  decode.d6.loss_cls: 0.2463  decode.d6.loss_mask: 1.3255  decode.d6.loss_dice: 1.3307  decode.d7.loss_cls: 0.2331  decode.d7.loss_mask: 1.3260  decode.d7.loss_dice: 1.3397  decode.d8.loss_cls: 0.2634  decode.d8.loss_mask: 1.2745  decode.d8.loss_dice: 1.3276
2025/03/29 22:02:47 - mmengine - INFO - Iter(train) [18350/20000]  base_lr: 1.0588e-05 lr: 1.0588e-05  eta: 0:46:16  time: 1.6674  data_time: 0.0163  memory: 10150  loss: 31.8871  decode.loss_cls: 0.4116  decode.loss_mask: 1.3681  decode.loss_dice: 1.3250  decode.d0.loss_cls: 0.6198  decode.d0.loss_mask: 1.3656  decode.d0.loss_dice: 1.4670  decode.d1.loss_cls: 0.5229  decode.d1.loss_mask: 1.3124  decode.d1.loss_dice: 1.3338  decode.d2.loss_cls: 0.4770  decode.d2.loss_mask: 1.3607  decode.d2.loss_dice: 1.3277  decode.d3.loss_cls: 0.4325  decode.d3.loss_mask: 1.3812  decode.d3.loss_dice: 1.3551  decode.d4.loss_cls: 0.4438  decode.d4.loss_mask: 1.3587  decode.d4.loss_dice: 1.3625  decode.d5.loss_cls: 0.4703  decode.d5.loss_mask: 1.3459  decode.d5.loss_dice: 1.3183  decode.d6.loss_cls: 0.4383  decode.d6.loss_mask: 1.3765  decode.d6.loss_dice: 1.3672  decode.d7.loss_cls: 0.4467  decode.d7.loss_mask: 1.3684  decode.d7.loss_dice: 1.3637  decode.d8.loss_cls: 0.4139  decode.d8.loss_mask: 1.4056  decode.d8.loss_dice: 1.3472
2025/03/29 22:04:10 - mmengine - INFO - Iter(train) [18400/20000]  base_lr: 1.0299e-05 lr: 1.0299e-05  eta: 0:44:52  time: 1.6699  data_time: 0.0164  memory: 10092  loss: 30.3266  decode.loss_cls: 0.2897  decode.loss_mask: 1.3095  decode.loss_dice: 1.3929  decode.d0.loss_cls: 0.3559  decode.d0.loss_mask: 1.3598  decode.d0.loss_dice: 1.4854  decode.d1.loss_cls: 0.3398  decode.d1.loss_mask: 1.3103  decode.d1.loss_dice: 1.4272  decode.d2.loss_cls: 0.2633  decode.d2.loss_mask: 1.3198  decode.d2.loss_dice: 1.4203  decode.d3.loss_cls: 0.2761  decode.d3.loss_mask: 1.3370  decode.d3.loss_dice: 1.3954  decode.d4.loss_cls: 0.2624  decode.d4.loss_mask: 1.3427  decode.d4.loss_dice: 1.4207  decode.d5.loss_cls: 0.2820  decode.d5.loss_mask: 1.3293  decode.d5.loss_dice: 1.4073  decode.d6.loss_cls: 0.2721  decode.d6.loss_mask: 1.3400  decode.d6.loss_dice: 1.3987  decode.d7.loss_cls: 0.2785  decode.d7.loss_mask: 1.3102  decode.d7.loss_dice: 1.4080  decode.d8.loss_cls: 0.2894  decode.d8.loss_mask: 1.3235  decode.d8.loss_dice: 1.3793
2025/03/29 22:05:34 - mmengine - INFO - Iter(train) [18450/20000]  base_lr: 1.0009e-05 lr: 1.0009e-05  eta: 0:43:28  time: 1.6784  data_time: 0.0170  memory: 10082  loss: 28.0572  decode.loss_cls: 0.3134  decode.loss_mask: 1.2138  decode.loss_dice: 1.2446  decode.d0.loss_cls: 0.4573  decode.d0.loss_mask: 1.2428  decode.d0.loss_dice: 1.3199  decode.d1.loss_cls: 0.3194  decode.d1.loss_mask: 1.2249  decode.d1.loss_dice: 1.2353  decode.d2.loss_cls: 0.2718  decode.d2.loss_mask: 1.2509  decode.d2.loss_dice: 1.2585  decode.d3.loss_cls: 0.2800  decode.d3.loss_mask: 1.2407  decode.d3.loss_dice: 1.2508  decode.d4.loss_cls: 0.2809  decode.d4.loss_mask: 1.2722  decode.d4.loss_dice: 1.2849  decode.d5.loss_cls: 0.2498  decode.d5.loss_mask: 1.2579  decode.d5.loss_dice: 1.2759  decode.d6.loss_cls: 0.2600  decode.d6.loss_mask: 1.2299  decode.d6.loss_dice: 1.2883  decode.d7.loss_cls: 0.2617  decode.d7.loss_mask: 1.2518  decode.d7.loss_dice: 1.2618  decode.d8.loss_cls: 0.2941  decode.d8.loss_mask: 1.2171  decode.d8.loss_dice: 1.2470
2025/03/29 22:06:58 - mmengine - INFO - Iter(train) [18500/20000]  base_lr: 9.7180e-06 lr: 9.7180e-06  eta: 0:42:04  time: 1.6706  data_time: 0.0170  memory: 10142  loss: 29.6408  decode.loss_cls: 0.3505  decode.loss_mask: 1.1959  decode.loss_dice: 1.3349  decode.d0.loss_cls: 0.4361  decode.d0.loss_mask: 1.3138  decode.d0.loss_dice: 1.4495  decode.d1.loss_cls: 0.3606  decode.d1.loss_mask: 1.2797  decode.d1.loss_dice: 1.3830  decode.d2.loss_cls: 0.3356  decode.d2.loss_mask: 1.2633  decode.d2.loss_dice: 1.3504  decode.d3.loss_cls: 0.3253  decode.d3.loss_mask: 1.2807  decode.d3.loss_dice: 1.3424  decode.d4.loss_cls: 0.2961  decode.d4.loss_mask: 1.2920  decode.d4.loss_dice: 1.3656  decode.d5.loss_cls: 0.3591  decode.d5.loss_mask: 1.2516  decode.d5.loss_dice: 1.3540  decode.d6.loss_cls: 0.3406  decode.d6.loss_mask: 1.2498  decode.d6.loss_dice: 1.3452  decode.d7.loss_cls: 0.3415  decode.d7.loss_mask: 1.2142  decode.d7.loss_dice: 1.3299  decode.d8.loss_cls: 0.2836  decode.d8.loss_mask: 1.2738  decode.d8.loss_dice: 1.3422
2025/03/29 22:08:21 - mmengine - INFO - Iter(train) [18550/20000]  base_lr: 9.4259e-06 lr: 9.4259e-06  eta: 0:40:40  time: 1.6702  data_time: 0.0165  memory: 10138  loss: 28.6635  decode.loss_cls: 0.2688  decode.loss_mask: 1.2536  decode.loss_dice: 1.3254  decode.d0.loss_cls: 0.3886  decode.d0.loss_mask: 1.2391  decode.d0.loss_dice: 1.3437  decode.d1.loss_cls: 0.3018  decode.d1.loss_mask: 1.2412  decode.d1.loss_dice: 1.3427  decode.d2.loss_cls: 0.2572  decode.d2.loss_mask: 1.2522  decode.d2.loss_dice: 1.3180  decode.d3.loss_cls: 0.2544  decode.d3.loss_mask: 1.2531  decode.d3.loss_dice: 1.3247  decode.d4.loss_cls: 0.2645  decode.d4.loss_mask: 1.2467  decode.d4.loss_dice: 1.3278  decode.d5.loss_cls: 0.2874  decode.d5.loss_mask: 1.2273  decode.d5.loss_dice: 1.3116  decode.d6.loss_cls: 0.2948  decode.d6.loss_mask: 1.2479  decode.d6.loss_dice: 1.3670  decode.d7.loss_cls: 0.2759  decode.d7.loss_mask: 1.2353  decode.d7.loss_dice: 1.3614  decode.d8.loss_cls: 0.3115  decode.d8.loss_mask: 1.2114  decode.d8.loss_dice: 1.3284
2025/03/29 22:09:45 - mmengine - INFO - Iter(train) [18600/20000]  base_lr: 9.1329e-06 lr: 9.1329e-06  eta: 0:39:16  time: 1.6675  data_time: 0.0165  memory: 10080  loss: 27.0282  decode.loss_cls: 0.2710  decode.loss_mask: 1.1597  decode.loss_dice: 1.2635  decode.d0.loss_cls: 0.4639  decode.d0.loss_mask: 1.1497  decode.d0.loss_dice: 1.2786  decode.d1.loss_cls: 0.2487  decode.d1.loss_mask: 1.1764  decode.d1.loss_dice: 1.2692  decode.d2.loss_cls: 0.2462  decode.d2.loss_mask: 1.1837  decode.d2.loss_dice: 1.2261  decode.d3.loss_cls: 0.2362  decode.d3.loss_mask: 1.2091  decode.d3.loss_dice: 1.2395  decode.d4.loss_cls: 0.2813  decode.d4.loss_mask: 1.1339  decode.d4.loss_dice: 1.2612  decode.d5.loss_cls: 0.2841  decode.d5.loss_mask: 1.1417  decode.d5.loss_dice: 1.2543  decode.d6.loss_cls: 0.2872  decode.d6.loss_mask: 1.1379  decode.d6.loss_dice: 1.2613  decode.d7.loss_cls: 0.2351  decode.d7.loss_mask: 1.2041  decode.d7.loss_dice: 1.2602  decode.d8.loss_cls: 0.2330  decode.d8.loss_mask: 1.1740  decode.d8.loss_dice: 1.2577
2025/03/29 22:11:08 - mmengine - INFO - Iter(train) [18650/20000]  base_lr: 8.8388e-06 lr: 8.8388e-06  eta: 0:37:51  time: 1.6730  data_time: 0.0167  memory: 10154  loss: 27.7934  decode.loss_cls: 0.3483  decode.loss_mask: 1.1696  decode.loss_dice: 1.1859  decode.d0.loss_cls: 0.5263  decode.d0.loss_mask: 1.2202  decode.d0.loss_dice: 1.3033  decode.d1.loss_cls: 0.3892  decode.d1.loss_mask: 1.2022  decode.d1.loss_dice: 1.2558  decode.d2.loss_cls: 0.3423  decode.d2.loss_mask: 1.1908  decode.d2.loss_dice: 1.2054  decode.d3.loss_cls: 0.3531  decode.d3.loss_mask: 1.1880  decode.d3.loss_dice: 1.1974  decode.d4.loss_cls: 0.3792  decode.d4.loss_mask: 1.1765  decode.d4.loss_dice: 1.1798  decode.d5.loss_cls: 0.3686  decode.d5.loss_mask: 1.2137  decode.d5.loss_dice: 1.2005  decode.d6.loss_cls: 0.3866  decode.d6.loss_mask: 1.1688  decode.d6.loss_dice: 1.1819  decode.d7.loss_cls: 0.3727  decode.d7.loss_mask: 1.1699  decode.d7.loss_dice: 1.1882  decode.d8.loss_cls: 0.3505  decode.d8.loss_mask: 1.1835  decode.d8.loss_dice: 1.1954
2025/03/29 22:12:32 - mmengine - INFO - Iter(train) [18700/20000]  base_lr: 8.5436e-06 lr: 8.5436e-06  eta: 0:36:27  time: 1.6698  data_time: 0.0168  memory: 10085  loss: 30.4415  decode.loss_cls: 0.3910  decode.loss_mask: 1.2806  decode.loss_dice: 1.3035  decode.d0.loss_cls: 0.6534  decode.d0.loss_mask: 1.2805  decode.d0.loss_dice: 1.4130  decode.d1.loss_cls: 0.4219  decode.d1.loss_mask: 1.2832  decode.d1.loss_dice: 1.3767  decode.d2.loss_cls: 0.4127  decode.d2.loss_mask: 1.2438  decode.d2.loss_dice: 1.3256  decode.d3.loss_cls: 0.3867  decode.d3.loss_mask: 1.2260  decode.d3.loss_dice: 1.3661  decode.d4.loss_cls: 0.4054  decode.d4.loss_mask: 1.2816  decode.d4.loss_dice: 1.3542  decode.d5.loss_cls: 0.3680  decode.d5.loss_mask: 1.2866  decode.d5.loss_dice: 1.3494  decode.d6.loss_cls: 0.3920  decode.d6.loss_mask: 1.2584  decode.d6.loss_dice: 1.3234  decode.d7.loss_cls: 0.4146  decode.d7.loss_mask: 1.2463  decode.d7.loss_dice: 1.3483  decode.d8.loss_cls: 0.3929  decode.d8.loss_mask: 1.2771  decode.d8.loss_dice: 1.3786
2025/03/29 22:13:55 - mmengine - INFO - Iter(train) [18750/20000]  base_lr: 8.2473e-06 lr: 8.2473e-06  eta: 0:35:03  time: 1.6676  data_time: 0.0164  memory: 10092  loss: 28.5014  decode.loss_cls: 0.2179  decode.loss_mask: 1.3044  decode.loss_dice: 1.2986  decode.d0.loss_cls: 0.3559  decode.d0.loss_mask: 1.3015  decode.d0.loss_dice: 1.3626  decode.d1.loss_cls: 0.2182  decode.d1.loss_mask: 1.2889  decode.d1.loss_dice: 1.3461  decode.d2.loss_cls: 0.2463  decode.d2.loss_mask: 1.2910  decode.d2.loss_dice: 1.3031  decode.d3.loss_cls: 0.2200  decode.d3.loss_mask: 1.3172  decode.d3.loss_dice: 1.3147  decode.d4.loss_cls: 0.2234  decode.d4.loss_mask: 1.3063  decode.d4.loss_dice: 1.3096  decode.d5.loss_cls: 0.2095  decode.d5.loss_mask: 1.2988  decode.d5.loss_dice: 1.3109  decode.d6.loss_cls: 0.2302  decode.d6.loss_mask: 1.3027  decode.d6.loss_dice: 1.2841  decode.d7.loss_cls: 0.2475  decode.d7.loss_mask: 1.2831  decode.d7.loss_dice: 1.3017  decode.d8.loss_cls: 0.2324  decode.d8.loss_mask: 1.2867  decode.d8.loss_dice: 1.2880
2025/03/29 22:15:19 - mmengine - INFO - Iter(train) [18800/20000]  base_lr: 7.9498e-06 lr: 7.9498e-06  eta: 0:33:39  time: 1.6850  data_time: 0.0168  memory: 10087  loss: 28.8142  decode.loss_cls: 0.3046  decode.loss_mask: 1.1999  decode.loss_dice: 1.3091  decode.d0.loss_cls: 0.4374  decode.d0.loss_mask: 1.1855  decode.d0.loss_dice: 1.4429  decode.d1.loss_cls: 0.3355  decode.d1.loss_mask: 1.1890  decode.d1.loss_dice: 1.3805  decode.d2.loss_cls: 0.3305  decode.d2.loss_mask: 1.2026  decode.d2.loss_dice: 1.3846  decode.d3.loss_cls: 0.3078  decode.d3.loss_mask: 1.2048  decode.d3.loss_dice: 1.3609  decode.d4.loss_cls: 0.3351  decode.d4.loss_mask: 1.1681  decode.d4.loss_dice: 1.3344  decode.d5.loss_cls: 0.3282  decode.d5.loss_mask: 1.1882  decode.d5.loss_dice: 1.3387  decode.d6.loss_cls: 0.3101  decode.d6.loss_mask: 1.2084  decode.d6.loss_dice: 1.3353  decode.d7.loss_cls: 0.3092  decode.d7.loss_mask: 1.1978  decode.d7.loss_dice: 1.3275  decode.d8.loss_cls: 0.2739  decode.d8.loss_mask: 1.2291  decode.d8.loss_dice: 1.3543
2025/03/29 22:16:45 - mmengine - INFO - Iter(train) [18850/20000]  base_lr: 7.6510e-06 lr: 7.6510e-06  eta: 0:32:15  time: 1.8196  data_time: 0.0170  memory: 10083  loss: 29.3482  decode.loss_cls: 0.3370  decode.loss_mask: 1.3076  decode.loss_dice: 1.2714  decode.d0.loss_cls: 0.4819  decode.d0.loss_mask: 1.3114  decode.d0.loss_dice: 1.3559  decode.d1.loss_cls: 0.3458  decode.d1.loss_mask: 1.2499  decode.d1.loss_dice: 1.2954  decode.d2.loss_cls: 0.3503  decode.d2.loss_mask: 1.2639  decode.d2.loss_dice: 1.2837  decode.d3.loss_cls: 0.3488  decode.d3.loss_mask: 1.2699  decode.d3.loss_dice: 1.2813  decode.d4.loss_cls: 0.3719  decode.d4.loss_mask: 1.2847  decode.d4.loss_dice: 1.2783  decode.d5.loss_cls: 0.3403  decode.d5.loss_mask: 1.3011  decode.d5.loss_dice: 1.2834  decode.d6.loss_cls: 0.3340  decode.d6.loss_mask: 1.2903  decode.d6.loss_dice: 1.2751  decode.d7.loss_cls: 0.3396  decode.d7.loss_mask: 1.2925  decode.d7.loss_dice: 1.2662  decode.d8.loss_cls: 0.3010  decode.d8.loss_mask: 1.3576  decode.d8.loss_dice: 1.2779
2025/03/29 22:18:16 - mmengine - INFO - Iter(train) [18900/20000]  base_lr: 7.3510e-06 lr: 7.3510e-06  eta: 0:30:51  time: 1.8090  data_time: 0.0169  memory: 10094  loss: 28.9796  decode.loss_cls: 0.3484  decode.loss_mask: 1.2688  decode.loss_dice: 1.2618  decode.d0.loss_cls: 0.5060  decode.d0.loss_mask: 1.2517  decode.d0.loss_dice: 1.4000  decode.d1.loss_cls: 0.3854  decode.d1.loss_mask: 1.2422  decode.d1.loss_dice: 1.2853  decode.d2.loss_cls: 0.3849  decode.d2.loss_mask: 1.2412  decode.d2.loss_dice: 1.2853  decode.d3.loss_cls: 0.3202  decode.d3.loss_mask: 1.2393  decode.d3.loss_dice: 1.2765  decode.d4.loss_cls: 0.3298  decode.d4.loss_mask: 1.2646  decode.d4.loss_dice: 1.2529  decode.d5.loss_cls: 0.3451  decode.d5.loss_mask: 1.2571  decode.d5.loss_dice: 1.2597  decode.d6.loss_cls: 0.3700  decode.d6.loss_mask: 1.2592  decode.d6.loss_dice: 1.2555  decode.d7.loss_cls: 0.3734  decode.d7.loss_mask: 1.2284  decode.d7.loss_dice: 1.2602  decode.d8.loss_cls: 0.3551  decode.d8.loss_mask: 1.2290  decode.d8.loss_dice: 1.2428
2025/03/29 22:19:44 - mmengine - INFO - Iter(train) [18950/20000]  base_lr: 7.0496e-06 lr: 7.0496e-06  eta: 0:29:27  time: 1.6828  data_time: 0.0314  memory: 10092  loss: 27.6125  decode.loss_cls: 0.3008  decode.loss_mask: 1.2716  decode.loss_dice: 1.2005  decode.d0.loss_cls: 0.4727  decode.d0.loss_mask: 1.2878  decode.d0.loss_dice: 1.2898  decode.d1.loss_cls: 0.3734  decode.d1.loss_mask: 1.2226  decode.d1.loss_dice: 1.1780  decode.d2.loss_cls: 0.3185  decode.d2.loss_mask: 1.2228  decode.d2.loss_dice: 1.1665  decode.d3.loss_cls: 0.3249  decode.d3.loss_mask: 1.2094  decode.d3.loss_dice: 1.1590  decode.d4.loss_cls: 0.3225  decode.d4.loss_mask: 1.2302  decode.d4.loss_dice: 1.1802  decode.d5.loss_cls: 0.3358  decode.d5.loss_mask: 1.2328  decode.d5.loss_dice: 1.1815  decode.d6.loss_cls: 0.3244  decode.d6.loss_mask: 1.2181  decode.d6.loss_dice: 1.1783  decode.d7.loss_cls: 0.3089  decode.d7.loss_mask: 1.2470  decode.d7.loss_dice: 1.1751  decode.d8.loss_cls: 0.3153  decode.d8.loss_mask: 1.2065  decode.d8.loss_dice: 1.1574
2025/03/29 22:21:12 - mmengine - INFO - Exp name: r2u_20250329_122140
2025/03/29 22:21:12 - mmengine - INFO - Iter(train) [19000/20000]  base_lr: 6.7467e-06 lr: 6.7467e-06  eta: 0:28:03  time: 1.7463  data_time: 0.0316  memory: 10086  loss: 28.7224  decode.loss_cls: 0.2687  decode.loss_mask: 1.1959  decode.loss_dice: 1.3844  decode.d0.loss_cls: 0.3520  decode.d0.loss_mask: 1.2012  decode.d0.loss_dice: 1.4563  decode.d1.loss_cls: 0.2941  decode.d1.loss_mask: 1.1861  decode.d1.loss_dice: 1.3797  decode.d2.loss_cls: 0.3044  decode.d2.loss_mask: 1.2005  decode.d2.loss_dice: 1.3720  decode.d3.loss_cls: 0.2956  decode.d3.loss_mask: 1.2012  decode.d3.loss_dice: 1.3638  decode.d4.loss_cls: 0.3062  decode.d4.loss_mask: 1.1975  decode.d4.loss_dice: 1.3729  decode.d5.loss_cls: 0.2334  decode.d5.loss_mask: 1.1894  decode.d5.loss_dice: 1.4016  decode.d6.loss_cls: 0.2809  decode.d6.loss_mask: 1.2012  decode.d6.loss_dice: 1.3732  decode.d7.loss_cls: 0.2667  decode.d7.loss_mask: 1.2170  decode.d7.loss_dice: 1.3974  decode.d8.loss_cls: 0.2810  decode.d8.loss_mask: 1.1877  decode.d8.loss_dice: 1.3605
2025/03/29 22:22:39 - mmengine - INFO - Iter(train) [19050/20000]  base_lr: 6.4423e-06 lr: 6.4423e-06  eta: 0:26:39  time: 1.7572  data_time: 0.0336  memory: 10094  loss: 29.8938  decode.loss_cls: 0.3524  decode.loss_mask: 1.3007  decode.loss_dice: 1.3054  decode.d0.loss_cls: 0.5070  decode.d0.loss_mask: 1.2579  decode.d0.loss_dice: 1.3914  decode.d1.loss_cls: 0.3173  decode.d1.loss_mask: 1.3168  decode.d1.loss_dice: 1.3708  decode.d2.loss_cls: 0.2965  decode.d2.loss_mask: 1.3095  decode.d2.loss_dice: 1.3469  decode.d3.loss_cls: 0.3391  decode.d3.loss_mask: 1.3213  decode.d3.loss_dice: 1.3296  decode.d4.loss_cls: 0.3495  decode.d4.loss_mask: 1.3120  decode.d4.loss_dice: 1.3324  decode.d5.loss_cls: 0.3065  decode.d5.loss_mask: 1.3129  decode.d5.loss_dice: 1.3062  decode.d6.loss_cls: 0.3258  decode.d6.loss_mask: 1.3059  decode.d6.loss_dice: 1.3316  decode.d7.loss_cls: 0.3196  decode.d7.loss_mask: 1.3265  decode.d7.loss_dice: 1.3136  decode.d8.loss_cls: 0.3939  decode.d8.loss_mask: 1.2894  decode.d8.loss_dice: 1.3055
2025/03/29 22:24:09 - mmengine - INFO - Iter(train) [19100/20000]  base_lr: 6.1364e-06 lr: 6.1364e-06  eta: 0:25:15  time: 1.7514  data_time: 0.0298  memory: 10136  loss: 32.0171  decode.loss_cls: 0.4042  decode.loss_mask: 1.3577  decode.loss_dice: 1.4077  decode.d0.loss_cls: 0.5234  decode.d0.loss_mask: 1.3893  decode.d0.loss_dice: 1.4960  decode.d1.loss_cls: 0.4047  decode.d1.loss_mask: 1.3561  decode.d1.loss_dice: 1.4139  decode.d2.loss_cls: 0.3805  decode.d2.loss_mask: 1.3816  decode.d2.loss_dice: 1.4343  decode.d3.loss_cls: 0.3974  decode.d3.loss_mask: 1.3705  decode.d3.loss_dice: 1.4177  decode.d4.loss_cls: 0.4346  decode.d4.loss_mask: 1.3532  decode.d4.loss_dice: 1.4140  decode.d5.loss_cls: 0.3963  decode.d5.loss_mask: 1.3823  decode.d5.loss_dice: 1.4071  decode.d6.loss_cls: 0.3992  decode.d6.loss_mask: 1.3643  decode.d6.loss_dice: 1.4102  decode.d7.loss_cls: 0.3832  decode.d7.loss_mask: 1.3771  decode.d7.loss_dice: 1.4079  decode.d8.loss_cls: 0.3870  decode.d8.loss_mask: 1.3530  decode.d8.loss_dice: 1.4128
2025/03/29 22:25:39 - mmengine - INFO - Iter(train) [19150/20000]  base_lr: 5.8287e-06 lr: 5.8287e-06  eta: 0:23:51  time: 1.8169  data_time: 0.0431  memory: 10087  loss: 33.4945  decode.loss_cls: 0.4030  decode.loss_mask: 1.4197  decode.loss_dice: 1.4667  decode.d0.loss_cls: 0.5137  decode.d0.loss_mask: 1.4157  decode.d0.loss_dice: 1.5347  decode.d1.loss_cls: 0.3972  decode.d1.loss_mask: 1.4324  decode.d1.loss_dice: 1.5696  decode.d2.loss_cls: 0.4417  decode.d2.loss_mask: 1.4327  decode.d2.loss_dice: 1.4902  decode.d3.loss_cls: 0.4294  decode.d3.loss_mask: 1.4320  decode.d3.loss_dice: 1.4741  decode.d4.loss_cls: 0.4492  decode.d4.loss_mask: 1.4354  decode.d4.loss_dice: 1.4841  decode.d5.loss_cls: 0.4295  decode.d5.loss_mask: 1.4227  decode.d5.loss_dice: 1.4733  decode.d6.loss_cls: 0.4403  decode.d6.loss_mask: 1.4244  decode.d6.loss_dice: 1.4723  decode.d7.loss_cls: 0.4402  decode.d7.loss_mask: 1.4195  decode.d7.loss_dice: 1.4445  decode.d8.loss_cls: 0.4429  decode.d8.loss_mask: 1.4039  decode.d8.loss_dice: 1.4594
2025/03/29 22:27:10 - mmengine - INFO - Iter(train) [19200/20000]  base_lr: 5.5192e-06 lr: 5.5192e-06  eta: 0:22:27  time: 1.8119  data_time: 0.0176  memory: 10143  loss: 30.5258  decode.loss_cls: 0.3935  decode.loss_mask: 1.2930  decode.loss_dice: 1.3546  decode.d0.loss_cls: 0.3902  decode.d0.loss_mask: 1.3856  decode.d0.loss_dice: 1.5037  decode.d1.loss_cls: 0.4179  decode.d1.loss_mask: 1.2903  decode.d1.loss_dice: 1.3732  decode.d2.loss_cls: 0.3865  decode.d2.loss_mask: 1.2546  decode.d2.loss_dice: 1.3228  decode.d3.loss_cls: 0.3707  decode.d3.loss_mask: 1.3081  decode.d3.loss_dice: 1.3313  decode.d4.loss_cls: 0.3655  decode.d4.loss_mask: 1.2827  decode.d4.loss_dice: 1.3821  decode.d5.loss_cls: 0.3438  decode.d5.loss_mask: 1.2958  decode.d5.loss_dice: 1.3534  decode.d6.loss_cls: 0.3846  decode.d6.loss_mask: 1.3019  decode.d6.loss_dice: 1.3478  decode.d7.loss_cls: 0.3629  decode.d7.loss_mask: 1.3259  decode.d7.loss_dice: 1.3660  decode.d8.loss_cls: 0.3495  decode.d8.loss_mask: 1.3403  decode.d8.loss_dice: 1.3476
2025/03/29 22:28:34 - mmengine - INFO - Iter(train) [19250/20000]  base_lr: 5.2077e-06 lr: 5.2077e-06  eta: 0:21:03  time: 1.6796  data_time: 0.0180  memory: 10085  loss: 32.1120  decode.loss_cls: 0.3949  decode.loss_mask: 1.4368  decode.loss_dice: 1.3893  decode.d0.loss_cls: 0.5035  decode.d0.loss_mask: 1.4430  decode.d0.loss_dice: 1.4740  decode.d1.loss_cls: 0.4653  decode.d1.loss_mask: 1.3966  decode.d1.loss_dice: 1.3689  decode.d2.loss_cls: 0.4049  decode.d2.loss_mask: 1.4048  decode.d2.loss_dice: 1.3382  decode.d3.loss_cls: 0.4195  decode.d3.loss_mask: 1.3902  decode.d3.loss_dice: 1.3300  decode.d4.loss_cls: 0.4378  decode.d4.loss_mask: 1.4078  decode.d4.loss_dice: 1.3496  decode.d5.loss_cls: 0.4346  decode.d5.loss_mask: 1.4271  decode.d5.loss_dice: 1.3518  decode.d6.loss_cls: 0.4006  decode.d6.loss_mask: 1.4198  decode.d6.loss_dice: 1.3472  decode.d7.loss_cls: 0.4086  decode.d7.loss_mask: 1.3970  decode.d7.loss_dice: 1.3571  decode.d8.loss_cls: 0.4218  decode.d8.loss_mask: 1.4392  decode.d8.loss_dice: 1.3520
2025/03/29 22:29:58 - mmengine - INFO - Iter(train) [19300/20000]  base_lr: 4.8942e-06 lr: 4.8942e-06  eta: 0:19:39  time: 1.6738  data_time: 0.0165  memory: 10144  loss: 26.6496  decode.loss_cls: 0.3910  decode.loss_mask: 1.0699  decode.loss_dice: 1.1958  decode.d0.loss_cls: 0.3957  decode.d0.loss_mask: 1.0988  decode.d0.loss_dice: 1.3507  decode.d1.loss_cls: 0.3244  decode.d1.loss_mask: 1.0947  decode.d1.loss_dice: 1.2757  decode.d2.loss_cls: 0.3290  decode.d2.loss_mask: 1.0926  decode.d2.loss_dice: 1.2400  decode.d3.loss_cls: 0.3236  decode.d3.loss_mask: 1.0874  decode.d3.loss_dice: 1.2434  decode.d4.loss_cls: 0.3121  decode.d4.loss_mask: 1.1038  decode.d4.loss_dice: 1.2263  decode.d5.loss_cls: 0.2942  decode.d5.loss_mask: 1.1030  decode.d5.loss_dice: 1.2344  decode.d6.loss_cls: 0.3191  decode.d6.loss_mask: 1.0744  decode.d6.loss_dice: 1.2217  decode.d7.loss_cls: 0.2977  decode.d7.loss_mask: 1.1080  decode.d7.loss_dice: 1.2397  decode.d8.loss_cls: 0.3556  decode.d8.loss_mask: 1.0480  decode.d8.loss_dice: 1.1989
2025/03/29 22:31:22 - mmengine - INFO - Iter(train) [19350/20000]  base_lr: 4.5784e-06 lr: 4.5784e-06  eta: 0:18:15  time: 1.6703  data_time: 0.0168  memory: 10148  loss: 31.6577  decode.loss_cls: 0.4012  decode.loss_mask: 1.3193  decode.loss_dice: 1.3973  decode.d0.loss_cls: 0.4999  decode.d0.loss_mask: 1.3734  decode.d0.loss_dice: 1.5069  decode.d1.loss_cls: 0.3975  decode.d1.loss_mask: 1.3243  decode.d1.loss_dice: 1.4322  decode.d2.loss_cls: 0.4188  decode.d2.loss_mask: 1.3570  decode.d2.loss_dice: 1.4330  decode.d3.loss_cls: 0.3865  decode.d3.loss_mask: 1.3368  decode.d3.loss_dice: 1.3922  decode.d4.loss_cls: 0.3953  decode.d4.loss_mask: 1.3208  decode.d4.loss_dice: 1.4239  decode.d5.loss_cls: 0.4300  decode.d5.loss_mask: 1.3462  decode.d5.loss_dice: 1.4249  decode.d6.loss_cls: 0.4026  decode.d6.loss_mask: 1.3323  decode.d6.loss_dice: 1.3884  decode.d7.loss_cls: 0.3860  decode.d7.loss_mask: 1.3338  decode.d7.loss_dice: 1.3883  decode.d8.loss_cls: 0.3858  decode.d8.loss_mask: 1.3248  decode.d8.loss_dice: 1.3980
2025/03/29 22:32:45 - mmengine - INFO - Iter(train) [19400/20000]  base_lr: 4.2602e-06 lr: 4.2602e-06  eta: 0:16:50  time: 1.6688  data_time: 0.0167  memory: 10095  loss: 33.2222  decode.loss_cls: 0.3605  decode.loss_mask: 1.3495  decode.loss_dice: 1.4990  decode.d0.loss_cls: 0.4962  decode.d0.loss_mask: 1.4013  decode.d0.loss_dice: 1.6186  decode.d1.loss_cls: 0.3911  decode.d1.loss_mask: 1.4272  decode.d1.loss_dice: 1.5149  decode.d2.loss_cls: 0.4082  decode.d2.loss_mask: 1.4198  decode.d2.loss_dice: 1.4996  decode.d3.loss_cls: 0.3778  decode.d3.loss_mask: 1.4244  decode.d3.loss_dice: 1.5127  decode.d4.loss_cls: 0.3361  decode.d4.loss_mask: 1.4468  decode.d4.loss_dice: 1.5346  decode.d5.loss_cls: 0.3667  decode.d5.loss_mask: 1.4123  decode.d5.loss_dice: 1.5177  decode.d6.loss_cls: 0.3238  decode.d6.loss_mask: 1.4403  decode.d6.loss_dice: 1.5115  decode.d7.loss_cls: 0.3210  decode.d7.loss_mask: 1.4918  decode.d7.loss_dice: 1.5212  decode.d8.loss_cls: 0.3733  decode.d8.loss_mask: 1.4253  decode.d8.loss_dice: 1.4989
2025/03/29 22:34:09 - mmengine - INFO - Iter(train) [19450/20000]  base_lr: 3.9393e-06 lr: 3.9393e-06  eta: 0:15:26  time: 1.6704  data_time: 0.0167  memory: 10143  loss: 34.0673  decode.loss_cls: 0.4058  decode.loss_mask: 1.4247  decode.loss_dice: 1.5193  decode.d0.loss_cls: 0.4839  decode.d0.loss_mask: 1.4493  decode.d0.loss_dice: 1.6856  decode.d1.loss_cls: 0.4337  decode.d1.loss_mask: 1.4255  decode.d1.loss_dice: 1.5674  decode.d2.loss_cls: 0.4251  decode.d2.loss_mask: 1.4119  decode.d2.loss_dice: 1.5531  decode.d3.loss_cls: 0.4320  decode.d3.loss_mask: 1.4095  decode.d3.loss_dice: 1.5193  decode.d4.loss_cls: 0.3925  decode.d4.loss_mask: 1.4428  decode.d4.loss_dice: 1.5210  decode.d5.loss_cls: 0.4172  decode.d5.loss_mask: 1.4348  decode.d5.loss_dice: 1.5377  decode.d6.loss_cls: 0.4220  decode.d6.loss_mask: 1.4349  decode.d6.loss_dice: 1.5429  decode.d7.loss_cls: 0.4174  decode.d7.loss_mask: 1.4322  decode.d7.loss_dice: 1.5641  decode.d8.loss_cls: 0.4603  decode.d8.loss_mask: 1.4050  decode.d8.loss_dice: 1.4963
2025/03/29 22:35:33 - mmengine - INFO - Iter(train) [19500/20000]  base_lr: 3.6155e-06 lr: 3.6155e-06  eta: 0:14:02  time: 1.6717  data_time: 0.0164  memory: 10081  loss: 30.8166  decode.loss_cls: 0.3112  decode.loss_mask: 1.2848  decode.loss_dice: 1.3926  decode.d0.loss_cls: 0.4602  decode.d0.loss_mask: 1.3329  decode.d0.loss_dice: 1.5060  decode.d1.loss_cls: 0.3319  decode.d1.loss_mask: 1.3038  decode.d1.loss_dice: 1.4444  decode.d2.loss_cls: 0.3811  decode.d2.loss_mask: 1.3256  decode.d2.loss_dice: 1.4352  decode.d3.loss_cls: 0.3236  decode.d3.loss_mask: 1.3466  decode.d3.loss_dice: 1.4247  decode.d4.loss_cls: 0.3459  decode.d4.loss_mask: 1.3104  decode.d4.loss_dice: 1.4229  decode.d5.loss_cls: 0.3587  decode.d5.loss_mask: 1.2659  decode.d5.loss_dice: 1.3905  decode.d6.loss_cls: 0.3475  decode.d6.loss_mask: 1.2825  decode.d6.loss_dice: 1.4146  decode.d7.loss_cls: 0.3232  decode.d7.loss_mask: 1.2964  decode.d7.loss_dice: 1.4137  decode.d8.loss_cls: 0.3214  decode.d8.loss_mask: 1.3085  decode.d8.loss_dice: 1.4099
2025/03/29 22:36:56 - mmengine - INFO - Iter(train) [19550/20000]  base_lr: 3.2884e-06 lr: 3.2884e-06  eta: 0:12:38  time: 1.6825  data_time: 0.0168  memory: 10090  loss: 31.9804  decode.loss_cls: 0.3767  decode.loss_mask: 1.3490  decode.loss_dice: 1.4168  decode.d0.loss_cls: 0.5272  decode.d0.loss_mask: 1.3817  decode.d0.loss_dice: 1.5307  decode.d1.loss_cls: 0.4373  decode.d1.loss_mask: 1.3771  decode.d1.loss_dice: 1.4251  decode.d2.loss_cls: 0.3763  decode.d2.loss_mask: 1.4208  decode.d2.loss_dice: 1.4064  decode.d3.loss_cls: 0.3761  decode.d3.loss_mask: 1.3547  decode.d3.loss_dice: 1.4112  decode.d4.loss_cls: 0.4064  decode.d4.loss_mask: 1.3564  decode.d4.loss_dice: 1.3800  decode.d5.loss_cls: 0.4009  decode.d5.loss_mask: 1.3485  decode.d5.loss_dice: 1.4074  decode.d6.loss_cls: 0.3895  decode.d6.loss_mask: 1.3881  decode.d6.loss_dice: 1.4153  decode.d7.loss_cls: 0.3582  decode.d7.loss_mask: 1.3809  decode.d7.loss_dice: 1.4193  decode.d8.loss_cls: 0.3819  decode.d8.loss_mask: 1.3756  decode.d8.loss_dice: 1.4046
2025/03/29 22:38:20 - mmengine - INFO - Iter(train) [19600/20000]  base_lr: 2.9576e-06 lr: 2.9576e-06  eta: 0:11:13  time: 1.6725  data_time: 0.0173  memory: 10094  loss: 29.7209  decode.loss_cls: 0.2752  decode.loss_mask: 1.3327  decode.loss_dice: 1.3540  decode.d0.loss_cls: 0.3486  decode.d0.loss_mask: 1.3489  decode.d0.loss_dice: 1.4432  decode.d1.loss_cls: 0.3200  decode.d1.loss_mask: 1.2940  decode.d1.loss_dice: 1.3301  decode.d2.loss_cls: 0.2815  decode.d2.loss_mask: 1.3193  decode.d2.loss_dice: 1.3201  decode.d3.loss_cls: 0.2474  decode.d3.loss_mask: 1.3382  decode.d3.loss_dice: 1.3526  decode.d4.loss_cls: 0.2832  decode.d4.loss_mask: 1.3279  decode.d4.loss_dice: 1.3513  decode.d5.loss_cls: 0.2782  decode.d5.loss_mask: 1.3429  decode.d5.loss_dice: 1.3650  decode.d6.loss_cls: 0.3139  decode.d6.loss_mask: 1.3263  decode.d6.loss_dice: 1.3420  decode.d7.loss_cls: 0.2776  decode.d7.loss_mask: 1.3003  decode.d7.loss_dice: 1.3569  decode.d8.loss_cls: 0.2972  decode.d8.loss_mask: 1.3183  decode.d8.loss_dice: 1.3340
2025/03/29 22:39:44 - mmengine - INFO - Iter(train) [19650/20000]  base_lr: 2.6227e-06 lr: 2.6227e-06  eta: 0:09:49  time: 1.6724  data_time: 0.0171  memory: 10088  loss: 30.5289  decode.loss_cls: 0.3175  decode.loss_mask: 1.3357  decode.loss_dice: 1.3779  decode.d0.loss_cls: 0.4188  decode.d0.loss_mask: 1.3738  decode.d0.loss_dice: 1.4744  decode.d1.loss_cls: 0.3767  decode.d1.loss_mask: 1.3337  decode.d1.loss_dice: 1.3800  decode.d2.loss_cls: 0.3489  decode.d2.loss_mask: 1.3182  decode.d2.loss_dice: 1.3913  decode.d3.loss_cls: 0.3298  decode.d3.loss_mask: 1.3193  decode.d3.loss_dice: 1.3445  decode.d4.loss_cls: 0.3428  decode.d4.loss_mask: 1.3263  decode.d4.loss_dice: 1.3828  decode.d5.loss_cls: 0.3293  decode.d5.loss_mask: 1.3477  decode.d5.loss_dice: 1.3558  decode.d6.loss_cls: 0.3473  decode.d6.loss_mask: 1.2959  decode.d6.loss_dice: 1.3533  decode.d7.loss_cls: 0.3250  decode.d7.loss_mask: 1.3188  decode.d7.loss_dice: 1.3605  decode.d8.loss_cls: 0.3011  decode.d8.loss_mask: 1.3538  decode.d8.loss_dice: 1.3482
2025/03/29 22:41:08 - mmengine - INFO - Iter(train) [19700/20000]  base_lr: 2.2830e-06 lr: 2.2830e-06  eta: 0:08:25  time: 1.6755  data_time: 0.0177  memory: 10087  loss: 31.3755  decode.loss_cls: 0.2611  decode.loss_mask: 1.5008  decode.loss_dice: 1.3833  decode.d0.loss_cls: 0.3768  decode.d0.loss_mask: 1.4863  decode.d0.loss_dice: 1.4376  decode.d1.loss_cls: 0.2577  decode.d1.loss_mask: 1.4757  decode.d1.loss_dice: 1.3752  decode.d2.loss_cls: 0.2647  decode.d2.loss_mask: 1.4686  decode.d2.loss_dice: 1.3820  decode.d3.loss_cls: 0.2598  decode.d3.loss_mask: 1.4615  decode.d3.loss_dice: 1.3960  decode.d4.loss_cls: 0.2675  decode.d4.loss_mask: 1.4704  decode.d4.loss_dice: 1.3681  decode.d5.loss_cls: 0.2530  decode.d5.loss_mask: 1.5001  decode.d5.loss_dice: 1.3916  decode.d6.loss_cls: 0.2457  decode.d6.loss_mask: 1.4921  decode.d6.loss_dice: 1.3830  decode.d7.loss_cls: 0.2725  decode.d7.loss_mask: 1.4708  decode.d7.loss_dice: 1.3809  decode.d8.loss_cls: 0.2354  decode.d8.loss_mask: 1.4659  decode.d8.loss_dice: 1.3916
2025/03/29 22:42:33 - mmengine - INFO - Iter(train) [19750/20000]  base_lr: 1.9375e-06 lr: 1.9375e-06  eta: 0:07:01  time: 1.6751  data_time: 0.0170  memory: 10150  loss: 30.7856  decode.loss_cls: 0.2939  decode.loss_mask: 1.2985  decode.loss_dice: 1.4119  decode.d0.loss_cls: 0.4069  decode.d0.loss_mask: 1.3337  decode.d0.loss_dice: 1.5222  decode.d1.loss_cls: 0.2520  decode.d1.loss_mask: 1.3475  decode.d1.loss_dice: 1.5306  decode.d2.loss_cls: 0.2554  decode.d2.loss_mask: 1.3453  decode.d2.loss_dice: 1.4732  decode.d3.loss_cls: 0.2597  decode.d3.loss_mask: 1.3329  decode.d3.loss_dice: 1.4521  decode.d4.loss_cls: 0.2875  decode.d4.loss_mask: 1.3022  decode.d4.loss_dice: 1.4624  decode.d5.loss_cls: 0.2692  decode.d5.loss_mask: 1.3317  decode.d5.loss_dice: 1.4764  decode.d6.loss_cls: 0.3064  decode.d6.loss_mask: 1.2938  decode.d6.loss_dice: 1.4075  decode.d7.loss_cls: 0.2309  decode.d7.loss_mask: 1.3372  decode.d7.loss_dice: 1.5061  decode.d8.loss_cls: 0.2556  decode.d8.loss_mask: 1.3323  decode.d8.loss_dice: 1.4707
2025/03/29 22:43:58 - mmengine - INFO - Iter(train) [19800/20000]  base_lr: 1.5850e-06 lr: 1.5850e-06  eta: 0:05:36  time: 1.6750  data_time: 0.0169  memory: 10088  loss: 32.9845  decode.loss_cls: 0.4562  decode.loss_mask: 1.4146  decode.loss_dice: 1.4093  decode.d0.loss_cls: 0.5879  decode.d0.loss_mask: 1.4108  decode.d0.loss_dice: 1.4806  decode.d1.loss_cls: 0.5043  decode.d1.loss_mask: 1.3818  decode.d1.loss_dice: 1.4372  decode.d2.loss_cls: 0.5206  decode.d2.loss_mask: 1.3627  decode.d2.loss_dice: 1.3552  decode.d3.loss_cls: 0.5247  decode.d3.loss_mask: 1.3787  decode.d3.loss_dice: 1.3519  decode.d4.loss_cls: 0.5549  decode.d4.loss_mask: 1.3879  decode.d4.loss_dice: 1.3884  decode.d5.loss_cls: 0.4643  decode.d5.loss_mask: 1.4068  decode.d5.loss_dice: 1.3942  decode.d6.loss_cls: 0.4858  decode.d6.loss_mask: 1.4032  decode.d6.loss_dice: 1.3961  decode.d7.loss_cls: 0.5059  decode.d7.loss_mask: 1.3820  decode.d7.loss_dice: 1.3783  decode.d8.loss_cls: 0.4539  decode.d8.loss_mask: 1.3997  decode.d8.loss_dice: 1.4066
2025/03/29 22:45:22 - mmengine - INFO - Iter(train) [19850/20000]  base_lr: 1.2234e-06 lr: 1.2234e-06  eta: 0:04:12  time: 1.6725  data_time: 0.0177  memory: 10093  loss: 30.1416  decode.loss_cls: 0.2669  decode.loss_mask: 1.4731  decode.loss_dice: 1.2729  decode.d0.loss_cls: 0.4648  decode.d0.loss_mask: 1.5215  decode.d0.loss_dice: 1.2942  decode.d1.loss_cls: 0.2730  decode.d1.loss_mask: 1.4318  decode.d1.loss_dice: 1.2383  decode.d2.loss_cls: 0.2470  decode.d2.loss_mask: 1.4922  decode.d2.loss_dice: 1.2614  decode.d3.loss_cls: 0.2746  decode.d3.loss_mask: 1.4686  decode.d3.loss_dice: 1.2495  decode.d4.loss_cls: 0.2185  decode.d4.loss_mask: 1.5231  decode.d4.loss_dice: 1.2850  decode.d5.loss_cls: 0.2725  decode.d5.loss_mask: 1.4388  decode.d5.loss_dice: 1.2419  decode.d6.loss_cls: 0.2450  decode.d6.loss_mask: 1.4555  decode.d6.loss_dice: 1.2433  decode.d7.loss_cls: 0.2323  decode.d7.loss_mask: 1.4804  decode.d7.loss_dice: 1.2638  decode.d8.loss_cls: 0.2211  decode.d8.loss_mask: 1.5053  decode.d8.loss_dice: 1.2854
2025/03/29 22:46:47 - mmengine - INFO - Iter(train) [19900/20000]  base_lr: 8.4936e-07 lr: 8.4936e-07  eta: 0:02:48  time: 1.6767  data_time: 0.0181  memory: 10089  loss: 30.9563  decode.loss_cls: 0.4033  decode.loss_mask: 1.3673  decode.loss_dice: 1.2824  decode.d0.loss_cls: 0.5547  decode.d0.loss_mask: 1.3844  decode.d0.loss_dice: 1.3745  decode.d1.loss_cls: 0.4407  decode.d1.loss_mask: 1.3707  decode.d1.loss_dice: 1.3124  decode.d2.loss_cls: 0.4252  decode.d2.loss_mask: 1.3594  decode.d2.loss_dice: 1.3000  decode.d3.loss_cls: 0.4145  decode.d3.loss_mask: 1.3575  decode.d3.loss_dice: 1.2688  decode.d4.loss_cls: 0.4069  decode.d4.loss_mask: 1.4221  decode.d4.loss_dice: 1.3075  decode.d5.loss_cls: 0.4129  decode.d5.loss_mask: 1.3698  decode.d5.loss_dice: 1.2829  decode.d6.loss_cls: 0.3928  decode.d6.loss_mask: 1.3569  decode.d6.loss_dice: 1.2831  decode.d7.loss_cls: 0.3951  decode.d7.loss_mask: 1.3393  decode.d7.loss_dice: 1.2750  decode.d8.loss_cls: 0.4184  decode.d8.loss_mask: 1.3787  decode.d8.loss_dice: 1.2992
2025/03/29 22:48:10 - mmengine - INFO - Iter(train) [19950/20000]  base_lr: 4.5516e-07 lr: 4.5516e-07  eta: 0:01:24  time: 1.6726  data_time: 0.0161  memory: 10084  loss: 29.9478  decode.loss_cls: 0.4707  decode.loss_mask: 1.2299  decode.loss_dice: 1.3036  decode.d0.loss_cls: 0.6300  decode.d0.loss_mask: 1.1585  decode.d0.loss_dice: 1.3958  decode.d1.loss_cls: 0.4950  decode.d1.loss_mask: 1.1758  decode.d1.loss_dice: 1.3449  decode.d2.loss_cls: 0.4624  decode.d2.loss_mask: 1.1771  decode.d2.loss_dice: 1.2947  decode.d3.loss_cls: 0.4791  decode.d3.loss_mask: 1.1898  decode.d3.loss_dice: 1.2918  decode.d4.loss_cls: 0.4906  decode.d4.loss_mask: 1.1858  decode.d4.loss_dice: 1.2958  decode.d5.loss_cls: 0.5116  decode.d5.loss_mask: 1.1943  decode.d5.loss_dice: 1.2746  decode.d6.loss_cls: 0.4536  decode.d6.loss_mask: 1.1858  decode.d6.loss_dice: 1.2942  decode.d7.loss_cls: 0.4848  decode.d7.loss_mask: 1.1839  decode.d7.loss_dice: 1.3040  decode.d8.loss_cls: 0.4953  decode.d8.loss_mask: 1.1938  decode.d8.loss_dice: 1.3005
2025/03/29 22:49:34 - mmengine - INFO - Exp name: r2u_20250329_122140
2025/03/29 22:49:34 - mmengine - INFO - Iter(train) [20000/20000]  base_lr: 0.0000e+00 lr: 0.0000e+00  eta: 0:00:00  time: 1.6801  data_time: 0.0162  memory: 10099  loss: 30.0605  decode.loss_cls: 0.4071  decode.loss_mask: 1.2769  decode.loss_dice: 1.2793  decode.d0.loss_cls: 0.4736  decode.d0.loss_mask: 1.3695  decode.d0.loss_dice: 1.3748  decode.d1.loss_cls: 0.4186  decode.d1.loss_mask: 1.3241  decode.d1.loss_dice: 1.2855  decode.d2.loss_cls: 0.4054  decode.d2.loss_mask: 1.3128  decode.d2.loss_dice: 1.2670  decode.d3.loss_cls: 0.3688  decode.d3.loss_mask: 1.3129  decode.d3.loss_dice: 1.2731  decode.d4.loss_cls: 0.4340  decode.d4.loss_mask: 1.3041  decode.d4.loss_dice: 1.2818  decode.d5.loss_cls: 0.3909  decode.d5.loss_mask: 1.3146  decode.d5.loss_dice: 1.2705  decode.d6.loss_cls: 0.4164  decode.d6.loss_mask: 1.2980  decode.d6.loss_dice: 1.2443  decode.d7.loss_cls: 0.4177  decode.d7.loss_mask: 1.3289  decode.d7.loss_dice: 1.2724  decode.d8.loss_cls: 0.4131  decode.d8.loss_mask: 1.2938  decode.d8.loss_dice: 1.2306
2025/03/29 22:49:36 - mmengine - INFO - Saving checkpoint at 20000 iterations
2025/03/29 22:49:46 - mmengine - INFO - Iter(val) [  50/2708]    eta: 0:06:37  time: 0.1569  data_time: 0.0014  memory: 1856  
2025/03/29 22:49:54 - mmengine - INFO - Iter(val) [ 100/2708]    eta: 0:06:50  time: 0.1654  data_time: 0.0014  memory: 1856  
2025/03/29 22:50:02 - mmengine - INFO - Iter(val) [ 150/2708]    eta: 0:06:42  time: 0.1550  data_time: 0.0015  memory: 1856  
2025/03/29 22:50:10 - mmengine - INFO - Iter(val) [ 200/2708]    eta: 0:06:39  time: 0.1653  data_time: 0.0014  memory: 1856  
2025/03/29 22:50:18 - mmengine - INFO - Iter(val) [ 250/2708]    eta: 0:06:31  time: 0.1577  data_time: 0.0015  memory: 1856  
2025/03/29 22:50:26 - mmengine - INFO - Iter(val) [ 300/2708]    eta: 0:06:25  time: 0.1671  data_time: 0.0014  memory: 1856  
2025/03/29 22:50:34 - mmengine - INFO - Iter(val) [ 350/2708]    eta: 0:06:17  time: 0.1580  data_time: 0.0014  memory: 1856  
2025/03/29 22:50:42 - mmengine - INFO - Iter(val) [ 400/2708]    eta: 0:06:10  time: 0.1668  data_time: 0.0016  memory: 1856  
2025/03/29 22:50:51 - mmengine - INFO - Iter(val) [ 450/2708]    eta: 0:06:02  time: 0.1642  data_time: 0.0018  memory: 1856  
2025/03/29 22:50:59 - mmengine - INFO - Iter(val) [ 500/2708]    eta: 0:05:54  time: 0.1670  data_time: 0.0014  memory: 1856  
2025/03/29 22:51:07 - mmengine - INFO - Iter(val) [ 550/2708]    eta: 0:05:46  time: 0.1563  data_time: 0.0014  memory: 1856  
2025/03/29 22:51:14 - mmengine - INFO - Iter(val) [ 600/2708]    eta: 0:05:36  time: 0.1672  data_time: 0.0014  memory: 1856  
2025/03/29 22:51:22 - mmengine - INFO - Iter(val) [ 650/2708]    eta: 0:05:28  time: 0.1578  data_time: 0.0014  memory: 1856  
2025/03/29 22:51:30 - mmengine - INFO - Iter(val) [ 700/2708]    eta: 0:05:21  time: 0.1574  data_time: 0.0019  memory: 1856  
2025/03/29 22:51:38 - mmengine - INFO - Iter(val) [ 750/2708]    eta: 0:05:13  time: 0.1675  data_time: 0.0016  memory: 1856  
2025/03/29 22:51:46 - mmengine - INFO - Iter(val) [ 800/2708]    eta: 0:05:05  time: 0.1602  data_time: 0.0015  memory: 1856  
2025/03/29 22:51:55 - mmengine - INFO - Iter(val) [ 850/2708]    eta: 0:04:58  time: 0.1674  data_time: 0.0014  memory: 1856  
2025/03/29 22:52:03 - mmengine - INFO - Iter(val) [ 900/2708]    eta: 0:04:50  time: 0.1561  data_time: 0.0014  memory: 1856  
2025/03/29 22:52:11 - mmengine - INFO - Iter(val) [ 950/2708]    eta: 0:04:42  time: 0.1681  data_time: 0.0016  memory: 1856  
2025/03/29 22:52:19 - mmengine - INFO - Iter(val) [1000/2708]    eta: 0:04:34  time: 0.1613  data_time: 0.0015  memory: 1856  
2025/03/29 22:52:27 - mmengine - INFO - Iter(val) [1050/2708]    eta: 0:04:26  time: 0.1672  data_time: 0.0015  memory: 1856  
2025/03/29 22:52:35 - mmengine - INFO - Iter(val) [1100/2708]    eta: 0:04:18  time: 0.1577  data_time: 0.0015  memory: 1856  
2025/03/29 22:52:43 - mmengine - INFO - Iter(val) [1150/2708]    eta: 0:04:10  time: 0.1672  data_time: 0.0013  memory: 1856  
2025/03/29 22:52:51 - mmengine - INFO - Iter(val) [1200/2708]    eta: 0:04:02  time: 0.1618  data_time: 0.0020  memory: 1856  
2025/03/29 22:52:59 - mmengine - INFO - Iter(val) [1250/2708]    eta: 0:03:54  time: 0.1672  data_time: 0.0018  memory: 1856  
2025/03/29 22:53:08 - mmengine - INFO - Iter(val) [1300/2708]    eta: 0:03:46  time: 0.1612  data_time: 0.0015  memory: 1856  
2025/03/29 22:53:16 - mmengine - INFO - Iter(val) [1350/2708]    eta: 0:03:38  time: 0.1595  data_time: 0.0020  memory: 1856  
2025/03/29 22:53:24 - mmengine - INFO - Iter(val) [1400/2708]    eta: 0:03:30  time: 0.1686  data_time: 0.0024  memory: 1856  
2025/03/29 22:53:32 - mmengine - INFO - Iter(val) [1450/2708]    eta: 0:03:22  time: 0.1614  data_time: 0.0026  memory: 1856  
2025/03/29 22:53:41 - mmengine - INFO - Iter(val) [1500/2708]    eta: 0:03:15  time: 0.1573  data_time: 0.0024  memory: 1856  
2025/03/29 22:53:49 - mmengine - INFO - Iter(val) [1550/2708]    eta: 0:03:07  time: 0.1714  data_time: 0.0022  memory: 1856  
2025/03/29 22:53:57 - mmengine - INFO - Iter(val) [1600/2708]    eta: 0:02:59  time: 0.1565  data_time: 0.0015  memory: 1856  
2025/03/29 22:54:05 - mmengine - INFO - Iter(val) [1650/2708]    eta: 0:02:50  time: 0.1598  data_time: 0.0015  memory: 1856  
2025/03/29 22:54:13 - mmengine - INFO - Iter(val) [1700/2708]    eta: 0:02:42  time: 0.1589  data_time: 0.0015  memory: 1856  
2025/03/29 22:54:21 - mmengine - INFO - Iter(val) [1750/2708]    eta: 0:02:34  time: 0.1670  data_time: 0.0016  memory: 1856  
2025/03/29 22:54:29 - mmengine - INFO - Iter(val) [1800/2708]    eta: 0:02:26  time: 0.1553  data_time: 0.0015  memory: 1856  
2025/03/29 22:54:38 - mmengine - INFO - Iter(val) [1850/2708]    eta: 0:02:18  time: 0.1671  data_time: 0.0015  memory: 1856  
2025/03/29 22:54:46 - mmengine - INFO - Iter(val) [1900/2708]    eta: 0:02:10  time: 0.1594  data_time: 0.0017  memory: 1856  
2025/03/29 22:54:54 - mmengine - INFO - Iter(val) [1950/2708]    eta: 0:02:02  time: 0.1678  data_time: 0.0016  memory: 1856  
2025/03/29 22:55:02 - mmengine - INFO - Iter(val) [2000/2708]    eta: 0:01:54  time: 0.1652  data_time: 0.0020  memory: 1856  
2025/03/29 22:55:10 - mmengine - INFO - Iter(val) [2050/2708]    eta: 0:01:46  time: 0.1612  data_time: 0.0016  memory: 1856  
2025/03/29 22:55:19 - mmengine - INFO - Iter(val) [2100/2708]    eta: 0:01:38  time: 0.1673  data_time: 0.0015  memory: 1856  
2025/03/29 22:55:27 - mmengine - INFO - Iter(val) [2150/2708]    eta: 0:01:30  time: 0.1652  data_time: 0.0015  memory: 1856  
2025/03/29 22:55:35 - mmengine - INFO - Iter(val) [2200/2708]    eta: 0:01:22  time: 0.1591  data_time: 0.0014  memory: 1856  
2025/03/29 22:55:43 - mmengine - INFO - Iter(val) [2250/2708]    eta: 0:01:14  time: 0.1579  data_time: 0.0014  memory: 1856  
2025/03/29 22:55:51 - mmengine - INFO - Iter(val) [2300/2708]    eta: 0:01:06  time: 0.1629  data_time: 0.0015  memory: 1856  
2025/03/29 22:55:59 - mmengine - INFO - Iter(val) [2350/2708]    eta: 0:00:57  time: 0.1627  data_time: 0.0016  memory: 1856  
2025/03/29 22:56:07 - mmengine - INFO - Iter(val) [2400/2708]    eta: 0:00:49  time: 0.1596  data_time: 0.0014  memory: 1856  
2025/03/29 22:56:16 - mmengine - INFO - Iter(val) [2450/2708]    eta: 0:00:41  time: 0.1666  data_time: 0.0014  memory: 1856  
2025/03/29 22:56:24 - mmengine - INFO - Iter(val) [2500/2708]    eta: 0:00:33  time: 0.1575  data_time: 0.0013  memory: 1856  
2025/03/29 22:56:32 - mmengine - INFO - Iter(val) [2550/2708]    eta: 0:00:25  time: 0.1671  data_time: 0.0013  memory: 1856  
2025/03/29 22:56:40 - mmengine - INFO - Iter(val) [2600/2708]    eta: 0:00:17  time: 0.1556  data_time: 0.0013  memory: 1856  
2025/03/29 22:56:48 - mmengine - INFO - Iter(val) [2650/2708]    eta: 0:00:09  time: 0.1666  data_time: 0.0013  memory: 1856  
2025/03/29 22:56:56 - mmengine - INFO - Iter(val) [2700/2708]    eta: 0:00:01  time: 0.1641  data_time: 0.0014  memory: 1856  
2025/03/29 22:56:57 - mmengine - INFO - per class results:
2025/03/29 22:56:57 - mmengine - INFO - 
+--------------+-------+-------+
|    Class     |  IoU  |  Acc  |
+--------------+-------+-------+
|  background  | 40.89 | 61.89 |
|   building   |  66.4 |  83.9 |
|     road     | 55.47 |  72.6 |
|    water     |  75.8 | 84.28 |
|    barren    | 48.92 |  76.6 |
|    forest    | 56.03 | 74.61 |
| agricultural | 60.33 | 64.85 |
+--------------+-------+-------+
2025/03/29 22:56:57 - mmengine - INFO - Iter(val) [2708/2708]    aAcc: 71.0600  mIoU: 57.6900  mAcc: 74.1000  data_time: 0.0016  time: 0.1618
